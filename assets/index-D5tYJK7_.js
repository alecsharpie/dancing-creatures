function fR(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const a=Object.getOwnPropertyDescriptor(s,r);a&&Object.defineProperty(n,r,a.get?a:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const a of r)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const a={};return r.integrity&&(a.integrity=r.integrity),r.referrerPolicy&&(a.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?a.credentials="include":r.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(r){if(r.ep)return;r.ep=!0;const a=t(r);fetch(r.href,a)}})();var lw=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function pR(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function mR(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),t}var Zm={exports:{}},fc={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var cw;function gR(){if(cw)return fc;cw=1;var n=Symbol.for("react.transitional.element"),e=Symbol.for("react.fragment");function t(s,r,a){var o=null;if(a!==void 0&&(o=""+a),r.key!==void 0&&(o=""+r.key),"key"in r){a={};for(var l in r)l!=="key"&&(a[l]=r[l])}else a=r;return r=a.ref,{$$typeof:n,type:s,key:o,ref:r!==void 0?r:null,props:a}}return fc.Fragment=e,fc.jsx=t,fc.jsxs=t,fc}var dw;function yR(){return dw||(dw=1,Zm.exports=gR()),Zm.exports}var Ss=yR(),Jm={exports:{}},Qe={};/**
 * @license React
 * react.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var hw;function xR(){if(hw)return Qe;hw=1;var n=Symbol.for("react.transitional.element"),e=Symbol.for("react.portal"),t=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),a=Symbol.for("react.consumer"),o=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),p=Symbol.iterator;function g(q){return q===null||typeof q!="object"?null:(q=p&&q[p]||q["@@iterator"],typeof q=="function"?q:null)}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},x=Object.assign,w={};function S(q,ue,Te){this.props=q,this.context=ue,this.refs=w,this.updater=Te||y}S.prototype.isReactComponent={},S.prototype.setState=function(q,ue){if(typeof q!="object"&&typeof q!="function"&&q!=null)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,q,ue,"setState")},S.prototype.forceUpdate=function(q){this.updater.enqueueForceUpdate(this,q,"forceUpdate")};function $(){}$.prototype=S.prototype;function N(q,ue,Te){this.props=q,this.context=ue,this.refs=w,this.updater=Te||y}var I=N.prototype=new $;I.constructor=N,x(I,S.prototype),I.isPureReactComponent=!0;var _=Array.isArray,O={H:null,A:null,T:null,S:null},M=Object.prototype.hasOwnProperty;function W(q,ue,Te,ke,ve,Xe){return Te=Xe.ref,{$$typeof:n,type:q,key:ue,ref:Te!==void 0?Te:null,props:Xe}}function G(q,ue){return W(q.type,ue,void 0,void 0,void 0,q.props)}function F(q){return typeof q=="object"&&q!==null&&q.$$typeof===n}function B(q){var ue={"=":"=0",":":"=2"};return"$"+q.replace(/[=:]/g,function(Te){return ue[Te]})}var D=/\/+/g;function Q(q,ue){return typeof q=="object"&&q!==null&&q.key!=null?B(""+q.key):ue.toString(36)}function re(){}function he(q){switch(q.status){case"fulfilled":return q.value;case"rejected":throw q.reason;default:switch(typeof q.status=="string"?q.then(re,re):(q.status="pending",q.then(function(ue){q.status==="pending"&&(q.status="fulfilled",q.value=ue)},function(ue){q.status==="pending"&&(q.status="rejected",q.reason=ue)})),q.status){case"fulfilled":return q.value;case"rejected":throw q.reason}}throw q}function le(q,ue,Te,ke,ve){var Xe=typeof q;(Xe==="undefined"||Xe==="boolean")&&(q=null);var Be=!1;if(q===null)Be=!0;else switch(Xe){case"bigint":case"string":case"number":Be=!0;break;case"object":switch(q.$$typeof){case n:case e:Be=!0;break;case f:return Be=q._init,le(Be(q._payload),ue,Te,ke,ve)}}if(Be)return ve=ve(q),Be=ke===""?"."+Q(q,0):ke,_(ve)?(Te="",Be!=null&&(Te=Be.replace(D,"$&/")+"/"),le(ve,ue,Te,"",function(Rt){return Rt})):ve!=null&&(F(ve)&&(ve=G(ve,Te+(ve.key==null||q&&q.key===ve.key?"":(""+ve.key).replace(D,"$&/")+"/")+Be)),ue.push(ve)),1;Be=0;var St=ke===""?".":ke+":";if(_(q))for(var nt=0;nt<q.length;nt++)ke=q[nt],Xe=St+Q(ke,nt),Be+=le(ke,ue,Te,Xe,ve);else if(nt=g(q),typeof nt=="function")for(q=nt.call(q),nt=0;!(ke=q.next()).done;)ke=ke.value,Xe=St+Q(ke,nt++),Be+=le(ke,ue,Te,Xe,ve);else if(Xe==="object"){if(typeof q.then=="function")return le(he(q),ue,Te,ke,ve);throw ue=String(q),Error("Objects are not valid as a React child (found: "+(ue==="[object Object]"?"object with keys {"+Object.keys(q).join(", ")+"}":ue)+"). If you meant to render a collection of children, use an array instead.")}return Be}function ne(q,ue,Te){if(q==null)return q;var ke=[],ve=0;return le(q,ke,"","",function(Xe){return ue.call(Te,Xe,ve++)}),ke}function ge(q){if(q._status===-1){var ue=q._result;ue=ue(),ue.then(function(Te){(q._status===0||q._status===-1)&&(q._status=1,q._result=Te)},function(Te){(q._status===0||q._status===-1)&&(q._status=2,q._result=Te)}),q._status===-1&&(q._status=0,q._result=ue)}if(q._status===1)return q._result.default;throw q._result}var pe=typeof reportError=="function"?reportError:function(q){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var ue=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof q=="object"&&q!==null&&typeof q.message=="string"?String(q.message):String(q),error:q});if(!window.dispatchEvent(ue))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",q);return}console.error(q)};function Se(){}return Qe.Children={map:ne,forEach:function(q,ue,Te){ne(q,function(){ue.apply(this,arguments)},Te)},count:function(q){var ue=0;return ne(q,function(){ue++}),ue},toArray:function(q){return ne(q,function(ue){return ue})||[]},only:function(q){if(!F(q))throw Error("React.Children.only expected to receive a single React element child.");return q}},Qe.Component=S,Qe.Fragment=t,Qe.Profiler=r,Qe.PureComponent=N,Qe.StrictMode=s,Qe.Suspense=c,Qe.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=O,Qe.act=function(){throw Error("act(...) is not supported in production builds of React.")},Qe.cache=function(q){return function(){return q.apply(null,arguments)}},Qe.cloneElement=function(q,ue,Te){if(q==null)throw Error("The argument must be a React element, but you passed "+q+".");var ke=x({},q.props),ve=q.key,Xe=void 0;if(ue!=null)for(Be in ue.ref!==void 0&&(Xe=void 0),ue.key!==void 0&&(ve=""+ue.key),ue)!M.call(ue,Be)||Be==="key"||Be==="__self"||Be==="__source"||Be==="ref"&&ue.ref===void 0||(ke[Be]=ue[Be]);var Be=arguments.length-2;if(Be===1)ke.children=Te;else if(1<Be){for(var St=Array(Be),nt=0;nt<Be;nt++)St[nt]=arguments[nt+2];ke.children=St}return W(q.type,ve,void 0,void 0,Xe,ke)},Qe.createContext=function(q){return q={$$typeof:o,_currentValue:q,_currentValue2:q,_threadCount:0,Provider:null,Consumer:null},q.Provider=q,q.Consumer={$$typeof:a,_context:q},q},Qe.createElement=function(q,ue,Te){var ke,ve={},Xe=null;if(ue!=null)for(ke in ue.key!==void 0&&(Xe=""+ue.key),ue)M.call(ue,ke)&&ke!=="key"&&ke!=="__self"&&ke!=="__source"&&(ve[ke]=ue[ke]);var Be=arguments.length-2;if(Be===1)ve.children=Te;else if(1<Be){for(var St=Array(Be),nt=0;nt<Be;nt++)St[nt]=arguments[nt+2];ve.children=St}if(q&&q.defaultProps)for(ke in Be=q.defaultProps,Be)ve[ke]===void 0&&(ve[ke]=Be[ke]);return W(q,Xe,void 0,void 0,null,ve)},Qe.createRef=function(){return{current:null}},Qe.forwardRef=function(q){return{$$typeof:l,render:q}},Qe.isValidElement=F,Qe.lazy=function(q){return{$$typeof:f,_payload:{_status:-1,_result:q},_init:ge}},Qe.memo=function(q,ue){return{$$typeof:d,type:q,compare:ue===void 0?null:ue}},Qe.startTransition=function(q){var ue=O.T,Te={};O.T=Te;try{var ke=q(),ve=O.S;ve!==null&&ve(Te,ke),typeof ke=="object"&&ke!==null&&typeof ke.then=="function"&&ke.then(Se,pe)}catch(Xe){pe(Xe)}finally{O.T=ue}},Qe.unstable_useCacheRefresh=function(){return O.H.useCacheRefresh()},Qe.use=function(q){return O.H.use(q)},Qe.useActionState=function(q,ue,Te){return O.H.useActionState(q,ue,Te)},Qe.useCallback=function(q,ue){return O.H.useCallback(q,ue)},Qe.useContext=function(q){return O.H.useContext(q)},Qe.useDebugValue=function(){},Qe.useDeferredValue=function(q,ue){return O.H.useDeferredValue(q,ue)},Qe.useEffect=function(q,ue){return O.H.useEffect(q,ue)},Qe.useId=function(){return O.H.useId()},Qe.useImperativeHandle=function(q,ue,Te){return O.H.useImperativeHandle(q,ue,Te)},Qe.useInsertionEffect=function(q,ue){return O.H.useInsertionEffect(q,ue)},Qe.useLayoutEffect=function(q,ue){return O.H.useLayoutEffect(q,ue)},Qe.useMemo=function(q,ue){return O.H.useMemo(q,ue)},Qe.useOptimistic=function(q,ue){return O.H.useOptimistic(q,ue)},Qe.useReducer=function(q,ue,Te){return O.H.useReducer(q,ue,Te)},Qe.useRef=function(q){return O.H.useRef(q)},Qe.useState=function(q){return O.H.useState(q)},Qe.useSyncExternalStore=function(q,ue,Te){return O.H.useSyncExternalStore(q,ue,Te)},Qe.useTransition=function(){return O.H.useTransition()},Qe.version="19.0.0",Qe}var fw;function wy(){return fw||(fw=1,Jm.exports=xR()),Jm.exports}var Rn=wy(),eg={exports:{}},pc={},tg={exports:{}},ng={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var pw;function bR(){return pw||(pw=1,function(n){function e(ne,ge){var pe=ne.length;ne.push(ge);e:for(;0<pe;){var Se=pe-1>>>1,q=ne[Se];if(0<r(q,ge))ne[Se]=ge,ne[pe]=q,pe=Se;else break e}}function t(ne){return ne.length===0?null:ne[0]}function s(ne){if(ne.length===0)return null;var ge=ne[0],pe=ne.pop();if(pe!==ge){ne[0]=pe;e:for(var Se=0,q=ne.length,ue=q>>>1;Se<ue;){var Te=2*(Se+1)-1,ke=ne[Te],ve=Te+1,Xe=ne[ve];if(0>r(ke,pe))ve<q&&0>r(Xe,ke)?(ne[Se]=Xe,ne[ve]=pe,Se=ve):(ne[Se]=ke,ne[Te]=pe,Se=Te);else if(ve<q&&0>r(Xe,pe))ne[Se]=Xe,ne[ve]=pe,Se=ve;else break e}}return ge}function r(ne,ge){var pe=ne.sortIndex-ge.sortIndex;return pe!==0?pe:ne.id-ge.id}if(n.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var a=performance;n.unstable_now=function(){return a.now()}}else{var o=Date,l=o.now();n.unstable_now=function(){return o.now()-l}}var c=[],d=[],f=1,p=null,g=3,y=!1,x=!1,w=!1,S=typeof setTimeout=="function"?setTimeout:null,$=typeof clearTimeout=="function"?clearTimeout:null,N=typeof setImmediate<"u"?setImmediate:null;function I(ne){for(var ge=t(d);ge!==null;){if(ge.callback===null)s(d);else if(ge.startTime<=ne)s(d),ge.sortIndex=ge.expirationTime,e(c,ge);else break;ge=t(d)}}function _(ne){if(w=!1,I(ne),!x)if(t(c)!==null)x=!0,he();else{var ge=t(d);ge!==null&&le(_,ge.startTime-ne)}}var O=!1,M=-1,W=5,G=-1;function F(){return!(n.unstable_now()-G<W)}function B(){if(O){var ne=n.unstable_now();G=ne;var ge=!0;try{e:{x=!1,w&&(w=!1,$(M),M=-1),y=!0;var pe=g;try{t:{for(I(ne),p=t(c);p!==null&&!(p.expirationTime>ne&&F());){var Se=p.callback;if(typeof Se=="function"){p.callback=null,g=p.priorityLevel;var q=Se(p.expirationTime<=ne);if(ne=n.unstable_now(),typeof q=="function"){p.callback=q,I(ne),ge=!0;break t}p===t(c)&&s(c),I(ne)}else s(c);p=t(c)}if(p!==null)ge=!0;else{var ue=t(d);ue!==null&&le(_,ue.startTime-ne),ge=!1}}break e}finally{p=null,g=pe,y=!1}ge=void 0}}finally{ge?D():O=!1}}}var D;if(typeof N=="function")D=function(){N(B)};else if(typeof MessageChannel<"u"){var Q=new MessageChannel,re=Q.port2;Q.port1.onmessage=B,D=function(){re.postMessage(null)}}else D=function(){S(B,0)};function he(){O||(O=!0,D())}function le(ne,ge){M=S(function(){ne(n.unstable_now())},ge)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(ne){ne.callback=null},n.unstable_continueExecution=function(){x||y||(x=!0,he())},n.unstable_forceFrameRate=function(ne){0>ne||125<ne?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):W=0<ne?Math.floor(1e3/ne):5},n.unstable_getCurrentPriorityLevel=function(){return g},n.unstable_getFirstCallbackNode=function(){return t(c)},n.unstable_next=function(ne){switch(g){case 1:case 2:case 3:var ge=3;break;default:ge=g}var pe=g;g=ge;try{return ne()}finally{g=pe}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(ne,ge){switch(ne){case 1:case 2:case 3:case 4:case 5:break;default:ne=3}var pe=g;g=ne;try{return ge()}finally{g=pe}},n.unstable_scheduleCallback=function(ne,ge,pe){var Se=n.unstable_now();switch(typeof pe=="object"&&pe!==null?(pe=pe.delay,pe=typeof pe=="number"&&0<pe?Se+pe:Se):pe=Se,ne){case 1:var q=-1;break;case 2:q=250;break;case 5:q=1073741823;break;case 4:q=1e4;break;default:q=5e3}return q=pe+q,ne={id:f++,callback:ge,priorityLevel:ne,startTime:pe,expirationTime:q,sortIndex:-1},pe>Se?(ne.sortIndex=pe,e(d,ne),t(c)===null&&ne===t(d)&&(w?($(M),M=-1):w=!0,le(_,pe-Se))):(ne.sortIndex=q,e(c,ne),x||y||(x=!0,he())),ne},n.unstable_shouldYield=F,n.unstable_wrapCallback=function(ne){var ge=g;return function(){var pe=g;g=ge;try{return ne.apply(this,arguments)}finally{g=pe}}}}(ng)),ng}var mw;function vR(){return mw||(mw=1,tg.exports=bR()),tg.exports}var sg={exports:{}},zn={};/**
 * @license React
 * react-dom.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var gw;function wR(){if(gw)return zn;gw=1;var n=wy();function e(c){var d="https://react.dev/errors/"+c;if(1<arguments.length){d+="?args[]="+encodeURIComponent(arguments[1]);for(var f=2;f<arguments.length;f++)d+="&args[]="+encodeURIComponent(arguments[f])}return"Minified React error #"+c+"; visit "+d+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function t(){}var s={d:{f:t,r:function(){throw Error(e(522))},D:t,C:t,L:t,m:t,X:t,S:t,M:t},p:0,findDOMNode:null},r=Symbol.for("react.portal");function a(c,d,f){var p=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:r,key:p==null?null:""+p,children:c,containerInfo:d,implementation:f}}var o=n.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function l(c,d){if(c==="font")return"";if(typeof d=="string")return d==="use-credentials"?d:""}return zn.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=s,zn.createPortal=function(c,d){var f=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!d||d.nodeType!==1&&d.nodeType!==9&&d.nodeType!==11)throw Error(e(299));return a(c,d,null,f)},zn.flushSync=function(c){var d=o.T,f=s.p;try{if(o.T=null,s.p=2,c)return c()}finally{o.T=d,s.p=f,s.d.f()}},zn.preconnect=function(c,d){typeof c=="string"&&(d?(d=d.crossOrigin,d=typeof d=="string"?d==="use-credentials"?d:"":void 0):d=null,s.d.C(c,d))},zn.prefetchDNS=function(c){typeof c=="string"&&s.d.D(c)},zn.preinit=function(c,d){if(typeof c=="string"&&d&&typeof d.as=="string"){var f=d.as,p=l(f,d.crossOrigin),g=typeof d.integrity=="string"?d.integrity:void 0,y=typeof d.fetchPriority=="string"?d.fetchPriority:void 0;f==="style"?s.d.S(c,typeof d.precedence=="string"?d.precedence:void 0,{crossOrigin:p,integrity:g,fetchPriority:y}):f==="script"&&s.d.X(c,{crossOrigin:p,integrity:g,fetchPriority:y,nonce:typeof d.nonce=="string"?d.nonce:void 0})}},zn.preinitModule=function(c,d){if(typeof c=="string")if(typeof d=="object"&&d!==null){if(d.as==null||d.as==="script"){var f=l(d.as,d.crossOrigin);s.d.M(c,{crossOrigin:f,integrity:typeof d.integrity=="string"?d.integrity:void 0,nonce:typeof d.nonce=="string"?d.nonce:void 0})}}else d==null&&s.d.M(c)},zn.preload=function(c,d){if(typeof c=="string"&&typeof d=="object"&&d!==null&&typeof d.as=="string"){var f=d.as,p=l(f,d.crossOrigin);s.d.L(c,f,{crossOrigin:p,integrity:typeof d.integrity=="string"?d.integrity:void 0,nonce:typeof d.nonce=="string"?d.nonce:void 0,type:typeof d.type=="string"?d.type:void 0,fetchPriority:typeof d.fetchPriority=="string"?d.fetchPriority:void 0,referrerPolicy:typeof d.referrerPolicy=="string"?d.referrerPolicy:void 0,imageSrcSet:typeof d.imageSrcSet=="string"?d.imageSrcSet:void 0,imageSizes:typeof d.imageSizes=="string"?d.imageSizes:void 0,media:typeof d.media=="string"?d.media:void 0})}},zn.preloadModule=function(c,d){if(typeof c=="string")if(d){var f=l(d.as,d.crossOrigin);s.d.m(c,{as:typeof d.as=="string"&&d.as!=="script"?d.as:void 0,crossOrigin:f,integrity:typeof d.integrity=="string"?d.integrity:void 0})}else s.d.m(c)},zn.requestFormReset=function(c){s.d.r(c)},zn.unstable_batchedUpdates=function(c,d){return c(d)},zn.useFormState=function(c,d,f){return o.H.useFormState(c,d,f)},zn.useFormStatus=function(){return o.H.useHostTransitionStatus()},zn.version="19.0.0",zn}var yw;function SR(){if(yw)return sg.exports;yw=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(e){console.error(e)}}return n(),sg.exports=wR(),sg.exports}/**
 * @license React
 * react-dom-client.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var xw;function CR(){if(xw)return pc;xw=1;var n=vR(),e=wy(),t=SR();function s(i){var u="https://react.dev/errors/"+i;if(1<arguments.length){u+="?args[]="+encodeURIComponent(arguments[1]);for(var h=2;h<arguments.length;h++)u+="&args[]="+encodeURIComponent(arguments[h])}return"Minified React error #"+i+"; visit "+u+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function r(i){return!(!i||i.nodeType!==1&&i.nodeType!==9&&i.nodeType!==11)}var a=Symbol.for("react.element"),o=Symbol.for("react.transitional.element"),l=Symbol.for("react.portal"),c=Symbol.for("react.fragment"),d=Symbol.for("react.strict_mode"),f=Symbol.for("react.profiler"),p=Symbol.for("react.provider"),g=Symbol.for("react.consumer"),y=Symbol.for("react.context"),x=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),S=Symbol.for("react.suspense_list"),$=Symbol.for("react.memo"),N=Symbol.for("react.lazy"),I=Symbol.for("react.offscreen"),_=Symbol.for("react.memo_cache_sentinel"),O=Symbol.iterator;function M(i){return i===null||typeof i!="object"?null:(i=O&&i[O]||i["@@iterator"],typeof i=="function"?i:null)}var W=Symbol.for("react.client.reference");function G(i){if(i==null)return null;if(typeof i=="function")return i.$$typeof===W?null:i.displayName||i.name||null;if(typeof i=="string")return i;switch(i){case c:return"Fragment";case l:return"Portal";case f:return"Profiler";case d:return"StrictMode";case w:return"Suspense";case S:return"SuspenseList"}if(typeof i=="object")switch(i.$$typeof){case y:return(i.displayName||"Context")+".Provider";case g:return(i._context.displayName||"Context")+".Consumer";case x:var u=i.render;return i=i.displayName,i||(i=u.displayName||u.name||"",i=i!==""?"ForwardRef("+i+")":"ForwardRef"),i;case $:return u=i.displayName||null,u!==null?u:G(i.type)||"Memo";case N:u=i._payload,i=i._init;try{return G(i(u))}catch{}}return null}var F=e.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,B=Object.assign,D,Q;function re(i){if(D===void 0)try{throw Error()}catch(h){var u=h.stack.trim().match(/\n( *(at )?)/);D=u&&u[1]||"",Q=-1<h.stack.indexOf(`
    at`)?" (<anonymous>)":-1<h.stack.indexOf("@")?"@unknown:0:0":""}return`
`+D+i+Q}var he=!1;function le(i,u){if(!i||he)return"";he=!0;var h=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var m={DetermineComponentFrameRoot:function(){try{if(u){var xe=function(){throw Error()};if(Object.defineProperty(xe.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(xe,[])}catch(ce){var ae=ce}Reflect.construct(i,[],xe)}else{try{xe.call()}catch(ce){ae=ce}i.call(xe.prototype)}}else{try{throw Error()}catch(ce){ae=ce}(xe=i())&&typeof xe.catch=="function"&&xe.catch(function(){})}}catch(ce){if(ce&&ae&&typeof ce.stack=="string")return[ce.stack,ae.stack]}return[null,null]}};m.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var b=Object.getOwnPropertyDescriptor(m.DetermineComponentFrameRoot,"name");b&&b.configurable&&Object.defineProperty(m.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var C=m.DetermineComponentFrameRoot(),R=C[0],L=C[1];if(R&&L){var j=R.split(`
`),J=L.split(`
`);for(b=m=0;m<j.length&&!j[m].includes("DetermineComponentFrameRoot");)m++;for(;b<J.length&&!J[b].includes("DetermineComponentFrameRoot");)b++;if(m===j.length||b===J.length)for(m=j.length-1,b=J.length-1;1<=m&&0<=b&&j[m]!==J[b];)b--;for(;1<=m&&0<=b;m--,b--)if(j[m]!==J[b]){if(m!==1||b!==1)do if(m--,b--,0>b||j[m]!==J[b]){var fe=`
`+j[m].replace(" at new "," at ");return i.displayName&&fe.includes("<anonymous>")&&(fe=fe.replace("<anonymous>",i.displayName)),fe}while(1<=m&&0<=b);break}}}finally{he=!1,Error.prepareStackTrace=h}return(h=i?i.displayName||i.name:"")?re(h):""}function ne(i){switch(i.tag){case 26:case 27:case 5:return re(i.type);case 16:return re("Lazy");case 13:return re("Suspense");case 19:return re("SuspenseList");case 0:case 15:return i=le(i.type,!1),i;case 11:return i=le(i.type.render,!1),i;case 1:return i=le(i.type,!0),i;default:return""}}function ge(i){try{var u="";do u+=ne(i),i=i.return;while(i);return u}catch(h){return`
Error generating stack: `+h.message+`
`+h.stack}}function pe(i){var u=i,h=i;if(i.alternate)for(;u.return;)u=u.return;else{i=u;do u=i,(u.flags&4098)!==0&&(h=u.return),i=u.return;while(i)}return u.tag===3?h:null}function Se(i){if(i.tag===13){var u=i.memoizedState;if(u===null&&(i=i.alternate,i!==null&&(u=i.memoizedState)),u!==null)return u.dehydrated}return null}function q(i){if(pe(i)!==i)throw Error(s(188))}function ue(i){var u=i.alternate;if(!u){if(u=pe(i),u===null)throw Error(s(188));return u!==i?null:i}for(var h=i,m=u;;){var b=h.return;if(b===null)break;var C=b.alternate;if(C===null){if(m=b.return,m!==null){h=m;continue}break}if(b.child===C.child){for(C=b.child;C;){if(C===h)return q(b),i;if(C===m)return q(b),u;C=C.sibling}throw Error(s(188))}if(h.return!==m.return)h=b,m=C;else{for(var R=!1,L=b.child;L;){if(L===h){R=!0,h=b,m=C;break}if(L===m){R=!0,m=b,h=C;break}L=L.sibling}if(!R){for(L=C.child;L;){if(L===h){R=!0,h=C,m=b;break}if(L===m){R=!0,m=C,h=b;break}L=L.sibling}if(!R)throw Error(s(189))}}if(h.alternate!==m)throw Error(s(190))}if(h.tag!==3)throw Error(s(188));return h.stateNode.current===h?i:u}function Te(i){var u=i.tag;if(u===5||u===26||u===27||u===6)return i;for(i=i.child;i!==null;){if(u=Te(i),u!==null)return u;i=i.sibling}return null}var ke=Array.isArray,ve=t.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,Xe={pending:!1,data:null,method:null,action:null},Be=[],St=-1;function nt(i){return{current:i}}function Rt(i){0>St||(i.current=Be[St],Be[St]=null,St--)}function mt(i,u){St++,Be[St]=i.current,i.current=u}var rn=nt(null),pi=nt(null),Ct=nt(null),Zt=nt(null);function mi(i,u){switch(mt(Ct,u),mt(pi,i),mt(rn,null),i=u.nodeType,i){case 9:case 11:u=(u=u.documentElement)&&(u=u.namespaceURI)?z2(u):0;break;default:if(i=i===8?u.parentNode:u,u=i.tagName,i=i.namespaceURI)i=z2(i),u=B2(i,u);else switch(u){case"svg":u=1;break;case"math":u=2;break;default:u=0}}Rt(rn),mt(rn,u)}function wa(){Rt(rn),Rt(pi),Rt(Ct)}function Oo(i){i.memoizedState!==null&&mt(Zt,i);var u=rn.current,h=B2(u,i.type);u!==h&&(mt(pi,i),mt(rn,h))}function gi(i){pi.current===i&&(Rt(rn),Rt(pi)),Zt.current===i&&(Rt(Zt),uc._currentValue=Xe)}var Po=Object.prototype.hasOwnProperty,Fo=n.unstable_scheduleCallback,Lo=n.unstable_cancelCallback,ul=n.unstable_shouldYield,ad=n.unstable_requestPaint,fn=n.unstable_now,id=n.unstable_getCurrentPriorityLevel,yi=n.unstable_ImmediatePriority,zo=n.unstable_UserBlockingPriority,Bo=n.unstable_NormalPriority,od=n.unstable_LowPriority,ud=n.unstable_IdlePriority,ld=n.log,cd=n.unstable_setDisableYieldValue,er=null,Cn=null;function dd(i){if(Cn&&typeof Cn.onCommitFiberRoot=="function")try{Cn.onCommitFiberRoot(er,i,void 0,(i.current.flags&128)===128)}catch{}}function yr(i){if(typeof ld=="function"&&cd(i),Cn&&typeof Cn.setStrictMode=="function")try{Cn.setStrictMode(er,i)}catch{}}var On=Math.clz32?Math.clz32:xi,ll=Math.log,Pr=Math.LN2;function xi(i){return i>>>=0,i===0?32:31-(ll(i)/Pr|0)|0}var bi=128,vi=4194304;function tr(i){var u=i&42;if(u!==0)return u;switch(i&-i){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return i&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return i&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return i}}function wi(i,u){var h=i.pendingLanes;if(h===0)return 0;var m=0,b=i.suspendedLanes,C=i.pingedLanes,R=i.warmLanes;i=i.finishedLanes!==0;var L=h&134217727;return L!==0?(h=L&~b,h!==0?m=tr(h):(C&=L,C!==0?m=tr(C):i||(R=L&~R,R!==0&&(m=tr(R))))):(L=h&~b,L!==0?m=tr(L):C!==0?m=tr(C):i||(R=h&~R,R!==0&&(m=tr(R)))),m===0?0:u!==0&&u!==m&&(u&b)===0&&(b=m&-m,R=u&-u,b>=R||b===32&&(R&4194176)!==0)?u:m}function ms(i,u){return(i.pendingLanes&~(i.suspendedLanes&~i.pingedLanes)&u)===0}function cl(i,u){switch(i){case 1:case 2:case 4:case 8:return u+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return u+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function dl(){var i=bi;return bi<<=1,(bi&4194176)===0&&(bi=128),i}function Si(){var i=vi;return vi<<=1,(vi&62914560)===0&&(vi=4194304),i}function Sa(i){for(var u=[],h=0;31>h;h++)u.push(i);return u}function Ci(i,u){i.pendingLanes|=u,u!==268435456&&(i.suspendedLanes=0,i.pingedLanes=0,i.warmLanes=0)}function Ca(i,u,h,m,b,C){var R=i.pendingLanes;i.pendingLanes=h,i.suspendedLanes=0,i.pingedLanes=0,i.warmLanes=0,i.expiredLanes&=h,i.entangledLanes&=h,i.errorRecoveryDisabledLanes&=h,i.shellSuspendCounter=0;var L=i.entanglements,j=i.expirationTimes,J=i.hiddenUpdates;for(h=R&~h;0<h;){var fe=31-On(h),xe=1<<fe;L[fe]=0,j[fe]=-1;var ae=J[fe];if(ae!==null)for(J[fe]=null,fe=0;fe<ae.length;fe++){var ce=ae[fe];ce!==null&&(ce.lane&=-536870913)}h&=~xe}m!==0&&hd(i,m,0),C!==0&&b===0&&i.tag!==0&&(i.suspendedLanes|=C&~(R&~u))}function hd(i,u,h){i.pendingLanes|=u,i.suspendedLanes&=~u;var m=31-On(u);i.entangledLanes|=u,i.entanglements[m]=i.entanglements[m]|1073741824|h&4194218}function Is(i,u){var h=i.entangledLanes|=u;for(i=i.entanglements;h;){var m=31-On(h),b=1<<m;b&u|i[m]&u&&(i[m]|=u),h&=~b}}function xr(i){return i&=-i,2<i?8<i?(i&134217727)!==0?32:268435456:8:2}function hl(){var i=ve.p;return i!==0?i:(i=window.event,i===void 0?32:sw(i.type))}function Lt(i,u){var h=ve.p;try{return ve.p=i,u()}finally{ve.p=h}}var an=Math.random().toString(36).slice(2),Jt="__reactFiber$"+an,Pn="__reactProps$"+an,nr="__reactContainer$"+an,$i="__reactEvents$"+an,Mo="__reactListeners$"+an,Ti="__reactHandles$"+an,fl="__reactResources$"+an,Fr="__reactMarker$"+an;function Ni(i){delete i[Jt],delete i[Pn],delete i[$i],delete i[Mo],delete i[Ti]}function br(i){var u=i[Jt];if(u)return u;for(var h=i.parentNode;h;){if(u=h[nr]||h[Jt]){if(h=u.alternate,u.child!==null||h!==null&&h.child!==null)for(i=V2(i);i!==null;){if(h=i[Jt])return h;i=V2(i)}return u}i=h,h=i.parentNode}return null}function pn(i){if(i=i[Jt]||i[nr]){var u=i.tag;if(u===5||u===6||u===13||u===26||u===27||u===3)return i}return null}function Fn(i){var u=i.tag;if(u===5||u===26||u===27||u===6)return i.stateNode;throw Error(s(33))}function _s(i){var u=i[fl];return u||(u=i[fl]={hoistableStyles:new Map,hoistableScripts:new Map}),u}function Wt(i){i[Fr]=!0}var Uo=new Set,pl={};function sr(i,u){$n(i,u),$n(i+"Capture",u)}function $n(i,u){for(pl[i]=u,i=0;i<u.length;i++)Uo.add(u[i])}var As=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),Vo=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),gs={},Ei={};function Gf(i){return Po.call(Ei,i)?!0:Po.call(gs,i)?!1:Vo.test(i)?Ei[i]=!0:(gs[i]=!0,!1)}function ki(i,u,h){if(Gf(u))if(h===null)i.removeAttribute(u);else{switch(typeof h){case"undefined":case"function":case"symbol":i.removeAttribute(u);return;case"boolean":var m=u.toLowerCase().slice(0,5);if(m!=="data-"&&m!=="aria-"){i.removeAttribute(u);return}}i.setAttribute(u,""+h)}}function $a(i,u,h){if(h===null)i.removeAttribute(u);else{switch(typeof h){case"undefined":case"function":case"symbol":case"boolean":i.removeAttribute(u);return}i.setAttribute(u,""+h)}}function rr(i,u,h,m){if(m===null)i.removeAttribute(h);else{switch(typeof m){case"undefined":case"function":case"symbol":case"boolean":i.removeAttribute(h);return}i.setAttributeNS(u,h,""+m)}}function ns(i){switch(typeof i){case"bigint":case"boolean":case"number":case"string":case"undefined":return i;case"object":return i;default:return""}}function ml(i){var u=i.type;return(i=i.nodeName)&&i.toLowerCase()==="input"&&(u==="checkbox"||u==="radio")}function fd(i){var u=ml(i)?"checked":"value",h=Object.getOwnPropertyDescriptor(i.constructor.prototype,u),m=""+i[u];if(!i.hasOwnProperty(u)&&typeof h<"u"&&typeof h.get=="function"&&typeof h.set=="function"){var b=h.get,C=h.set;return Object.defineProperty(i,u,{configurable:!0,get:function(){return b.call(this)},set:function(R){m=""+R,C.call(this,R)}}),Object.defineProperty(i,u,{enumerable:h.enumerable}),{getValue:function(){return m},setValue:function(R){m=""+R},stopTracking:function(){i._valueTracker=null,delete i[u]}}}}function Ri(i){i._valueTracker||(i._valueTracker=fd(i))}function gl(i){if(!i)return!1;var u=i._valueTracker;if(!u)return!0;var h=u.getValue(),m="";return i&&(m=ml(i)?i.checked?"true":"false":i.value),i=m,i!==h?(u.setValue(i),!0):!1}function on(i){if(i=i||(typeof document<"u"?document:void 0),typeof i>"u")return null;try{return i.activeElement||i.body}catch{return i.body}}var pd=/[\n"\\]/g;function jn(i){return i.replace(pd,function(u){return"\\"+u.charCodeAt(0).toString(16)+" "})}function Ta(i,u,h,m,b,C,R,L){i.name="",R!=null&&typeof R!="function"&&typeof R!="symbol"&&typeof R!="boolean"?i.type=R:i.removeAttribute("type"),u!=null?R==="number"?(u===0&&i.value===""||i.value!=u)&&(i.value=""+ns(u)):i.value!==""+ns(u)&&(i.value=""+ns(u)):R!=="submit"&&R!=="reset"||i.removeAttribute("value"),u!=null?Wo(i,R,ns(u)):h!=null?Wo(i,R,ns(h)):m!=null&&i.removeAttribute("value"),b==null&&C!=null&&(i.defaultChecked=!!C),b!=null&&(i.checked=b&&typeof b!="function"&&typeof b!="symbol"),L!=null&&typeof L!="function"&&typeof L!="symbol"&&typeof L!="boolean"?i.name=""+ns(L):i.removeAttribute("name")}function yl(i,u,h,m,b,C,R,L){if(C!=null&&typeof C!="function"&&typeof C!="symbol"&&typeof C!="boolean"&&(i.type=C),u!=null||h!=null){if(!(C!=="submit"&&C!=="reset"||u!=null))return;h=h!=null?""+ns(h):"",u=u!=null?""+ns(u):h,L||u===i.value||(i.value=u),i.defaultValue=u}m=m??b,m=typeof m!="function"&&typeof m!="symbol"&&!!m,i.checked=L?i.checked:!!m,i.defaultChecked=!!m,R!=null&&typeof R!="function"&&typeof R!="symbol"&&typeof R!="boolean"&&(i.name=R)}function Wo(i,u,h){u==="number"&&on(i.ownerDocument)===i||i.defaultValue===""+h||(i.defaultValue=""+h)}function Na(i,u,h,m){if(i=i.options,u){u={};for(var b=0;b<h.length;b++)u["$"+h[b]]=!0;for(h=0;h<i.length;h++)b=u.hasOwnProperty("$"+i[h].value),i[h].selected!==b&&(i[h].selected=b),b&&m&&(i[h].defaultSelected=!0)}else{for(h=""+ns(h),u=null,b=0;b<i.length;b++){if(i[b].value===h){i[b].selected=!0,m&&(i[b].defaultSelected=!0);return}u!==null||i[b].disabled||(u=i[b])}u!==null&&(u.selected=!0)}}function md(i,u,h){if(u!=null&&(u=""+ns(u),u!==i.value&&(i.value=u),h==null)){i.defaultValue!==u&&(i.defaultValue=u);return}i.defaultValue=h!=null?""+ns(h):""}function xl(i,u,h,m){if(u==null){if(m!=null){if(h!=null)throw Error(s(92));if(ke(m)){if(1<m.length)throw Error(s(93));m=m[0]}h=m}h==null&&(h=""),u=h}h=ns(u),i.defaultValue=h,m=i.textContent,m===h&&m!==""&&m!==null&&(i.value=m)}function Lr(i,u){if(u){var h=i.firstChild;if(h&&h===i.lastChild&&h.nodeType===3){h.nodeValue=u;return}}i.textContent=u}var Go=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function bl(i,u,h){var m=u.indexOf("--")===0;h==null||typeof h=="boolean"||h===""?m?i.setProperty(u,""):u==="float"?i.cssFloat="":i[u]="":m?i.setProperty(u,h):typeof h!="number"||h===0||Go.has(u)?u==="float"?i.cssFloat=h:i[u]=(""+h).trim():i[u]=h+"px"}function vl(i,u,h){if(u!=null&&typeof u!="object")throw Error(s(62));if(i=i.style,h!=null){for(var m in h)!h.hasOwnProperty(m)||u!=null&&u.hasOwnProperty(m)||(m.indexOf("--")===0?i.setProperty(m,""):m==="float"?i.cssFloat="":i[m]="");for(var b in u)m=u[b],u.hasOwnProperty(b)&&h[b]!==m&&bl(i,b,m)}else for(var C in u)u.hasOwnProperty(C)&&bl(i,C,u[C])}function zr(i){if(i.indexOf("-")===-1)return!1;switch(i){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Hf=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),jf=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function Ho(i){return jf.test(""+i)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":i}var wl=null;function Ii(i){return i=i.target||i.srcElement||window,i.correspondingUseElement&&(i=i.correspondingUseElement),i.nodeType===3?i.parentNode:i}var Ds=null,Ea=null;function gd(i){var u=pn(i);if(u&&(i=u.stateNode)){var h=i[Pn]||null;e:switch(i=u.stateNode,u.type){case"input":if(Ta(i,h.value,h.defaultValue,h.defaultValue,h.checked,h.defaultChecked,h.type,h.name),u=h.name,h.type==="radio"&&u!=null){for(h=i;h.parentNode;)h=h.parentNode;for(h=h.querySelectorAll('input[name="'+jn(""+u)+'"][type="radio"]'),u=0;u<h.length;u++){var m=h[u];if(m!==i&&m.form===i.form){var b=m[Pn]||null;if(!b)throw Error(s(90));Ta(m,b.value,b.defaultValue,b.defaultValue,b.checked,b.defaultChecked,b.type,b.name)}}for(u=0;u<h.length;u++)m=h[u],m.form===i.form&&gl(m)}break e;case"textarea":md(i,h.value,h.defaultValue);break e;case"select":u=h.value,u!=null&&Na(i,!!h.multiple,u,!1)}}}var Sl=!1;function yd(i,u,h){if(Sl)return i(u,h);Sl=!0;try{var m=i(u);return m}finally{if(Sl=!1,(Ds!==null||Ea!==null)&&(sh(),Ds&&(u=Ds,i=Ea,Ea=Ds=null,gd(u),i)))for(u=0;u<i.length;u++)gd(i[u])}}function Br(i,u){var h=i.stateNode;if(h===null)return null;var m=h[Pn]||null;if(m===null)return null;h=m[u];e:switch(u){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(m=!m.disabled)||(i=i.type,m=!(i==="button"||i==="input"||i==="select"||i==="textarea")),i=!m;break e;default:i=!1}if(i)return null;if(h&&typeof h!="function")throw Error(s(231,u,typeof h));return h}var jo=!1;if(As)try{var ka={};Object.defineProperty(ka,"passive",{get:function(){jo=!0}}),window.addEventListener("test",ka,ka),window.removeEventListener("test",ka,ka)}catch{jo=!1}var ss=null,qn=null,qo=null;function xd(){if(qo)return qo;var i,u=qn,h=u.length,m,b="value"in ss?ss.value:ss.textContent,C=b.length;for(i=0;i<h&&u[i]===b[i];i++);var R=h-i;for(m=1;m<=R&&u[h-m]===b[C-m];m++);return qo=b.slice(i,1<m?1-m:void 0)}function _i(i){var u=i.keyCode;return"charCode"in i?(i=i.charCode,i===0&&u===13&&(i=13)):i=u,i===10&&(i=13),32<=i||i===13?i:0}function Ai(){return!0}function Xo(){return!1}function mn(i){function u(h,m,b,C,R){this._reactName=h,this._targetInst=b,this.type=m,this.nativeEvent=C,this.target=R,this.currentTarget=null;for(var L in i)i.hasOwnProperty(L)&&(h=i[L],this[L]=h?h(C):C[L]);return this.isDefaultPrevented=(C.defaultPrevented!=null?C.defaultPrevented:C.returnValue===!1)?Ai:Xo,this.isPropagationStopped=Xo,this}return B(u.prototype,{preventDefault:function(){this.defaultPrevented=!0;var h=this.nativeEvent;h&&(h.preventDefault?h.preventDefault():typeof h.returnValue!="unknown"&&(h.returnValue=!1),this.isDefaultPrevented=Ai)},stopPropagation:function(){var h=this.nativeEvent;h&&(h.stopPropagation?h.stopPropagation():typeof h.cancelBubble!="unknown"&&(h.cancelBubble=!0),this.isPropagationStopped=Ai)},persist:function(){},isPersistent:Ai}),u}var rs={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(i){return i.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Di=mn(rs),Mr=B({},rs,{view:0,detail:0}),qf=mn(Mr),Cl,Ur,Ra,Oi=B({},Mr,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Yo,button:0,buttons:0,relatedTarget:function(i){return i.relatedTarget===void 0?i.fromElement===i.srcElement?i.toElement:i.fromElement:i.relatedTarget},movementX:function(i){return"movementX"in i?i.movementX:(i!==Ra&&(Ra&&i.type==="mousemove"?(Cl=i.screenX-Ra.screenX,Ur=i.screenY-Ra.screenY):Ur=Cl=0,Ra=i),Cl)},movementY:function(i){return"movementY"in i?i.movementY:Ur}}),bd=mn(Oi),Xf=B({},Oi,{dataTransfer:0}),Ko=mn(Xf),vd=B({},Mr,{relatedTarget:0}),$l=mn(vd),wd=B({},rs,{animationName:0,elapsedTime:0,pseudoElement:0}),Kf=mn(wd),Yf=B({},rs,{clipboardData:function(i){return"clipboardData"in i?i.clipboardData:window.clipboardData}}),Tl=mn(Yf),Nl=B({},rs,{data:0}),El=mn(Nl),Qf={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Zf={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Jf={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function ep(i){var u=this.nativeEvent;return u.getModifierState?u.getModifierState(i):(i=Jf[i])?!!u[i]:!1}function Yo(){return ep}var tp=B({},Mr,{key:function(i){if(i.key){var u=Qf[i.key]||i.key;if(u!=="Unidentified")return u}return i.type==="keypress"?(i=_i(i),i===13?"Enter":String.fromCharCode(i)):i.type==="keydown"||i.type==="keyup"?Zf[i.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Yo,charCode:function(i){return i.type==="keypress"?_i(i):0},keyCode:function(i){return i.type==="keydown"||i.type==="keyup"?i.keyCode:0},which:function(i){return i.type==="keypress"?_i(i):i.type==="keydown"||i.type==="keyup"?i.keyCode:0}}),np=mn(tp),kl=B({},Oi,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Sd=mn(kl),sp=B({},Mr,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Yo}),rp=mn(sp),Qo=B({},rs,{propertyName:0,elapsedTime:0,pseudoElement:0}),ap=mn(Qo),ip=B({},Oi,{deltaX:function(i){return"deltaX"in i?i.deltaX:"wheelDeltaX"in i?-i.wheelDeltaX:0},deltaY:function(i){return"deltaY"in i?i.deltaY:"wheelDeltaY"in i?-i.wheelDeltaY:"wheelDelta"in i?-i.wheelDelta:0},deltaZ:0,deltaMode:0}),op=mn(ip),Cd=B({},rs,{newState:0,oldState:0}),$d=mn(Cd),v=[9,13,27,32],T=As&&"CompositionEvent"in window,k=null;As&&"documentMode"in document&&(k=document.documentMode);var A=As&&"TextEvent"in window&&!k,U=As&&(!T||k&&8<k&&11>=k),H=" ",V=!1;function Y(i,u){switch(i){case"keyup":return v.indexOf(u.keyCode)!==-1;case"keydown":return u.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function ie(i){return i=i.detail,typeof i=="object"&&"data"in i?i.data:null}var ye=!1;function Ne(i,u){switch(i){case"compositionend":return ie(u);case"keypress":return u.which!==32?null:(V=!0,H);case"textInput":return i=u.data,i===H&&V?null:i;default:return null}}function Ue(i,u){if(ye)return i==="compositionend"||!T&&Y(i,u)?(i=xd(),qo=qn=ss=null,ye=!1,i):null;switch(i){case"paste":return null;case"keypress":if(!(u.ctrlKey||u.altKey||u.metaKey)||u.ctrlKey&&u.altKey){if(u.char&&1<u.char.length)return u.char;if(u.which)return String.fromCharCode(u.which)}return null;case"compositionend":return U&&u.locale!=="ko"?null:u.data;default:return null}}var Fe={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ie(i){var u=i&&i.nodeName&&i.nodeName.toLowerCase();return u==="input"?!!Fe[i.type]:u==="textarea"}function Me(i,u,h,m){Ds?Ea?Ea.push(m):Ea=[m]:Ds=m,u=uh(u,"onChange"),0<u.length&&(h=new Di("onChange","change",null,h,m),i.push({event:h,listeners:u}))}var He=null,pt=null;function $t(i){D2(i,0)}function Gt(i){var u=Fn(i);if(gl(u))return i}function Xn(i,u){if(i==="change")return u}var Tn=!1;if(As){var at;if(As){var Kt="oninput"in document;if(!Kt){var ar=document.createElement("div");ar.setAttribute("oninput","return;"),Kt=typeof ar.oninput=="function"}at=Kt}else at=!1;Tn=at&&(!document.documentMode||9<document.documentMode)}function Td(){He&&(He.detachEvent("onpropertychange",Nd),pt=He=null)}function Nd(i){if(i.propertyName==="value"&&Gt(pt)){var u=[];Me(u,pt,i,Ii(i)),yd($t,u)}}function up(i,u,h){i==="focusin"?(Td(),He=u,pt=h,He.attachEvent("onpropertychange",Nd)):i==="focusout"&&Td()}function lp(i){if(i==="selectionchange"||i==="keyup"||i==="keydown")return Gt(pt)}function cp(i,u){if(i==="click")return Gt(u)}function Zo(i,u){if(i==="input"||i==="change")return Gt(u)}function qE(i,u){return i===u&&(i!==0||1/i===1/u)||i!==i&&u!==u}var ys=typeof Object.is=="function"?Object.is:qE;function Rl(i,u){if(ys(i,u))return!0;if(typeof i!="object"||i===null||typeof u!="object"||u===null)return!1;var h=Object.keys(i),m=Object.keys(u);if(h.length!==m.length)return!1;for(m=0;m<h.length;m++){var b=h[m];if(!Po.call(u,b)||!ys(i[b],u[b]))return!1}return!0}function fb(i){for(;i&&i.firstChild;)i=i.firstChild;return i}function pb(i,u){var h=fb(i);i=0;for(var m;h;){if(h.nodeType===3){if(m=i+h.textContent.length,i<=u&&m>=u)return{node:h,offset:u-i};i=m}e:{for(;h;){if(h.nextSibling){h=h.nextSibling;break e}h=h.parentNode}h=void 0}h=fb(h)}}function mb(i,u){return i&&u?i===u?!0:i&&i.nodeType===3?!1:u&&u.nodeType===3?mb(i,u.parentNode):"contains"in i?i.contains(u):i.compareDocumentPosition?!!(i.compareDocumentPosition(u)&16):!1:!1}function gb(i){i=i!=null&&i.ownerDocument!=null&&i.ownerDocument.defaultView!=null?i.ownerDocument.defaultView:window;for(var u=on(i.document);u instanceof i.HTMLIFrameElement;){try{var h=typeof u.contentWindow.location.href=="string"}catch{h=!1}if(h)i=u.contentWindow;else break;u=on(i.document)}return u}function dp(i){var u=i&&i.nodeName&&i.nodeName.toLowerCase();return u&&(u==="input"&&(i.type==="text"||i.type==="search"||i.type==="tel"||i.type==="url"||i.type==="password")||u==="textarea"||i.contentEditable==="true")}function XE(i,u){var h=gb(u);u=i.focusedElem;var m=i.selectionRange;if(h!==u&&u&&u.ownerDocument&&mb(u.ownerDocument.documentElement,u)){if(m!==null&&dp(u)){if(i=m.start,h=m.end,h===void 0&&(h=i),"selectionStart"in u)u.selectionStart=i,u.selectionEnd=Math.min(h,u.value.length);else if(h=(i=u.ownerDocument||document)&&i.defaultView||window,h.getSelection){h=h.getSelection();var b=u.textContent.length,C=Math.min(m.start,b);m=m.end===void 0?C:Math.min(m.end,b),!h.extend&&C>m&&(b=m,m=C,C=b),b=pb(u,C);var R=pb(u,m);b&&R&&(h.rangeCount!==1||h.anchorNode!==b.node||h.anchorOffset!==b.offset||h.focusNode!==R.node||h.focusOffset!==R.offset)&&(i=i.createRange(),i.setStart(b.node,b.offset),h.removeAllRanges(),C>m?(h.addRange(i),h.extend(R.node,R.offset)):(i.setEnd(R.node,R.offset),h.addRange(i)))}}for(i=[],h=u;h=h.parentNode;)h.nodeType===1&&i.push({element:h,left:h.scrollLeft,top:h.scrollTop});for(typeof u.focus=="function"&&u.focus(),u=0;u<i.length;u++)h=i[u],h.element.scrollLeft=h.left,h.element.scrollTop=h.top}}var KE=As&&"documentMode"in document&&11>=document.documentMode,Jo=null,hp=null,Il=null,fp=!1;function yb(i,u,h){var m=h.window===h?h.document:h.nodeType===9?h:h.ownerDocument;fp||Jo==null||Jo!==on(m)||(m=Jo,"selectionStart"in m&&dp(m)?m={start:m.selectionStart,end:m.selectionEnd}:(m=(m.ownerDocument&&m.ownerDocument.defaultView||window).getSelection(),m={anchorNode:m.anchorNode,anchorOffset:m.anchorOffset,focusNode:m.focusNode,focusOffset:m.focusOffset}),Il&&Rl(Il,m)||(Il=m,m=uh(hp,"onSelect"),0<m.length&&(u=new Di("onSelect","select",null,u,h),i.push({event:u,listeners:m}),u.target=Jo)))}function Pi(i,u){var h={};return h[i.toLowerCase()]=u.toLowerCase(),h["Webkit"+i]="webkit"+u,h["Moz"+i]="moz"+u,h}var eu={animationend:Pi("Animation","AnimationEnd"),animationiteration:Pi("Animation","AnimationIteration"),animationstart:Pi("Animation","AnimationStart"),transitionrun:Pi("Transition","TransitionRun"),transitionstart:Pi("Transition","TransitionStart"),transitioncancel:Pi("Transition","TransitionCancel"),transitionend:Pi("Transition","TransitionEnd")},pp={},xb={};As&&(xb=document.createElement("div").style,"AnimationEvent"in window||(delete eu.animationend.animation,delete eu.animationiteration.animation,delete eu.animationstart.animation),"TransitionEvent"in window||delete eu.transitionend.transition);function Fi(i){if(pp[i])return pp[i];if(!eu[i])return i;var u=eu[i],h;for(h in u)if(u.hasOwnProperty(h)&&h in xb)return pp[i]=u[h];return i}var bb=Fi("animationend"),vb=Fi("animationiteration"),wb=Fi("animationstart"),YE=Fi("transitionrun"),QE=Fi("transitionstart"),ZE=Fi("transitioncancel"),Sb=Fi("transitionend"),Cb=new Map,$b="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(" ");function ir(i,u){Cb.set(i,u),sr(u,[i])}var Os=[],tu=0,mp=0;function Ed(){for(var i=tu,u=mp=tu=0;u<i;){var h=Os[u];Os[u++]=null;var m=Os[u];Os[u++]=null;var b=Os[u];Os[u++]=null;var C=Os[u];if(Os[u++]=null,m!==null&&b!==null){var R=m.pending;R===null?b.next=b:(b.next=R.next,R.next=b),m.pending=b}C!==0&&Tb(h,b,C)}}function kd(i,u,h,m){Os[tu++]=i,Os[tu++]=u,Os[tu++]=h,Os[tu++]=m,mp|=m,i.lanes|=m,i=i.alternate,i!==null&&(i.lanes|=m)}function gp(i,u,h,m){return kd(i,u,h,m),Rd(i)}function Ia(i,u){return kd(i,null,null,u),Rd(i)}function Tb(i,u,h){i.lanes|=h;var m=i.alternate;m!==null&&(m.lanes|=h);for(var b=!1,C=i.return;C!==null;)C.childLanes|=h,m=C.alternate,m!==null&&(m.childLanes|=h),C.tag===22&&(i=C.stateNode,i===null||i._visibility&1||(b=!0)),i=C,C=C.return;b&&u!==null&&i.tag===3&&(C=i.stateNode,b=31-On(h),C=C.hiddenUpdates,i=C[b],i===null?C[b]=[u]:i.push(u),u.lane=h|536870912)}function Rd(i){if(50<tc)throw tc=0,Sm=null,Error(s(185));for(var u=i.return;u!==null;)i=u,u=i.return;return i.tag===3?i.stateNode:null}var nu={},Nb=new WeakMap;function Ps(i,u){if(typeof i=="object"&&i!==null){var h=Nb.get(i);return h!==void 0?h:(u={value:i,source:u,stack:ge(u)},Nb.set(i,u),u)}return{value:i,source:u,stack:ge(u)}}var su=[],ru=0,Id=null,_d=0,Fs=[],Ls=0,Li=null,Vr=1,Wr="";function zi(i,u){su[ru++]=_d,su[ru++]=Id,Id=i,_d=u}function Eb(i,u,h){Fs[Ls++]=Vr,Fs[Ls++]=Wr,Fs[Ls++]=Li,Li=i;var m=Vr;i=Wr;var b=32-On(m)-1;m&=~(1<<b),h+=1;var C=32-On(u)+b;if(30<C){var R=b-b%5;C=(m&(1<<R)-1).toString(32),m>>=R,b-=R,Vr=1<<32-On(u)+b|h<<b|m,Wr=C+i}else Vr=1<<C|h<<b|m,Wr=i}function yp(i){i.return!==null&&(zi(i,1),Eb(i,1,0))}function xp(i){for(;i===Id;)Id=su[--ru],su[ru]=null,_d=su[--ru],su[ru]=null;for(;i===Li;)Li=Fs[--Ls],Fs[Ls]=null,Wr=Fs[--Ls],Fs[Ls]=null,Vr=Fs[--Ls],Fs[Ls]=null}var Kn=null,Nn=null,ht=!1,or=null,vr=!1,bp=Error(s(519));function Bi(i){var u=Error(s(418,""));throw Dl(Ps(u,i)),bp}function kb(i){var u=i.stateNode,h=i.type,m=i.memoizedProps;switch(u[Jt]=i,u[Pn]=m,h){case"dialog":ut("cancel",u),ut("close",u);break;case"iframe":case"object":case"embed":ut("load",u);break;case"video":case"audio":for(h=0;h<sc.length;h++)ut(sc[h],u);break;case"source":ut("error",u);break;case"img":case"image":case"link":ut("error",u),ut("load",u);break;case"details":ut("toggle",u);break;case"input":ut("invalid",u),yl(u,m.value,m.defaultValue,m.checked,m.defaultChecked,m.type,m.name,!0),Ri(u);break;case"select":ut("invalid",u);break;case"textarea":ut("invalid",u),xl(u,m.value,m.defaultValue,m.children),Ri(u)}h=m.children,typeof h!="string"&&typeof h!="number"&&typeof h!="bigint"||u.textContent===""+h||m.suppressHydrationWarning===!0||L2(u.textContent,h)?(m.popover!=null&&(ut("beforetoggle",u),ut("toggle",u)),m.onScroll!=null&&ut("scroll",u),m.onScrollEnd!=null&&ut("scrollend",u),m.onClick!=null&&(u.onclick=lh),u=!0):u=!1,u||Bi(i)}function Rb(i){for(Kn=i.return;Kn;)switch(Kn.tag){case 3:case 27:vr=!0;return;case 5:case 13:vr=!1;return;default:Kn=Kn.return}}function _l(i){if(i!==Kn)return!1;if(!ht)return Rb(i),ht=!0,!1;var u=!1,h;if((h=i.tag!==3&&i.tag!==27)&&((h=i.tag===5)&&(h=i.type,h=!(h!=="form"&&h!=="button")||Bm(i.type,i.memoizedProps)),h=!h),h&&(u=!0),u&&Nn&&Bi(i),Rb(i),i.tag===13){if(i=i.memoizedState,i=i!==null?i.dehydrated:null,!i)throw Error(s(317));e:{for(i=i.nextSibling,u=0;i;){if(i.nodeType===8)if(h=i.data,h==="/$"){if(u===0){Nn=lr(i.nextSibling);break e}u--}else h!=="$"&&h!=="$!"&&h!=="$?"||u++;i=i.nextSibling}Nn=null}}else Nn=Kn?lr(i.stateNode.nextSibling):null;return!0}function Al(){Nn=Kn=null,ht=!1}function Dl(i){or===null?or=[i]:or.push(i)}var Ol=Error(s(460)),Ib=Error(s(474)),vp={then:function(){}};function _b(i){return i=i.status,i==="fulfilled"||i==="rejected"}function Ad(){}function Ab(i,u,h){switch(h=i[h],h===void 0?i.push(u):h!==u&&(u.then(Ad,Ad),u=h),u.status){case"fulfilled":return u.value;case"rejected":throw i=u.reason,i===Ol?Error(s(483)):i;default:if(typeof u.status=="string")u.then(Ad,Ad);else{if(i=At,i!==null&&100<i.shellSuspendCounter)throw Error(s(482));i=u,i.status="pending",i.then(function(m){if(u.status==="pending"){var b=u;b.status="fulfilled",b.value=m}},function(m){if(u.status==="pending"){var b=u;b.status="rejected",b.reason=m}})}switch(u.status){case"fulfilled":return u.value;case"rejected":throw i=u.reason,i===Ol?Error(s(483)):i}throw Pl=u,Ol}}var Pl=null;function Db(){if(Pl===null)throw Error(s(459));var i=Pl;return Pl=null,i}var au=null,Fl=0;function Dd(i){var u=Fl;return Fl+=1,au===null&&(au=[]),Ab(au,i,u)}function Ll(i,u){u=u.props.ref,i.ref=u!==void 0?u:null}function Od(i,u){throw u.$$typeof===a?Error(s(525)):(i=Object.prototype.toString.call(u),Error(s(31,i==="[object Object]"?"object with keys {"+Object.keys(u).join(", ")+"}":i)))}function Ob(i){var u=i._init;return u(i._payload)}function Pb(i){function u(te,Z){if(i){var se=te.deletions;se===null?(te.deletions=[Z],te.flags|=16):se.push(Z)}}function h(te,Z){if(!i)return null;for(;Z!==null;)u(te,Z),Z=Z.sibling;return null}function m(te){for(var Z=new Map;te!==null;)te.key!==null?Z.set(te.key,te):Z.set(te.index,te),te=te.sibling;return Z}function b(te,Z){return te=Va(te,Z),te.index=0,te.sibling=null,te}function C(te,Z,se){return te.index=se,i?(se=te.alternate,se!==null?(se=se.index,se<Z?(te.flags|=33554434,Z):se):(te.flags|=33554434,Z)):(te.flags|=1048576,Z)}function R(te){return i&&te.alternate===null&&(te.flags|=33554434),te}function L(te,Z,se,me){return Z===null||Z.tag!==6?(Z=pm(se,te.mode,me),Z.return=te,Z):(Z=b(Z,se),Z.return=te,Z)}function j(te,Z,se,me){var De=se.type;return De===c?fe(te,Z,se.props.children,me,se.key):Z!==null&&(Z.elementType===De||typeof De=="object"&&De!==null&&De.$$typeof===N&&Ob(De)===Z.type)?(Z=b(Z,se.props),Ll(Z,se),Z.return=te,Z):(Z=Zd(se.type,se.key,se.props,null,te.mode,me),Ll(Z,se),Z.return=te,Z)}function J(te,Z,se,me){return Z===null||Z.tag!==4||Z.stateNode.containerInfo!==se.containerInfo||Z.stateNode.implementation!==se.implementation?(Z=mm(se,te.mode,me),Z.return=te,Z):(Z=b(Z,se.children||[]),Z.return=te,Z)}function fe(te,Z,se,me,De){return Z===null||Z.tag!==7?(Z=Ki(se,te.mode,me,De),Z.return=te,Z):(Z=b(Z,se),Z.return=te,Z)}function xe(te,Z,se){if(typeof Z=="string"&&Z!==""||typeof Z=="number"||typeof Z=="bigint")return Z=pm(""+Z,te.mode,se),Z.return=te,Z;if(typeof Z=="object"&&Z!==null){switch(Z.$$typeof){case o:return se=Zd(Z.type,Z.key,Z.props,null,te.mode,se),Ll(se,Z),se.return=te,se;case l:return Z=mm(Z,te.mode,se),Z.return=te,Z;case N:var me=Z._init;return Z=me(Z._payload),xe(te,Z,se)}if(ke(Z)||M(Z))return Z=Ki(Z,te.mode,se,null),Z.return=te,Z;if(typeof Z.then=="function")return xe(te,Dd(Z),se);if(Z.$$typeof===y)return xe(te,Kd(te,Z),se);Od(te,Z)}return null}function ae(te,Z,se,me){var De=Z!==null?Z.key:null;if(typeof se=="string"&&se!==""||typeof se=="number"||typeof se=="bigint")return De!==null?null:L(te,Z,""+se,me);if(typeof se=="object"&&se!==null){switch(se.$$typeof){case o:return se.key===De?j(te,Z,se,me):null;case l:return se.key===De?J(te,Z,se,me):null;case N:return De=se._init,se=De(se._payload),ae(te,Z,se,me)}if(ke(se)||M(se))return De!==null?null:fe(te,Z,se,me,null);if(typeof se.then=="function")return ae(te,Z,Dd(se),me);if(se.$$typeof===y)return ae(te,Z,Kd(te,se),me);Od(te,se)}return null}function ce(te,Z,se,me,De){if(typeof me=="string"&&me!==""||typeof me=="number"||typeof me=="bigint")return te=te.get(se)||null,L(Z,te,""+me,De);if(typeof me=="object"&&me!==null){switch(me.$$typeof){case o:return te=te.get(me.key===null?se:me.key)||null,j(Z,te,me,De);case l:return te=te.get(me.key===null?se:me.key)||null,J(Z,te,me,De);case N:var st=me._init;return me=st(me._payload),ce(te,Z,se,me,De)}if(ke(me)||M(me))return te=te.get(se)||null,fe(Z,te,me,De,null);if(typeof me.then=="function")return ce(te,Z,se,Dd(me),De);if(me.$$typeof===y)return ce(te,Z,se,Kd(Z,me),De);Od(Z,me)}return null}function Le(te,Z,se,me){for(var De=null,st=null,ze=Z,Ve=Z=0,xn=null;ze!==null&&Ve<se.length;Ve++){ze.index>Ve?(xn=ze,ze=null):xn=ze.sibling;var ft=ae(te,ze,se[Ve],me);if(ft===null){ze===null&&(ze=xn);break}i&&ze&&ft.alternate===null&&u(te,ze),Z=C(ft,Z,Ve),st===null?De=ft:st.sibling=ft,st=ft,ze=xn}if(Ve===se.length)return h(te,ze),ht&&zi(te,Ve),De;if(ze===null){for(;Ve<se.length;Ve++)ze=xe(te,se[Ve],me),ze!==null&&(Z=C(ze,Z,Ve),st===null?De=ze:st.sibling=ze,st=ze);return ht&&zi(te,Ve),De}for(ze=m(ze);Ve<se.length;Ve++)xn=ce(ze,te,Ve,se[Ve],me),xn!==null&&(i&&xn.alternate!==null&&ze.delete(xn.key===null?Ve:xn.key),Z=C(xn,Z,Ve),st===null?De=xn:st.sibling=xn,st=xn);return i&&ze.forEach(function(Ka){return u(te,Ka)}),ht&&zi(te,Ve),De}function qe(te,Z,se,me){if(se==null)throw Error(s(151));for(var De=null,st=null,ze=Z,Ve=Z=0,xn=null,ft=se.next();ze!==null&&!ft.done;Ve++,ft=se.next()){ze.index>Ve?(xn=ze,ze=null):xn=ze.sibling;var Ka=ae(te,ze,ft.value,me);if(Ka===null){ze===null&&(ze=xn);break}i&&ze&&Ka.alternate===null&&u(te,ze),Z=C(Ka,Z,Ve),st===null?De=Ka:st.sibling=Ka,st=Ka,ze=xn}if(ft.done)return h(te,ze),ht&&zi(te,Ve),De;if(ze===null){for(;!ft.done;Ve++,ft=se.next())ft=xe(te,ft.value,me),ft!==null&&(Z=C(ft,Z,Ve),st===null?De=ft:st.sibling=ft,st=ft);return ht&&zi(te,Ve),De}for(ze=m(ze);!ft.done;Ve++,ft=se.next())ft=ce(ze,te,Ve,ft.value,me),ft!==null&&(i&&ft.alternate!==null&&ze.delete(ft.key===null?Ve:ft.key),Z=C(ft,Z,Ve),st===null?De=ft:st.sibling=ft,st=ft);return i&&ze.forEach(function(hR){return u(te,hR)}),ht&&zi(te,Ve),De}function qt(te,Z,se,me){if(typeof se=="object"&&se!==null&&se.type===c&&se.key===null&&(se=se.props.children),typeof se=="object"&&se!==null){switch(se.$$typeof){case o:e:{for(var De=se.key;Z!==null;){if(Z.key===De){if(De=se.type,De===c){if(Z.tag===7){h(te,Z.sibling),me=b(Z,se.props.children),me.return=te,te=me;break e}}else if(Z.elementType===De||typeof De=="object"&&De!==null&&De.$$typeof===N&&Ob(De)===Z.type){h(te,Z.sibling),me=b(Z,se.props),Ll(me,se),me.return=te,te=me;break e}h(te,Z);break}else u(te,Z);Z=Z.sibling}se.type===c?(me=Ki(se.props.children,te.mode,me,se.key),me.return=te,te=me):(me=Zd(se.type,se.key,se.props,null,te.mode,me),Ll(me,se),me.return=te,te=me)}return R(te);case l:e:{for(De=se.key;Z!==null;){if(Z.key===De)if(Z.tag===4&&Z.stateNode.containerInfo===se.containerInfo&&Z.stateNode.implementation===se.implementation){h(te,Z.sibling),me=b(Z,se.children||[]),me.return=te,te=me;break e}else{h(te,Z);break}else u(te,Z);Z=Z.sibling}me=mm(se,te.mode,me),me.return=te,te=me}return R(te);case N:return De=se._init,se=De(se._payload),qt(te,Z,se,me)}if(ke(se))return Le(te,Z,se,me);if(M(se)){if(De=M(se),typeof De!="function")throw Error(s(150));return se=De.call(se),qe(te,Z,se,me)}if(typeof se.then=="function")return qt(te,Z,Dd(se),me);if(se.$$typeof===y)return qt(te,Z,Kd(te,se),me);Od(te,se)}return typeof se=="string"&&se!==""||typeof se=="number"||typeof se=="bigint"?(se=""+se,Z!==null&&Z.tag===6?(h(te,Z.sibling),me=b(Z,se),me.return=te,te=me):(h(te,Z),me=pm(se,te.mode,me),me.return=te,te=me),R(te)):h(te,Z)}return function(te,Z,se,me){try{Fl=0;var De=qt(te,Z,se,me);return au=null,De}catch(ze){if(ze===Ol)throw ze;var st=Us(29,ze,null,te.mode);return st.lanes=me,st.return=te,st}finally{}}}var Mi=Pb(!0),Fb=Pb(!1),iu=nt(null),Pd=nt(0);function Lb(i,u){i=ea,mt(Pd,i),mt(iu,u),ea=i|u.baseLanes}function wp(){mt(Pd,ea),mt(iu,iu.current)}function Sp(){ea=Pd.current,Rt(iu),Rt(Pd)}var zs=nt(null),wr=null;function _a(i){var u=i.alternate;mt(un,un.current&1),mt(zs,i),wr===null&&(u===null||iu.current!==null||u.memoizedState!==null)&&(wr=i)}function zb(i){if(i.tag===22){if(mt(un,un.current),mt(zs,i),wr===null){var u=i.alternate;u!==null&&u.memoizedState!==null&&(wr=i)}}else Aa()}function Aa(){mt(un,un.current),mt(zs,zs.current)}function Gr(i){Rt(zs),wr===i&&(wr=null),Rt(un)}var un=nt(0);function Fd(i){for(var u=i;u!==null;){if(u.tag===13){var h=u.memoizedState;if(h!==null&&(h=h.dehydrated,h===null||h.data==="$?"||h.data==="$!"))return u}else if(u.tag===19&&u.memoizedProps.revealOrder!==void 0){if((u.flags&128)!==0)return u}else if(u.child!==null){u.child.return=u,u=u.child;continue}if(u===i)break;for(;u.sibling===null;){if(u.return===null||u.return===i)return null;u=u.return}u.sibling.return=u.return,u=u.sibling}return null}var JE=typeof AbortController<"u"?AbortController:function(){var i=[],u=this.signal={aborted:!1,addEventListener:function(h,m){i.push(m)}};this.abort=function(){u.aborted=!0,i.forEach(function(h){return h()})}},ek=n.unstable_scheduleCallback,tk=n.unstable_NormalPriority,ln={$$typeof:y,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function Cp(){return{controller:new JE,data:new Map,refCount:0}}function zl(i){i.refCount--,i.refCount===0&&ek(tk,function(){i.controller.abort()})}var Bl=null,$p=0,ou=0,uu=null;function nk(i,u){if(Bl===null){var h=Bl=[];$p=0,ou=Im(),uu={status:"pending",value:void 0,then:function(m){h.push(m)}}}return $p++,u.then(Bb,Bb),u}function Bb(){if(--$p===0&&Bl!==null){uu!==null&&(uu.status="fulfilled");var i=Bl;Bl=null,ou=0,uu=null;for(var u=0;u<i.length;u++)(0,i[u])()}}function sk(i,u){var h=[],m={status:"pending",value:null,reason:null,then:function(b){h.push(b)}};return i.then(function(){m.status="fulfilled",m.value=u;for(var b=0;b<h.length;b++)(0,h[b])(u)},function(b){for(m.status="rejected",m.reason=b,b=0;b<h.length;b++)(0,h[b])(void 0)}),m}var Mb=F.S;F.S=function(i,u){typeof u=="object"&&u!==null&&typeof u.then=="function"&&nk(i,u),Mb!==null&&Mb(i,u)};var Ui=nt(null);function Tp(){var i=Ui.current;return i!==null?i:At.pooledCache}function Ld(i,u){u===null?mt(Ui,Ui.current):mt(Ui,u.pool)}function Ub(){var i=Tp();return i===null?null:{parent:ln._currentValue,pool:i}}var Da=0,tt=null,Tt=null,en=null,zd=!1,lu=!1,Vi=!1,Bd=0,Ml=0,cu=null,rk=0;function Yt(){throw Error(s(321))}function Np(i,u){if(u===null)return!1;for(var h=0;h<u.length&&h<i.length;h++)if(!ys(i[h],u[h]))return!1;return!0}function Ep(i,u,h,m,b,C){return Da=C,tt=u,u.memoizedState=null,u.updateQueue=null,u.lanes=0,F.H=i===null||i.memoizedState===null?Wi:Oa,Vi=!1,C=h(m,b),Vi=!1,lu&&(C=Wb(u,h,m,b)),Vb(i),C}function Vb(i){F.H=Sr;var u=Tt!==null&&Tt.next!==null;if(Da=0,en=Tt=tt=null,zd=!1,Ml=0,cu=null,u)throw Error(s(300));i===null||gn||(i=i.dependencies,i!==null&&Xd(i)&&(gn=!0))}function Wb(i,u,h,m){tt=i;var b=0;do{if(lu&&(cu=null),Ml=0,lu=!1,25<=b)throw Error(s(301));if(b+=1,en=Tt=null,i.updateQueue!=null){var C=i.updateQueue;C.lastEffect=null,C.events=null,C.stores=null,C.memoCache!=null&&(C.memoCache.index=0)}F.H=Gi,C=u(h,m)}while(lu);return C}function ak(){var i=F.H,u=i.useState()[0];return u=typeof u.then=="function"?Ul(u):u,i=i.useState()[0],(Tt!==null?Tt.memoizedState:null)!==i&&(tt.flags|=1024),u}function kp(){var i=Bd!==0;return Bd=0,i}function Rp(i,u,h){u.updateQueue=i.updateQueue,u.flags&=-2053,i.lanes&=~h}function Ip(i){if(zd){for(i=i.memoizedState;i!==null;){var u=i.queue;u!==null&&(u.pending=null),i=i.next}zd=!1}Da=0,en=Tt=tt=null,lu=!1,Ml=Bd=0,cu=null}function as(){var i={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return en===null?tt.memoizedState=en=i:en=en.next=i,en}function tn(){if(Tt===null){var i=tt.alternate;i=i!==null?i.memoizedState:null}else i=Tt.next;var u=en===null?tt.memoizedState:en.next;if(u!==null)en=u,Tt=i;else{if(i===null)throw tt.alternate===null?Error(s(467)):Error(s(310));Tt=i,i={memoizedState:Tt.memoizedState,baseState:Tt.baseState,baseQueue:Tt.baseQueue,queue:Tt.queue,next:null},en===null?tt.memoizedState=en=i:en=en.next=i}return en}var Md;Md=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}};function Ul(i){var u=Ml;return Ml+=1,cu===null&&(cu=[]),i=Ab(cu,i,u),u=tt,(en===null?u.memoizedState:en.next)===null&&(u=u.alternate,F.H=u===null||u.memoizedState===null?Wi:Oa),i}function Ud(i){if(i!==null&&typeof i=="object"){if(typeof i.then=="function")return Ul(i);if(i.$$typeof===y)return Ln(i)}throw Error(s(438,String(i)))}function _p(i){var u=null,h=tt.updateQueue;if(h!==null&&(u=h.memoCache),u==null){var m=tt.alternate;m!==null&&(m=m.updateQueue,m!==null&&(m=m.memoCache,m!=null&&(u={data:m.data.map(function(b){return b.slice()}),index:0})))}if(u==null&&(u={data:[],index:0}),h===null&&(h=Md(),tt.updateQueue=h),h.memoCache=u,h=u.data[u.index],h===void 0)for(h=u.data[u.index]=Array(i),m=0;m<i;m++)h[m]=_;return u.index++,h}function Hr(i,u){return typeof u=="function"?u(i):u}function Vd(i){var u=tn();return Ap(u,Tt,i)}function Ap(i,u,h){var m=i.queue;if(m===null)throw Error(s(311));m.lastRenderedReducer=h;var b=i.baseQueue,C=m.pending;if(C!==null){if(b!==null){var R=b.next;b.next=C.next,C.next=R}u.baseQueue=b=C,m.pending=null}if(C=i.baseState,b===null)i.memoizedState=C;else{u=b.next;var L=R=null,j=null,J=u,fe=!1;do{var xe=J.lane&-536870913;if(xe!==J.lane?(dt&xe)===xe:(Da&xe)===xe){var ae=J.revertLane;if(ae===0)j!==null&&(j=j.next={lane:0,revertLane:0,action:J.action,hasEagerState:J.hasEagerState,eagerState:J.eagerState,next:null}),xe===ou&&(fe=!0);else if((Da&ae)===ae){J=J.next,ae===ou&&(fe=!0);continue}else xe={lane:0,revertLane:J.revertLane,action:J.action,hasEagerState:J.hasEagerState,eagerState:J.eagerState,next:null},j===null?(L=j=xe,R=C):j=j.next=xe,tt.lanes|=ae,Wa|=ae;xe=J.action,Vi&&h(C,xe),C=J.hasEagerState?J.eagerState:h(C,xe)}else ae={lane:xe,revertLane:J.revertLane,action:J.action,hasEagerState:J.hasEagerState,eagerState:J.eagerState,next:null},j===null?(L=j=ae,R=C):j=j.next=ae,tt.lanes|=xe,Wa|=xe;J=J.next}while(J!==null&&J!==u);if(j===null?R=C:j.next=L,!ys(C,i.memoizedState)&&(gn=!0,fe&&(h=uu,h!==null)))throw h;i.memoizedState=C,i.baseState=R,i.baseQueue=j,m.lastRenderedState=C}return b===null&&(m.lanes=0),[i.memoizedState,m.dispatch]}function Dp(i){var u=tn(),h=u.queue;if(h===null)throw Error(s(311));h.lastRenderedReducer=i;var m=h.dispatch,b=h.pending,C=u.memoizedState;if(b!==null){h.pending=null;var R=b=b.next;do C=i(C,R.action),R=R.next;while(R!==b);ys(C,u.memoizedState)||(gn=!0),u.memoizedState=C,u.baseQueue===null&&(u.baseState=C),h.lastRenderedState=C}return[C,m]}function Gb(i,u,h){var m=tt,b=tn(),C=ht;if(C){if(h===void 0)throw Error(s(407));h=h()}else h=u();var R=!ys((Tt||b).memoizedState,h);if(R&&(b.memoizedState=h,gn=!0),b=b.queue,Fp(qb.bind(null,m,b,i),[i]),b.getSnapshot!==u||R||en!==null&&en.memoizedState.tag&1){if(m.flags|=2048,du(9,jb.bind(null,m,b,h,u),{destroy:void 0},null),At===null)throw Error(s(349));C||(Da&60)!==0||Hb(m,u,h)}return h}function Hb(i,u,h){i.flags|=16384,i={getSnapshot:u,value:h},u=tt.updateQueue,u===null?(u=Md(),tt.updateQueue=u,u.stores=[i]):(h=u.stores,h===null?u.stores=[i]:h.push(i))}function jb(i,u,h,m){u.value=h,u.getSnapshot=m,Xb(u)&&Kb(i)}function qb(i,u,h){return h(function(){Xb(u)&&Kb(i)})}function Xb(i){var u=i.getSnapshot;i=i.value;try{var h=u();return!ys(i,h)}catch{return!0}}function Kb(i){var u=Ia(i,2);u!==null&&Yn(u,i,2)}function Op(i){var u=as();if(typeof i=="function"){var h=i;if(i=h(),Vi){yr(!0);try{h()}finally{yr(!1)}}}return u.memoizedState=u.baseState=i,u.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Hr,lastRenderedState:i},u}function Yb(i,u,h,m){return i.baseState=h,Ap(i,Tt,typeof m=="function"?m:Hr)}function ik(i,u,h,m,b){if(Hd(i))throw Error(s(485));if(i=u.action,i!==null){var C={payload:b,action:i,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(R){C.listeners.push(R)}};F.T!==null?h(!0):C.isTransition=!1,m(C),h=u.pending,h===null?(C.next=u.pending=C,Qb(u,C)):(C.next=h.next,u.pending=h.next=C)}}function Qb(i,u){var h=u.action,m=u.payload,b=i.state;if(u.isTransition){var C=F.T,R={};F.T=R;try{var L=h(b,m),j=F.S;j!==null&&j(R,L),Zb(i,u,L)}catch(J){Pp(i,u,J)}finally{F.T=C}}else try{C=h(b,m),Zb(i,u,C)}catch(J){Pp(i,u,J)}}function Zb(i,u,h){h!==null&&typeof h=="object"&&typeof h.then=="function"?h.then(function(m){Jb(i,u,m)},function(m){return Pp(i,u,m)}):Jb(i,u,h)}function Jb(i,u,h){u.status="fulfilled",u.value=h,ev(u),i.state=h,u=i.pending,u!==null&&(h=u.next,h===u?i.pending=null:(h=h.next,u.next=h,Qb(i,h)))}function Pp(i,u,h){var m=i.pending;if(i.pending=null,m!==null){m=m.next;do u.status="rejected",u.reason=h,ev(u),u=u.next;while(u!==m)}i.action=null}function ev(i){i=i.listeners;for(var u=0;u<i.length;u++)(0,i[u])()}function tv(i,u){return u}function nv(i,u){if(ht){var h=At.formState;if(h!==null){e:{var m=tt;if(ht){if(Nn){t:{for(var b=Nn,C=vr;b.nodeType!==8;){if(!C){b=null;break t}if(b=lr(b.nextSibling),b===null){b=null;break t}}C=b.data,b=C==="F!"||C==="F"?b:null}if(b){Nn=lr(b.nextSibling),m=b.data==="F!";break e}}Bi(m)}m=!1}m&&(u=h[0])}}return h=as(),h.memoizedState=h.baseState=u,m={pending:null,lanes:0,dispatch:null,lastRenderedReducer:tv,lastRenderedState:u},h.queue=m,h=vv.bind(null,tt,m),m.dispatch=h,m=Op(!1),C=Up.bind(null,tt,!1,m.queue),m=as(),b={state:u,dispatch:null,action:i,pending:null},m.queue=b,h=ik.bind(null,tt,b,C,h),b.dispatch=h,m.memoizedState=i,[u,h,!1]}function sv(i){var u=tn();return rv(u,Tt,i)}function rv(i,u,h){u=Ap(i,u,tv)[0],i=Vd(Hr)[0],u=typeof u=="object"&&u!==null&&typeof u.then=="function"?Ul(u):u;var m=tn(),b=m.queue,C=b.dispatch;return h!==m.memoizedState&&(tt.flags|=2048,du(9,ok.bind(null,b,h),{destroy:void 0},null)),[u,C,i]}function ok(i,u){i.action=u}function av(i){var u=tn(),h=Tt;if(h!==null)return rv(u,h,i);tn(),u=u.memoizedState,h=tn();var m=h.queue.dispatch;return h.memoizedState=i,[u,m,!1]}function du(i,u,h,m){return i={tag:i,create:u,inst:h,deps:m,next:null},u=tt.updateQueue,u===null&&(u=Md(),tt.updateQueue=u),h=u.lastEffect,h===null?u.lastEffect=i.next=i:(m=h.next,h.next=i,i.next=m,u.lastEffect=i),i}function iv(){return tn().memoizedState}function Wd(i,u,h,m){var b=as();tt.flags|=i,b.memoizedState=du(1|u,h,{destroy:void 0},m===void 0?null:m)}function Gd(i,u,h,m){var b=tn();m=m===void 0?null:m;var C=b.memoizedState.inst;Tt!==null&&m!==null&&Np(m,Tt.memoizedState.deps)?b.memoizedState=du(u,h,C,m):(tt.flags|=i,b.memoizedState=du(1|u,h,C,m))}function ov(i,u){Wd(8390656,8,i,u)}function Fp(i,u){Gd(2048,8,i,u)}function uv(i,u){return Gd(4,2,i,u)}function lv(i,u){return Gd(4,4,i,u)}function cv(i,u){if(typeof u=="function"){i=i();var h=u(i);return function(){typeof h=="function"?h():u(null)}}if(u!=null)return i=i(),u.current=i,function(){u.current=null}}function dv(i,u,h){h=h!=null?h.concat([i]):null,Gd(4,4,cv.bind(null,u,i),h)}function Lp(){}function hv(i,u){var h=tn();u=u===void 0?null:u;var m=h.memoizedState;return u!==null&&Np(u,m[1])?m[0]:(h.memoizedState=[i,u],i)}function fv(i,u){var h=tn();u=u===void 0?null:u;var m=h.memoizedState;if(u!==null&&Np(u,m[1]))return m[0];if(m=i(),Vi){yr(!0);try{i()}finally{yr(!1)}}return h.memoizedState=[m,u],m}function zp(i,u,h){return h===void 0||(Da&1073741824)!==0?i.memoizedState=u:(i.memoizedState=h,i=m2(),tt.lanes|=i,Wa|=i,h)}function pv(i,u,h,m){return ys(h,u)?h:iu.current!==null?(i=zp(i,h,m),ys(i,u)||(gn=!0),i):(Da&42)===0?(gn=!0,i.memoizedState=h):(i=m2(),tt.lanes|=i,Wa|=i,u)}function mv(i,u,h,m,b){var C=ve.p;ve.p=C!==0&&8>C?C:8;var R=F.T,L={};F.T=L,Up(i,!1,u,h);try{var j=b(),J=F.S;if(J!==null&&J(L,j),j!==null&&typeof j=="object"&&typeof j.then=="function"){var fe=sk(j,m);Vl(i,u,fe,ws(i))}else Vl(i,u,m,ws(i))}catch(xe){Vl(i,u,{then:function(){},status:"rejected",reason:xe},ws())}finally{ve.p=C,F.T=R}}function uk(){}function Bp(i,u,h,m){if(i.tag!==5)throw Error(s(476));var b=gv(i).queue;mv(i,b,u,Xe,h===null?uk:function(){return yv(i),h(m)})}function gv(i){var u=i.memoizedState;if(u!==null)return u;u={memoizedState:Xe,baseState:Xe,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Hr,lastRenderedState:Xe},next:null};var h={};return u.next={memoizedState:h,baseState:h,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Hr,lastRenderedState:h},next:null},i.memoizedState=u,i=i.alternate,i!==null&&(i.memoizedState=u),u}function yv(i){var u=gv(i).next.queue;Vl(i,u,{},ws())}function Mp(){return Ln(uc)}function xv(){return tn().memoizedState}function bv(){return tn().memoizedState}function lk(i){for(var u=i.return;u!==null;){switch(u.tag){case 24:case 3:var h=ws();i=La(h);var m=za(u,i,h);m!==null&&(Yn(m,u,h),Hl(m,u,h)),u={cache:Cp()},i.payload=u;return}u=u.return}}function ck(i,u,h){var m=ws();h={lane:m,revertLane:0,action:h,hasEagerState:!1,eagerState:null,next:null},Hd(i)?wv(u,h):(h=gp(i,u,h,m),h!==null&&(Yn(h,i,m),Sv(h,u,m)))}function vv(i,u,h){var m=ws();Vl(i,u,h,m)}function Vl(i,u,h,m){var b={lane:m,revertLane:0,action:h,hasEagerState:!1,eagerState:null,next:null};if(Hd(i))wv(u,b);else{var C=i.alternate;if(i.lanes===0&&(C===null||C.lanes===0)&&(C=u.lastRenderedReducer,C!==null))try{var R=u.lastRenderedState,L=C(R,h);if(b.hasEagerState=!0,b.eagerState=L,ys(L,R))return kd(i,u,b,0),At===null&&Ed(),!1}catch{}finally{}if(h=gp(i,u,b,m),h!==null)return Yn(h,i,m),Sv(h,u,m),!0}return!1}function Up(i,u,h,m){if(m={lane:2,revertLane:Im(),action:m,hasEagerState:!1,eagerState:null,next:null},Hd(i)){if(u)throw Error(s(479))}else u=gp(i,h,m,2),u!==null&&Yn(u,i,2)}function Hd(i){var u=i.alternate;return i===tt||u!==null&&u===tt}function wv(i,u){lu=zd=!0;var h=i.pending;h===null?u.next=u:(u.next=h.next,h.next=u),i.pending=u}function Sv(i,u,h){if((h&4194176)!==0){var m=u.lanes;m&=i.pendingLanes,h|=m,u.lanes=h,Is(i,h)}}var Sr={readContext:Ln,use:Ud,useCallback:Yt,useContext:Yt,useEffect:Yt,useImperativeHandle:Yt,useLayoutEffect:Yt,useInsertionEffect:Yt,useMemo:Yt,useReducer:Yt,useRef:Yt,useState:Yt,useDebugValue:Yt,useDeferredValue:Yt,useTransition:Yt,useSyncExternalStore:Yt,useId:Yt};Sr.useCacheRefresh=Yt,Sr.useMemoCache=Yt,Sr.useHostTransitionStatus=Yt,Sr.useFormState=Yt,Sr.useActionState=Yt,Sr.useOptimistic=Yt;var Wi={readContext:Ln,use:Ud,useCallback:function(i,u){return as().memoizedState=[i,u===void 0?null:u],i},useContext:Ln,useEffect:ov,useImperativeHandle:function(i,u,h){h=h!=null?h.concat([i]):null,Wd(4194308,4,cv.bind(null,u,i),h)},useLayoutEffect:function(i,u){return Wd(4194308,4,i,u)},useInsertionEffect:function(i,u){Wd(4,2,i,u)},useMemo:function(i,u){var h=as();u=u===void 0?null:u;var m=i();if(Vi){yr(!0);try{i()}finally{yr(!1)}}return h.memoizedState=[m,u],m},useReducer:function(i,u,h){var m=as();if(h!==void 0){var b=h(u);if(Vi){yr(!0);try{h(u)}finally{yr(!1)}}}else b=u;return m.memoizedState=m.baseState=b,i={pending:null,lanes:0,dispatch:null,lastRenderedReducer:i,lastRenderedState:b},m.queue=i,i=i.dispatch=ck.bind(null,tt,i),[m.memoizedState,i]},useRef:function(i){var u=as();return i={current:i},u.memoizedState=i},useState:function(i){i=Op(i);var u=i.queue,h=vv.bind(null,tt,u);return u.dispatch=h,[i.memoizedState,h]},useDebugValue:Lp,useDeferredValue:function(i,u){var h=as();return zp(h,i,u)},useTransition:function(){var i=Op(!1);return i=mv.bind(null,tt,i.queue,!0,!1),as().memoizedState=i,[!1,i]},useSyncExternalStore:function(i,u,h){var m=tt,b=as();if(ht){if(h===void 0)throw Error(s(407));h=h()}else{if(h=u(),At===null)throw Error(s(349));(dt&60)!==0||Hb(m,u,h)}b.memoizedState=h;var C={value:h,getSnapshot:u};return b.queue=C,ov(qb.bind(null,m,C,i),[i]),m.flags|=2048,du(9,jb.bind(null,m,C,h,u),{destroy:void 0},null),h},useId:function(){var i=as(),u=At.identifierPrefix;if(ht){var h=Wr,m=Vr;h=(m&~(1<<32-On(m)-1)).toString(32)+h,u=":"+u+"R"+h,h=Bd++,0<h&&(u+="H"+h.toString(32)),u+=":"}else h=rk++,u=":"+u+"r"+h.toString(32)+":";return i.memoizedState=u},useCacheRefresh:function(){return as().memoizedState=lk.bind(null,tt)}};Wi.useMemoCache=_p,Wi.useHostTransitionStatus=Mp,Wi.useFormState=nv,Wi.useActionState=nv,Wi.useOptimistic=function(i){var u=as();u.memoizedState=u.baseState=i;var h={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return u.queue=h,u=Up.bind(null,tt,!0,h),h.dispatch=u,[i,u]};var Oa={readContext:Ln,use:Ud,useCallback:hv,useContext:Ln,useEffect:Fp,useImperativeHandle:dv,useInsertionEffect:uv,useLayoutEffect:lv,useMemo:fv,useReducer:Vd,useRef:iv,useState:function(){return Vd(Hr)},useDebugValue:Lp,useDeferredValue:function(i,u){var h=tn();return pv(h,Tt.memoizedState,i,u)},useTransition:function(){var i=Vd(Hr)[0],u=tn().memoizedState;return[typeof i=="boolean"?i:Ul(i),u]},useSyncExternalStore:Gb,useId:xv};Oa.useCacheRefresh=bv,Oa.useMemoCache=_p,Oa.useHostTransitionStatus=Mp,Oa.useFormState=sv,Oa.useActionState=sv,Oa.useOptimistic=function(i,u){var h=tn();return Yb(h,Tt,i,u)};var Gi={readContext:Ln,use:Ud,useCallback:hv,useContext:Ln,useEffect:Fp,useImperativeHandle:dv,useInsertionEffect:uv,useLayoutEffect:lv,useMemo:fv,useReducer:Dp,useRef:iv,useState:function(){return Dp(Hr)},useDebugValue:Lp,useDeferredValue:function(i,u){var h=tn();return Tt===null?zp(h,i,u):pv(h,Tt.memoizedState,i,u)},useTransition:function(){var i=Dp(Hr)[0],u=tn().memoizedState;return[typeof i=="boolean"?i:Ul(i),u]},useSyncExternalStore:Gb,useId:xv};Gi.useCacheRefresh=bv,Gi.useMemoCache=_p,Gi.useHostTransitionStatus=Mp,Gi.useFormState=av,Gi.useActionState=av,Gi.useOptimistic=function(i,u){var h=tn();return Tt!==null?Yb(h,Tt,i,u):(h.baseState=i,[i,h.queue.dispatch])};function Vp(i,u,h,m){u=i.memoizedState,h=h(m,u),h=h==null?u:B({},u,h),i.memoizedState=h,i.lanes===0&&(i.updateQueue.baseState=h)}var Wp={isMounted:function(i){return(i=i._reactInternals)?pe(i)===i:!1},enqueueSetState:function(i,u,h){i=i._reactInternals;var m=ws(),b=La(m);b.payload=u,h!=null&&(b.callback=h),u=za(i,b,m),u!==null&&(Yn(u,i,m),Hl(u,i,m))},enqueueReplaceState:function(i,u,h){i=i._reactInternals;var m=ws(),b=La(m);b.tag=1,b.payload=u,h!=null&&(b.callback=h),u=za(i,b,m),u!==null&&(Yn(u,i,m),Hl(u,i,m))},enqueueForceUpdate:function(i,u){i=i._reactInternals;var h=ws(),m=La(h);m.tag=2,u!=null&&(m.callback=u),u=za(i,m,h),u!==null&&(Yn(u,i,h),Hl(u,i,h))}};function Cv(i,u,h,m,b,C,R){return i=i.stateNode,typeof i.shouldComponentUpdate=="function"?i.shouldComponentUpdate(m,C,R):u.prototype&&u.prototype.isPureReactComponent?!Rl(h,m)||!Rl(b,C):!0}function $v(i,u,h,m){i=u.state,typeof u.componentWillReceiveProps=="function"&&u.componentWillReceiveProps(h,m),typeof u.UNSAFE_componentWillReceiveProps=="function"&&u.UNSAFE_componentWillReceiveProps(h,m),u.state!==i&&Wp.enqueueReplaceState(u,u.state,null)}function Hi(i,u){var h=u;if("ref"in u){h={};for(var m in u)m!=="ref"&&(h[m]=u[m])}if(i=i.defaultProps){h===u&&(h=B({},h));for(var b in i)h[b]===void 0&&(h[b]=i[b])}return h}var jd=typeof reportError=="function"?reportError:function(i){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var u=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof i=="object"&&i!==null&&typeof i.message=="string"?String(i.message):String(i),error:i});if(!window.dispatchEvent(u))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",i);return}console.error(i)};function Tv(i){jd(i)}function Nv(i){console.error(i)}function Ev(i){jd(i)}function qd(i,u){try{var h=i.onUncaughtError;h(u.value,{componentStack:u.stack})}catch(m){setTimeout(function(){throw m})}}function kv(i,u,h){try{var m=i.onCaughtError;m(h.value,{componentStack:h.stack,errorBoundary:u.tag===1?u.stateNode:null})}catch(b){setTimeout(function(){throw b})}}function Gp(i,u,h){return h=La(h),h.tag=3,h.payload={element:null},h.callback=function(){qd(i,u)},h}function Rv(i){return i=La(i),i.tag=3,i}function Iv(i,u,h,m){var b=h.type.getDerivedStateFromError;if(typeof b=="function"){var C=m.value;i.payload=function(){return b(C)},i.callback=function(){kv(u,h,m)}}var R=h.stateNode;R!==null&&typeof R.componentDidCatch=="function"&&(i.callback=function(){kv(u,h,m),typeof b!="function"&&(Ga===null?Ga=new Set([this]):Ga.add(this));var L=m.stack;this.componentDidCatch(m.value,{componentStack:L!==null?L:""})})}function dk(i,u,h,m,b){if(h.flags|=32768,m!==null&&typeof m=="object"&&typeof m.then=="function"){if(u=h.alternate,u!==null&&Gl(u,h,b,!0),h=zs.current,h!==null){switch(h.tag){case 13:return wr===null?Tm():h.alternate===null&&jt===0&&(jt=3),h.flags&=-257,h.flags|=65536,h.lanes=b,m===vp?h.flags|=16384:(u=h.updateQueue,u===null?h.updateQueue=new Set([m]):u.add(m),Em(i,m,b)),!1;case 22:return h.flags|=65536,m===vp?h.flags|=16384:(u=h.updateQueue,u===null?(u={transitions:null,markerInstances:null,retryQueue:new Set([m])},h.updateQueue=u):(h=u.retryQueue,h===null?u.retryQueue=new Set([m]):h.add(m)),Em(i,m,b)),!1}throw Error(s(435,h.tag))}return Em(i,m,b),Tm(),!1}if(ht)return u=zs.current,u!==null?((u.flags&65536)===0&&(u.flags|=256),u.flags|=65536,u.lanes=b,m!==bp&&(i=Error(s(422),{cause:m}),Dl(Ps(i,h)))):(m!==bp&&(u=Error(s(423),{cause:m}),Dl(Ps(u,h))),i=i.current.alternate,i.flags|=65536,b&=-b,i.lanes|=b,m=Ps(m,h),b=Gp(i.stateNode,m,b),am(i,b),jt!==4&&(jt=2)),!1;var C=Error(s(520),{cause:m});if(C=Ps(C,h),Jl===null?Jl=[C]:Jl.push(C),jt!==4&&(jt=2),u===null)return!0;m=Ps(m,h),h=u;do{switch(h.tag){case 3:return h.flags|=65536,i=b&-b,h.lanes|=i,i=Gp(h.stateNode,m,i),am(h,i),!1;case 1:if(u=h.type,C=h.stateNode,(h.flags&128)===0&&(typeof u.getDerivedStateFromError=="function"||C!==null&&typeof C.componentDidCatch=="function"&&(Ga===null||!Ga.has(C))))return h.flags|=65536,b&=-b,h.lanes|=b,b=Rv(b),Iv(b,i,h,m),am(h,b),!1}h=h.return}while(h!==null);return!1}var _v=Error(s(461)),gn=!1;function En(i,u,h,m){u.child=i===null?Fb(u,null,h,m):Mi(u,i.child,h,m)}function Av(i,u,h,m,b){h=h.render;var C=u.ref;if("ref"in m){var R={};for(var L in m)L!=="ref"&&(R[L]=m[L])}else R=m;return qi(u),m=Ep(i,u,h,R,C,b),L=kp(),i!==null&&!gn?(Rp(i,u,b),jr(i,u,b)):(ht&&L&&yp(u),u.flags|=1,En(i,u,m,b),u.child)}function Dv(i,u,h,m,b){if(i===null){var C=h.type;return typeof C=="function"&&!fm(C)&&C.defaultProps===void 0&&h.compare===null?(u.tag=15,u.type=C,Ov(i,u,C,m,b)):(i=Zd(h.type,null,m,u,u.mode,b),i.ref=u.ref,i.return=u,u.child=i)}if(C=i.child,!Jp(i,b)){var R=C.memoizedProps;if(h=h.compare,h=h!==null?h:Rl,h(R,m)&&i.ref===u.ref)return jr(i,u,b)}return u.flags|=1,i=Va(C,m),i.ref=u.ref,i.return=u,u.child=i}function Ov(i,u,h,m,b){if(i!==null){var C=i.memoizedProps;if(Rl(C,m)&&i.ref===u.ref)if(gn=!1,u.pendingProps=m=C,Jp(i,b))(i.flags&131072)!==0&&(gn=!0);else return u.lanes=i.lanes,jr(i,u,b)}return Hp(i,u,h,m,b)}function Pv(i,u,h){var m=u.pendingProps,b=m.children,C=(u.stateNode._pendingVisibility&2)!==0,R=i!==null?i.memoizedState:null;if(Wl(i,u),m.mode==="hidden"||C){if((u.flags&128)!==0){if(m=R!==null?R.baseLanes|h:h,i!==null){for(b=u.child=i.child,C=0;b!==null;)C=C|b.lanes|b.childLanes,b=b.sibling;u.childLanes=C&~m}else u.childLanes=0,u.child=null;return Fv(i,u,m,h)}if((h&536870912)!==0)u.memoizedState={baseLanes:0,cachePool:null},i!==null&&Ld(u,R!==null?R.cachePool:null),R!==null?Lb(u,R):wp(),zb(u);else return u.lanes=u.childLanes=536870912,Fv(i,u,R!==null?R.baseLanes|h:h,h)}else R!==null?(Ld(u,R.cachePool),Lb(u,R),Aa(),u.memoizedState=null):(i!==null&&Ld(u,null),wp(),Aa());return En(i,u,b,h),u.child}function Fv(i,u,h,m){var b=Tp();return b=b===null?null:{parent:ln._currentValue,pool:b},u.memoizedState={baseLanes:h,cachePool:b},i!==null&&Ld(u,null),wp(),zb(u),i!==null&&Gl(i,u,m,!0),null}function Wl(i,u){var h=u.ref;if(h===null)i!==null&&i.ref!==null&&(u.flags|=2097664);else{if(typeof h!="function"&&typeof h!="object")throw Error(s(284));(i===null||i.ref!==h)&&(u.flags|=2097664)}}function Hp(i,u,h,m,b){return qi(u),h=Ep(i,u,h,m,void 0,b),m=kp(),i!==null&&!gn?(Rp(i,u,b),jr(i,u,b)):(ht&&m&&yp(u),u.flags|=1,En(i,u,h,b),u.child)}function Lv(i,u,h,m,b,C){return qi(u),u.updateQueue=null,h=Wb(u,m,h,b),Vb(i),m=kp(),i!==null&&!gn?(Rp(i,u,C),jr(i,u,C)):(ht&&m&&yp(u),u.flags|=1,En(i,u,h,C),u.child)}function zv(i,u,h,m,b){if(qi(u),u.stateNode===null){var C=nu,R=h.contextType;typeof R=="object"&&R!==null&&(C=Ln(R)),C=new h(m,C),u.memoizedState=C.state!==null&&C.state!==void 0?C.state:null,C.updater=Wp,u.stateNode=C,C._reactInternals=u,C=u.stateNode,C.props=m,C.state=u.memoizedState,C.refs={},sm(u),R=h.contextType,C.context=typeof R=="object"&&R!==null?Ln(R):nu,C.state=u.memoizedState,R=h.getDerivedStateFromProps,typeof R=="function"&&(Vp(u,h,R,m),C.state=u.memoizedState),typeof h.getDerivedStateFromProps=="function"||typeof C.getSnapshotBeforeUpdate=="function"||typeof C.UNSAFE_componentWillMount!="function"&&typeof C.componentWillMount!="function"||(R=C.state,typeof C.componentWillMount=="function"&&C.componentWillMount(),typeof C.UNSAFE_componentWillMount=="function"&&C.UNSAFE_componentWillMount(),R!==C.state&&Wp.enqueueReplaceState(C,C.state,null),ql(u,m,C,b),jl(),C.state=u.memoizedState),typeof C.componentDidMount=="function"&&(u.flags|=4194308),m=!0}else if(i===null){C=u.stateNode;var L=u.memoizedProps,j=Hi(h,L);C.props=j;var J=C.context,fe=h.contextType;R=nu,typeof fe=="object"&&fe!==null&&(R=Ln(fe));var xe=h.getDerivedStateFromProps;fe=typeof xe=="function"||typeof C.getSnapshotBeforeUpdate=="function",L=u.pendingProps!==L,fe||typeof C.UNSAFE_componentWillReceiveProps!="function"&&typeof C.componentWillReceiveProps!="function"||(L||J!==R)&&$v(u,C,m,R),Fa=!1;var ae=u.memoizedState;C.state=ae,ql(u,m,C,b),jl(),J=u.memoizedState,L||ae!==J||Fa?(typeof xe=="function"&&(Vp(u,h,xe,m),J=u.memoizedState),(j=Fa||Cv(u,h,j,m,ae,J,R))?(fe||typeof C.UNSAFE_componentWillMount!="function"&&typeof C.componentWillMount!="function"||(typeof C.componentWillMount=="function"&&C.componentWillMount(),typeof C.UNSAFE_componentWillMount=="function"&&C.UNSAFE_componentWillMount()),typeof C.componentDidMount=="function"&&(u.flags|=4194308)):(typeof C.componentDidMount=="function"&&(u.flags|=4194308),u.memoizedProps=m,u.memoizedState=J),C.props=m,C.state=J,C.context=R,m=j):(typeof C.componentDidMount=="function"&&(u.flags|=4194308),m=!1)}else{C=u.stateNode,rm(i,u),R=u.memoizedProps,fe=Hi(h,R),C.props=fe,xe=u.pendingProps,ae=C.context,J=h.contextType,j=nu,typeof J=="object"&&J!==null&&(j=Ln(J)),L=h.getDerivedStateFromProps,(J=typeof L=="function"||typeof C.getSnapshotBeforeUpdate=="function")||typeof C.UNSAFE_componentWillReceiveProps!="function"&&typeof C.componentWillReceiveProps!="function"||(R!==xe||ae!==j)&&$v(u,C,m,j),Fa=!1,ae=u.memoizedState,C.state=ae,ql(u,m,C,b),jl();var ce=u.memoizedState;R!==xe||ae!==ce||Fa||i!==null&&i.dependencies!==null&&Xd(i.dependencies)?(typeof L=="function"&&(Vp(u,h,L,m),ce=u.memoizedState),(fe=Fa||Cv(u,h,fe,m,ae,ce,j)||i!==null&&i.dependencies!==null&&Xd(i.dependencies))?(J||typeof C.UNSAFE_componentWillUpdate!="function"&&typeof C.componentWillUpdate!="function"||(typeof C.componentWillUpdate=="function"&&C.componentWillUpdate(m,ce,j),typeof C.UNSAFE_componentWillUpdate=="function"&&C.UNSAFE_componentWillUpdate(m,ce,j)),typeof C.componentDidUpdate=="function"&&(u.flags|=4),typeof C.getSnapshotBeforeUpdate=="function"&&(u.flags|=1024)):(typeof C.componentDidUpdate!="function"||R===i.memoizedProps&&ae===i.memoizedState||(u.flags|=4),typeof C.getSnapshotBeforeUpdate!="function"||R===i.memoizedProps&&ae===i.memoizedState||(u.flags|=1024),u.memoizedProps=m,u.memoizedState=ce),C.props=m,C.state=ce,C.context=j,m=fe):(typeof C.componentDidUpdate!="function"||R===i.memoizedProps&&ae===i.memoizedState||(u.flags|=4),typeof C.getSnapshotBeforeUpdate!="function"||R===i.memoizedProps&&ae===i.memoizedState||(u.flags|=1024),m=!1)}return C=m,Wl(i,u),m=(u.flags&128)!==0,C||m?(C=u.stateNode,h=m&&typeof h.getDerivedStateFromError!="function"?null:C.render(),u.flags|=1,i!==null&&m?(u.child=Mi(u,i.child,null,b),u.child=Mi(u,null,h,b)):En(i,u,h,b),u.memoizedState=C.state,i=u.child):i=jr(i,u,b),i}function Bv(i,u,h,m){return Al(),u.flags|=256,En(i,u,h,m),u.child}var jp={dehydrated:null,treeContext:null,retryLane:0};function qp(i){return{baseLanes:i,cachePool:Ub()}}function Xp(i,u,h){return i=i!==null?i.childLanes&~h:0,u&&(i|=Vs),i}function Mv(i,u,h){var m=u.pendingProps,b=!1,C=(u.flags&128)!==0,R;if((R=C)||(R=i!==null&&i.memoizedState===null?!1:(un.current&2)!==0),R&&(b=!0,u.flags&=-129),R=(u.flags&32)!==0,u.flags&=-33,i===null){if(ht){if(b?_a(u):Aa(),ht){var L=Nn,j;if(j=L){e:{for(j=L,L=vr;j.nodeType!==8;){if(!L){L=null;break e}if(j=lr(j.nextSibling),j===null){L=null;break e}}L=j}L!==null?(u.memoizedState={dehydrated:L,treeContext:Li!==null?{id:Vr,overflow:Wr}:null,retryLane:536870912},j=Us(18,null,null,0),j.stateNode=L,j.return=u,u.child=j,Kn=u,Nn=null,j=!0):j=!1}j||Bi(u)}if(L=u.memoizedState,L!==null&&(L=L.dehydrated,L!==null))return L.data==="$!"?u.lanes=16:u.lanes=536870912,null;Gr(u)}return L=m.children,m=m.fallback,b?(Aa(),b=u.mode,L=Yp({mode:"hidden",children:L},b),m=Ki(m,b,h,null),L.return=u,m.return=u,L.sibling=m,u.child=L,b=u.child,b.memoizedState=qp(h),b.childLanes=Xp(i,R,h),u.memoizedState=jp,m):(_a(u),Kp(u,L))}if(j=i.memoizedState,j!==null&&(L=j.dehydrated,L!==null)){if(C)u.flags&256?(_a(u),u.flags&=-257,u=Qp(i,u,h)):u.memoizedState!==null?(Aa(),u.child=i.child,u.flags|=128,u=null):(Aa(),b=m.fallback,L=u.mode,m=Yp({mode:"visible",children:m.children},L),b=Ki(b,L,h,null),b.flags|=2,m.return=u,b.return=u,m.sibling=b,u.child=m,Mi(u,i.child,null,h),m=u.child,m.memoizedState=qp(h),m.childLanes=Xp(i,R,h),u.memoizedState=jp,u=b);else if(_a(u),L.data==="$!"){if(R=L.nextSibling&&L.nextSibling.dataset,R)var J=R.dgst;R=J,m=Error(s(419)),m.stack="",m.digest=R,Dl({value:m,source:null,stack:null}),u=Qp(i,u,h)}else if(gn||Gl(i,u,h,!1),R=(h&i.childLanes)!==0,gn||R){if(R=At,R!==null){if(m=h&-h,(m&42)!==0)m=1;else switch(m){case 2:m=1;break;case 8:m=4;break;case 32:m=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:m=64;break;case 268435456:m=134217728;break;default:m=0}if(m=(m&(R.suspendedLanes|h))!==0?0:m,m!==0&&m!==j.retryLane)throw j.retryLane=m,Ia(i,m),Yn(R,i,m),_v}L.data==="$?"||Tm(),u=Qp(i,u,h)}else L.data==="$?"?(u.flags|=128,u.child=i.child,u=Nk.bind(null,i),L._reactRetry=u,u=null):(i=j.treeContext,Nn=lr(L.nextSibling),Kn=u,ht=!0,or=null,vr=!1,i!==null&&(Fs[Ls++]=Vr,Fs[Ls++]=Wr,Fs[Ls++]=Li,Vr=i.id,Wr=i.overflow,Li=u),u=Kp(u,m.children),u.flags|=4096);return u}return b?(Aa(),b=m.fallback,L=u.mode,j=i.child,J=j.sibling,m=Va(j,{mode:"hidden",children:m.children}),m.subtreeFlags=j.subtreeFlags&31457280,J!==null?b=Va(J,b):(b=Ki(b,L,h,null),b.flags|=2),b.return=u,m.return=u,m.sibling=b,u.child=m,m=b,b=u.child,L=i.child.memoizedState,L===null?L=qp(h):(j=L.cachePool,j!==null?(J=ln._currentValue,j=j.parent!==J?{parent:J,pool:J}:j):j=Ub(),L={baseLanes:L.baseLanes|h,cachePool:j}),b.memoizedState=L,b.childLanes=Xp(i,R,h),u.memoizedState=jp,m):(_a(u),h=i.child,i=h.sibling,h=Va(h,{mode:"visible",children:m.children}),h.return=u,h.sibling=null,i!==null&&(R=u.deletions,R===null?(u.deletions=[i],u.flags|=16):R.push(i)),u.child=h,u.memoizedState=null,h)}function Kp(i,u){return u=Yp({mode:"visible",children:u},i.mode),u.return=i,i.child=u}function Yp(i,u){return h2(i,u,0,null)}function Qp(i,u,h){return Mi(u,i.child,null,h),i=Kp(u,u.pendingProps.children),i.flags|=2,u.memoizedState=null,i}function Uv(i,u,h){i.lanes|=u;var m=i.alternate;m!==null&&(m.lanes|=u),tm(i.return,u,h)}function Zp(i,u,h,m,b){var C=i.memoizedState;C===null?i.memoizedState={isBackwards:u,rendering:null,renderingStartTime:0,last:m,tail:h,tailMode:b}:(C.isBackwards=u,C.rendering=null,C.renderingStartTime=0,C.last=m,C.tail=h,C.tailMode=b)}function Vv(i,u,h){var m=u.pendingProps,b=m.revealOrder,C=m.tail;if(En(i,u,m.children,h),m=un.current,(m&2)!==0)m=m&1|2,u.flags|=128;else{if(i!==null&&(i.flags&128)!==0)e:for(i=u.child;i!==null;){if(i.tag===13)i.memoizedState!==null&&Uv(i,h,u);else if(i.tag===19)Uv(i,h,u);else if(i.child!==null){i.child.return=i,i=i.child;continue}if(i===u)break e;for(;i.sibling===null;){if(i.return===null||i.return===u)break e;i=i.return}i.sibling.return=i.return,i=i.sibling}m&=1}switch(mt(un,m),b){case"forwards":for(h=u.child,b=null;h!==null;)i=h.alternate,i!==null&&Fd(i)===null&&(b=h),h=h.sibling;h=b,h===null?(b=u.child,u.child=null):(b=h.sibling,h.sibling=null),Zp(u,!1,b,h,C);break;case"backwards":for(h=null,b=u.child,u.child=null;b!==null;){if(i=b.alternate,i!==null&&Fd(i)===null){u.child=b;break}i=b.sibling,b.sibling=h,h=b,b=i}Zp(u,!0,h,null,C);break;case"together":Zp(u,!1,null,null,void 0);break;default:u.memoizedState=null}return u.child}function jr(i,u,h){if(i!==null&&(u.dependencies=i.dependencies),Wa|=u.lanes,(h&u.childLanes)===0)if(i!==null){if(Gl(i,u,h,!1),(h&u.childLanes)===0)return null}else return null;if(i!==null&&u.child!==i.child)throw Error(s(153));if(u.child!==null){for(i=u.child,h=Va(i,i.pendingProps),u.child=h,h.return=u;i.sibling!==null;)i=i.sibling,h=h.sibling=Va(i,i.pendingProps),h.return=u;h.sibling=null}return u.child}function Jp(i,u){return(i.lanes&u)!==0?!0:(i=i.dependencies,!!(i!==null&&Xd(i)))}function hk(i,u,h){switch(u.tag){case 3:mi(u,u.stateNode.containerInfo),Pa(u,ln,i.memoizedState.cache),Al();break;case 27:case 5:Oo(u);break;case 4:mi(u,u.stateNode.containerInfo);break;case 10:Pa(u,u.type,u.memoizedProps.value);break;case 13:var m=u.memoizedState;if(m!==null)return m.dehydrated!==null?(_a(u),u.flags|=128,null):(h&u.child.childLanes)!==0?Mv(i,u,h):(_a(u),i=jr(i,u,h),i!==null?i.sibling:null);_a(u);break;case 19:var b=(i.flags&128)!==0;if(m=(h&u.childLanes)!==0,m||(Gl(i,u,h,!1),m=(h&u.childLanes)!==0),b){if(m)return Vv(i,u,h);u.flags|=128}if(b=u.memoizedState,b!==null&&(b.rendering=null,b.tail=null,b.lastEffect=null),mt(un,un.current),m)break;return null;case 22:case 23:return u.lanes=0,Pv(i,u,h);case 24:Pa(u,ln,i.memoizedState.cache)}return jr(i,u,h)}function Wv(i,u,h){if(i!==null)if(i.memoizedProps!==u.pendingProps)gn=!0;else{if(!Jp(i,h)&&(u.flags&128)===0)return gn=!1,hk(i,u,h);gn=(i.flags&131072)!==0}else gn=!1,ht&&(u.flags&1048576)!==0&&Eb(u,_d,u.index);switch(u.lanes=0,u.tag){case 16:e:{i=u.pendingProps;var m=u.elementType,b=m._init;if(m=b(m._payload),u.type=m,typeof m=="function")fm(m)?(i=Hi(m,i),u.tag=1,u=zv(null,u,m,i,h)):(u.tag=0,u=Hp(null,u,m,i,h));else{if(m!=null){if(b=m.$$typeof,b===x){u.tag=11,u=Av(null,u,m,i,h);break e}else if(b===$){u.tag=14,u=Dv(null,u,m,i,h);break e}}throw u=G(m)||m,Error(s(306,u,""))}}return u;case 0:return Hp(i,u,u.type,u.pendingProps,h);case 1:return m=u.type,b=Hi(m,u.pendingProps),zv(i,u,m,b,h);case 3:e:{if(mi(u,u.stateNode.containerInfo),i===null)throw Error(s(387));var C=u.pendingProps;b=u.memoizedState,m=b.element,rm(i,u),ql(u,C,null,h);var R=u.memoizedState;if(C=R.cache,Pa(u,ln,C),C!==b.cache&&nm(u,[ln],h,!0),jl(),C=R.element,b.isDehydrated)if(b={element:C,isDehydrated:!1,cache:R.cache},u.updateQueue.baseState=b,u.memoizedState=b,u.flags&256){u=Bv(i,u,C,h);break e}else if(C!==m){m=Ps(Error(s(424)),u),Dl(m),u=Bv(i,u,C,h);break e}else for(Nn=lr(u.stateNode.containerInfo.firstChild),Kn=u,ht=!0,or=null,vr=!0,h=Fb(u,null,C,h),u.child=h;h;)h.flags=h.flags&-3|4096,h=h.sibling;else{if(Al(),C===m){u=jr(i,u,h);break e}En(i,u,C,h)}u=u.child}return u;case 26:return Wl(i,u),i===null?(h=j2(u.type,null,u.pendingProps,null))?u.memoizedState=h:ht||(h=u.type,i=u.pendingProps,m=ch(Ct.current).createElement(h),m[Jt]=u,m[Pn]=i,kn(m,h,i),Wt(m),u.stateNode=m):u.memoizedState=j2(u.type,i.memoizedProps,u.pendingProps,i.memoizedState),null;case 27:return Oo(u),i===null&&ht&&(m=u.stateNode=W2(u.type,u.pendingProps,Ct.current),Kn=u,vr=!0,Nn=lr(m.firstChild)),m=u.pendingProps.children,i!==null||ht?En(i,u,m,h):u.child=Mi(u,null,m,h),Wl(i,u),u.child;case 5:return i===null&&ht&&((b=m=Nn)&&(m=Vk(m,u.type,u.pendingProps,vr),m!==null?(u.stateNode=m,Kn=u,Nn=lr(m.firstChild),vr=!1,b=!0):b=!1),b||Bi(u)),Oo(u),b=u.type,C=u.pendingProps,R=i!==null?i.memoizedProps:null,m=C.children,Bm(b,C)?m=null:R!==null&&Bm(b,R)&&(u.flags|=32),u.memoizedState!==null&&(b=Ep(i,u,ak,null,null,h),uc._currentValue=b),Wl(i,u),En(i,u,m,h),u.child;case 6:return i===null&&ht&&((i=h=Nn)&&(h=Wk(h,u.pendingProps,vr),h!==null?(u.stateNode=h,Kn=u,Nn=null,i=!0):i=!1),i||Bi(u)),null;case 13:return Mv(i,u,h);case 4:return mi(u,u.stateNode.containerInfo),m=u.pendingProps,i===null?u.child=Mi(u,null,m,h):En(i,u,m,h),u.child;case 11:return Av(i,u,u.type,u.pendingProps,h);case 7:return En(i,u,u.pendingProps,h),u.child;case 8:return En(i,u,u.pendingProps.children,h),u.child;case 12:return En(i,u,u.pendingProps.children,h),u.child;case 10:return m=u.pendingProps,Pa(u,u.type,m.value),En(i,u,m.children,h),u.child;case 9:return b=u.type._context,m=u.pendingProps.children,qi(u),b=Ln(b),m=m(b),u.flags|=1,En(i,u,m,h),u.child;case 14:return Dv(i,u,u.type,u.pendingProps,h);case 15:return Ov(i,u,u.type,u.pendingProps,h);case 19:return Vv(i,u,h);case 22:return Pv(i,u,h);case 24:return qi(u),m=Ln(ln),i===null?(b=Tp(),b===null&&(b=At,C=Cp(),b.pooledCache=C,C.refCount++,C!==null&&(b.pooledCacheLanes|=h),b=C),u.memoizedState={parent:m,cache:b},sm(u),Pa(u,ln,b)):((i.lanes&h)!==0&&(rm(i,u),ql(u,null,null,h),jl()),b=i.memoizedState,C=u.memoizedState,b.parent!==m?(b={parent:m,cache:m},u.memoizedState=b,u.lanes===0&&(u.memoizedState=u.updateQueue.baseState=b),Pa(u,ln,m)):(m=C.cache,Pa(u,ln,m),m!==b.cache&&nm(u,[ln],h,!0))),En(i,u,u.pendingProps.children,h),u.child;case 29:throw u.pendingProps}throw Error(s(156,u.tag))}var em=nt(null),ji=null,qr=null;function Pa(i,u,h){mt(em,u._currentValue),u._currentValue=h}function Xr(i){i._currentValue=em.current,Rt(em)}function tm(i,u,h){for(;i!==null;){var m=i.alternate;if((i.childLanes&u)!==u?(i.childLanes|=u,m!==null&&(m.childLanes|=u)):m!==null&&(m.childLanes&u)!==u&&(m.childLanes|=u),i===h)break;i=i.return}}function nm(i,u,h,m){var b=i.child;for(b!==null&&(b.return=i);b!==null;){var C=b.dependencies;if(C!==null){var R=b.child;C=C.firstContext;e:for(;C!==null;){var L=C;C=b;for(var j=0;j<u.length;j++)if(L.context===u[j]){C.lanes|=h,L=C.alternate,L!==null&&(L.lanes|=h),tm(C.return,h,i),m||(R=null);break e}C=L.next}}else if(b.tag===18){if(R=b.return,R===null)throw Error(s(341));R.lanes|=h,C=R.alternate,C!==null&&(C.lanes|=h),tm(R,h,i),R=null}else R=b.child;if(R!==null)R.return=b;else for(R=b;R!==null;){if(R===i){R=null;break}if(b=R.sibling,b!==null){b.return=R.return,R=b;break}R=R.return}b=R}}function Gl(i,u,h,m){i=null;for(var b=u,C=!1;b!==null;){if(!C){if((b.flags&524288)!==0)C=!0;else if((b.flags&262144)!==0)break}if(b.tag===10){var R=b.alternate;if(R===null)throw Error(s(387));if(R=R.memoizedProps,R!==null){var L=b.type;ys(b.pendingProps.value,R.value)||(i!==null?i.push(L):i=[L])}}else if(b===Zt.current){if(R=b.alternate,R===null)throw Error(s(387));R.memoizedState.memoizedState!==b.memoizedState.memoizedState&&(i!==null?i.push(uc):i=[uc])}b=b.return}i!==null&&nm(u,i,h,m),u.flags|=262144}function Xd(i){for(i=i.firstContext;i!==null;){if(!ys(i.context._currentValue,i.memoizedValue))return!0;i=i.next}return!1}function qi(i){ji=i,qr=null,i=i.dependencies,i!==null&&(i.firstContext=null)}function Ln(i){return Gv(ji,i)}function Kd(i,u){return ji===null&&qi(i),Gv(i,u)}function Gv(i,u){var h=u._currentValue;if(u={context:u,memoizedValue:h,next:null},qr===null){if(i===null)throw Error(s(308));qr=u,i.dependencies={lanes:0,firstContext:u},i.flags|=524288}else qr=qr.next=u;return h}var Fa=!1;function sm(i){i.updateQueue={baseState:i.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function rm(i,u){i=i.updateQueue,u.updateQueue===i&&(u.updateQueue={baseState:i.baseState,firstBaseUpdate:i.firstBaseUpdate,lastBaseUpdate:i.lastBaseUpdate,shared:i.shared,callbacks:null})}function La(i){return{lane:i,tag:0,payload:null,callback:null,next:null}}function za(i,u,h){var m=i.updateQueue;if(m===null)return null;if(m=m.shared,(Bt&2)!==0){var b=m.pending;return b===null?u.next=u:(u.next=b.next,b.next=u),m.pending=u,u=Rd(i),Tb(i,null,h),u}return kd(i,m,u,h),Rd(i)}function Hl(i,u,h){if(u=u.updateQueue,u!==null&&(u=u.shared,(h&4194176)!==0)){var m=u.lanes;m&=i.pendingLanes,h|=m,u.lanes=h,Is(i,h)}}function am(i,u){var h=i.updateQueue,m=i.alternate;if(m!==null&&(m=m.updateQueue,h===m)){var b=null,C=null;if(h=h.firstBaseUpdate,h!==null){do{var R={lane:h.lane,tag:h.tag,payload:h.payload,callback:null,next:null};C===null?b=C=R:C=C.next=R,h=h.next}while(h!==null);C===null?b=C=u:C=C.next=u}else b=C=u;h={baseState:m.baseState,firstBaseUpdate:b,lastBaseUpdate:C,shared:m.shared,callbacks:m.callbacks},i.updateQueue=h;return}i=h.lastBaseUpdate,i===null?h.firstBaseUpdate=u:i.next=u,h.lastBaseUpdate=u}var im=!1;function jl(){if(im){var i=uu;if(i!==null)throw i}}function ql(i,u,h,m){im=!1;var b=i.updateQueue;Fa=!1;var C=b.firstBaseUpdate,R=b.lastBaseUpdate,L=b.shared.pending;if(L!==null){b.shared.pending=null;var j=L,J=j.next;j.next=null,R===null?C=J:R.next=J,R=j;var fe=i.alternate;fe!==null&&(fe=fe.updateQueue,L=fe.lastBaseUpdate,L!==R&&(L===null?fe.firstBaseUpdate=J:L.next=J,fe.lastBaseUpdate=j))}if(C!==null){var xe=b.baseState;R=0,fe=J=j=null,L=C;do{var ae=L.lane&-536870913,ce=ae!==L.lane;if(ce?(dt&ae)===ae:(m&ae)===ae){ae!==0&&ae===ou&&(im=!0),fe!==null&&(fe=fe.next={lane:0,tag:L.tag,payload:L.payload,callback:null,next:null});e:{var Le=i,qe=L;ae=u;var qt=h;switch(qe.tag){case 1:if(Le=qe.payload,typeof Le=="function"){xe=Le.call(qt,xe,ae);break e}xe=Le;break e;case 3:Le.flags=Le.flags&-65537|128;case 0:if(Le=qe.payload,ae=typeof Le=="function"?Le.call(qt,xe,ae):Le,ae==null)break e;xe=B({},xe,ae);break e;case 2:Fa=!0}}ae=L.callback,ae!==null&&(i.flags|=64,ce&&(i.flags|=8192),ce=b.callbacks,ce===null?b.callbacks=[ae]:ce.push(ae))}else ce={lane:ae,tag:L.tag,payload:L.payload,callback:L.callback,next:null},fe===null?(J=fe=ce,j=xe):fe=fe.next=ce,R|=ae;if(L=L.next,L===null){if(L=b.shared.pending,L===null)break;ce=L,L=ce.next,ce.next=null,b.lastBaseUpdate=ce,b.shared.pending=null}}while(!0);fe===null&&(j=xe),b.baseState=j,b.firstBaseUpdate=J,b.lastBaseUpdate=fe,C===null&&(b.shared.lanes=0),Wa|=R,i.lanes=R,i.memoizedState=xe}}function Hv(i,u){if(typeof i!="function")throw Error(s(191,i));i.call(u)}function jv(i,u){var h=i.callbacks;if(h!==null)for(i.callbacks=null,i=0;i<h.length;i++)Hv(h[i],u)}function Xl(i,u){try{var h=u.updateQueue,m=h!==null?h.lastEffect:null;if(m!==null){var b=m.next;h=b;do{if((h.tag&i)===i){m=void 0;var C=h.create,R=h.inst;m=C(),R.destroy=m}h=h.next}while(h!==b)}}catch(L){It(u,u.return,L)}}function Ba(i,u,h){try{var m=u.updateQueue,b=m!==null?m.lastEffect:null;if(b!==null){var C=b.next;m=C;do{if((m.tag&i)===i){var R=m.inst,L=R.destroy;if(L!==void 0){R.destroy=void 0,b=u;var j=h;try{L()}catch(J){It(b,j,J)}}}m=m.next}while(m!==C)}}catch(J){It(u,u.return,J)}}function qv(i){var u=i.updateQueue;if(u!==null){var h=i.stateNode;try{jv(u,h)}catch(m){It(i,i.return,m)}}}function Xv(i,u,h){h.props=Hi(i.type,i.memoizedProps),h.state=i.memoizedState;try{h.componentWillUnmount()}catch(m){It(i,u,m)}}function Xi(i,u){try{var h=i.ref;if(h!==null){var m=i.stateNode;switch(i.tag){case 26:case 27:case 5:var b=m;break;default:b=m}typeof h=="function"?i.refCleanup=h(b):h.current=b}}catch(C){It(i,u,C)}}function xs(i,u){var h=i.ref,m=i.refCleanup;if(h!==null)if(typeof m=="function")try{m()}catch(b){It(i,u,b)}finally{i.refCleanup=null,i=i.alternate,i!=null&&(i.refCleanup=null)}else if(typeof h=="function")try{h(null)}catch(b){It(i,u,b)}else h.current=null}function Kv(i){var u=i.type,h=i.memoizedProps,m=i.stateNode;try{e:switch(u){case"button":case"input":case"select":case"textarea":h.autoFocus&&m.focus();break e;case"img":h.src?m.src=h.src:h.srcSet&&(m.srcset=h.srcSet)}}catch(b){It(i,i.return,b)}}function Yv(i,u,h){try{var m=i.stateNode;Lk(m,i.type,h,u),m[Pn]=u}catch(b){It(i,i.return,b)}}function Qv(i){return i.tag===5||i.tag===3||i.tag===26||i.tag===27||i.tag===4}function om(i){e:for(;;){for(;i.sibling===null;){if(i.return===null||Qv(i.return))return null;i=i.return}for(i.sibling.return=i.return,i=i.sibling;i.tag!==5&&i.tag!==6&&i.tag!==27&&i.tag!==18;){if(i.flags&2||i.child===null||i.tag===4)continue e;i.child.return=i,i=i.child}if(!(i.flags&2))return i.stateNode}}function um(i,u,h){var m=i.tag;if(m===5||m===6)i=i.stateNode,u?h.nodeType===8?h.parentNode.insertBefore(i,u):h.insertBefore(i,u):(h.nodeType===8?(u=h.parentNode,u.insertBefore(i,h)):(u=h,u.appendChild(i)),h=h._reactRootContainer,h!=null||u.onclick!==null||(u.onclick=lh));else if(m!==4&&m!==27&&(i=i.child,i!==null))for(um(i,u,h),i=i.sibling;i!==null;)um(i,u,h),i=i.sibling}function Yd(i,u,h){var m=i.tag;if(m===5||m===6)i=i.stateNode,u?h.insertBefore(i,u):h.appendChild(i);else if(m!==4&&m!==27&&(i=i.child,i!==null))for(Yd(i,u,h),i=i.sibling;i!==null;)Yd(i,u,h),i=i.sibling}var Kr=!1,Ht=!1,lm=!1,Zv=typeof WeakSet=="function"?WeakSet:Set,yn=null,Jv=!1;function fk(i,u){if(i=i.containerInfo,Lm=gh,i=gb(i),dp(i)){if("selectionStart"in i)var h={start:i.selectionStart,end:i.selectionEnd};else e:{h=(h=i.ownerDocument)&&h.defaultView||window;var m=h.getSelection&&h.getSelection();if(m&&m.rangeCount!==0){h=m.anchorNode;var b=m.anchorOffset,C=m.focusNode;m=m.focusOffset;try{h.nodeType,C.nodeType}catch{h=null;break e}var R=0,L=-1,j=-1,J=0,fe=0,xe=i,ae=null;t:for(;;){for(var ce;xe!==h||b!==0&&xe.nodeType!==3||(L=R+b),xe!==C||m!==0&&xe.nodeType!==3||(j=R+m),xe.nodeType===3&&(R+=xe.nodeValue.length),(ce=xe.firstChild)!==null;)ae=xe,xe=ce;for(;;){if(xe===i)break t;if(ae===h&&++J===b&&(L=R),ae===C&&++fe===m&&(j=R),(ce=xe.nextSibling)!==null)break;xe=ae,ae=xe.parentNode}xe=ce}h=L===-1||j===-1?null:{start:L,end:j}}else h=null}h=h||{start:0,end:0}}else h=null;for(zm={focusedElem:i,selectionRange:h},gh=!1,yn=u;yn!==null;)if(u=yn,i=u.child,(u.subtreeFlags&1028)!==0&&i!==null)i.return=u,yn=i;else for(;yn!==null;){switch(u=yn,C=u.alternate,i=u.flags,u.tag){case 0:break;case 11:case 15:break;case 1:if((i&1024)!==0&&C!==null){i=void 0,h=u,b=C.memoizedProps,C=C.memoizedState,m=h.stateNode;try{var Le=Hi(h.type,b,h.elementType===h.type);i=m.getSnapshotBeforeUpdate(Le,C),m.__reactInternalSnapshotBeforeUpdate=i}catch(qe){It(h,h.return,qe)}}break;case 3:if((i&1024)!==0){if(i=u.stateNode.containerInfo,h=i.nodeType,h===9)Vm(i);else if(h===1)switch(i.nodeName){case"HEAD":case"HTML":case"BODY":Vm(i);break;default:i.textContent=""}}break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((i&1024)!==0)throw Error(s(163))}if(i=u.sibling,i!==null){i.return=u.return,yn=i;break}yn=u.return}return Le=Jv,Jv=!1,Le}function e2(i,u,h){var m=h.flags;switch(h.tag){case 0:case 11:case 15:Qr(i,h),m&4&&Xl(5,h);break;case 1:if(Qr(i,h),m&4)if(i=h.stateNode,u===null)try{i.componentDidMount()}catch(L){It(h,h.return,L)}else{var b=Hi(h.type,u.memoizedProps);u=u.memoizedState;try{i.componentDidUpdate(b,u,i.__reactInternalSnapshotBeforeUpdate)}catch(L){It(h,h.return,L)}}m&64&&qv(h),m&512&&Xi(h,h.return);break;case 3:if(Qr(i,h),m&64&&(m=h.updateQueue,m!==null)){if(i=null,h.child!==null)switch(h.child.tag){case 27:case 5:i=h.child.stateNode;break;case 1:i=h.child.stateNode}try{jv(m,i)}catch(L){It(h,h.return,L)}}break;case 26:Qr(i,h),m&512&&Xi(h,h.return);break;case 27:case 5:Qr(i,h),u===null&&m&4&&Kv(h),m&512&&Xi(h,h.return);break;case 12:Qr(i,h);break;case 13:Qr(i,h),m&4&&s2(i,h);break;case 22:if(b=h.memoizedState!==null||Kr,!b){u=u!==null&&u.memoizedState!==null||Ht;var C=Kr,R=Ht;Kr=b,(Ht=u)&&!R?Ma(i,h,(h.subtreeFlags&8772)!==0):Qr(i,h),Kr=C,Ht=R}m&512&&(h.memoizedProps.mode==="manual"?Xi(h,h.return):xs(h,h.return));break;default:Qr(i,h)}}function t2(i){var u=i.alternate;u!==null&&(i.alternate=null,t2(u)),i.child=null,i.deletions=null,i.sibling=null,i.tag===5&&(u=i.stateNode,u!==null&&Ni(u)),i.stateNode=null,i.return=null,i.dependencies=null,i.memoizedProps=null,i.memoizedState=null,i.pendingProps=null,i.stateNode=null,i.updateQueue=null}var nn=null,bs=!1;function Yr(i,u,h){for(h=h.child;h!==null;)n2(i,u,h),h=h.sibling}function n2(i,u,h){if(Cn&&typeof Cn.onCommitFiberUnmount=="function")try{Cn.onCommitFiberUnmount(er,h)}catch{}switch(h.tag){case 26:Ht||xs(h,u),Yr(i,u,h),h.memoizedState?h.memoizedState.count--:h.stateNode&&(h=h.stateNode,h.parentNode.removeChild(h));break;case 27:Ht||xs(h,u);var m=nn,b=bs;for(nn=h.stateNode,Yr(i,u,h),h=h.stateNode,u=h.attributes;u.length;)h.removeAttributeNode(u[0]);Ni(h),nn=m,bs=b;break;case 5:Ht||xs(h,u);case 6:b=nn;var C=bs;if(nn=null,Yr(i,u,h),nn=b,bs=C,nn!==null)if(bs)try{i=nn,m=h.stateNode,i.nodeType===8?i.parentNode.removeChild(m):i.removeChild(m)}catch(R){It(h,u,R)}else try{nn.removeChild(h.stateNode)}catch(R){It(h,u,R)}break;case 18:nn!==null&&(bs?(u=nn,h=h.stateNode,u.nodeType===8?Um(u.parentNode,h):u.nodeType===1&&Um(u,h),hc(u)):Um(nn,h.stateNode));break;case 4:m=nn,b=bs,nn=h.stateNode.containerInfo,bs=!0,Yr(i,u,h),nn=m,bs=b;break;case 0:case 11:case 14:case 15:Ht||Ba(2,h,u),Ht||Ba(4,h,u),Yr(i,u,h);break;case 1:Ht||(xs(h,u),m=h.stateNode,typeof m.componentWillUnmount=="function"&&Xv(h,u,m)),Yr(i,u,h);break;case 21:Yr(i,u,h);break;case 22:Ht||xs(h,u),Ht=(m=Ht)||h.memoizedState!==null,Yr(i,u,h),Ht=m;break;default:Yr(i,u,h)}}function s2(i,u){if(u.memoizedState===null&&(i=u.alternate,i!==null&&(i=i.memoizedState,i!==null&&(i=i.dehydrated,i!==null))))try{hc(i)}catch(h){It(u,u.return,h)}}function pk(i){switch(i.tag){case 13:case 19:var u=i.stateNode;return u===null&&(u=i.stateNode=new Zv),u;case 22:return i=i.stateNode,u=i._retryCache,u===null&&(u=i._retryCache=new Zv),u;default:throw Error(s(435,i.tag))}}function cm(i,u){var h=pk(i);u.forEach(function(m){var b=Ek.bind(null,i,m);h.has(m)||(h.add(m),m.then(b,b))})}function Bs(i,u){var h=u.deletions;if(h!==null)for(var m=0;m<h.length;m++){var b=h[m],C=i,R=u,L=R;e:for(;L!==null;){switch(L.tag){case 27:case 5:nn=L.stateNode,bs=!1;break e;case 3:nn=L.stateNode.containerInfo,bs=!0;break e;case 4:nn=L.stateNode.containerInfo,bs=!0;break e}L=L.return}if(nn===null)throw Error(s(160));n2(C,R,b),nn=null,bs=!1,C=b.alternate,C!==null&&(C.return=null),b.return=null}if(u.subtreeFlags&13878)for(u=u.child;u!==null;)r2(u,i),u=u.sibling}var ur=null;function r2(i,u){var h=i.alternate,m=i.flags;switch(i.tag){case 0:case 11:case 14:case 15:Bs(u,i),Ms(i),m&4&&(Ba(3,i,i.return),Xl(3,i),Ba(5,i,i.return));break;case 1:Bs(u,i),Ms(i),m&512&&(Ht||h===null||xs(h,h.return)),m&64&&Kr&&(i=i.updateQueue,i!==null&&(m=i.callbacks,m!==null&&(h=i.shared.hiddenCallbacks,i.shared.hiddenCallbacks=h===null?m:h.concat(m))));break;case 26:var b=ur;if(Bs(u,i),Ms(i),m&512&&(Ht||h===null||xs(h,h.return)),m&4){var C=h!==null?h.memoizedState:null;if(m=i.memoizedState,h===null)if(m===null)if(i.stateNode===null){e:{m=i.type,h=i.memoizedProps,b=b.ownerDocument||b;t:switch(m){case"title":C=b.getElementsByTagName("title")[0],(!C||C[Fr]||C[Jt]||C.namespaceURI==="http://www.w3.org/2000/svg"||C.hasAttribute("itemprop"))&&(C=b.createElement(m),b.head.insertBefore(C,b.querySelector("head > title"))),kn(C,m,h),C[Jt]=i,Wt(C),m=C;break e;case"link":var R=K2("link","href",b).get(m+(h.href||""));if(R){for(var L=0;L<R.length;L++)if(C=R[L],C.getAttribute("href")===(h.href==null?null:h.href)&&C.getAttribute("rel")===(h.rel==null?null:h.rel)&&C.getAttribute("title")===(h.title==null?null:h.title)&&C.getAttribute("crossorigin")===(h.crossOrigin==null?null:h.crossOrigin)){R.splice(L,1);break t}}C=b.createElement(m),kn(C,m,h),b.head.appendChild(C);break;case"meta":if(R=K2("meta","content",b).get(m+(h.content||""))){for(L=0;L<R.length;L++)if(C=R[L],C.getAttribute("content")===(h.content==null?null:""+h.content)&&C.getAttribute("name")===(h.name==null?null:h.name)&&C.getAttribute("property")===(h.property==null?null:h.property)&&C.getAttribute("http-equiv")===(h.httpEquiv==null?null:h.httpEquiv)&&C.getAttribute("charset")===(h.charSet==null?null:h.charSet)){R.splice(L,1);break t}}C=b.createElement(m),kn(C,m,h),b.head.appendChild(C);break;default:throw Error(s(468,m))}C[Jt]=i,Wt(C),m=C}i.stateNode=m}else Y2(b,i.type,i.stateNode);else i.stateNode=X2(b,m,i.memoizedProps);else C!==m?(C===null?h.stateNode!==null&&(h=h.stateNode,h.parentNode.removeChild(h)):C.count--,m===null?Y2(b,i.type,i.stateNode):X2(b,m,i.memoizedProps)):m===null&&i.stateNode!==null&&Yv(i,i.memoizedProps,h.memoizedProps)}break;case 27:if(m&4&&i.alternate===null){b=i.stateNode,C=i.memoizedProps;try{for(var j=b.firstChild;j;){var J=j.nextSibling,fe=j.nodeName;j[Fr]||fe==="HEAD"||fe==="BODY"||fe==="SCRIPT"||fe==="STYLE"||fe==="LINK"&&j.rel.toLowerCase()==="stylesheet"||b.removeChild(j),j=J}for(var xe=i.type,ae=b.attributes;ae.length;)b.removeAttributeNode(ae[0]);kn(b,xe,C),b[Jt]=i,b[Pn]=C}catch(Le){It(i,i.return,Le)}}case 5:if(Bs(u,i),Ms(i),m&512&&(Ht||h===null||xs(h,h.return)),i.flags&32){b=i.stateNode;try{Lr(b,"")}catch(Le){It(i,i.return,Le)}}m&4&&i.stateNode!=null&&(b=i.memoizedProps,Yv(i,b,h!==null?h.memoizedProps:b)),m&1024&&(lm=!0);break;case 6:if(Bs(u,i),Ms(i),m&4){if(i.stateNode===null)throw Error(s(162));m=i.memoizedProps,h=i.stateNode;try{h.nodeValue=m}catch(Le){It(i,i.return,Le)}}break;case 3:if(fh=null,b=ur,ur=dh(u.containerInfo),Bs(u,i),ur=b,Ms(i),m&4&&h!==null&&h.memoizedState.isDehydrated)try{hc(u.containerInfo)}catch(Le){It(i,i.return,Le)}lm&&(lm=!1,a2(i));break;case 4:m=ur,ur=dh(i.stateNode.containerInfo),Bs(u,i),Ms(i),ur=m;break;case 12:Bs(u,i),Ms(i);break;case 13:Bs(u,i),Ms(i),i.child.flags&8192&&i.memoizedState!==null!=(h!==null&&h.memoizedState!==null)&&(bm=fn()),m&4&&(m=i.updateQueue,m!==null&&(i.updateQueue=null,cm(i,m)));break;case 22:if(m&512&&(Ht||h===null||xs(h,h.return)),j=i.memoizedState!==null,J=h!==null&&h.memoizedState!==null,fe=Kr,xe=Ht,Kr=fe||j,Ht=xe||J,Bs(u,i),Ht=xe,Kr=fe,Ms(i),u=i.stateNode,u._current=i,u._visibility&=-3,u._visibility|=u._pendingVisibility&2,m&8192&&(u._visibility=j?u._visibility&-2:u._visibility|1,j&&(u=Kr||Ht,h===null||J||u||hu(i)),i.memoizedProps===null||i.memoizedProps.mode!=="manual"))e:for(h=null,u=i;;){if(u.tag===5||u.tag===26||u.tag===27){if(h===null){J=h=u;try{if(b=J.stateNode,j)C=b.style,typeof C.setProperty=="function"?C.setProperty("display","none","important"):C.display="none";else{R=J.stateNode,L=J.memoizedProps.style;var ce=L!=null&&L.hasOwnProperty("display")?L.display:null;R.style.display=ce==null||typeof ce=="boolean"?"":(""+ce).trim()}}catch(Le){It(J,J.return,Le)}}}else if(u.tag===6){if(h===null){J=u;try{J.stateNode.nodeValue=j?"":J.memoizedProps}catch(Le){It(J,J.return,Le)}}}else if((u.tag!==22&&u.tag!==23||u.memoizedState===null||u===i)&&u.child!==null){u.child.return=u,u=u.child;continue}if(u===i)break e;for(;u.sibling===null;){if(u.return===null||u.return===i)break e;h===u&&(h=null),u=u.return}h===u&&(h=null),u.sibling.return=u.return,u=u.sibling}m&4&&(m=i.updateQueue,m!==null&&(h=m.retryQueue,h!==null&&(m.retryQueue=null,cm(i,h))));break;case 19:Bs(u,i),Ms(i),m&4&&(m=i.updateQueue,m!==null&&(i.updateQueue=null,cm(i,m)));break;case 21:break;default:Bs(u,i),Ms(i)}}function Ms(i){var u=i.flags;if(u&2){try{if(i.tag!==27){e:{for(var h=i.return;h!==null;){if(Qv(h)){var m=h;break e}h=h.return}throw Error(s(160))}switch(m.tag){case 27:var b=m.stateNode,C=om(i);Yd(i,C,b);break;case 5:var R=m.stateNode;m.flags&32&&(Lr(R,""),m.flags&=-33);var L=om(i);Yd(i,L,R);break;case 3:case 4:var j=m.stateNode.containerInfo,J=om(i);um(i,J,j);break;default:throw Error(s(161))}}}catch(fe){It(i,i.return,fe)}i.flags&=-3}u&4096&&(i.flags&=-4097)}function a2(i){if(i.subtreeFlags&1024)for(i=i.child;i!==null;){var u=i;a2(u),u.tag===5&&u.flags&1024&&u.stateNode.reset(),i=i.sibling}}function Qr(i,u){if(u.subtreeFlags&8772)for(u=u.child;u!==null;)e2(i,u.alternate,u),u=u.sibling}function hu(i){for(i=i.child;i!==null;){var u=i;switch(u.tag){case 0:case 11:case 14:case 15:Ba(4,u,u.return),hu(u);break;case 1:xs(u,u.return);var h=u.stateNode;typeof h.componentWillUnmount=="function"&&Xv(u,u.return,h),hu(u);break;case 26:case 27:case 5:xs(u,u.return),hu(u);break;case 22:xs(u,u.return),u.memoizedState===null&&hu(u);break;default:hu(u)}i=i.sibling}}function Ma(i,u,h){for(h=h&&(u.subtreeFlags&8772)!==0,u=u.child;u!==null;){var m=u.alternate,b=i,C=u,R=C.flags;switch(C.tag){case 0:case 11:case 15:Ma(b,C,h),Xl(4,C);break;case 1:if(Ma(b,C,h),m=C,b=m.stateNode,typeof b.componentDidMount=="function")try{b.componentDidMount()}catch(J){It(m,m.return,J)}if(m=C,b=m.updateQueue,b!==null){var L=m.stateNode;try{var j=b.shared.hiddenCallbacks;if(j!==null)for(b.shared.hiddenCallbacks=null,b=0;b<j.length;b++)Hv(j[b],L)}catch(J){It(m,m.return,J)}}h&&R&64&&qv(C),Xi(C,C.return);break;case 26:case 27:case 5:Ma(b,C,h),h&&m===null&&R&4&&Kv(C),Xi(C,C.return);break;case 12:Ma(b,C,h);break;case 13:Ma(b,C,h),h&&R&4&&s2(b,C);break;case 22:C.memoizedState===null&&Ma(b,C,h),Xi(C,C.return);break;default:Ma(b,C,h)}u=u.sibling}}function dm(i,u){var h=null;i!==null&&i.memoizedState!==null&&i.memoizedState.cachePool!==null&&(h=i.memoizedState.cachePool.pool),i=null,u.memoizedState!==null&&u.memoizedState.cachePool!==null&&(i=u.memoizedState.cachePool.pool),i!==h&&(i!=null&&i.refCount++,h!=null&&zl(h))}function hm(i,u){i=null,u.alternate!==null&&(i=u.alternate.memoizedState.cache),u=u.memoizedState.cache,u!==i&&(u.refCount++,i!=null&&zl(i))}function Ua(i,u,h,m){if(u.subtreeFlags&10256)for(u=u.child;u!==null;)i2(i,u,h,m),u=u.sibling}function i2(i,u,h,m){var b=u.flags;switch(u.tag){case 0:case 11:case 15:Ua(i,u,h,m),b&2048&&Xl(9,u);break;case 3:Ua(i,u,h,m),b&2048&&(i=null,u.alternate!==null&&(i=u.alternate.memoizedState.cache),u=u.memoizedState.cache,u!==i&&(u.refCount++,i!=null&&zl(i)));break;case 12:if(b&2048){Ua(i,u,h,m),i=u.stateNode;try{var C=u.memoizedProps,R=C.id,L=C.onPostCommit;typeof L=="function"&&L(R,u.alternate===null?"mount":"update",i.passiveEffectDuration,-0)}catch(j){It(u,u.return,j)}}else Ua(i,u,h,m);break;case 23:break;case 22:C=u.stateNode,u.memoizedState!==null?C._visibility&4?Ua(i,u,h,m):Kl(i,u):C._visibility&4?Ua(i,u,h,m):(C._visibility|=4,fu(i,u,h,m,(u.subtreeFlags&10256)!==0)),b&2048&&dm(u.alternate,u);break;case 24:Ua(i,u,h,m),b&2048&&hm(u.alternate,u);break;default:Ua(i,u,h,m)}}function fu(i,u,h,m,b){for(b=b&&(u.subtreeFlags&10256)!==0,u=u.child;u!==null;){var C=i,R=u,L=h,j=m,J=R.flags;switch(R.tag){case 0:case 11:case 15:fu(C,R,L,j,b),Xl(8,R);break;case 23:break;case 22:var fe=R.stateNode;R.memoizedState!==null?fe._visibility&4?fu(C,R,L,j,b):Kl(C,R):(fe._visibility|=4,fu(C,R,L,j,b)),b&&J&2048&&dm(R.alternate,R);break;case 24:fu(C,R,L,j,b),b&&J&2048&&hm(R.alternate,R);break;default:fu(C,R,L,j,b)}u=u.sibling}}function Kl(i,u){if(u.subtreeFlags&10256)for(u=u.child;u!==null;){var h=i,m=u,b=m.flags;switch(m.tag){case 22:Kl(h,m),b&2048&&dm(m.alternate,m);break;case 24:Kl(h,m),b&2048&&hm(m.alternate,m);break;default:Kl(h,m)}u=u.sibling}}var Yl=8192;function pu(i){if(i.subtreeFlags&Yl)for(i=i.child;i!==null;)o2(i),i=i.sibling}function o2(i){switch(i.tag){case 26:pu(i),i.flags&Yl&&i.memoizedState!==null&&nR(ur,i.memoizedState,i.memoizedProps);break;case 5:pu(i);break;case 3:case 4:var u=ur;ur=dh(i.stateNode.containerInfo),pu(i),ur=u;break;case 22:i.memoizedState===null&&(u=i.alternate,u!==null&&u.memoizedState!==null?(u=Yl,Yl=16777216,pu(i),Yl=u):pu(i));break;default:pu(i)}}function u2(i){var u=i.alternate;if(u!==null&&(i=u.child,i!==null)){u.child=null;do u=i.sibling,i.sibling=null,i=u;while(i!==null)}}function Ql(i){var u=i.deletions;if((i.flags&16)!==0){if(u!==null)for(var h=0;h<u.length;h++){var m=u[h];yn=m,c2(m,i)}u2(i)}if(i.subtreeFlags&10256)for(i=i.child;i!==null;)l2(i),i=i.sibling}function l2(i){switch(i.tag){case 0:case 11:case 15:Ql(i),i.flags&2048&&Ba(9,i,i.return);break;case 3:Ql(i);break;case 12:Ql(i);break;case 22:var u=i.stateNode;i.memoizedState!==null&&u._visibility&4&&(i.return===null||i.return.tag!==13)?(u._visibility&=-5,Qd(i)):Ql(i);break;default:Ql(i)}}function Qd(i){var u=i.deletions;if((i.flags&16)!==0){if(u!==null)for(var h=0;h<u.length;h++){var m=u[h];yn=m,c2(m,i)}u2(i)}for(i=i.child;i!==null;){switch(u=i,u.tag){case 0:case 11:case 15:Ba(8,u,u.return),Qd(u);break;case 22:h=u.stateNode,h._visibility&4&&(h._visibility&=-5,Qd(u));break;default:Qd(u)}i=i.sibling}}function c2(i,u){for(;yn!==null;){var h=yn;switch(h.tag){case 0:case 11:case 15:Ba(8,h,u);break;case 23:case 22:if(h.memoizedState!==null&&h.memoizedState.cachePool!==null){var m=h.memoizedState.cachePool.pool;m!=null&&m.refCount++}break;case 24:zl(h.memoizedState.cache)}if(m=h.child,m!==null)m.return=h,yn=m;else e:for(h=i;yn!==null;){m=yn;var b=m.sibling,C=m.return;if(t2(m),m===h){yn=null;break e}if(b!==null){b.return=C,yn=b;break e}yn=C}}}function mk(i,u,h,m){this.tag=i,this.key=h,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=u,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=m,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Us(i,u,h,m){return new mk(i,u,h,m)}function fm(i){return i=i.prototype,!(!i||!i.isReactComponent)}function Va(i,u){var h=i.alternate;return h===null?(h=Us(i.tag,u,i.key,i.mode),h.elementType=i.elementType,h.type=i.type,h.stateNode=i.stateNode,h.alternate=i,i.alternate=h):(h.pendingProps=u,h.type=i.type,h.flags=0,h.subtreeFlags=0,h.deletions=null),h.flags=i.flags&31457280,h.childLanes=i.childLanes,h.lanes=i.lanes,h.child=i.child,h.memoizedProps=i.memoizedProps,h.memoizedState=i.memoizedState,h.updateQueue=i.updateQueue,u=i.dependencies,h.dependencies=u===null?null:{lanes:u.lanes,firstContext:u.firstContext},h.sibling=i.sibling,h.index=i.index,h.ref=i.ref,h.refCleanup=i.refCleanup,h}function d2(i,u){i.flags&=31457282;var h=i.alternate;return h===null?(i.childLanes=0,i.lanes=u,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=h.childLanes,i.lanes=h.lanes,i.child=h.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=h.memoizedProps,i.memoizedState=h.memoizedState,i.updateQueue=h.updateQueue,i.type=h.type,u=h.dependencies,i.dependencies=u===null?null:{lanes:u.lanes,firstContext:u.firstContext}),i}function Zd(i,u,h,m,b,C){var R=0;if(m=i,typeof i=="function")fm(i)&&(R=1);else if(typeof i=="string")R=eR(i,h,rn.current)?26:i==="html"||i==="head"||i==="body"?27:5;else e:switch(i){case c:return Ki(h.children,b,C,u);case d:R=8,b|=24;break;case f:return i=Us(12,h,u,b|2),i.elementType=f,i.lanes=C,i;case w:return i=Us(13,h,u,b),i.elementType=w,i.lanes=C,i;case S:return i=Us(19,h,u,b),i.elementType=S,i.lanes=C,i;case I:return h2(h,b,C,u);default:if(typeof i=="object"&&i!==null)switch(i.$$typeof){case p:case y:R=10;break e;case g:R=9;break e;case x:R=11;break e;case $:R=14;break e;case N:R=16,m=null;break e}R=29,h=Error(s(130,i===null?"null":typeof i,"")),m=null}return u=Us(R,h,u,b),u.elementType=i,u.type=m,u.lanes=C,u}function Ki(i,u,h,m){return i=Us(7,i,m,u),i.lanes=h,i}function h2(i,u,h,m){i=Us(22,i,m,u),i.elementType=I,i.lanes=h;var b={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var C=b._current;if(C===null)throw Error(s(456));if((b._pendingVisibility&2)===0){var R=Ia(C,2);R!==null&&(b._pendingVisibility|=2,Yn(R,C,2))}},attach:function(){var C=b._current;if(C===null)throw Error(s(456));if((b._pendingVisibility&2)!==0){var R=Ia(C,2);R!==null&&(b._pendingVisibility&=-3,Yn(R,C,2))}}};return i.stateNode=b,i}function pm(i,u,h){return i=Us(6,i,null,u),i.lanes=h,i}function mm(i,u,h){return u=Us(4,i.children!==null?i.children:[],i.key,u),u.lanes=h,u.stateNode={containerInfo:i.containerInfo,pendingChildren:null,implementation:i.implementation},u}function Zr(i){i.flags|=4}function f2(i,u){if(u.type!=="stylesheet"||(u.state.loading&4)!==0)i.flags&=-16777217;else if(i.flags|=16777216,!Q2(u)){if(u=zs.current,u!==null&&((dt&4194176)===dt?wr!==null:(dt&62914560)!==dt&&(dt&536870912)===0||u!==wr))throw Pl=vp,Ib;i.flags|=8192}}function Jd(i,u){u!==null&&(i.flags|=4),i.flags&16384&&(u=i.tag!==22?Si():536870912,i.lanes|=u,gu|=u)}function Zl(i,u){if(!ht)switch(i.tailMode){case"hidden":u=i.tail;for(var h=null;u!==null;)u.alternate!==null&&(h=u),u=u.sibling;h===null?i.tail=null:h.sibling=null;break;case"collapsed":h=i.tail;for(var m=null;h!==null;)h.alternate!==null&&(m=h),h=h.sibling;m===null?u||i.tail===null?i.tail=null:i.tail.sibling=null:m.sibling=null}}function zt(i){var u=i.alternate!==null&&i.alternate.child===i.child,h=0,m=0;if(u)for(var b=i.child;b!==null;)h|=b.lanes|b.childLanes,m|=b.subtreeFlags&31457280,m|=b.flags&31457280,b.return=i,b=b.sibling;else for(b=i.child;b!==null;)h|=b.lanes|b.childLanes,m|=b.subtreeFlags,m|=b.flags,b.return=i,b=b.sibling;return i.subtreeFlags|=m,i.childLanes=h,u}function gk(i,u,h){var m=u.pendingProps;switch(xp(u),u.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return zt(u),null;case 1:return zt(u),null;case 3:return h=u.stateNode,m=null,i!==null&&(m=i.memoizedState.cache),u.memoizedState.cache!==m&&(u.flags|=2048),Xr(ln),wa(),h.pendingContext&&(h.context=h.pendingContext,h.pendingContext=null),(i===null||i.child===null)&&(_l(u)?Zr(u):i===null||i.memoizedState.isDehydrated&&(u.flags&256)===0||(u.flags|=1024,or!==null&&(Cm(or),or=null))),zt(u),null;case 26:return h=u.memoizedState,i===null?(Zr(u),h!==null?(zt(u),f2(u,h)):(zt(u),u.flags&=-16777217)):h?h!==i.memoizedState?(Zr(u),zt(u),f2(u,h)):(zt(u),u.flags&=-16777217):(i.memoizedProps!==m&&Zr(u),zt(u),u.flags&=-16777217),null;case 27:gi(u),h=Ct.current;var b=u.type;if(i!==null&&u.stateNode!=null)i.memoizedProps!==m&&Zr(u);else{if(!m){if(u.stateNode===null)throw Error(s(166));return zt(u),null}i=rn.current,_l(u)?kb(u):(i=W2(b,m,h),u.stateNode=i,Zr(u))}return zt(u),null;case 5:if(gi(u),h=u.type,i!==null&&u.stateNode!=null)i.memoizedProps!==m&&Zr(u);else{if(!m){if(u.stateNode===null)throw Error(s(166));return zt(u),null}if(i=rn.current,_l(u))kb(u);else{switch(b=ch(Ct.current),i){case 1:i=b.createElementNS("http://www.w3.org/2000/svg",h);break;case 2:i=b.createElementNS("http://www.w3.org/1998/Math/MathML",h);break;default:switch(h){case"svg":i=b.createElementNS("http://www.w3.org/2000/svg",h);break;case"math":i=b.createElementNS("http://www.w3.org/1998/Math/MathML",h);break;case"script":i=b.createElement("div"),i.innerHTML="<script><\/script>",i=i.removeChild(i.firstChild);break;case"select":i=typeof m.is=="string"?b.createElement("select",{is:m.is}):b.createElement("select"),m.multiple?i.multiple=!0:m.size&&(i.size=m.size);break;default:i=typeof m.is=="string"?b.createElement(h,{is:m.is}):b.createElement(h)}}i[Jt]=u,i[Pn]=m;e:for(b=u.child;b!==null;){if(b.tag===5||b.tag===6)i.appendChild(b.stateNode);else if(b.tag!==4&&b.tag!==27&&b.child!==null){b.child.return=b,b=b.child;continue}if(b===u)break e;for(;b.sibling===null;){if(b.return===null||b.return===u)break e;b=b.return}b.sibling.return=b.return,b=b.sibling}u.stateNode=i;e:switch(kn(i,h,m),h){case"button":case"input":case"select":case"textarea":i=!!m.autoFocus;break e;case"img":i=!0;break e;default:i=!1}i&&Zr(u)}}return zt(u),u.flags&=-16777217,null;case 6:if(i&&u.stateNode!=null)i.memoizedProps!==m&&Zr(u);else{if(typeof m!="string"&&u.stateNode===null)throw Error(s(166));if(i=Ct.current,_l(u)){if(i=u.stateNode,h=u.memoizedProps,m=null,b=Kn,b!==null)switch(b.tag){case 27:case 5:m=b.memoizedProps}i[Jt]=u,i=!!(i.nodeValue===h||m!==null&&m.suppressHydrationWarning===!0||L2(i.nodeValue,h)),i||Bi(u)}else i=ch(i).createTextNode(m),i[Jt]=u,u.stateNode=i}return zt(u),null;case 13:if(m=u.memoizedState,i===null||i.memoizedState!==null&&i.memoizedState.dehydrated!==null){if(b=_l(u),m!==null&&m.dehydrated!==null){if(i===null){if(!b)throw Error(s(318));if(b=u.memoizedState,b=b!==null?b.dehydrated:null,!b)throw Error(s(317));b[Jt]=u}else Al(),(u.flags&128)===0&&(u.memoizedState=null),u.flags|=4;zt(u),b=!1}else or!==null&&(Cm(or),or=null),b=!0;if(!b)return u.flags&256?(Gr(u),u):(Gr(u),null)}if(Gr(u),(u.flags&128)!==0)return u.lanes=h,u;if(h=m!==null,i=i!==null&&i.memoizedState!==null,h){m=u.child,b=null,m.alternate!==null&&m.alternate.memoizedState!==null&&m.alternate.memoizedState.cachePool!==null&&(b=m.alternate.memoizedState.cachePool.pool);var C=null;m.memoizedState!==null&&m.memoizedState.cachePool!==null&&(C=m.memoizedState.cachePool.pool),C!==b&&(m.flags|=2048)}return h!==i&&h&&(u.child.flags|=8192),Jd(u,u.updateQueue),zt(u),null;case 4:return wa(),i===null&&Om(u.stateNode.containerInfo),zt(u),null;case 10:return Xr(u.type),zt(u),null;case 19:if(Rt(un),b=u.memoizedState,b===null)return zt(u),null;if(m=(u.flags&128)!==0,C=b.rendering,C===null)if(m)Zl(b,!1);else{if(jt!==0||i!==null&&(i.flags&128)!==0)for(i=u.child;i!==null;){if(C=Fd(i),C!==null){for(u.flags|=128,Zl(b,!1),i=C.updateQueue,u.updateQueue=i,Jd(u,i),u.subtreeFlags=0,i=h,h=u.child;h!==null;)d2(h,i),h=h.sibling;return mt(un,un.current&1|2),u.child}i=i.sibling}b.tail!==null&&fn()>eh&&(u.flags|=128,m=!0,Zl(b,!1),u.lanes=4194304)}else{if(!m)if(i=Fd(C),i!==null){if(u.flags|=128,m=!0,i=i.updateQueue,u.updateQueue=i,Jd(u,i),Zl(b,!0),b.tail===null&&b.tailMode==="hidden"&&!C.alternate&&!ht)return zt(u),null}else 2*fn()-b.renderingStartTime>eh&&h!==536870912&&(u.flags|=128,m=!0,Zl(b,!1),u.lanes=4194304);b.isBackwards?(C.sibling=u.child,u.child=C):(i=b.last,i!==null?i.sibling=C:u.child=C,b.last=C)}return b.tail!==null?(u=b.tail,b.rendering=u,b.tail=u.sibling,b.renderingStartTime=fn(),u.sibling=null,i=un.current,mt(un,m?i&1|2:i&1),u):(zt(u),null);case 22:case 23:return Gr(u),Sp(),m=u.memoizedState!==null,i!==null?i.memoizedState!==null!==m&&(u.flags|=8192):m&&(u.flags|=8192),m?(h&536870912)!==0&&(u.flags&128)===0&&(zt(u),u.subtreeFlags&6&&(u.flags|=8192)):zt(u),h=u.updateQueue,h!==null&&Jd(u,h.retryQueue),h=null,i!==null&&i.memoizedState!==null&&i.memoizedState.cachePool!==null&&(h=i.memoizedState.cachePool.pool),m=null,u.memoizedState!==null&&u.memoizedState.cachePool!==null&&(m=u.memoizedState.cachePool.pool),m!==h&&(u.flags|=2048),i!==null&&Rt(Ui),null;case 24:return h=null,i!==null&&(h=i.memoizedState.cache),u.memoizedState.cache!==h&&(u.flags|=2048),Xr(ln),zt(u),null;case 25:return null}throw Error(s(156,u.tag))}function yk(i,u){switch(xp(u),u.tag){case 1:return i=u.flags,i&65536?(u.flags=i&-65537|128,u):null;case 3:return Xr(ln),wa(),i=u.flags,(i&65536)!==0&&(i&128)===0?(u.flags=i&-65537|128,u):null;case 26:case 27:case 5:return gi(u),null;case 13:if(Gr(u),i=u.memoizedState,i!==null&&i.dehydrated!==null){if(u.alternate===null)throw Error(s(340));Al()}return i=u.flags,i&65536?(u.flags=i&-65537|128,u):null;case 19:return Rt(un),null;case 4:return wa(),null;case 10:return Xr(u.type),null;case 22:case 23:return Gr(u),Sp(),i!==null&&Rt(Ui),i=u.flags,i&65536?(u.flags=i&-65537|128,u):null;case 24:return Xr(ln),null;case 25:return null;default:return null}}function p2(i,u){switch(xp(u),u.tag){case 3:Xr(ln),wa();break;case 26:case 27:case 5:gi(u);break;case 4:wa();break;case 13:Gr(u);break;case 19:Rt(un);break;case 10:Xr(u.type);break;case 22:case 23:Gr(u),Sp(),i!==null&&Rt(Ui);break;case 24:Xr(ln)}}var xk={getCacheForType:function(i){var u=Ln(ln),h=u.data.get(i);return h===void 0&&(h=i(),u.data.set(i,h)),h}},bk=typeof WeakMap=="function"?WeakMap:Map,Bt=0,At=null,rt=null,dt=0,Dt=0,vs=null,Jr=!1,mu=!1,gm=!1,ea=0,jt=0,Wa=0,Yi=0,ym=0,Vs=0,gu=0,Jl=null,Cr=null,xm=!1,bm=0,eh=1/0,th=null,Ga=null,nh=!1,Qi=null,ec=0,vm=0,wm=null,tc=0,Sm=null;function ws(){if((Bt&2)!==0&&dt!==0)return dt&-dt;if(F.T!==null){var i=ou;return i!==0?i:Im()}return hl()}function m2(){Vs===0&&(Vs=(dt&536870912)===0||ht?dl():536870912);var i=zs.current;return i!==null&&(i.flags|=32),Vs}function Yn(i,u,h){(i===At&&Dt===2||i.cancelPendingCommit!==null)&&(yu(i,0),ta(i,dt,Vs,!1)),Ci(i,h),((Bt&2)===0||i!==At)&&(i===At&&((Bt&2)===0&&(Yi|=h),jt===4&&ta(i,dt,Vs,!1)),$r(i))}function g2(i,u,h){if((Bt&6)!==0)throw Error(s(327));var m=!h&&(u&60)===0&&(u&i.expiredLanes)===0||ms(i,u),b=m?Sk(i,u):Nm(i,u,!0),C=m;do{if(b===0){mu&&!m&&ta(i,u,0,!1);break}else if(b===6)ta(i,u,0,!Jr);else{if(h=i.current.alternate,C&&!vk(h)){b=Nm(i,u,!1),C=!1;continue}if(b===2){if(C=u,i.errorRecoveryDisabledLanes&C)var R=0;else R=i.pendingLanes&-536870913,R=R!==0?R:R&536870912?536870912:0;if(R!==0){u=R;e:{var L=i;b=Jl;var j=L.current.memoizedState.isDehydrated;if(j&&(yu(L,R).flags|=256),R=Nm(L,R,!1),R!==2){if(gm&&!j){L.errorRecoveryDisabledLanes|=C,Yi|=C,b=4;break e}C=Cr,Cr=b,C!==null&&Cm(C)}b=R}if(C=!1,b!==2)continue}}if(b===1){yu(i,0),ta(i,u,0,!0);break}e:{switch(m=i,b){case 0:case 1:throw Error(s(345));case 4:if((u&4194176)===u){ta(m,u,Vs,!Jr);break e}break;case 2:Cr=null;break;case 3:case 5:break;default:throw Error(s(329))}if(m.finishedWork=h,m.finishedLanes=u,(u&62914560)===u&&(C=bm+300-fn(),10<C)){if(ta(m,u,Vs,!Jr),wi(m,0)!==0)break e;m.timeoutHandle=M2(y2.bind(null,m,h,Cr,th,xm,u,Vs,Yi,gu,Jr,2,-0,0),C);break e}y2(m,h,Cr,th,xm,u,Vs,Yi,gu,Jr,0,-0,0)}}break}while(!0);$r(i)}function Cm(i){Cr===null?Cr=i:Cr.push.apply(Cr,i)}function y2(i,u,h,m,b,C,R,L,j,J,fe,xe,ae){var ce=u.subtreeFlags;if((ce&8192||(ce&16785408)===16785408)&&(oc={stylesheets:null,count:0,unsuspend:tR},o2(u),u=sR(),u!==null)){i.cancelPendingCommit=u($2.bind(null,i,h,m,b,R,L,j,1,xe,ae)),ta(i,C,R,!J);return}$2(i,h,m,b,R,L,j,fe,xe,ae)}function vk(i){for(var u=i;;){var h=u.tag;if((h===0||h===11||h===15)&&u.flags&16384&&(h=u.updateQueue,h!==null&&(h=h.stores,h!==null)))for(var m=0;m<h.length;m++){var b=h[m],C=b.getSnapshot;b=b.value;try{if(!ys(C(),b))return!1}catch{return!1}}if(h=u.child,u.subtreeFlags&16384&&h!==null)h.return=u,u=h;else{if(u===i)break;for(;u.sibling===null;){if(u.return===null||u.return===i)return!0;u=u.return}u.sibling.return=u.return,u=u.sibling}}return!0}function ta(i,u,h,m){u&=~ym,u&=~Yi,i.suspendedLanes|=u,i.pingedLanes&=~u,m&&(i.warmLanes|=u),m=i.expirationTimes;for(var b=u;0<b;){var C=31-On(b),R=1<<C;m[C]=-1,b&=~R}h!==0&&hd(i,h,u)}function sh(){return(Bt&6)===0?(nc(0),!1):!0}function $m(){if(rt!==null){if(Dt===0)var i=rt.return;else i=rt,qr=ji=null,Ip(i),au=null,Fl=0,i=rt;for(;i!==null;)p2(i.alternate,i),i=i.return;rt=null}}function yu(i,u){i.finishedWork=null,i.finishedLanes=0;var h=i.timeoutHandle;h!==-1&&(i.timeoutHandle=-1,Bk(h)),h=i.cancelPendingCommit,h!==null&&(i.cancelPendingCommit=null,h()),$m(),At=i,rt=h=Va(i.current,null),dt=u,Dt=0,vs=null,Jr=!1,mu=ms(i,u),gm=!1,gu=Vs=ym=Yi=Wa=jt=0,Cr=Jl=null,xm=!1,(u&8)!==0&&(u|=u&32);var m=i.entangledLanes;if(m!==0)for(i=i.entanglements,m&=u;0<m;){var b=31-On(m),C=1<<b;u|=i[b],m&=~C}return ea=u,Ed(),h}function x2(i,u){tt=null,F.H=Sr,u===Ol?(u=Db(),Dt=3):u===Ib?(u=Db(),Dt=4):Dt=u===_v?8:u!==null&&typeof u=="object"&&typeof u.then=="function"?6:1,vs=u,rt===null&&(jt=1,qd(i,Ps(u,i.current)))}function b2(){var i=F.H;return F.H=Sr,i===null?Sr:i}function v2(){var i=F.A;return F.A=xk,i}function Tm(){jt=4,Jr||(dt&4194176)!==dt&&zs.current!==null||(mu=!0),(Wa&134217727)===0&&(Yi&134217727)===0||At===null||ta(At,dt,Vs,!1)}function Nm(i,u,h){var m=Bt;Bt|=2;var b=b2(),C=v2();(At!==i||dt!==u)&&(th=null,yu(i,u)),u=!1;var R=jt;e:do try{if(Dt!==0&&rt!==null){var L=rt,j=vs;switch(Dt){case 8:$m(),R=6;break e;case 3:case 2:case 6:zs.current===null&&(u=!0);var J=Dt;if(Dt=0,vs=null,xu(i,L,j,J),h&&mu){R=0;break e}break;default:J=Dt,Dt=0,vs=null,xu(i,L,j,J)}}wk(),R=jt;break}catch(fe){x2(i,fe)}while(!0);return u&&i.shellSuspendCounter++,qr=ji=null,Bt=m,F.H=b,F.A=C,rt===null&&(At=null,dt=0,Ed()),R}function wk(){for(;rt!==null;)w2(rt)}function Sk(i,u){var h=Bt;Bt|=2;var m=b2(),b=v2();At!==i||dt!==u?(th=null,eh=fn()+500,yu(i,u)):mu=ms(i,u);e:do try{if(Dt!==0&&rt!==null){u=rt;var C=vs;t:switch(Dt){case 1:Dt=0,vs=null,xu(i,u,C,1);break;case 2:if(_b(C)){Dt=0,vs=null,S2(u);break}u=function(){Dt===2&&At===i&&(Dt=7),$r(i)},C.then(u,u);break e;case 3:Dt=7;break e;case 4:Dt=5;break e;case 7:_b(C)?(Dt=0,vs=null,S2(u)):(Dt=0,vs=null,xu(i,u,C,7));break;case 5:var R=null;switch(rt.tag){case 26:R=rt.memoizedState;case 5:case 27:var L=rt;if(!R||Q2(R)){Dt=0,vs=null;var j=L.sibling;if(j!==null)rt=j;else{var J=L.return;J!==null?(rt=J,rh(J)):rt=null}break t}}Dt=0,vs=null,xu(i,u,C,5);break;case 6:Dt=0,vs=null,xu(i,u,C,6);break;case 8:$m(),jt=6;break e;default:throw Error(s(462))}}Ck();break}catch(fe){x2(i,fe)}while(!0);return qr=ji=null,F.H=m,F.A=b,Bt=h,rt!==null?0:(At=null,dt=0,Ed(),jt)}function Ck(){for(;rt!==null&&!ul();)w2(rt)}function w2(i){var u=Wv(i.alternate,i,ea);i.memoizedProps=i.pendingProps,u===null?rh(i):rt=u}function S2(i){var u=i,h=u.alternate;switch(u.tag){case 15:case 0:u=Lv(h,u,u.pendingProps,u.type,void 0,dt);break;case 11:u=Lv(h,u,u.pendingProps,u.type.render,u.ref,dt);break;case 5:Ip(u);default:p2(h,u),u=rt=d2(u,ea),u=Wv(h,u,ea)}i.memoizedProps=i.pendingProps,u===null?rh(i):rt=u}function xu(i,u,h,m){qr=ji=null,Ip(u),au=null,Fl=0;var b=u.return;try{if(dk(i,b,u,h,dt)){jt=1,qd(i,Ps(h,i.current)),rt=null;return}}catch(C){if(b!==null)throw rt=b,C;jt=1,qd(i,Ps(h,i.current)),rt=null;return}u.flags&32768?(ht||m===1?i=!0:mu||(dt&536870912)!==0?i=!1:(Jr=i=!0,(m===2||m===3||m===6)&&(m=zs.current,m!==null&&m.tag===13&&(m.flags|=16384))),C2(u,i)):rh(u)}function rh(i){var u=i;do{if((u.flags&32768)!==0){C2(u,Jr);return}i=u.return;var h=gk(u.alternate,u,ea);if(h!==null){rt=h;return}if(u=u.sibling,u!==null){rt=u;return}rt=u=i}while(u!==null);jt===0&&(jt=5)}function C2(i,u){do{var h=yk(i.alternate,i);if(h!==null){h.flags&=32767,rt=h;return}if(h=i.return,h!==null&&(h.flags|=32768,h.subtreeFlags=0,h.deletions=null),!u&&(i=i.sibling,i!==null)){rt=i;return}rt=i=h}while(i!==null);jt=6,rt=null}function $2(i,u,h,m,b,C,R,L,j,J){var fe=F.T,xe=ve.p;try{ve.p=2,F.T=null,$k(i,u,h,m,xe,b,C,R,L,j,J)}finally{F.T=fe,ve.p=xe}}function $k(i,u,h,m,b,C,R,L){do bu();while(Qi!==null);if((Bt&6)!==0)throw Error(s(327));var j=i.finishedWork;if(m=i.finishedLanes,j===null)return null;if(i.finishedWork=null,i.finishedLanes=0,j===i.current)throw Error(s(177));i.callbackNode=null,i.callbackPriority=0,i.cancelPendingCommit=null;var J=j.lanes|j.childLanes;if(J|=mp,Ca(i,m,J,C,R,L),i===At&&(rt=At=null,dt=0),(j.subtreeFlags&10256)===0&&(j.flags&10256)===0||nh||(nh=!0,vm=J,wm=h,kk(Bo,function(){return bu(),null})),h=(j.flags&15990)!==0,(j.subtreeFlags&15990)!==0||h?(h=F.T,F.T=null,C=ve.p,ve.p=2,R=Bt,Bt|=4,fk(i,j),r2(j,i),XE(zm,i.containerInfo),gh=!!Lm,zm=Lm=null,i.current=j,e2(i,j.alternate,j),ad(),Bt=R,ve.p=C,F.T=h):i.current=j,nh?(nh=!1,Qi=i,ec=m):T2(i,J),J=i.pendingLanes,J===0&&(Ga=null),dd(j.stateNode),$r(i),u!==null)for(b=i.onRecoverableError,j=0;j<u.length;j++)J=u[j],b(J.value,{componentStack:J.stack});return(ec&3)!==0&&bu(),J=i.pendingLanes,(m&4194218)!==0&&(J&42)!==0?i===Sm?tc++:(tc=0,Sm=i):tc=0,nc(0),null}function T2(i,u){(i.pooledCacheLanes&=u)===0&&(u=i.pooledCache,u!=null&&(i.pooledCache=null,zl(u)))}function bu(){if(Qi!==null){var i=Qi,u=vm;vm=0;var h=xr(ec),m=F.T,b=ve.p;try{if(ve.p=32>h?32:h,F.T=null,Qi===null)var C=!1;else{h=wm,wm=null;var R=Qi,L=ec;if(Qi=null,ec=0,(Bt&6)!==0)throw Error(s(331));var j=Bt;if(Bt|=4,l2(R.current),i2(R,R.current,L,h),Bt=j,nc(0,!1),Cn&&typeof Cn.onPostCommitFiberRoot=="function")try{Cn.onPostCommitFiberRoot(er,R)}catch{}C=!0}return C}finally{ve.p=b,F.T=m,T2(i,u)}}return!1}function N2(i,u,h){u=Ps(h,u),u=Gp(i.stateNode,u,2),i=za(i,u,2),i!==null&&(Ci(i,2),$r(i))}function It(i,u,h){if(i.tag===3)N2(i,i,h);else for(;u!==null;){if(u.tag===3){N2(u,i,h);break}else if(u.tag===1){var m=u.stateNode;if(typeof u.type.getDerivedStateFromError=="function"||typeof m.componentDidCatch=="function"&&(Ga===null||!Ga.has(m))){i=Ps(h,i),h=Rv(2),m=za(u,h,2),m!==null&&(Iv(h,m,u,i),Ci(m,2),$r(m));break}}u=u.return}}function Em(i,u,h){var m=i.pingCache;if(m===null){m=i.pingCache=new bk;var b=new Set;m.set(u,b)}else b=m.get(u),b===void 0&&(b=new Set,m.set(u,b));b.has(h)||(gm=!0,b.add(h),i=Tk.bind(null,i,u,h),u.then(i,i))}function Tk(i,u,h){var m=i.pingCache;m!==null&&m.delete(u),i.pingedLanes|=i.suspendedLanes&h,i.warmLanes&=~h,At===i&&(dt&h)===h&&(jt===4||jt===3&&(dt&62914560)===dt&&300>fn()-bm?(Bt&2)===0&&yu(i,0):ym|=h,gu===dt&&(gu=0)),$r(i)}function E2(i,u){u===0&&(u=Si()),i=Ia(i,u),i!==null&&(Ci(i,u),$r(i))}function Nk(i){var u=i.memoizedState,h=0;u!==null&&(h=u.retryLane),E2(i,h)}function Ek(i,u){var h=0;switch(i.tag){case 13:var m=i.stateNode,b=i.memoizedState;b!==null&&(h=b.retryLane);break;case 19:m=i.stateNode;break;case 22:m=i.stateNode._retryCache;break;default:throw Error(s(314))}m!==null&&m.delete(u),E2(i,h)}function kk(i,u){return Fo(i,u)}var ah=null,vu=null,km=!1,ih=!1,Rm=!1,Zi=0;function $r(i){i!==vu&&i.next===null&&(vu===null?ah=vu=i:vu=vu.next=i),ih=!0,km||(km=!0,Ik(Rk))}function nc(i,u){if(!Rm&&ih){Rm=!0;do for(var h=!1,m=ah;m!==null;){if(i!==0){var b=m.pendingLanes;if(b===0)var C=0;else{var R=m.suspendedLanes,L=m.pingedLanes;C=(1<<31-On(42|i)+1)-1,C&=b&~(R&~L),C=C&201326677?C&201326677|1:C?C|2:0}C!==0&&(h=!0,I2(m,C))}else C=dt,C=wi(m,m===At?C:0),(C&3)===0||ms(m,C)||(h=!0,I2(m,C));m=m.next}while(h);Rm=!1}}function Rk(){ih=km=!1;var i=0;Zi!==0&&(zk()&&(i=Zi),Zi=0);for(var u=fn(),h=null,m=ah;m!==null;){var b=m.next,C=k2(m,u);C===0?(m.next=null,h===null?ah=b:h.next=b,b===null&&(vu=h)):(h=m,(i!==0||(C&3)!==0)&&(ih=!0)),m=b}nc(i)}function k2(i,u){for(var h=i.suspendedLanes,m=i.pingedLanes,b=i.expirationTimes,C=i.pendingLanes&-62914561;0<C;){var R=31-On(C),L=1<<R,j=b[R];j===-1?((L&h)===0||(L&m)!==0)&&(b[R]=cl(L,u)):j<=u&&(i.expiredLanes|=L),C&=~L}if(u=At,h=dt,h=wi(i,i===u?h:0),m=i.callbackNode,h===0||i===u&&Dt===2||i.cancelPendingCommit!==null)return m!==null&&m!==null&&Lo(m),i.callbackNode=null,i.callbackPriority=0;if((h&3)===0||ms(i,h)){if(u=h&-h,u===i.callbackPriority)return u;switch(m!==null&&Lo(m),xr(h)){case 2:case 8:h=zo;break;case 32:h=Bo;break;case 268435456:h=ud;break;default:h=Bo}return m=R2.bind(null,i),h=Fo(h,m),i.callbackPriority=u,i.callbackNode=h,u}return m!==null&&m!==null&&Lo(m),i.callbackPriority=2,i.callbackNode=null,2}function R2(i,u){var h=i.callbackNode;if(bu()&&i.callbackNode!==h)return null;var m=dt;return m=wi(i,i===At?m:0),m===0?null:(g2(i,m,u),k2(i,fn()),i.callbackNode!=null&&i.callbackNode===h?R2.bind(null,i):null)}function I2(i,u){if(bu())return null;g2(i,u,!0)}function Ik(i){Mk(function(){(Bt&6)!==0?Fo(yi,i):i()})}function Im(){return Zi===0&&(Zi=dl()),Zi}function _2(i){return i==null||typeof i=="symbol"||typeof i=="boolean"?null:typeof i=="function"?i:Ho(""+i)}function A2(i,u){var h=u.ownerDocument.createElement("input");return h.name=u.name,h.value=u.value,i.id&&h.setAttribute("form",i.id),u.parentNode.insertBefore(h,u),i=new FormData(i),h.parentNode.removeChild(h),i}function _k(i,u,h,m,b){if(u==="submit"&&h&&h.stateNode===b){var C=_2((b[Pn]||null).action),R=m.submitter;R&&(u=(u=R[Pn]||null)?_2(u.formAction):R.getAttribute("formAction"),u!==null&&(C=u,R=null));var L=new Di("action","action",null,m,b);i.push({event:L,listeners:[{instance:null,listener:function(){if(m.defaultPrevented){if(Zi!==0){var j=R?A2(b,R):new FormData(b);Bp(h,{pending:!0,data:j,method:b.method,action:C},null,j)}}else typeof C=="function"&&(L.preventDefault(),j=R?A2(b,R):new FormData(b),Bp(h,{pending:!0,data:j,method:b.method,action:C},C,j))},currentTarget:b}]})}}for(var _m=0;_m<$b.length;_m++){var Am=$b[_m],Ak=Am.toLowerCase(),Dk=Am[0].toUpperCase()+Am.slice(1);ir(Ak,"on"+Dk)}ir(bb,"onAnimationEnd"),ir(vb,"onAnimationIteration"),ir(wb,"onAnimationStart"),ir("dblclick","onDoubleClick"),ir("focusin","onFocus"),ir("focusout","onBlur"),ir(YE,"onTransitionRun"),ir(QE,"onTransitionStart"),ir(ZE,"onTransitionCancel"),ir(Sb,"onTransitionEnd"),$n("onMouseEnter",["mouseout","mouseover"]),$n("onMouseLeave",["mouseout","mouseover"]),$n("onPointerEnter",["pointerout","pointerover"]),$n("onPointerLeave",["pointerout","pointerover"]),sr("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),sr("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),sr("onBeforeInput",["compositionend","keypress","textInput","paste"]),sr("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),sr("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),sr("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var sc="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ok=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(sc));function D2(i,u){u=(u&4)!==0;for(var h=0;h<i.length;h++){var m=i[h],b=m.event;m=m.listeners;e:{var C=void 0;if(u)for(var R=m.length-1;0<=R;R--){var L=m[R],j=L.instance,J=L.currentTarget;if(L=L.listener,j!==C&&b.isPropagationStopped())break e;C=L,b.currentTarget=J;try{C(b)}catch(fe){jd(fe)}b.currentTarget=null,C=j}else for(R=0;R<m.length;R++){if(L=m[R],j=L.instance,J=L.currentTarget,L=L.listener,j!==C&&b.isPropagationStopped())break e;C=L,b.currentTarget=J;try{C(b)}catch(fe){jd(fe)}b.currentTarget=null,C=j}}}}function ut(i,u){var h=u[$i];h===void 0&&(h=u[$i]=new Set);var m=i+"__bubble";h.has(m)||(O2(u,i,2,!1),h.add(m))}function Dm(i,u,h){var m=0;u&&(m|=4),O2(h,i,m,u)}var oh="_reactListening"+Math.random().toString(36).slice(2);function Om(i){if(!i[oh]){i[oh]=!0,Uo.forEach(function(h){h!=="selectionchange"&&(Ok.has(h)||Dm(h,!1,i),Dm(h,!0,i))});var u=i.nodeType===9?i:i.ownerDocument;u===null||u[oh]||(u[oh]=!0,Dm("selectionchange",!1,u))}}function O2(i,u,h,m){switch(sw(u)){case 2:var b=iR;break;case 8:b=oR;break;default:b=qm}h=b.bind(null,u,h,i),b=void 0,!jo||u!=="touchstart"&&u!=="touchmove"&&u!=="wheel"||(b=!0),m?b!==void 0?i.addEventListener(u,h,{capture:!0,passive:b}):i.addEventListener(u,h,!0):b!==void 0?i.addEventListener(u,h,{passive:b}):i.addEventListener(u,h,!1)}function Pm(i,u,h,m,b){var C=m;if((u&1)===0&&(u&2)===0&&m!==null)e:for(;;){if(m===null)return;var R=m.tag;if(R===3||R===4){var L=m.stateNode.containerInfo;if(L===b||L.nodeType===8&&L.parentNode===b)break;if(R===4)for(R=m.return;R!==null;){var j=R.tag;if((j===3||j===4)&&(j=R.stateNode.containerInfo,j===b||j.nodeType===8&&j.parentNode===b))return;R=R.return}for(;L!==null;){if(R=br(L),R===null)return;if(j=R.tag,j===5||j===6||j===26||j===27){m=C=R;continue e}L=L.parentNode}}m=m.return}yd(function(){var J=C,fe=Ii(h),xe=[];e:{var ae=Cb.get(i);if(ae!==void 0){var ce=Di,Le=i;switch(i){case"keypress":if(_i(h)===0)break e;case"keydown":case"keyup":ce=np;break;case"focusin":Le="focus",ce=$l;break;case"focusout":Le="blur",ce=$l;break;case"beforeblur":case"afterblur":ce=$l;break;case"click":if(h.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":ce=bd;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":ce=Ko;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":ce=rp;break;case bb:case vb:case wb:ce=Kf;break;case Sb:ce=ap;break;case"scroll":case"scrollend":ce=qf;break;case"wheel":ce=op;break;case"copy":case"cut":case"paste":ce=Tl;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":ce=Sd;break;case"toggle":case"beforetoggle":ce=$d}var qe=(u&4)!==0,qt=!qe&&(i==="scroll"||i==="scrollend"),te=qe?ae!==null?ae+"Capture":null:ae;qe=[];for(var Z=J,se;Z!==null;){var me=Z;if(se=me.stateNode,me=me.tag,me!==5&&me!==26&&me!==27||se===null||te===null||(me=Br(Z,te),me!=null&&qe.push(rc(Z,me,se))),qt)break;Z=Z.return}0<qe.length&&(ae=new ce(ae,Le,null,h,fe),xe.push({event:ae,listeners:qe}))}}if((u&7)===0){e:{if(ae=i==="mouseover"||i==="pointerover",ce=i==="mouseout"||i==="pointerout",ae&&h!==wl&&(Le=h.relatedTarget||h.fromElement)&&(br(Le)||Le[nr]))break e;if((ce||ae)&&(ae=fe.window===fe?fe:(ae=fe.ownerDocument)?ae.defaultView||ae.parentWindow:window,ce?(Le=h.relatedTarget||h.toElement,ce=J,Le=Le?br(Le):null,Le!==null&&(qt=pe(Le),qe=Le.tag,Le!==qt||qe!==5&&qe!==27&&qe!==6)&&(Le=null)):(ce=null,Le=J),ce!==Le)){if(qe=bd,me="onMouseLeave",te="onMouseEnter",Z="mouse",(i==="pointerout"||i==="pointerover")&&(qe=Sd,me="onPointerLeave",te="onPointerEnter",Z="pointer"),qt=ce==null?ae:Fn(ce),se=Le==null?ae:Fn(Le),ae=new qe(me,Z+"leave",ce,h,fe),ae.target=qt,ae.relatedTarget=se,me=null,br(fe)===J&&(qe=new qe(te,Z+"enter",Le,h,fe),qe.target=se,qe.relatedTarget=qt,me=qe),qt=me,ce&&Le)t:{for(qe=ce,te=Le,Z=0,se=qe;se;se=wu(se))Z++;for(se=0,me=te;me;me=wu(me))se++;for(;0<Z-se;)qe=wu(qe),Z--;for(;0<se-Z;)te=wu(te),se--;for(;Z--;){if(qe===te||te!==null&&qe===te.alternate)break t;qe=wu(qe),te=wu(te)}qe=null}else qe=null;ce!==null&&P2(xe,ae,ce,qe,!1),Le!==null&&qt!==null&&P2(xe,qt,Le,qe,!0)}}e:{if(ae=J?Fn(J):window,ce=ae.nodeName&&ae.nodeName.toLowerCase(),ce==="select"||ce==="input"&&ae.type==="file")var De=Xn;else if(Ie(ae))if(Tn)De=Zo;else{De=lp;var st=up}else ce=ae.nodeName,!ce||ce.toLowerCase()!=="input"||ae.type!=="checkbox"&&ae.type!=="radio"?J&&zr(J.elementType)&&(De=Xn):De=cp;if(De&&(De=De(i,J))){Me(xe,De,h,fe);break e}st&&st(i,ae,J),i==="focusout"&&J&&ae.type==="number"&&J.memoizedProps.value!=null&&Wo(ae,"number",ae.value)}switch(st=J?Fn(J):window,i){case"focusin":(Ie(st)||st.contentEditable==="true")&&(Jo=st,hp=J,Il=null);break;case"focusout":Il=hp=Jo=null;break;case"mousedown":fp=!0;break;case"contextmenu":case"mouseup":case"dragend":fp=!1,yb(xe,h,fe);break;case"selectionchange":if(KE)break;case"keydown":case"keyup":yb(xe,h,fe)}var ze;if(T)e:{switch(i){case"compositionstart":var Ve="onCompositionStart";break e;case"compositionend":Ve="onCompositionEnd";break e;case"compositionupdate":Ve="onCompositionUpdate";break e}Ve=void 0}else ye?Y(i,h)&&(Ve="onCompositionEnd"):i==="keydown"&&h.keyCode===229&&(Ve="onCompositionStart");Ve&&(U&&h.locale!=="ko"&&(ye||Ve!=="onCompositionStart"?Ve==="onCompositionEnd"&&ye&&(ze=xd()):(ss=fe,qn="value"in ss?ss.value:ss.textContent,ye=!0)),st=uh(J,Ve),0<st.length&&(Ve=new El(Ve,i,null,h,fe),xe.push({event:Ve,listeners:st}),ze?Ve.data=ze:(ze=ie(h),ze!==null&&(Ve.data=ze)))),(ze=A?Ne(i,h):Ue(i,h))&&(Ve=uh(J,"onBeforeInput"),0<Ve.length&&(st=new El("onBeforeInput","beforeinput",null,h,fe),xe.push({event:st,listeners:Ve}),st.data=ze)),_k(xe,i,J,h,fe)}D2(xe,u)})}function rc(i,u,h){return{instance:i,listener:u,currentTarget:h}}function uh(i,u){for(var h=u+"Capture",m=[];i!==null;){var b=i,C=b.stateNode;b=b.tag,b!==5&&b!==26&&b!==27||C===null||(b=Br(i,h),b!=null&&m.unshift(rc(i,b,C)),b=Br(i,u),b!=null&&m.push(rc(i,b,C))),i=i.return}return m}function wu(i){if(i===null)return null;do i=i.return;while(i&&i.tag!==5&&i.tag!==27);return i||null}function P2(i,u,h,m,b){for(var C=u._reactName,R=[];h!==null&&h!==m;){var L=h,j=L.alternate,J=L.stateNode;if(L=L.tag,j!==null&&j===m)break;L!==5&&L!==26&&L!==27||J===null||(j=J,b?(J=Br(h,C),J!=null&&R.unshift(rc(h,J,j))):b||(J=Br(h,C),J!=null&&R.push(rc(h,J,j)))),h=h.return}R.length!==0&&i.push({event:u,listeners:R})}var Pk=/\r\n?/g,Fk=/\u0000|\uFFFD/g;function F2(i){return(typeof i=="string"?i:""+i).replace(Pk,`
`).replace(Fk,"")}function L2(i,u){return u=F2(u),F2(i)===u}function lh(){}function Nt(i,u,h,m,b,C){switch(h){case"children":typeof m=="string"?u==="body"||u==="textarea"&&m===""||Lr(i,m):(typeof m=="number"||typeof m=="bigint")&&u!=="body"&&Lr(i,""+m);break;case"className":$a(i,"class",m);break;case"tabIndex":$a(i,"tabindex",m);break;case"dir":case"role":case"viewBox":case"width":case"height":$a(i,h,m);break;case"style":vl(i,m,C);break;case"data":if(u!=="object"){$a(i,"data",m);break}case"src":case"href":if(m===""&&(u!=="a"||h!=="href")){i.removeAttribute(h);break}if(m==null||typeof m=="function"||typeof m=="symbol"||typeof m=="boolean"){i.removeAttribute(h);break}m=Ho(""+m),i.setAttribute(h,m);break;case"action":case"formAction":if(typeof m=="function"){i.setAttribute(h,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}else typeof C=="function"&&(h==="formAction"?(u!=="input"&&Nt(i,u,"name",b.name,b,null),Nt(i,u,"formEncType",b.formEncType,b,null),Nt(i,u,"formMethod",b.formMethod,b,null),Nt(i,u,"formTarget",b.formTarget,b,null)):(Nt(i,u,"encType",b.encType,b,null),Nt(i,u,"method",b.method,b,null),Nt(i,u,"target",b.target,b,null)));if(m==null||typeof m=="symbol"||typeof m=="boolean"){i.removeAttribute(h);break}m=Ho(""+m),i.setAttribute(h,m);break;case"onClick":m!=null&&(i.onclick=lh);break;case"onScroll":m!=null&&ut("scroll",i);break;case"onScrollEnd":m!=null&&ut("scrollend",i);break;case"dangerouslySetInnerHTML":if(m!=null){if(typeof m!="object"||!("__html"in m))throw Error(s(61));if(h=m.__html,h!=null){if(b.children!=null)throw Error(s(60));i.innerHTML=h}}break;case"multiple":i.multiple=m&&typeof m!="function"&&typeof m!="symbol";break;case"muted":i.muted=m&&typeof m!="function"&&typeof m!="symbol";break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":break;case"autoFocus":break;case"xlinkHref":if(m==null||typeof m=="function"||typeof m=="boolean"||typeof m=="symbol"){i.removeAttribute("xlink:href");break}h=Ho(""+m),i.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",h);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":m!=null&&typeof m!="function"&&typeof m!="symbol"?i.setAttribute(h,""+m):i.removeAttribute(h);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":m&&typeof m!="function"&&typeof m!="symbol"?i.setAttribute(h,""):i.removeAttribute(h);break;case"capture":case"download":m===!0?i.setAttribute(h,""):m!==!1&&m!=null&&typeof m!="function"&&typeof m!="symbol"?i.setAttribute(h,m):i.removeAttribute(h);break;case"cols":case"rows":case"size":case"span":m!=null&&typeof m!="function"&&typeof m!="symbol"&&!isNaN(m)&&1<=m?i.setAttribute(h,m):i.removeAttribute(h);break;case"rowSpan":case"start":m==null||typeof m=="function"||typeof m=="symbol"||isNaN(m)?i.removeAttribute(h):i.setAttribute(h,m);break;case"popover":ut("beforetoggle",i),ut("toggle",i),ki(i,"popover",m);break;case"xlinkActuate":rr(i,"http://www.w3.org/1999/xlink","xlink:actuate",m);break;case"xlinkArcrole":rr(i,"http://www.w3.org/1999/xlink","xlink:arcrole",m);break;case"xlinkRole":rr(i,"http://www.w3.org/1999/xlink","xlink:role",m);break;case"xlinkShow":rr(i,"http://www.w3.org/1999/xlink","xlink:show",m);break;case"xlinkTitle":rr(i,"http://www.w3.org/1999/xlink","xlink:title",m);break;case"xlinkType":rr(i,"http://www.w3.org/1999/xlink","xlink:type",m);break;case"xmlBase":rr(i,"http://www.w3.org/XML/1998/namespace","xml:base",m);break;case"xmlLang":rr(i,"http://www.w3.org/XML/1998/namespace","xml:lang",m);break;case"xmlSpace":rr(i,"http://www.w3.org/XML/1998/namespace","xml:space",m);break;case"is":ki(i,"is",m);break;case"innerText":case"textContent":break;default:(!(2<h.length)||h[0]!=="o"&&h[0]!=="O"||h[1]!=="n"&&h[1]!=="N")&&(h=Hf.get(h)||h,ki(i,h,m))}}function Fm(i,u,h,m,b,C){switch(h){case"style":vl(i,m,C);break;case"dangerouslySetInnerHTML":if(m!=null){if(typeof m!="object"||!("__html"in m))throw Error(s(61));if(h=m.__html,h!=null){if(b.children!=null)throw Error(s(60));i.innerHTML=h}}break;case"children":typeof m=="string"?Lr(i,m):(typeof m=="number"||typeof m=="bigint")&&Lr(i,""+m);break;case"onScroll":m!=null&&ut("scroll",i);break;case"onScrollEnd":m!=null&&ut("scrollend",i);break;case"onClick":m!=null&&(i.onclick=lh);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":break;case"innerText":case"textContent":break;default:if(!pl.hasOwnProperty(h))e:{if(h[0]==="o"&&h[1]==="n"&&(b=h.endsWith("Capture"),u=h.slice(2,b?h.length-7:void 0),C=i[Pn]||null,C=C!=null?C[h]:null,typeof C=="function"&&i.removeEventListener(u,C,b),typeof m=="function")){typeof C!="function"&&C!==null&&(h in i?i[h]=null:i.hasAttribute(h)&&i.removeAttribute(h)),i.addEventListener(u,m,b);break e}h in i?i[h]=m:m===!0?i.setAttribute(h,""):ki(i,h,m)}}}function kn(i,u,h){switch(u){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":ut("error",i),ut("load",i);var m=!1,b=!1,C;for(C in h)if(h.hasOwnProperty(C)){var R=h[C];if(R!=null)switch(C){case"src":m=!0;break;case"srcSet":b=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(s(137,u));default:Nt(i,u,C,R,h,null)}}b&&Nt(i,u,"srcSet",h.srcSet,h,null),m&&Nt(i,u,"src",h.src,h,null);return;case"input":ut("invalid",i);var L=C=R=b=null,j=null,J=null;for(m in h)if(h.hasOwnProperty(m)){var fe=h[m];if(fe!=null)switch(m){case"name":b=fe;break;case"type":R=fe;break;case"checked":j=fe;break;case"defaultChecked":J=fe;break;case"value":C=fe;break;case"defaultValue":L=fe;break;case"children":case"dangerouslySetInnerHTML":if(fe!=null)throw Error(s(137,u));break;default:Nt(i,u,m,fe,h,null)}}yl(i,C,L,j,J,R,b,!1),Ri(i);return;case"select":ut("invalid",i),m=R=C=null;for(b in h)if(h.hasOwnProperty(b)&&(L=h[b],L!=null))switch(b){case"value":C=L;break;case"defaultValue":R=L;break;case"multiple":m=L;default:Nt(i,u,b,L,h,null)}u=C,h=R,i.multiple=!!m,u!=null?Na(i,!!m,u,!1):h!=null&&Na(i,!!m,h,!0);return;case"textarea":ut("invalid",i),C=b=m=null;for(R in h)if(h.hasOwnProperty(R)&&(L=h[R],L!=null))switch(R){case"value":m=L;break;case"defaultValue":b=L;break;case"children":C=L;break;case"dangerouslySetInnerHTML":if(L!=null)throw Error(s(91));break;default:Nt(i,u,R,L,h,null)}xl(i,m,b,C),Ri(i);return;case"option":for(j in h)if(h.hasOwnProperty(j)&&(m=h[j],m!=null))switch(j){case"selected":i.selected=m&&typeof m!="function"&&typeof m!="symbol";break;default:Nt(i,u,j,m,h,null)}return;case"dialog":ut("cancel",i),ut("close",i);break;case"iframe":case"object":ut("load",i);break;case"video":case"audio":for(m=0;m<sc.length;m++)ut(sc[m],i);break;case"image":ut("error",i),ut("load",i);break;case"details":ut("toggle",i);break;case"embed":case"source":case"link":ut("error",i),ut("load",i);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(J in h)if(h.hasOwnProperty(J)&&(m=h[J],m!=null))switch(J){case"children":case"dangerouslySetInnerHTML":throw Error(s(137,u));default:Nt(i,u,J,m,h,null)}return;default:if(zr(u)){for(fe in h)h.hasOwnProperty(fe)&&(m=h[fe],m!==void 0&&Fm(i,u,fe,m,h,void 0));return}}for(L in h)h.hasOwnProperty(L)&&(m=h[L],m!=null&&Nt(i,u,L,m,h,null))}function Lk(i,u,h,m){switch(u){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var b=null,C=null,R=null,L=null,j=null,J=null,fe=null;for(ce in h){var xe=h[ce];if(h.hasOwnProperty(ce)&&xe!=null)switch(ce){case"checked":break;case"value":break;case"defaultValue":j=xe;default:m.hasOwnProperty(ce)||Nt(i,u,ce,null,m,xe)}}for(var ae in m){var ce=m[ae];if(xe=h[ae],m.hasOwnProperty(ae)&&(ce!=null||xe!=null))switch(ae){case"type":C=ce;break;case"name":b=ce;break;case"checked":J=ce;break;case"defaultChecked":fe=ce;break;case"value":R=ce;break;case"defaultValue":L=ce;break;case"children":case"dangerouslySetInnerHTML":if(ce!=null)throw Error(s(137,u));break;default:ce!==xe&&Nt(i,u,ae,ce,m,xe)}}Ta(i,R,L,j,J,fe,C,b);return;case"select":ce=R=L=ae=null;for(C in h)if(j=h[C],h.hasOwnProperty(C)&&j!=null)switch(C){case"value":break;case"multiple":ce=j;default:m.hasOwnProperty(C)||Nt(i,u,C,null,m,j)}for(b in m)if(C=m[b],j=h[b],m.hasOwnProperty(b)&&(C!=null||j!=null))switch(b){case"value":ae=C;break;case"defaultValue":L=C;break;case"multiple":R=C;default:C!==j&&Nt(i,u,b,C,m,j)}u=L,h=R,m=ce,ae!=null?Na(i,!!h,ae,!1):!!m!=!!h&&(u!=null?Na(i,!!h,u,!0):Na(i,!!h,h?[]:"",!1));return;case"textarea":ce=ae=null;for(L in h)if(b=h[L],h.hasOwnProperty(L)&&b!=null&&!m.hasOwnProperty(L))switch(L){case"value":break;case"children":break;default:Nt(i,u,L,null,m,b)}for(R in m)if(b=m[R],C=h[R],m.hasOwnProperty(R)&&(b!=null||C!=null))switch(R){case"value":ae=b;break;case"defaultValue":ce=b;break;case"children":break;case"dangerouslySetInnerHTML":if(b!=null)throw Error(s(91));break;default:b!==C&&Nt(i,u,R,b,m,C)}md(i,ae,ce);return;case"option":for(var Le in h)if(ae=h[Le],h.hasOwnProperty(Le)&&ae!=null&&!m.hasOwnProperty(Le))switch(Le){case"selected":i.selected=!1;break;default:Nt(i,u,Le,null,m,ae)}for(j in m)if(ae=m[j],ce=h[j],m.hasOwnProperty(j)&&ae!==ce&&(ae!=null||ce!=null))switch(j){case"selected":i.selected=ae&&typeof ae!="function"&&typeof ae!="symbol";break;default:Nt(i,u,j,ae,m,ce)}return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var qe in h)ae=h[qe],h.hasOwnProperty(qe)&&ae!=null&&!m.hasOwnProperty(qe)&&Nt(i,u,qe,null,m,ae);for(J in m)if(ae=m[J],ce=h[J],m.hasOwnProperty(J)&&ae!==ce&&(ae!=null||ce!=null))switch(J){case"children":case"dangerouslySetInnerHTML":if(ae!=null)throw Error(s(137,u));break;default:Nt(i,u,J,ae,m,ce)}return;default:if(zr(u)){for(var qt in h)ae=h[qt],h.hasOwnProperty(qt)&&ae!==void 0&&!m.hasOwnProperty(qt)&&Fm(i,u,qt,void 0,m,ae);for(fe in m)ae=m[fe],ce=h[fe],!m.hasOwnProperty(fe)||ae===ce||ae===void 0&&ce===void 0||Fm(i,u,fe,ae,m,ce);return}}for(var te in h)ae=h[te],h.hasOwnProperty(te)&&ae!=null&&!m.hasOwnProperty(te)&&Nt(i,u,te,null,m,ae);for(xe in m)ae=m[xe],ce=h[xe],!m.hasOwnProperty(xe)||ae===ce||ae==null&&ce==null||Nt(i,u,xe,ae,m,ce)}var Lm=null,zm=null;function ch(i){return i.nodeType===9?i:i.ownerDocument}function z2(i){switch(i){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function B2(i,u){if(i===0)switch(u){case"svg":return 1;case"math":return 2;default:return 0}return i===1&&u==="foreignObject"?0:i}function Bm(i,u){return i==="textarea"||i==="noscript"||typeof u.children=="string"||typeof u.children=="number"||typeof u.children=="bigint"||typeof u.dangerouslySetInnerHTML=="object"&&u.dangerouslySetInnerHTML!==null&&u.dangerouslySetInnerHTML.__html!=null}var Mm=null;function zk(){var i=window.event;return i&&i.type==="popstate"?i===Mm?!1:(Mm=i,!0):(Mm=null,!1)}var M2=typeof setTimeout=="function"?setTimeout:void 0,Bk=typeof clearTimeout=="function"?clearTimeout:void 0,U2=typeof Promise=="function"?Promise:void 0,Mk=typeof queueMicrotask=="function"?queueMicrotask:typeof U2<"u"?function(i){return U2.resolve(null).then(i).catch(Uk)}:M2;function Uk(i){setTimeout(function(){throw i})}function Um(i,u){var h=u,m=0;do{var b=h.nextSibling;if(i.removeChild(h),b&&b.nodeType===8)if(h=b.data,h==="/$"){if(m===0){i.removeChild(b),hc(u);return}m--}else h!=="$"&&h!=="$?"&&h!=="$!"||m++;h=b}while(h);hc(u)}function Vm(i){var u=i.firstChild;for(u&&u.nodeType===10&&(u=u.nextSibling);u;){var h=u;switch(u=u.nextSibling,h.nodeName){case"HTML":case"HEAD":case"BODY":Vm(h),Ni(h);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if(h.rel.toLowerCase()==="stylesheet")continue}i.removeChild(h)}}function Vk(i,u,h,m){for(;i.nodeType===1;){var b=h;if(i.nodeName.toLowerCase()!==u.toLowerCase()){if(!m&&(i.nodeName!=="INPUT"||i.type!=="hidden"))break}else if(m){if(!i[Fr])switch(u){case"meta":if(!i.hasAttribute("itemprop"))break;return i;case"link":if(C=i.getAttribute("rel"),C==="stylesheet"&&i.hasAttribute("data-precedence"))break;if(C!==b.rel||i.getAttribute("href")!==(b.href==null?null:b.href)||i.getAttribute("crossorigin")!==(b.crossOrigin==null?null:b.crossOrigin)||i.getAttribute("title")!==(b.title==null?null:b.title))break;return i;case"style":if(i.hasAttribute("data-precedence"))break;return i;case"script":if(C=i.getAttribute("src"),(C!==(b.src==null?null:b.src)||i.getAttribute("type")!==(b.type==null?null:b.type)||i.getAttribute("crossorigin")!==(b.crossOrigin==null?null:b.crossOrigin))&&C&&i.hasAttribute("async")&&!i.hasAttribute("itemprop"))break;return i;default:return i}}else if(u==="input"&&i.type==="hidden"){var C=b.name==null?null:""+b.name;if(b.type==="hidden"&&i.getAttribute("name")===C)return i}else return i;if(i=lr(i.nextSibling),i===null)break}return null}function Wk(i,u,h){if(u==="")return null;for(;i.nodeType!==3;)if((i.nodeType!==1||i.nodeName!=="INPUT"||i.type!=="hidden")&&!h||(i=lr(i.nextSibling),i===null))return null;return i}function lr(i){for(;i!=null;i=i.nextSibling){var u=i.nodeType;if(u===1||u===3)break;if(u===8){if(u=i.data,u==="$"||u==="$!"||u==="$?"||u==="F!"||u==="F")break;if(u==="/$")return null}}return i}function V2(i){i=i.previousSibling;for(var u=0;i;){if(i.nodeType===8){var h=i.data;if(h==="$"||h==="$!"||h==="$?"){if(u===0)return i;u--}else h==="/$"&&u++}i=i.previousSibling}return null}function W2(i,u,h){switch(u=ch(h),i){case"html":if(i=u.documentElement,!i)throw Error(s(452));return i;case"head":if(i=u.head,!i)throw Error(s(453));return i;case"body":if(i=u.body,!i)throw Error(s(454));return i;default:throw Error(s(451))}}var Ws=new Map,G2=new Set;function dh(i){return typeof i.getRootNode=="function"?i.getRootNode():i.ownerDocument}var na=ve.d;ve.d={f:Gk,r:Hk,D:jk,C:qk,L:Xk,m:Kk,X:Qk,S:Yk,M:Zk};function Gk(){var i=na.f(),u=sh();return i||u}function Hk(i){var u=pn(i);u!==null&&u.tag===5&&u.type==="form"?yv(u):na.r(i)}var Su=typeof document>"u"?null:document;function H2(i,u,h){var m=Su;if(m&&typeof u=="string"&&u){var b=jn(u);b='link[rel="'+i+'"][href="'+b+'"]',typeof h=="string"&&(b+='[crossorigin="'+h+'"]'),G2.has(b)||(G2.add(b),i={rel:i,crossOrigin:h,href:u},m.querySelector(b)===null&&(u=m.createElement("link"),kn(u,"link",i),Wt(u),m.head.appendChild(u)))}}function jk(i){na.D(i),H2("dns-prefetch",i,null)}function qk(i,u){na.C(i,u),H2("preconnect",i,u)}function Xk(i,u,h){na.L(i,u,h);var m=Su;if(m&&i&&u){var b='link[rel="preload"][as="'+jn(u)+'"]';u==="image"&&h&&h.imageSrcSet?(b+='[imagesrcset="'+jn(h.imageSrcSet)+'"]',typeof h.imageSizes=="string"&&(b+='[imagesizes="'+jn(h.imageSizes)+'"]')):b+='[href="'+jn(i)+'"]';var C=b;switch(u){case"style":C=Cu(i);break;case"script":C=$u(i)}Ws.has(C)||(i=B({rel:"preload",href:u==="image"&&h&&h.imageSrcSet?void 0:i,as:u},h),Ws.set(C,i),m.querySelector(b)!==null||u==="style"&&m.querySelector(ac(C))||u==="script"&&m.querySelector(ic(C))||(u=m.createElement("link"),kn(u,"link",i),Wt(u),m.head.appendChild(u)))}}function Kk(i,u){na.m(i,u);var h=Su;if(h&&i){var m=u&&typeof u.as=="string"?u.as:"script",b='link[rel="modulepreload"][as="'+jn(m)+'"][href="'+jn(i)+'"]',C=b;switch(m){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":C=$u(i)}if(!Ws.has(C)&&(i=B({rel:"modulepreload",href:i},u),Ws.set(C,i),h.querySelector(b)===null)){switch(m){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(h.querySelector(ic(C)))return}m=h.createElement("link"),kn(m,"link",i),Wt(m),h.head.appendChild(m)}}}function Yk(i,u,h){na.S(i,u,h);var m=Su;if(m&&i){var b=_s(m).hoistableStyles,C=Cu(i);u=u||"default";var R=b.get(C);if(!R){var L={loading:0,preload:null};if(R=m.querySelector(ac(C)))L.loading=5;else{i=B({rel:"stylesheet",href:i,"data-precedence":u},h),(h=Ws.get(C))&&Wm(i,h);var j=R=m.createElement("link");Wt(j),kn(j,"link",i),j._p=new Promise(function(J,fe){j.onload=J,j.onerror=fe}),j.addEventListener("load",function(){L.loading|=1}),j.addEventListener("error",function(){L.loading|=2}),L.loading|=4,hh(R,u,m)}R={type:"stylesheet",instance:R,count:1,state:L},b.set(C,R)}}}function Qk(i,u){na.X(i,u);var h=Su;if(h&&i){var m=_s(h).hoistableScripts,b=$u(i),C=m.get(b);C||(C=h.querySelector(ic(b)),C||(i=B({src:i,async:!0},u),(u=Ws.get(b))&&Gm(i,u),C=h.createElement("script"),Wt(C),kn(C,"link",i),h.head.appendChild(C)),C={type:"script",instance:C,count:1,state:null},m.set(b,C))}}function Zk(i,u){na.M(i,u);var h=Su;if(h&&i){var m=_s(h).hoistableScripts,b=$u(i),C=m.get(b);C||(C=h.querySelector(ic(b)),C||(i=B({src:i,async:!0,type:"module"},u),(u=Ws.get(b))&&Gm(i,u),C=h.createElement("script"),Wt(C),kn(C,"link",i),h.head.appendChild(C)),C={type:"script",instance:C,count:1,state:null},m.set(b,C))}}function j2(i,u,h,m){var b=(b=Ct.current)?dh(b):null;if(!b)throw Error(s(446));switch(i){case"meta":case"title":return null;case"style":return typeof h.precedence=="string"&&typeof h.href=="string"?(u=Cu(h.href),h=_s(b).hoistableStyles,m=h.get(u),m||(m={type:"style",instance:null,count:0,state:null},h.set(u,m)),m):{type:"void",instance:null,count:0,state:null};case"link":if(h.rel==="stylesheet"&&typeof h.href=="string"&&typeof h.precedence=="string"){i=Cu(h.href);var C=_s(b).hoistableStyles,R=C.get(i);if(R||(b=b.ownerDocument||b,R={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},C.set(i,R),(C=b.querySelector(ac(i)))&&!C._p&&(R.instance=C,R.state.loading=5),Ws.has(i)||(h={rel:"preload",as:"style",href:h.href,crossOrigin:h.crossOrigin,integrity:h.integrity,media:h.media,hrefLang:h.hrefLang,referrerPolicy:h.referrerPolicy},Ws.set(i,h),C||Jk(b,i,h,R.state))),u&&m===null)throw Error(s(528,""));return R}if(u&&m!==null)throw Error(s(529,""));return null;case"script":return u=h.async,h=h.src,typeof h=="string"&&u&&typeof u!="function"&&typeof u!="symbol"?(u=$u(h),h=_s(b).hoistableScripts,m=h.get(u),m||(m={type:"script",instance:null,count:0,state:null},h.set(u,m)),m):{type:"void",instance:null,count:0,state:null};default:throw Error(s(444,i))}}function Cu(i){return'href="'+jn(i)+'"'}function ac(i){return'link[rel="stylesheet"]['+i+"]"}function q2(i){return B({},i,{"data-precedence":i.precedence,precedence:null})}function Jk(i,u,h,m){i.querySelector('link[rel="preload"][as="style"]['+u+"]")?m.loading=1:(u=i.createElement("link"),m.preload=u,u.addEventListener("load",function(){return m.loading|=1}),u.addEventListener("error",function(){return m.loading|=2}),kn(u,"link",h),Wt(u),i.head.appendChild(u))}function $u(i){return'[src="'+jn(i)+'"]'}function ic(i){return"script[async]"+i}function X2(i,u,h){if(u.count++,u.instance===null)switch(u.type){case"style":var m=i.querySelector('style[data-href~="'+jn(h.href)+'"]');if(m)return u.instance=m,Wt(m),m;var b=B({},h,{"data-href":h.href,"data-precedence":h.precedence,href:null,precedence:null});return m=(i.ownerDocument||i).createElement("style"),Wt(m),kn(m,"style",b),hh(m,h.precedence,i),u.instance=m;case"stylesheet":b=Cu(h.href);var C=i.querySelector(ac(b));if(C)return u.state.loading|=4,u.instance=C,Wt(C),C;m=q2(h),(b=Ws.get(b))&&Wm(m,b),C=(i.ownerDocument||i).createElement("link"),Wt(C);var R=C;return R._p=new Promise(function(L,j){R.onload=L,R.onerror=j}),kn(C,"link",m),u.state.loading|=4,hh(C,h.precedence,i),u.instance=C;case"script":return C=$u(h.src),(b=i.querySelector(ic(C)))?(u.instance=b,Wt(b),b):(m=h,(b=Ws.get(C))&&(m=B({},h),Gm(m,b)),i=i.ownerDocument||i,b=i.createElement("script"),Wt(b),kn(b,"link",m),i.head.appendChild(b),u.instance=b);case"void":return null;default:throw Error(s(443,u.type))}else u.type==="stylesheet"&&(u.state.loading&4)===0&&(m=u.instance,u.state.loading|=4,hh(m,h.precedence,i));return u.instance}function hh(i,u,h){for(var m=h.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),b=m.length?m[m.length-1]:null,C=b,R=0;R<m.length;R++){var L=m[R];if(L.dataset.precedence===u)C=L;else if(C!==b)break}C?C.parentNode.insertBefore(i,C.nextSibling):(u=h.nodeType===9?h.head:h,u.insertBefore(i,u.firstChild))}function Wm(i,u){i.crossOrigin==null&&(i.crossOrigin=u.crossOrigin),i.referrerPolicy==null&&(i.referrerPolicy=u.referrerPolicy),i.title==null&&(i.title=u.title)}function Gm(i,u){i.crossOrigin==null&&(i.crossOrigin=u.crossOrigin),i.referrerPolicy==null&&(i.referrerPolicy=u.referrerPolicy),i.integrity==null&&(i.integrity=u.integrity)}var fh=null;function K2(i,u,h){if(fh===null){var m=new Map,b=fh=new Map;b.set(h,m)}else b=fh,m=b.get(h),m||(m=new Map,b.set(h,m));if(m.has(i))return m;for(m.set(i,null),h=h.getElementsByTagName(i),b=0;b<h.length;b++){var C=h[b];if(!(C[Fr]||C[Jt]||i==="link"&&C.getAttribute("rel")==="stylesheet")&&C.namespaceURI!=="http://www.w3.org/2000/svg"){var R=C.getAttribute(u)||"";R=i+R;var L=m.get(R);L?L.push(C):m.set(R,[C])}}return m}function Y2(i,u,h){i=i.ownerDocument||i,i.head.insertBefore(h,u==="title"?i.querySelector("head > title"):null)}function eR(i,u,h){if(h===1||u.itemProp!=null)return!1;switch(i){case"meta":case"title":return!0;case"style":if(typeof u.precedence!="string"||typeof u.href!="string"||u.href==="")break;return!0;case"link":if(typeof u.rel!="string"||typeof u.href!="string"||u.href===""||u.onLoad||u.onError)break;switch(u.rel){case"stylesheet":return i=u.disabled,typeof u.precedence=="string"&&i==null;default:return!0}case"script":if(u.async&&typeof u.async!="function"&&typeof u.async!="symbol"&&!u.onLoad&&!u.onError&&u.src&&typeof u.src=="string")return!0}return!1}function Q2(i){return!(i.type==="stylesheet"&&(i.state.loading&3)===0)}var oc=null;function tR(){}function nR(i,u,h){if(oc===null)throw Error(s(475));var m=oc;if(u.type==="stylesheet"&&(typeof h.media!="string"||matchMedia(h.media).matches!==!1)&&(u.state.loading&4)===0){if(u.instance===null){var b=Cu(h.href),C=i.querySelector(ac(b));if(C){i=C._p,i!==null&&typeof i=="object"&&typeof i.then=="function"&&(m.count++,m=ph.bind(m),i.then(m,m)),u.state.loading|=4,u.instance=C,Wt(C);return}C=i.ownerDocument||i,h=q2(h),(b=Ws.get(b))&&Wm(h,b),C=C.createElement("link"),Wt(C);var R=C;R._p=new Promise(function(L,j){R.onload=L,R.onerror=j}),kn(C,"link",h),u.instance=C}m.stylesheets===null&&(m.stylesheets=new Map),m.stylesheets.set(u,i),(i=u.state.preload)&&(u.state.loading&3)===0&&(m.count++,u=ph.bind(m),i.addEventListener("load",u),i.addEventListener("error",u))}}function sR(){if(oc===null)throw Error(s(475));var i=oc;return i.stylesheets&&i.count===0&&Hm(i,i.stylesheets),0<i.count?function(u){var h=setTimeout(function(){if(i.stylesheets&&Hm(i,i.stylesheets),i.unsuspend){var m=i.unsuspend;i.unsuspend=null,m()}},6e4);return i.unsuspend=u,function(){i.unsuspend=null,clearTimeout(h)}}:null}function ph(){if(this.count--,this.count===0){if(this.stylesheets)Hm(this,this.stylesheets);else if(this.unsuspend){var i=this.unsuspend;this.unsuspend=null,i()}}}var mh=null;function Hm(i,u){i.stylesheets=null,i.unsuspend!==null&&(i.count++,mh=new Map,u.forEach(rR,i),mh=null,ph.call(i))}function rR(i,u){if(!(u.state.loading&4)){var h=mh.get(i);if(h)var m=h.get(null);else{h=new Map,mh.set(i,h);for(var b=i.querySelectorAll("link[data-precedence],style[data-precedence]"),C=0;C<b.length;C++){var R=b[C];(R.nodeName==="LINK"||R.getAttribute("media")!=="not all")&&(h.set(R.dataset.precedence,R),m=R)}m&&h.set(null,m)}b=u.instance,R=b.getAttribute("data-precedence"),C=h.get(R)||m,C===m&&h.set(null,b),h.set(R,b),this.count++,m=ph.bind(this),b.addEventListener("load",m),b.addEventListener("error",m),C?C.parentNode.insertBefore(b,C.nextSibling):(i=i.nodeType===9?i.head:i,i.insertBefore(b,i.firstChild)),u.state.loading|=4}}var uc={$$typeof:y,Provider:null,Consumer:null,_currentValue:Xe,_currentValue2:Xe,_threadCount:0};function aR(i,u,h,m,b,C,R,L){this.tag=1,this.containerInfo=i,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=Sa(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Sa(0),this.hiddenUpdates=Sa(null),this.identifierPrefix=m,this.onUncaughtError=b,this.onCaughtError=C,this.onRecoverableError=R,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=L,this.incompleteTransitions=new Map}function Z2(i,u,h,m,b,C,R,L,j,J,fe,xe){return i=new aR(i,u,h,R,L,j,J,xe),u=1,C===!0&&(u|=24),C=Us(3,null,null,u),i.current=C,C.stateNode=i,u=Cp(),u.refCount++,i.pooledCache=u,u.refCount++,C.memoizedState={element:m,isDehydrated:h,cache:u},sm(C),i}function J2(i){return i?(i=nu,i):nu}function ew(i,u,h,m,b,C){b=J2(b),m.context===null?m.context=b:m.pendingContext=b,m=La(u),m.payload={element:h},C=C===void 0?null:C,C!==null&&(m.callback=C),h=za(i,m,u),h!==null&&(Yn(h,i,u),Hl(h,i,u))}function tw(i,u){if(i=i.memoizedState,i!==null&&i.dehydrated!==null){var h=i.retryLane;i.retryLane=h!==0&&h<u?h:u}}function jm(i,u){tw(i,u),(i=i.alternate)&&tw(i,u)}function nw(i){if(i.tag===13){var u=Ia(i,67108864);u!==null&&Yn(u,i,67108864),jm(i,67108864)}}var gh=!0;function iR(i,u,h,m){var b=F.T;F.T=null;var C=ve.p;try{ve.p=2,qm(i,u,h,m)}finally{ve.p=C,F.T=b}}function oR(i,u,h,m){var b=F.T;F.T=null;var C=ve.p;try{ve.p=8,qm(i,u,h,m)}finally{ve.p=C,F.T=b}}function qm(i,u,h,m){if(gh){var b=Xm(m);if(b===null)Pm(i,u,m,yh,h),rw(i,m);else if(lR(b,i,u,h,m))m.stopPropagation();else if(rw(i,m),u&4&&-1<uR.indexOf(i)){for(;b!==null;){var C=pn(b);if(C!==null)switch(C.tag){case 3:if(C=C.stateNode,C.current.memoizedState.isDehydrated){var R=tr(C.pendingLanes);if(R!==0){var L=C;for(L.pendingLanes|=2,L.entangledLanes|=2;R;){var j=1<<31-On(R);L.entanglements[1]|=j,R&=~j}$r(C),(Bt&6)===0&&(eh=fn()+500,nc(0))}}break;case 13:L=Ia(C,2),L!==null&&Yn(L,C,2),sh(),jm(C,2)}if(C=Xm(m),C===null&&Pm(i,u,m,yh,h),C===b)break;b=C}b!==null&&m.stopPropagation()}else Pm(i,u,m,null,h)}}function Xm(i){return i=Ii(i),Km(i)}var yh=null;function Km(i){if(yh=null,i=br(i),i!==null){var u=pe(i);if(u===null)i=null;else{var h=u.tag;if(h===13){if(i=Se(u),i!==null)return i;i=null}else if(h===3){if(u.stateNode.current.memoizedState.isDehydrated)return u.tag===3?u.stateNode.containerInfo:null;i=null}else u!==i&&(i=null)}}return yh=i,null}function sw(i){switch(i){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(id()){case yi:return 2;case zo:return 8;case Bo:case od:return 32;case ud:return 268435456;default:return 32}default:return 32}}var Ym=!1,Ha=null,ja=null,qa=null,lc=new Map,cc=new Map,Xa=[],uR="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function rw(i,u){switch(i){case"focusin":case"focusout":Ha=null;break;case"dragenter":case"dragleave":ja=null;break;case"mouseover":case"mouseout":qa=null;break;case"pointerover":case"pointerout":lc.delete(u.pointerId);break;case"gotpointercapture":case"lostpointercapture":cc.delete(u.pointerId)}}function dc(i,u,h,m,b,C){return i===null||i.nativeEvent!==C?(i={blockedOn:u,domEventName:h,eventSystemFlags:m,nativeEvent:C,targetContainers:[b]},u!==null&&(u=pn(u),u!==null&&nw(u)),i):(i.eventSystemFlags|=m,u=i.targetContainers,b!==null&&u.indexOf(b)===-1&&u.push(b),i)}function lR(i,u,h,m,b){switch(u){case"focusin":return Ha=dc(Ha,i,u,h,m,b),!0;case"dragenter":return ja=dc(ja,i,u,h,m,b),!0;case"mouseover":return qa=dc(qa,i,u,h,m,b),!0;case"pointerover":var C=b.pointerId;return lc.set(C,dc(lc.get(C)||null,i,u,h,m,b)),!0;case"gotpointercapture":return C=b.pointerId,cc.set(C,dc(cc.get(C)||null,i,u,h,m,b)),!0}return!1}function aw(i){var u=br(i.target);if(u!==null){var h=pe(u);if(h!==null){if(u=h.tag,u===13){if(u=Se(h),u!==null){i.blockedOn=u,Lt(i.priority,function(){if(h.tag===13){var m=ws(),b=Ia(h,m);b!==null&&Yn(b,h,m),jm(h,m)}});return}}else if(u===3&&h.stateNode.current.memoizedState.isDehydrated){i.blockedOn=h.tag===3?h.stateNode.containerInfo:null;return}}}i.blockedOn=null}function xh(i){if(i.blockedOn!==null)return!1;for(var u=i.targetContainers;0<u.length;){var h=Xm(i.nativeEvent);if(h===null){h=i.nativeEvent;var m=new h.constructor(h.type,h);wl=m,h.target.dispatchEvent(m),wl=null}else return u=pn(h),u!==null&&nw(u),i.blockedOn=h,!1;u.shift()}return!0}function iw(i,u,h){xh(i)&&h.delete(u)}function cR(){Ym=!1,Ha!==null&&xh(Ha)&&(Ha=null),ja!==null&&xh(ja)&&(ja=null),qa!==null&&xh(qa)&&(qa=null),lc.forEach(iw),cc.forEach(iw)}function bh(i,u){i.blockedOn===u&&(i.blockedOn=null,Ym||(Ym=!0,n.unstable_scheduleCallback(n.unstable_NormalPriority,cR)))}var vh=null;function ow(i){vh!==i&&(vh=i,n.unstable_scheduleCallback(n.unstable_NormalPriority,function(){vh===i&&(vh=null);for(var u=0;u<i.length;u+=3){var h=i[u],m=i[u+1],b=i[u+2];if(typeof m!="function"){if(Km(m||h)===null)continue;break}var C=pn(h);C!==null&&(i.splice(u,3),u-=3,Bp(C,{pending:!0,data:b,method:h.method,action:m},m,b))}}))}function hc(i){function u(j){return bh(j,i)}Ha!==null&&bh(Ha,i),ja!==null&&bh(ja,i),qa!==null&&bh(qa,i),lc.forEach(u),cc.forEach(u);for(var h=0;h<Xa.length;h++){var m=Xa[h];m.blockedOn===i&&(m.blockedOn=null)}for(;0<Xa.length&&(h=Xa[0],h.blockedOn===null);)aw(h),h.blockedOn===null&&Xa.shift();if(h=(i.ownerDocument||i).$$reactFormReplay,h!=null)for(m=0;m<h.length;m+=3){var b=h[m],C=h[m+1],R=b[Pn]||null;if(typeof C=="function")R||ow(h);else if(R){var L=null;if(C&&C.hasAttribute("formAction")){if(b=C,R=C[Pn]||null)L=R.formAction;else if(Km(b)!==null)continue}else L=R.action;typeof L=="function"?h[m+1]=L:(h.splice(m,3),m-=3),ow(h)}}}function Qm(i){this._internalRoot=i}wh.prototype.render=Qm.prototype.render=function(i){var u=this._internalRoot;if(u===null)throw Error(s(409));var h=u.current,m=ws();ew(h,m,i,u,null,null)},wh.prototype.unmount=Qm.prototype.unmount=function(){var i=this._internalRoot;if(i!==null){this._internalRoot=null;var u=i.containerInfo;i.tag===0&&bu(),ew(i.current,2,null,i,null,null),sh(),u[nr]=null}};function wh(i){this._internalRoot=i}wh.prototype.unstable_scheduleHydration=function(i){if(i){var u=hl();i={blockedOn:null,target:i,priority:u};for(var h=0;h<Xa.length&&u!==0&&u<Xa[h].priority;h++);Xa.splice(h,0,i),h===0&&aw(i)}};var uw=e.version;if(uw!=="19.0.0")throw Error(s(527,uw,"19.0.0"));ve.findDOMNode=function(i){var u=i._reactInternals;if(u===void 0)throw typeof i.render=="function"?Error(s(188)):(i=Object.keys(i).join(","),Error(s(268,i)));return i=ue(u),i=i!==null?Te(i):null,i=i===null?null:i.stateNode,i};var dR={bundleType:0,version:"19.0.0",rendererPackageName:"react-dom",currentDispatcherRef:F,findFiberByHostInstance:br,reconcilerVersion:"19.0.0"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Sh=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Sh.isDisabled&&Sh.supportsFiber)try{er=Sh.inject(dR),Cn=Sh}catch{}}return pc.createRoot=function(i,u){if(!r(i))throw Error(s(299));var h=!1,m="",b=Tv,C=Nv,R=Ev,L=null;return u!=null&&(u.unstable_strictMode===!0&&(h=!0),u.identifierPrefix!==void 0&&(m=u.identifierPrefix),u.onUncaughtError!==void 0&&(b=u.onUncaughtError),u.onCaughtError!==void 0&&(C=u.onCaughtError),u.onRecoverableError!==void 0&&(R=u.onRecoverableError),u.unstable_transitionCallbacks!==void 0&&(L=u.unstable_transitionCallbacks)),u=Z2(i,1,!1,null,null,h,m,b,C,R,L,null),i[nr]=u.current,Om(i.nodeType===8?i.parentNode:i),new Qm(u)},pc.hydrateRoot=function(i,u,h){if(!r(i))throw Error(s(299));var m=!1,b="",C=Tv,R=Nv,L=Ev,j=null,J=null;return h!=null&&(h.unstable_strictMode===!0&&(m=!0),h.identifierPrefix!==void 0&&(b=h.identifierPrefix),h.onUncaughtError!==void 0&&(C=h.onUncaughtError),h.onCaughtError!==void 0&&(R=h.onCaughtError),h.onRecoverableError!==void 0&&(L=h.onRecoverableError),h.unstable_transitionCallbacks!==void 0&&(j=h.unstable_transitionCallbacks),h.formState!==void 0&&(J=h.formState)),u=Z2(i,1,!0,u,h??null,m,b,C,R,L,j,J),u.context=J2(null),h=u.current,m=ws(),b=La(m),b.callback=null,za(h,b,m),u.current.lanes=m,Ci(u,m),$r(u),i[nr]=u.current,Om(i),new wh(u)},pc.version="19.0.0",pc}var bw;function $R(){if(bw)return eg.exports;bw=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(e){console.error(e)}}return n(),eg.exports=CR(),eg.exports}var TR=$R();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NR=1e-7,ER=1e-4;class RC{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Sy{refCount(e){return is("refCount")}incRef(e){return is("incRef")}timerAvailable(){return!0}time(e){return is("time")}read(e){return is("read")}readSync(e){return is("readSync")}readToGPU(e,t){return is("readToGPU")}numDataIds(){return is("numDataIds")}disposeData(e,t){return is("disposeData")}write(e,t,s){return is("write")}move(e,t,s,r,a){return is("move")}createTensorFromGPUData(e,t,s){return is("createTensorFromGPUData")}memory(){return is("memory")}floatPrecision(){return is("floatPrecision")}epsilon(){return this.floatPrecision()===32?NR:ER}dispose(){return is("dispose")}}function is(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jh(n,e,t){return Math.max(n,Math.min(e,t))}function Cy(n){return n%2===0?n:n+1}function mc(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function IC(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function z(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function hs(n,e,t=""){z(yt(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function qu(n){z(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function oe(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function vw(n){return n.length===0}function kR(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function yt(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Fu(n){return n%1===0}function _g(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function Au(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function ww(n,e=r=>0,t,s){return new Promise((r,a)=>{let o=0;const l=()=>{if(n()){r();return}o++;const c=e(o);if(t!=null&&o>=t){a();return}s!=null?s(l,c):setTimeout(l,c)};l()})}function _C(n,e){let t=1,s=-1;for(let a=0;a<n.length;++a)if(n[a]>=0)t*=n[a];else if(n[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(n[a]<0)throw Error(`Shapes can not be < 0. Found ${n[a]} at dim ${a}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function Pt(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),z(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),z(n.every(s=>Fu(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function ui(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,a=e==null||r?null:Pt(e,n).sort();let o=0;for(let l=0;l<n.length;++l){if(a!=null){if(a[o]===l&&n[l]!==1)throw new Error(`Can't squeeze axis ${l} since its dim '${n[l]}' is not 1`);(a[o]==null||a[o]>l)&&n[l]===1&&(t.push(n[l]),s.push(l)),a[o]<=l&&o++}n[l]!==1&&(t.push(n[l]),s.push(l))}return{newShape:t,keptDims:s}}function Ar(n,e){return sn(n,e)}function sn(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function RR(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function IR(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function AC(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function qh(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function _R(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Hc(n){return typeof n=="string"||n instanceof String}function AR(n){return typeof n=="boolean"}function DR(n){return typeof n=="number"}function Xu(n){return Array.isArray(n)?Xu(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":DR(n)?"float32":Hc(n)?"string":AR(n)?"bool":"float32"}function Ag(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Dg(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Ut(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function DC(n,e,t,s=!1){const r=new Array;if(e.length===1){const a=e[0]*(s?2:1);for(let o=0;o<a;o++)r[o]=t[n+o]}else{const a=e[0],o=e.slice(1),l=o.reduce((c,d)=>c*d)*(s?2:1);for(let c=0;c<a;c++)r[c]=DC(n+c*l,o,t,s)}return r}function Og(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((r,a)=>r*a)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return DC(0,n,e,t)}function rg(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function OC(n,e){const t=ua(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function ua(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function Es(n){n.forEach(e=>{z(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Pg(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function $y(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function mo(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sw="tfjsflags";class OR{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=PR,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(ee().getBool("IS_TEST")||ee().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];ee().getBool("IS_TEST")||ee().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(mo(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);Sw in e&&e[Sw].split(",").forEach(s=>{const[r,a]=s.split(":");this.urlFlags[r]=LR(r,a)})}}function PR(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(FR(e,s[0],s[1]),s.join("="))),e}function FR(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function LR(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function ee(){return PC}let PC=null;function zR(n){PC=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ag;function FC(){if(ag==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");ag=n}return ag}function BR(){const n=FC();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Ty(n,e){const t=BR();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const Ny="Abs",Ey="Acos",ky="Acosh",yf="Add",Ry="AddN",Iy="All",_y="Any",Ay="ArgMax",Dy="ArgMin",Oy="Asin",Py="Asinh",Fy="Atan",Ly="Atanh",zy="Atan2",By="AvgPool",LC="AvgPoolGrad",My="AvgPool3D",zC="AvgPool3DGrad",Uy="BatchMatMul",Vy="BatchToSpaceND",Wy="Bincount",BC="BitwiseAnd",Gy="BroadcastArgs",xf="Cast",Hy="Ceil",jy="ClipByValue",qy="Complex",Xy="ComplexAbs",Ky="Concat",Yy="Conv2D",Qy="Conv2DBackpropFilter",Zy="Conv2DBackpropInput",Jy="Conv3D",MC="Conv3DBackpropFilterV2",ex="Conv3DBackpropInputV2",tx="Cos",nx="Cosh",sx="Cumprod",rx="Cumsum",ax="CropAndResize",ix="DenseBincount",ox="DepthToSpace",ux="DepthwiseConv2dNative",lx="DepthwiseConv2dNativeBackpropFilter",cx="DepthwiseConv2dNativeBackpropInput",dx="Diag",hx="Dilation2D",MR="Dilation2DBackpropInput",UR="Dilation2DBackpropFilter",UC="Draw",fx="RealDiv",px="Einsum",mx="Elu",VC="EluGrad",gx="Erf",yx="Equal",xx="Exp",bx="ExpandDims",vx="Expm1",wx="FFT",Sx="Fill",Cx="FlipLeftRight",$x="Floor",Tx="FloorDiv",Nx="FusedBatchNorm",Ex="GatherV2",kx="GatherNd",Rx="Greater",Ix="GreaterEqual",bf="Identity",_x="IFFT",Ax="Imag",Dx="IsFinite",Ox="IsInf",Px="IsNan",Fx="LeakyRelu",Lx="Less",zx="LessEqual",Bx="LinSpace",Mx="Log",Ux="Log1p",Vx="LogicalAnd",Wx="LogicalNot",Gx="LogicalOr",Hx="LRN",WC="LRNGrad",jx="Max",qx="Maximum",Xx="MaxPool",GC="MaxPoolGrad",Kx="MaxPool3D",HC="MaxPool3DGrad",Yx="MaxPoolWithArgmax",Qx="Mean",Zx="Min",Jx="Minimum",e0="MirrorPad",t0="Mod",n0="Multinomial",s0="Multiply",r0="Neg",a0="NotEqual",i0="NonMaxSuppressionV3",jC="NonMaxSuppressionV4",o0="NonMaxSuppressionV5",u0="OnesLike",l0="OneHot",c0="Pack",d0="PadV2",h0="Pow",f0="Prelu",p0="Prod",qC="RaggedGather",XC="RaggedRange",KC="RaggedTensorToTensor",m0="Range",g0="Real",y0="Reciprocal",x0="Relu",b0="Reshape",v0="ResizeNearestNeighbor",YC="ResizeNearestNeighborGrad",w0="ResizeBilinear",QC="ResizeBilinearGrad",S0="Relu6",C0="Reverse",$0="Round",T0="Rsqrt",N0="ScatterNd",E0="TensorScatterUpdate",k0="SearchSorted",R0="Select",I0="Selu",_0="Slice",A0="Sin",D0="Sinh",O0="Sign",P0="Sigmoid",F0="Softplus",L0="Sqrt",z0="Sum",B0="SpaceToBatchND",M0="SplitV",U0="Softmax",ZC="SparseFillEmptyRows",JC="SparseReshape",V0="SparseSegmentMean",W0="SparseSegmentSum",G0="SparseToDense",H0="SquaredDifference",e$="Square",t$="StaticRegexReplace",j0="StridedSlice",q0="StringNGrams",n$="StringSplit",s$="StringToHashBucketFast",X0="Sub",K0="Tan",Y0="Tanh",vf="Tile",Q0="TopK",Z0="Transform",$c="Transpose",r$="Unique",J0="Unpack",e1="UnsortedSegmentSum",t1="ZerosLike",n1="Step",Xh="FromPixels",s1="RotateWithOffset",Kh="_FusedMatMul",Yh="FusedConv2D",Qh="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fr(...n){ee().getBool("IS_TEST")||ee().getBool("PROD")||console.warn(...n)}function VR(...n){ee().getBool("IS_TEST")||ee().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zh=Ty("kernelRegistry",()=>new Map),WR=Ty("gradRegistry",()=>new Map);function Jh(n,e){const t=i$(n,e);return Zh.get(t)}function Cw(n){return WR.get(n)}function $w(n){const e=Zh.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[a,o]=r,[l]=a.split("_");l===n&&t.push(o)}return t}function a$(n){const{kernelName:e,backendName:t}=n,s=i$(e,t);Zh.has(s)&&fr(`The kernel '${e}' for backend '${t}' is already registered`),Zh.set(s,n)}function i$(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var ig,Tw;function GR(){if(Tw)return ig;Tw=1,ig=e;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function e(B,D,Q){this.low=B|0,this.high=D|0,this.unsigned=!!Q}e.prototype.__isLong__,Object.defineProperty(e.prototype,"__isLong__",{value:!0});function t(B){return(B&&B.__isLong__)===!0}e.isLong=t;var s={},r={};function a(B,D){var Q,re,he;return D?(B>>>=0,(he=0<=B&&B<256)&&(re=r[B],re)?re:(Q=l(B,(B|0)<0?-1:0,!0),he&&(r[B]=Q),Q)):(B|=0,(he=-128<=B&&B<128)&&(re=s[B],re)?re:(Q=l(B,B<0?-1:0,!1),he&&(s[B]=Q),Q))}e.fromInt=a;function o(B,D){if(isNaN(B))return D?N:$;if(D){if(B<0)return N;if(B>=x)return W}else{if(B<=-9223372036854776e3)return G;if(B+1>=w)return M}return B<0?o(-B,D).neg():l(B%y|0,B/y|0,D)}e.fromNumber=o;function l(B,D,Q){return new e(B,D,Q)}e.fromBits=l;var c=Math.pow;function d(B,D,Q){if(B.length===0)throw Error("empty string");if(B==="NaN"||B==="Infinity"||B==="+Infinity"||B==="-Infinity")return $;if(typeof D=="number"?(Q=D,D=!1):D=!!D,Q=Q||10,Q<2||36<Q)throw RangeError("radix");var re;if((re=B.indexOf("-"))>0)throw Error("interior hyphen");if(re===0)return d(B.substring(1),D,Q).neg();for(var he=o(c(Q,8)),le=$,ne=0;ne<B.length;ne+=8){var ge=Math.min(8,B.length-ne),pe=parseInt(B.substring(ne,ne+ge),Q);if(ge<8){var Se=o(c(Q,ge));le=le.mul(Se).add(o(pe))}else le=le.mul(he),le=le.add(o(pe))}return le.unsigned=D,le}e.fromString=d;function f(B,D){return typeof B=="number"?o(B,D):typeof B=="string"?d(B,D):l(B.low,B.high,typeof D=="boolean"?D:B.unsigned)}e.fromValue=f;var p=65536,g=1<<24,y=p*p,x=y*y,w=x/2,S=a(g),$=a(0);e.ZERO=$;var N=a(0,!0);e.UZERO=N;var I=a(1);e.ONE=I;var _=a(1,!0);e.UONE=_;var O=a(-1);e.NEG_ONE=O;var M=l(-1,2147483647,!1);e.MAX_VALUE=M;var W=l(-1,-1,!0);e.MAX_UNSIGNED_VALUE=W;var G=l(0,-2147483648,!1);e.MIN_VALUE=G;var F=e.prototype;return F.toInt=function(){return this.unsigned?this.low>>>0:this.low},F.toNumber=function(){return this.unsigned?(this.high>>>0)*y+(this.low>>>0):this.high*y+(this.low>>>0)},F.toString=function(D){if(D=D||10,D<2||36<D)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(G)){var Q=o(D),re=this.div(Q),he=re.mul(Q).sub(this);return re.toString(D)+he.toInt().toString(D)}else return"-"+this.neg().toString(D);for(var le=o(c(D,6),this.unsigned),ne=this,ge="";;){var pe=ne.div(le),Se=ne.sub(pe.mul(le)).toInt()>>>0,q=Se.toString(D);if(ne=pe,ne.isZero())return q+ge;for(;q.length<6;)q="0"+q;ge=""+q+ge}},F.getHighBits=function(){return this.high},F.getHighBitsUnsigned=function(){return this.high>>>0},F.getLowBits=function(){return this.low},F.getLowBitsUnsigned=function(){return this.low>>>0},F.getNumBitsAbs=function(){if(this.isNegative())return this.eq(G)?64:this.neg().getNumBitsAbs();for(var D=this.high!=0?this.high:this.low,Q=31;Q>0&&(D&1<<Q)==0;Q--);return this.high!=0?Q+33:Q+1},F.isZero=function(){return this.high===0&&this.low===0},F.eqz=F.isZero,F.isNegative=function(){return!this.unsigned&&this.high<0},F.isPositive=function(){return this.unsigned||this.high>=0},F.isOdd=function(){return(this.low&1)===1},F.isEven=function(){return(this.low&1)===0},F.equals=function(D){return t(D)||(D=f(D)),this.unsigned!==D.unsigned&&this.high>>>31===1&&D.high>>>31===1?!1:this.high===D.high&&this.low===D.low},F.eq=F.equals,F.notEquals=function(D){return!this.eq(D)},F.neq=F.notEquals,F.ne=F.notEquals,F.lessThan=function(D){return this.comp(D)<0},F.lt=F.lessThan,F.lessThanOrEqual=function(D){return this.comp(D)<=0},F.lte=F.lessThanOrEqual,F.le=F.lessThanOrEqual,F.greaterThan=function(D){return this.comp(D)>0},F.gt=F.greaterThan,F.greaterThanOrEqual=function(D){return this.comp(D)>=0},F.gte=F.greaterThanOrEqual,F.ge=F.greaterThanOrEqual,F.compare=function(D){if(t(D)||(D=f(D)),this.eq(D))return 0;var Q=this.isNegative(),re=D.isNegative();return Q&&!re?-1:!Q&&re?1:this.unsigned?D.high>>>0>this.high>>>0||D.high===this.high&&D.low>>>0>this.low>>>0?-1:1:this.sub(D).isNegative()?-1:1},F.comp=F.compare,F.negate=function(){return!this.unsigned&&this.eq(G)?G:this.not().add(I)},F.neg=F.negate,F.add=function(D){t(D)||(D=f(D));var Q=this.high>>>16,re=this.high&65535,he=this.low>>>16,le=this.low&65535,ne=D.high>>>16,ge=D.high&65535,pe=D.low>>>16,Se=D.low&65535,q=0,ue=0,Te=0,ke=0;return ke+=le+Se,Te+=ke>>>16,ke&=65535,Te+=he+pe,ue+=Te>>>16,Te&=65535,ue+=re+ge,q+=ue>>>16,ue&=65535,q+=Q+ne,q&=65535,l(Te<<16|ke,q<<16|ue,this.unsigned)},F.subtract=function(D){return t(D)||(D=f(D)),this.add(D.neg())},F.sub=F.subtract,F.multiply=function(D){if(this.isZero())return $;if(t(D)||(D=f(D)),n){var Q=n.mul(this.low,this.high,D.low,D.high);return l(Q,n.get_high(),this.unsigned)}if(D.isZero())return $;if(this.eq(G))return D.isOdd()?G:$;if(D.eq(G))return this.isOdd()?G:$;if(this.isNegative())return D.isNegative()?this.neg().mul(D.neg()):this.neg().mul(D).neg();if(D.isNegative())return this.mul(D.neg()).neg();if(this.lt(S)&&D.lt(S))return o(this.toNumber()*D.toNumber(),this.unsigned);var re=this.high>>>16,he=this.high&65535,le=this.low>>>16,ne=this.low&65535,ge=D.high>>>16,pe=D.high&65535,Se=D.low>>>16,q=D.low&65535,ue=0,Te=0,ke=0,ve=0;return ve+=ne*q,ke+=ve>>>16,ve&=65535,ke+=le*q,Te+=ke>>>16,ke&=65535,ke+=ne*Se,Te+=ke>>>16,ke&=65535,Te+=he*q,ue+=Te>>>16,Te&=65535,Te+=le*Se,ue+=Te>>>16,Te&=65535,Te+=ne*pe,ue+=Te>>>16,Te&=65535,ue+=re*q+he*Se+le*pe+ne*ge,ue&=65535,l(ke<<16|ve,ue<<16|Te,this.unsigned)},F.mul=F.multiply,F.divide=function(D){if(t(D)||(D=f(D)),D.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&D.low===-1&&D.high===-1)return this;var Q=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,D.low,D.high);return l(Q,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?N:$;var re,he,le;if(this.unsigned){if(D.unsigned||(D=D.toUnsigned()),D.gt(this))return N;if(D.gt(this.shru(1)))return _;le=N}else{if(this.eq(G)){if(D.eq(I)||D.eq(O))return G;if(D.eq(G))return I;var ne=this.shr(1);return re=ne.div(D).shl(1),re.eq($)?D.isNegative()?I:O:(he=this.sub(D.mul(re)),le=re.add(he.div(D)),le)}else if(D.eq(G))return this.unsigned?N:$;if(this.isNegative())return D.isNegative()?this.neg().div(D.neg()):this.neg().div(D).neg();if(D.isNegative())return this.div(D.neg()).neg();le=$}for(he=this;he.gte(D);){re=Math.max(1,Math.floor(he.toNumber()/D.toNumber()));for(var ge=Math.ceil(Math.log(re)/Math.LN2),pe=ge<=48?1:c(2,ge-48),Se=o(re),q=Se.mul(D);q.isNegative()||q.gt(he);)re-=pe,Se=o(re,this.unsigned),q=Se.mul(D);Se.isZero()&&(Se=I),le=le.add(Se),he=he.sub(q)}return le},F.div=F.divide,F.modulo=function(D){if(t(D)||(D=f(D)),n){var Q=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,D.low,D.high);return l(Q,n.get_high(),this.unsigned)}return this.sub(this.div(D).mul(D))},F.mod=F.modulo,F.rem=F.modulo,F.not=function(){return l(~this.low,~this.high,this.unsigned)},F.and=function(D){return t(D)||(D=f(D)),l(this.low&D.low,this.high&D.high,this.unsigned)},F.or=function(D){return t(D)||(D=f(D)),l(this.low|D.low,this.high|D.high,this.unsigned)},F.xor=function(D){return t(D)||(D=f(D)),l(this.low^D.low,this.high^D.high,this.unsigned)},F.shiftLeft=function(D){return t(D)&&(D=D.toInt()),(D&=63)===0?this:D<32?l(this.low<<D,this.high<<D|this.low>>>32-D,this.unsigned):l(0,this.low<<D-32,this.unsigned)},F.shl=F.shiftLeft,F.shiftRight=function(D){return t(D)&&(D=D.toInt()),(D&=63)===0?this:D<32?l(this.low>>>D|this.high<<32-D,this.high>>D,this.unsigned):l(this.high>>D-32,this.high>=0?0:-1,this.unsigned)},F.shr=F.shiftRight,F.shiftRightUnsigned=function(D){if(t(D)&&(D=D.toInt()),D&=63,D===0)return this;var Q=this.high;if(D<32){var re=this.low;return l(re>>>D|Q<<32-D,Q>>>D,this.unsigned)}else return D===32?l(Q,0,this.unsigned):l(Q>>>D-32,0,this.unsigned)},F.shru=F.shiftRightUnsigned,F.shr_u=F.shiftRightUnsigned,F.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},F.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},F.toBytes=function(D){return D?this.toBytesLE():this.toBytesBE()},F.toBytesLE=function(){var D=this.high,Q=this.low;return[Q&255,Q>>>8&255,Q>>>16&255,Q>>>24,D&255,D>>>8&255,D>>>16&255,D>>>24]},F.toBytesBE=function(){var D=this.high,Q=this.low;return[D>>>24,D>>>16&255,D>>>8&255,D&255,Q>>>24,Q>>>16&255,Q>>>8&255,Q&255]},e.fromBytes=function(D,Q,re){return re?e.fromBytesLE(D,Q):e.fromBytesBE(D,Q)},e.fromBytesLE=function(D,Q){return new e(D[0]|D[1]<<8|D[2]<<16|D[3]<<24,D[4]|D[5]<<8|D[6]<<16|D[7]<<24,Q)},e.fromBytesBE=function(D,Q){return new e(D[4]<<24|D[5]<<16|D[6]<<8|D[7],D[0]<<24|D[1]<<16|D[2]<<8|D[3],Q)},ig}var u$=GR();const l$=pR(u$),HR=fR({__proto__:null,default:l$},[u$]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const so=l$||HR;function wf(n){return so.fromString(n,!0,16)}const c$=wf("c3a5c85c97cb3127"),to=wf("b492b66fbe98f273"),Un=wf("9ae16a3b2f90404f");function Fg(n){return n.xor(n.shru(47))}function d$(n,e,t){const s=n.slice(e,e+t);return so.fromBytes(Array.from(s),!0,!0)}function _t(n,e){return d$(n,e,8)}function Nw(n,e){return d$(n,e,4)}function cn(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function ei(n,e,t=wf("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let r=e.xor(s).mul(t);return r=r.xor(r.shru(47)),r=r.mul(t),r}function jR(n,e,t,s,r,a){r=r.add(n),a=cn(a.add(r).add(s),21);const o=r;return r=r.add(e),r=r.add(t),a=a.add(cn(r,44)),[r.add(s),a.add(o)]}function Ch(n,e,t,s){return jR(_t(n,e),_t(n,e+8),_t(n,e+16),_t(n,e+24),t,s)}function qR(n,e=n.length){if(e>=8){const t=Un.add(e*2),s=_t(n,0).add(Un),r=_t(n,e-8),a=cn(r,37).mul(t).add(s),o=cn(s,25).add(r).mul(t);return ei(a,o,t)}if(e>=4){const t=Un.add(e*2),s=Nw(n,0);return ei(s.shl(3).add(e),Nw(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],r=n[e-1],a=t+(s<<8),o=e+(r<<2);return Fg(Un.mul(a).xor(c$.mul(o))).mul(Un)}return Un}function XR(n,e=n.length){const t=Un.add(e*2),s=_t(n,0).mul(to),r=_t(n,8),a=_t(n,e-8).mul(t),o=_t(n,e-16).mul(Un);return ei(cn(s.add(r),43).add(cn(a,30)).add(o),s.add(cn(r.add(Un),18)).add(a),t)}function KR(n,e=n.length){const t=Un.add(e*2),s=_t(n,0).mul(Un),r=_t(n,8),a=_t(n,e-8).mul(t),o=_t(n,e-16).mul(Un),l=cn(s.add(r),43).add(cn(a,30)).add(o),c=ei(l,s.add(cn(r.add(Un),18)).add(a),t),d=_t(n,16).mul(t),f=_t(n,24),p=l.add(_t(n,e-32)).mul(t),g=c.add(_t(n,e-24)).mul(t);return ei(cn(d.add(f),43).add(cn(p,30)).add(g),d.add(cn(f.add(s),18)).add(p),t)}function YR(n,e=n.length){const t=so.fromNumber(81,!0);if(e<=32)return e<=16?qR(n,e):XR(n,e);if(e<=64)return KR(n,e);let s=t,r=t.mul(to).add(113),a=Fg(r.mul(Un).add(113)).mul(Un),o=[so.UZERO,so.UZERO],l=[so.UZERO,so.UZERO];s=s.mul(Un).add(_t(n,0));let c=0;const d=(e-1>>6)*64,f=d+(e-1&63)-63;do s=cn(s.add(r).add(o[0]).add(_t(n,c+8)),37).mul(to),r=cn(r.add(o[1]).add(_t(n,c+48)),42).mul(to),s=s.xor(l[1]),r=r.add(o[0]).add(_t(n,c+40)),a=cn(a.add(l[0]),33).mul(to),o=Ch(n,c,o[1].mul(to),s.add(l[0])),l=Ch(n,c+32,a.add(l[1]),r.add(_t(n,c+16))),[a,s]=[s,a],c+=64;while(c!==d);const p=to.add(a.and(255).shl(1));return c=f,l[0]=l[0].add(e-1&63),o[0]=o[0].add(l[0]),l[0]=l[0].add(o[0]),s=cn(s.add(r).add(o[0]).add(_t(n,c+8)),37).mul(p),r=cn(r.add(o[1]).add(_t(n,c+48)),42).mul(p),s=s.xor(l[1].mul(9)),r=r.add(o[0].mul(9).add(_t(n,c+40))),a=cn(a.add(l[0]),33).mul(p),o=Ch(n,c,o[1].mul(p),s.add(l[0])),l=Ch(n,c+32,a.add(l[1]),r.add(_t(n,c+16))),[a,s]=[s,a],ei(ei(o[0],l[0],p).add(Fg(r).mul(c$)).add(a),ei(o[1],l[1],p).add(s),p)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ku(n,e){return e==="string"?ti(n):Sf([n],e)}function QR(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function Sf(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=ca(n)),ee().getBool("DEBUG")&&RR(n,e),QR(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function cr(){return ee().platform.now()}function ti(n,e="utf-8"){return e=e||"utf-8",ee().platform.encode(n,e)}function la(n,e="utf-8"){return e=e||"utf-8",ee().platform.decode(n,e)}function Ks(n){return ee().platform.isTypedArray!=null?ee().platform.isTypedArray(n):o$(n)}function ca(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||mo(n)||n==null||Ks(n)&&t)e.push(n);else if(Array.isArray(n)||Ks(n))for(let s=0;s<n.length;++s)ca(n[s],e,t);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)ca(n[r],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZR{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new eI)}profileKernel(e,t,s){let r;const a=()=>{r=s()};let o;const l=cr();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(a);else{a();for(const d of r)d.dataSync();o=Promise.resolve({kernelMs:cr()-l})}if(ee().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let d=0;d<r.length;d++){const f=r[d];f.data().then(p=>{JR(p,f.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then(d=>d.kernelMs),extraInfo:o.then(d=>d.getExtraProfileInfo!=null?d.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:a,extraInfo:o}=e;s.forEach(l=>{Promise.all([l.data(),r,o]).then(c=>{this.logger.logKernelProfile(t,l,c[0],c[1],a,c[2])})})}}function JR(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${t}'`),!0}return!1}class eI{logKernelProfile(e,t,s,r,a,o){const l=typeof r=="number"?Au(`${r}ms`,9):r.error,c=Au(e,25),d=t.rank,f=t.size,p=Au(t.shape.toString(),14);let g="";for(const y in a){const x=a[y];if(x!=null){const w=x.shape||t.shape,S=w.length;g+=`${y}: ${S}D ${S>0?w:""} `}}console.log(`%c${c}	%c${l}	%c${d}D ${p}	%c${f}	%c${g}	%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tI(n,e,t){const s={},r={};for(let c=0;c<e.length;c++)s[e[c].id]=!0;for(let c=0;c<n.length;c++){const d=n[c],f=d.inputs;for(const p in f){const g=f[p];let y=!1;for(let x=0;x<e.length;x++)if(s[g.id]){d.outputs.forEach(w=>s[w.id]=!0),y=!0,r[d.id]=!0;break}if(y)break}}const a={};a[t.id]=!0;const o={};for(let c=n.length-1;c>=0;c--){const d=n[c],f=d.inputs;for(let p=0;p<d.outputs.length;p++)if(a[d.outputs[p].id]){for(const g in f)a[f[g].id]=!0,o[d.id]=!0;break}}const l=[];for(let c=0;c<n.length;c++){const d=n[c];if(r[d.id]&&o[d.id]){const f={};for(const g in d.inputs){const y=d.inputs[g];s[y.id]&&(f[g]=y)}const p=Object.assign({},d);p.inputs=f,p.outputs=d.outputs,l.push(p)}}return l}function nI(n,e,t,s){for(let r=e.length-1;r>=0;r--){const a=e[r],o=[];if(a.outputs.forEach(c=>{const d=n[c.id];d!=null?o.push(d):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const l=a.gradient(o);for(const c in a.inputs){if(!(c in l))throw new Error(`Cannot backprop through input ${c}. Available gradients found: ${Object.keys(l)}.`);const d=t(()=>l[c]());if(d.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${c} must have 'float32' dtype, but has '${d.dtype}'`);const f=a.inputs[c];if(!yt(d.shape,f.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${c}' has shape '${d.shape}', which does not match the shape of the input '${f.shape}'`);if(n[f.id]==null)n[f.id]=d;else{const p=n[f.id];n[f.id]=s(p,d),p.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ew=20,gc=3,og=7;function sI(n,e,t,s){const r=Ut(e),a=rI(n,e,t,r),o=e.length,l=Oh(n,e,t,r,a),c=["Tensor"];return s&&(c.push(`  dtype: ${t}`),c.push(`  rank: ${o}`),c.push(`  shape: [${e}]`),c.push("  values:")),c.push(l.map(d=>"    "+d).join(`
`)),c.join(`
`)}function rI(n,e,t,s){const r=oe(e),a=s[s.length-1],o=new Array(a).fill(0),l=e.length,c=t==="complex64"?vc(n):n;if(l>1)for(let d=0;d<r/a;d++){const f=d*a;for(let p=0;p<a;p++)o[p]=Math.max(o[p],bc(c[f+p],0,t).length)}return o}function bc(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(og))} + ${parseFloat(n[1].toFixed(og))}j`:Hc(n)?s=`'${n}'`:t==="bool"?s=h$(n):s=parseFloat(n.toFixed(og)).toString(),Au(s,e)}function h$(n){return n===0?"false":"true"}function Oh(n,e,t,s,r,a=!0){const o=t==="complex64"?2:1,l=e[0],c=e.length;if(c===0){if(t==="complex64"){const w=vc(n);return[bc(w[0],0,t)]}return t==="bool"?[h$(n[0])]:[n[0].toString()]}if(c===1){if(l>Ew){const S=gc*o;let $=Array.from(n.slice(0,S)),N=Array.from(n.slice((l-gc)*o,l*o));return t==="complex64"&&($=vc($),N=vc(N)),["["+$.map((I,_)=>bc(I,r[_],t)).join(", ")+", ..., "+N.map((I,_)=>bc(I,r[l-gc+_],t)).join(", ")+"]"]}return["["+(t==="complex64"?vc(n):Array.from(n)).map((S,$)=>bc(S,r[$],t)).join(", ")+"]"]}const d=e.slice(1),f=s.slice(1),p=s[0]*o,g=[];if(l>Ew){for(let w=0;w<gc;w++){const S=w*p,$=S+p;g.push(...Oh(n.slice(S,$),d,t,f,r,!1))}g.push("...");for(let w=l-gc;w<l;w++){const S=w*p,$=S+p;g.push(...Oh(n.slice(S,$),d,t,f,r,w===l-1))}}else for(let w=0;w<l;w++){const S=w*p,$=S+p;g.push(...Oh(n.slice(S,$),d,t,f,r,w===l-1))}const y=c===2?",":"";g[0]="["+(l>0?g[0]+y:"");for(let w=1;w<g.length-1;w++)g[w]=" "+g[w]+y;let x=`,
`;for(let w=2;w<c;w++)x+=`
`;return g[g.length-1]=" "+g[g.length-1]+"]"+(a?"":x),g}function vc(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lu{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=oe(e),s!=null){const r=s.length;z(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||sn(t,this.size),this.strides=Ut(e)}set(e,...t){t.length===0&&(t=[0]),z(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const a=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(a)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return dr().makeTensor(this.values,this.shape,this.dtype)}}let dr=null,Ru=null;function aI(n){dr=n}function iI(n){Ru=n}class Mt{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=oe(e),this.strides=Ut(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ru.buffer(this.shape,this.dtype,e)}bufferSync(){return Ru.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Og(this.shape,e,this.dtype==="complex64")}arraySync(){return Og(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=dr().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>la(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),dr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=dr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>la(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await dr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),dr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ru.print(this,e)}clone(){return this.throwIfDisposed(),Ru.clone(this)}toString(e=!1){const t=this.dataSync();return sI(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ru.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),dr().makeVariable(this,e,t,s)}}Object.defineProperty(Mt,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function f$(){return Ty("Tensor",()=>Mt)}f$();class ef extends Mt{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!yt(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);dr().disposeTensor(this),this.dataId=e.dataId,dr().incRef(this,null)}dispose(){dr().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(ef,Symbol.hasInstance,{value:n=>n instanceof Mt&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var kw;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(kw||(kw={}));var Lg;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Lg||(Lg={}));var zg;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(zg||(zg={}));var Bg;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Bg||(Bg={}));var Mg;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Mg||(Mg={}));const oI={float32:Bg,int32:Lg,bool:zg,complex64:Mg};function Jn(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return oI[n][e]}function Cf(n){return Jn(n,"int32")}function p$(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function m$(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vt(n,e){if(n.dtype===e.dtype)return[n,e];const t=Jn(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function uI(n,e){z(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function g$(n){const e=[];return y$(n,e,new Set),e}function y$(n,e,t){if(n==null)return;if(n instanceof Mt){e.push(n);return}if(!lI(n))return;const s=n;for(const r in s){const a=s[r];t.has(a)||(t.add(a),y$(a,e,t))}}function lI(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ug(n){return n.kernelName!=null}class Rw{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class zu{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Rw}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(fr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ZR(this.backendInstance),!0}setupRegisteredKernels(){$w(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){$w(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof Sy)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,a=s.then(o=>r<this.pendingBackendInitId?!1:(this.registry[e]=o,this.pendingBackendInit=null,!0)).catch(o=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,fr(`Initialization of backend ${e} failed`),fr(o.stack||o.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return fr(`Initialization of backend ${e} failed`),fr(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:a}=this.initializeBackend(s);if(a||r)return{name:s,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,a=this.readSync(t),o=r.refCount(t);r.disposeData(t,!0),s.backend=e,e.move(t,a,s.shape,s.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return zu.nextTensorId++}nextVariableId(){return zu.nextVariableId++}clone(e){const t=K.runKernel(bf,{x:e}),s={x:e},r=o=>({x:()=>{const l="float32",c={x:o},d={dtype:l};return K.runKernel(xf,c,d)}}),a=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,a,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(Jh(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let a=0;s.forEach(c=>{a+=c.dtype==="complex64"?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=r-t-a-o;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const r=this.isTapeOn(),a=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let c;const d=ug(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(ug(e)){const{kernelName:x,inputs:w,attrs:S}=e;this.backendName==null&&this.backend;const $=Jh(x,this.backendName);z($!=null,()=>`Cannot find registered kernel '${x}' for backend '${this.backendName}'`),l=()=>{const N=this.backend.numDataIds();c=$.kernelFunc({inputs:w,attrs:S,backend:this.backend});const I=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(x,N,I);const _=I.map(O=>O.rank!=null?O:this.makeTensorFromTensorInfo(O));if(r){const O=this.getTensorsForGradient(x,w,_);s=this.saveTensorsForBackwardMode(O)}return _}}else{const{forwardFunc:x}=e,w=S=>{r&&(s=S.map($=>this.keep(this.clone($))))};l=()=>{const S=this.backend.numDataIds();c=this.tidy(()=>x(this.backend,w));const $=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(d,S,$),$}}const{inputs:f,attrs:p}=e,g=ug(e)?null:e.backwardsFunc;let y;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=l():(y=this.profiler.profileKernel(d,f,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(y),t=y.outputs)}),r&&this.addTapeNode(d,f,t,g,s,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:d,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(f).map(x=>f[x]!=null?f[x].shape:null),outputShapes:t.map(x=>x.shape),kernelTimeMs:y.timeMs,extraInfo:y.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=Cw(e);if(r!=null){const a=r.inputsToSave||[],o=r.outputsToSave||[];let l;r.saveAllInputs?(z(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(t).map(d=>t[d])):l=a.map(d=>t[d]);const c=s.filter((d,f)=>o[f]);return l.concat(c)}return[]}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let a=e;s==="string"&&Hc(e[0])&&(a=e.map(c=>ti(c)));const o=r.write(a,t,s),l=new Mt(t,s,o,this.nextTensorId());if(this.trackTensor(l,r),s==="string"){const c=this.state.tensorInfo.get(o),d=_R(a);this.state.numBytes+=d-c.bytes,c.bytes=d}return l}makeTensorFromDataId(e,t,s,r){s=s||"float32";const a={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:r,dtype:a}=e,o=new Mt(r,a,s,this.nextTensorId());return this.trackTensor(o,t),o}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const a=new ef(e,t,s,this.nextTensorId());if(this.state.registeredVariables[a.name]!=null)throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*qh(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof ef||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*qh(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,a,o){const l={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:a},c=Cw(e);c!=null&&(r=c.gradFunc),r!=null&&(l.gradient=d=>(d=d.map((f,p)=>{if(f==null){const g=s[p],y=ua(g.size,g.dtype);return this.makeTensor(y,g.shape,g.dtype)}return f}),r(d.length>1?d:d[0],a,o))),this.state.activeTape.push(l)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=g$(e),s=new Set(t.map(a=>a.id));for(let a=0;a<this.state.activeScope.track.length;a++){const o=this.state.activeScope.track[a];!o.kept&&!s.has(o.id)&&o.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(a=>{!a.kept&&a.scopeId===r.id&&this.track(a)})}gradients(e,t,s,r=!1){if(z(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));z(a instanceof Mt,()=>"The result y returned by f() must be a tensor.");const o=tI(this.state.activeTape,t,a);if(!r&&o.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const l={};l[a.id]=s??cI(a.shape),nI(l,o,d=>this.tidy(d),dI);const c=t.map(d=>l[d.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(d=>{for(const f of d.saved)f.dispose()}),this.state.activeTape=null),{value:a,grads:c}})}customGrad(e){return z(Ag(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{z(t.every(l=>l instanceof Mt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};t.forEach((l,c)=>{r[c]=l});const a=(l,c)=>(s=e(...t,c),z(s.value instanceof Mt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),z(Ag(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),o=(l,c)=>{const d=s.gradFunc(l,c),f=Array.isArray(d)?d:[d];z(f.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),z(f.every(g=>g instanceof Mt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const p={};return f.forEach((g,y)=>{p[y]=()=>g}),p};return this.runKernelFunc({forwardFunc:a,backwardsFunc:o,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=cr(),s=await this.backend.time(e);return s.wallMs=cr()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Rw;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}zu.nextTensorId=0;zu.nextVariableId=0;function cI(n){const e=OC(oe(n),"float32");return K.makeTensor(e,n,"float32")}function x$(){const n=FC();if(n._tfengine==null){const e=new OR(n);n._tfengine=new zu(e)}return zR(n._tfengine.ENV),aI(()=>n._tfengine),n._tfengine}const K=x$();function dI(n,e){const t={a:n,b:e};return K.runKernel(yf,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hI(){return typeof navigator<"u"&&navigator!=null}function b$(n){if(n||hI()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function v$(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const es=ee();es.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});es.registerFlag("IS_BROWSER",()=>v$());es.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");es.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));es.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));es.registerFlag("PROD",()=>!1);es.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>es.getBool("DEBUG"));es.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);es.registerFlag("IS_TEST",()=>!1);es.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>es.getBool("DEBUG"));es.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);es.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);es.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function li(n,e){let t=n;if(Ks(n))return e==="string"?[]:[n.length];if(p$(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(m$(n))return[n.buffer.size/(e==null?4:qh(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||Ks(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&ee().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&w$(n,s,[]),s}function w$(n,e,t){if(t=t||[],!Array.isArray(n)&&!Ks(n)){z(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}z(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),z(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)w$(n[r],s,t.concat(r))}function Iw(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function P(n,e,t,s="numeric"){if(n instanceof f$())return Iw(s,n.dtype,e,t),n;let r=Xu(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Iw(s,r,e,t),n==null||!Ks(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const c=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${c}'`)}const a=li(n,r);!Ks(n)&&!Array.isArray(n)&&(n=[n]);const l=r!=="string"?Sf(n,r):ca(n,[],!0);return K.makeTensor(l,a,r)}function tf(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((a,o)=>P(a,`${e}[${o}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S$="__op";function X(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+S$;const r=(...a)=>{K.startScope(t);try{const o=s(...a);return mo(o)&&console.error("Cannot return a Promise inside of tidy."),K.endScope(o),o}catch(o){throw K.endScope(null),o}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fI(n,e){const t=P(n,"real","complex"),s=P(e,"imag","complex");hs(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return K.runKernel(qy,r)}const ri=X({complex_:fI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ci(n,e,t,s){if(s==null)s=Xu(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(m$(n)||p$(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return K.backend.createTensorFromGPUData(n,e||t,s)}if(!Ks(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Es(e);const r=oe(e),a=oe(t);z(r===a,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${a}`);for(let o=0;o<t.length;++o){const l=t[o],c=o===t.length-1?l!==oe(e.slice(o)):!0;z(t[o]===e[o]||!c,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Ks(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?Sf(n,s):ca(n,[],!0),K.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rr(n,e,t){const s=li(n,t);return ci(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const go={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class mr{static join(e){return new mr(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>Ks(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const r=e[s];s!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const r=t-e,a=new ArrayBuffer(r),o=new Uint8Array(a);let l=0;for(let c=s;c<this.shards.length;c++){const d=this.shards[c],p=e+l-d.start,g=l,x=Math.min(t,d.end)-d.start,w=new Uint8Array(d.buffer,p,x-p);if(o.set(w,g),l+=w.length,t<d.end)break}return a}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(r){return e<r.start?-1:e>=r.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=pI(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function pI(n,e){let t=0,s=n.length;for(;t<=s;){const r=Math.floor((s-t)/2)+t,a=e(n[r]);if(a===0)return r;a<0?s=r:t=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ls(){return K}function Ge(n,e){return K.tidy(n,e)}function gt(n){g$(n).forEach(t=>t.dispose())}function Er(n){return K.keep(n)}function mI(n){return K.setBackend(n)}function gI(){return K.ready()}function Bu(){return K.backendName}function C$(n,e,t=1){return K.registerBackend(n,e,t)}function Mu(){return K.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ai=4;async function yI(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(o=>o.name):Object.keys(n);for(let o=0;o<r.length;++o){const l=r[o],c=Array.isArray(n)?n[o].tensor:n[l];if(c.dtype!=="float32"&&c.dtype!=="int32"&&c.dtype!=="bool"&&c.dtype!=="string"&&c.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${l}': ${c.dtype}`);const d={name:l,shape:c.shape,dtype:c.dtype};if(c.dtype==="string"){const f=new Promise(async p=>{const g=await c.bytes(),y=g.reduce((S,$)=>S+$.length,0)+ai*g.length,x=new Uint8Array(y);let w=0;for(let S=0;S<g.length;S++){const $=g[S],N=new Uint8Array(new Uint32Array([$.length]).buffer);x.set(N,w),w+=ai,x.set($,w),w+=$.length}p(x)});s.push(f)}else s.push(c.data());e!=null&&(d.group=e),t.push(d)}const a=await Promise.all(s);return{data:vI(a),specs:t}}function $$(n,e){const t=new mr(n),s={};let r=0;for(const a of e){const o=xI(a,(l,c)=>t.slice(r+l,r+c));s[a.name]=T$(a,t.slice(r,r+o)),r+=o}return s}function xI(n,e){const t=oe(n.shape);let s;if("quantization"in n){const r=n.quantization;s=go[r.dtype]}else if(n.dtype==="string"){let r=0;for(let a=0;a<t;a++)r+=ai+new Uint32Array(e(r,r+ai))[0];return r}else s=go[n.dtype];return t*s}async function bI(n,e){const t=oe(n.shape);let s;if("quantization"in n){const r=n.quantization;s=go[r.dtype]}else if(n.dtype==="string"){let r=0;for(let a=0;a<t;a++)r+=ai+new Uint32Array(await e(r,r+ai))[0];return r}else s=go[n.dtype];return t*s}function T$(n,e){const t=n.name,s=n.dtype,r=n.shape,a=oe(r);let o,l=0;if("quantization"in n){const c=n.quantization;if(c.dtype==="uint8"||c.dtype==="uint16"){if(!("min"in c&&"scale"in c))throw new Error(`Weight ${n.name} with quantization ${c.dtype} doesn't have corresponding metadata min and scale.`)}else if(c.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${c.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${c.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const d=go[c.dtype],f=c.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(c.dtype==="uint8"||c.dtype==="uint16"){o=new Float32Array(f.length);for(let p=0;p<f.length;p++){const g=f[p];o[p]=g*c.scale+c.min}}else if(c.dtype==="float16")o=EI()(f);else throw new Error(`Unsupported quantization type ${c.dtype} for weight type float32.`);else if(s==="int32"){if(c.dtype!=="uint8"&&c.dtype!=="uint16")throw new Error(`Unsupported quantization type ${c.dtype} for weight type int32.`);o=new Int32Array(f.length);for(let p=0;p<f.length;p++){const g=f[p];o[p]=Math.round(g*c.scale+c.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);l+=a*d}else if(s==="string"){const c=oe(n.shape);o=[];for(let d=0;d<c;d++){const f=new Uint32Array(e.slice(l,l+ai))[0];l+=ai;const p=new Uint8Array(e.slice(l,l+f));o.push(p),l+=f}}else{const c=go[s];if(s==="float32")o=new Float32Array(e);else if(s==="int32")o=new Int32Array(e);else if(s==="bool")o=new Uint8Array(e);else if(s==="complex64"){o=new Float32Array(e);const d=new Float32Array(o.length/2),f=new Float32Array(o.length/2);for(let x=0;x<d.length;x++)d[x]=o[x*2],f[x]=o[x*2+1];const p=Rr(d,r,"float32"),g=Rr(f,r,"float32"),y=ri(p,g);return p.dispose(),g.dispose(),y}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);l+=a*c}return Rr(o,r,s)}async function _w(n,e,t){let s=new Uint8Array(e);for(;s.byteLength<t;){const{done:r,value:a}=await n.read();if(r&&a==null){const l=t-s.byteLength;throw new Error(`Reader is done but ${l} bytes are still expected`)}const o=new Uint8Array(s.length+a.byteLength);o.set(s,0),o.set(new Uint8Array(a),s.length),s=o}return s.buffer}async function N$(n,e){const t={},s=n.getReader();let r=new ArrayBuffer(0);for(const a of e){const o=await bI(a,async(d,f)=>(r=await _w(s,r,f),r.slice(d,f)));r=await _w(s,r,o);const l=r.slice(0,o);r=r.slice(o);const c=T$(a,l);if(t[a.name]=c,Bu()==="webgpu"){const d=Mu();"uploadToGPU"in d&&oe(c.shape)>=ee().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&d.uploadToGPU(c.dataId)}}return t}function vI(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(a=>{if(e+=a.byteLength,t.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}const r1=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Aw(n){return r1?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function wI(n){if(r1)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function SI(n){if(r1){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function CI(n){return mr.join(n)}function Dw(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function E$(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function k$(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function a1(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),k$(n,t,s)}function jc(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:Aw(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:Aw(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new mr(n.weightData).byteLength}}function Ug(n){const e=[];for(const t of n)e.push(...t.weights);return e}function $I(){const n=t=>{let s=t<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function TI(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function NI(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function EI(){const n=$I(),e=TI(),t=NI();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let o=0;o<s.length;o++){const l=s[o],c=n[t[l>>10]+(l&1023)]+e[l>>10];a[o]=c}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ft{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ft.instance==null&&(Ft.instance=new Ft),Ft.instance}static registerSaveRouter(e){Ft.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ft.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ft.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ft.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?Ft.getInstance().loadRouters:Ft.getInstance().saveRouters).forEach(o=>{const l=o(e,s);l!==null&&r.push(l)}),r}}const kI=n=>Ft.registerSaveRouter(n),RI=n=>Ft.registerLoadRouter(n),II=n=>Ft.getSaveHandlers(n),_I=(n,e)=>Ft.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vg="tensorflowjs",Wg=1,uo="models_store",Qa="model_info_store";function R$(){if(!ee().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Gg(n){const e=n.result;e.createObjectStore(uo,{keyPath:"modelPath"}),e.createObjectStore(Qa,{keyPath:"modelPath"})}class yo{constructor(e){if(this.indexedDB=R$(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const a=this.indexedDB.open(Vg,Wg);a.onupgradeneeded=()=>Gg(a),a.onsuccess=()=>{const o=a.result;if(t==null){const l=o.transaction(uo,"readonly"),d=l.objectStore(uo).get(this.modelPath);d.onsuccess=()=>{if(d.result==null)return o.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(d.result.modelArtifacts)},d.onerror=f=>(o.close(),r(d.error)),l.oncomplete=()=>o.close()}else{t.weightData=mr.join(t.weightData);const l=jc(t),c=o.transaction(Qa,"readwrite");let d=c.objectStore(Qa),f;try{f=d.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(g){return r(g)}let p;f.onsuccess=()=>{p=o.transaction(uo,"readwrite");const g=p.objectStore(uo);let y;try{y=g.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:l})}catch(x){return r(x)}y.onsuccess=()=>s({modelArtifactsInfo:l}),y.onerror=x=>{d=c.objectStore(Qa);const w=d.delete(this.modelPath);w.onsuccess=()=>(o.close(),r(y.error)),w.onerror=S=>(o.close(),r(y.error))}},f.onerror=g=>(o.close(),r(f.error)),c.oncomplete=()=>{p==null?o.close():p.oncomplete=()=>o.close()}}},a.onerror=o=>r(a.error)})}}yo.URL_SCHEME="indexeddb://";const I$=n=>ee().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(yo.URL_SCHEME)?AI(n.slice(yo.URL_SCHEME.length)):null;Ft.registerSaveRouter(I$);Ft.registerLoadRouter(I$);function AI(n){return new yo(n)}function DI(n){return n.startsWith(yo.URL_SCHEME)?n.slice(yo.URL_SCHEME.length):n}class OI{constructor(){this.indexedDB=R$()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(Vg,Wg);s.onupgradeneeded=()=>Gg(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(Qa,"readonly"),l=a.objectStore(Qa).getAll();l.onsuccess=()=>{const c={};for(const d of l.result)c[d.modelPath]=d.modelArtifactsInfo;e(c)},l.onerror=c=>(r.close(),t(l.error)),a.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=DI(e),new Promise((t,s)=>{const r=this.indexedDB.open(Vg,Wg);r.onupgradeneeded=()=>Gg(r),r.onsuccess=()=>{const a=r.result,o=a.transaction(Qa,"readwrite"),l=o.objectStore(Qa),c=l.get(e);let d;c.onsuccess=()=>{if(c.result==null)return a.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const f=l.delete(e),p=()=>{d=a.transaction(uo,"readwrite");const y=d.objectStore(uo).delete(e);y.onsuccess=()=>t(c.result.modelArtifactsInfo),y.onerror=x=>s(c.error)};f.onsuccess=p,f.onerror=g=>(p(),a.close(),s(c.error))}},c.onerror=f=>(a.close(),s(c.error)),o.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}},r.onerror=a=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aa="/",Iu="tensorflowjs_models",_$="info",PI="model_topology",FI="weight_specs",LI="weight_data",zI="model_metadata";function A$(n){return{info:[Iu,n,_$].join(aa),topology:[Iu,n,PI].join(aa),weightSpecs:[Iu,n,FI].join(aa),weightData:[Iu,n,LI].join(aa),modelMetadata:[Iu,n,zI].join(aa)}}function D$(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function BI(n){const e=n.split(aa);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(aa)}function MI(n){return n.startsWith(xo.URL_SCHEME)?n.slice(xo.URL_SCHEME.length):n}class xo{constructor(e){if(!ee().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=A$(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=jc(e),a=mr.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,wI(a));const o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:r}}catch{throw D$(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(a!=null){const l=JSON.parse(a);t.format=l.format,t.generatedBy=l.generatedBy,t.convertedBy=l.convertedBy,l.signature!=null&&(t.signature=l.signature),l.userDefinedMetadata!=null&&(t.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(t.modelInitializer=l.modelInitializer),l.initializerSignature!=null&&(t.initializerSignature=l.initializerSignature),l.trainingConfig!=null&&(t.trainingConfig=l.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(o==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=SI(o),t}}xo.URL_SCHEME="localstorage://";const O$=n=>ee().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(xo.URL_SCHEME)?UI(n.slice(xo.URL_SCHEME.length)):null;Ft.registerSaveRouter(O$);Ft.registerLoadRouter(O$);function UI(n){return new xo(n)}class VI{constructor(){z(ee().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),z(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Iu+aa,s=aa+_$;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(s)){const o=BI(a);e[o]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=MI(e);const t=A$(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return D$(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Du="://";class Mn{constructor(){this.managers={}}static getInstance(){return Mn.instance==null&&(Mn.instance=new Mn),Mn.instance}static registerManager(e,t){z(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Du)&&(e=e.slice(0,e.indexOf(Du))),z(e.length>0,()=>"scheme must not be an empty string.");const s=Mn.getInstance();z(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=Mn.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Mn.getInstance().managers)}}function Ph(n){if(n.indexOf(Du)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Mn.getSchemes().join(",")}`);return{scheme:n.split(Du)[0],path:n.split(Du)[1]}}async function P$(n,e,t=!1){z(n!==e,()=>`Old path and new path are the same: '${n}'`);const s=Ft.getLoadHandlers(n);z(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),z(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],a=Ft.getSaveHandlers(e);z(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),z(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const o=a[0],l=Ph(n).scheme,c=Ph(n).path,d=l===Ph(n).scheme,f=await r.load();t&&d&&await Mn.getManager(l).removeModel(c);const p=await o.save(f);return t&&!d&&await Mn.getManager(l).removeModel(c),p.modelArtifactsInfo}async function WI(){const n=Mn.getSchemes(),e={};for(const t of n){const s=await Mn.getManager(t).listModels();for(const r in s){const a=t+Du+r;e[a]=s[r]}}return e}async function GI(n){const e=Ph(n);return Mn.getManager(e.scheme).removeModel(e.path)}async function HI(n,e){return P$(n,e,!1)}async function jI(n,e){return P$(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qI{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!ee().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return o$(e)}}if(ee().get("IS_BROWSER")){ee().setPlatform("browser",new qI);try{Mn.registerManager(xo.URL_SCHEME,new VI)}catch{}try{Mn.registerManager(yo.URL_SCHEME,new OI)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XI={importFetch:()=>require("node-fetch")};let lg;class KI{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return ee().global.fetch!=null?ee().global.fetch(e,t):(lg==null&&(lg=XI.importFetch()),lg(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}ee().get("IS_NODE")&&!ee().get("IS_BROWSER")&&ee().setPlatform("node",new KI);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xt(n,e="float32",t){return e=e||"float32",Es(n),new Lu(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YI(n,e){const t=P(n,"x","cast");if(!IR(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return K.runKernel(xf,s,r)}const kt=X({cast_:YI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QI(n){const t={x:P(n,"x","clone","string_or_numeric")};return K.runKernel(bf,t)}const ni=X({clone_:QI});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F$(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */x$();const ZI={buffer:xt,cast:kt,clone:ni,print:F$};iI(ZI);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JI(n,e){let t=P(n,"a","add"),s=P(e,"b","add");[t,s]=Vt(t,s);const r={a:t,b:s};return K.runKernel(yf,r)}const Pe=X({add_:JI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e3(n,e){let t=P(n,"a","floorDiv"),s=P(e,"b","floorDiv");[t,s]=Vt(t,s);const r={a:t,b:s};return K.runKernel(Tx,r)}const L$=X({floorDiv_:e3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t3(n,e){let t=P(n,"a","div"),s=P(e,"b","div");if([t,s]=Vt(t,s),t.dtype==="int32"&&s.dtype==="int32")return L$(t,s);const r={a:t,b:s},a={};return K.runKernel(fx,r,a)}const et=X({div_:t3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n3(n,e){let t=P(n,"a","mul"),s=P(e,"b","mul");[t,s]=Vt(t,s);const r={a:t,b:s};return K.runKernel(s0,r)}const be=X({mul_:n3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s3(n){const e=P(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return K.runKernel(Xy,t)}else{const t={x:e};return K.runKernel(Ny,t)}}const Cs=X({abs_:s3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r3(n){const t={x:P(n,"x","acos")};return K.runKernel(Ey,t)}const a3=X({acos_:r3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i3(n){const t={x:P(n,"x","acosh")};return K.runKernel(ky,t)}const o3=X({acosh_:i3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u3(n){z(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),z(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((r,a)=>P(r,`tensors${a}`,"addN")),t=e[0];e.forEach(r=>{if(r.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!yt(r.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return K.runKernel(Ry,s)}const l3=X({addN_:u3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c3(n,e=null,t=!1){const r={x:P(n,"x","all","bool")},a={axis:e,keepDims:t};return K.runKernel(Iy,r,a)}const d3=X({all_:c3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h3(n,e=null,t=!1){const r={x:P(n,"x","any","bool")},a={axis:e,keepDims:t};return K.runKernel(_y,r,a)}const f3=X({any_:h3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p3(n,e=0){const s={x:P(n,"x","argMax")},r={axis:e};return K.runKernel(Ay,s,r)}const z$=X({argMax_:p3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m3(n,e=0){const s={x:P(n,"x","argMin")},r={axis:e};return K.runKernel(Dy,s,r)}const g3=X({argMin_:m3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y3(n){const t={x:P(n,"x","asin")};return K.runKernel(Oy,t)}const x3=X({asin_:y3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b3(n){const t={x:P(n,"x","asinh")};return K.runKernel(Py,t)}const v3=X({asinh_:b3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w3(n){const t={x:P(n,"x","atan")};return K.runKernel(Fy,t)}const S3=X({atan_:w3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C3(n,e){let t=P(n,"a","atan2"),s=P(e,"b","atan2");[t,s]=Vt(t,s);const r={a:t,b:s};return K.runKernel(zy,r)}const $3=X({atan2_:C3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T3(n){const t={x:P(n,"x","atanh")};return K.runKernel(Ly,t)}const N3=X({atanh_:T3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qc(n,e,t,s,r="NHWC",a){const o=n[3],l=[...e,o],c=gr(r);return Qt(n,l,t,a,s,null,null,c)}function Qs(n,e,t,s,r,a,o="channelsLast"){const[l,c]=kc(e);let d;if(o==="channelsLast")d=[l,c,n[3],n[3]];else if(o==="channelsFirst")d=[l,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${o}`);return Qt(n,d,t,s,r,a,!1,o)}function ga(n,e,t,s,r,a,o="NDHWC"){const[l,c,d]=Hg(e);let f,p;if(o==="NDHWC")p="channelsLast",f=[l,c,d,n[4],n[4]];else if(o==="NCDHW")p="channelsFirst",f=[l,c,d,n[1],n[1]];else throw new Error(`Unknown dataFormat ${o}`);return di(n,f,t,s,r,!1,p,a)}function Qt(n,e,t,s,r,a,o=!1,l="channelsLast"){let[c,d,f,p]=[-1,-1,-1,-1];if(l==="channelsLast")[c,d,f,p]=n;else if(l==="channelsFirst")[c,p,d,f]=n;else throw new Error(`Unknown dataFormat ${l}`);const[g,y,,x]=e,[w,S]=kc(t),[$,N]=kc(s),I=Ou(g,$),_=Ou(y,N),{padInfo:O,outHeight:M,outWidth:W}=R3(r,d,f,w,S,I,_,a,l),G=o?x*p:x;let F;return l==="channelsFirst"?F=[c,G,M,W]:l==="channelsLast"&&(F=[c,M,W,G]),{batchSize:c,dataFormat:l,inHeight:d,inWidth:f,inChannels:p,outHeight:M,outWidth:W,outChannels:G,padInfo:O,strideHeight:w,strideWidth:S,filterHeight:g,filterWidth:y,effectiveFilterHeight:I,effectiveFilterWidth:_,dilationHeight:$,dilationWidth:N,inShape:n,outShape:F,filterShape:e}}function di(n,e,t,s,r,a=!1,o="channelsLast",l){let[c,d,f,p,g]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[c,d,f,p,g]=n;else if(o==="channelsFirst")[c,g,d,f,p]=n;else throw new Error(`Unknown dataFormat ${o}`);const[y,x,w,,S]=e,[$,N,I]=Hg(t),[_,O,M]=Hg(s),W=Ou(y,_),G=Ou(x,O),F=Ou(w,M),{padInfo:B,outDepth:D,outHeight:Q,outWidth:re}=I3(r,d,f,p,$,N,I,W,G,F,l),he=a?S*g:S;let le;return o==="channelsFirst"?le=[c,he,D,Q,re]:o==="channelsLast"&&(le=[c,D,Q,re,he]),{batchSize:c,dataFormat:o,inDepth:d,inHeight:f,inWidth:p,inChannels:g,outDepth:D,outHeight:Q,outWidth:re,outChannels:he,padInfo:B,strideDepth:$,strideHeight:N,strideWidth:I,filterDepth:y,filterHeight:x,filterWidth:w,effectiveFilterDepth:W,effectiveFilterHeight:G,effectiveFilterWidth:F,dilationDepth:_,dilationHeight:O,dilationWidth:M,inShape:n,outShape:le,filterShape:e}}function E3(n,e,t,s,r){s==null&&(s=i1(n,e,t));const a=n[0],o=n[1],l=Rc((a-e+2*s)/t+1,r),c=Rc((o-e+2*s)/t+1,r);return[l,c]}function k3(n,e,t,s,r,a){r==null&&(r=i1(n,e[0],s[0]));const o=[0,0,0,t];for(let l=0;l<3;l++)n[l]+2*r>=e[l]&&(o[l]=Rc((n[l]-e[l]+2*r)/s[l]+1,a));return o}function i1(n,e,t,s=1){const r=Ou(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function kc(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Hg(n){return typeof n=="number"?[n,n,n]:n}function Ou(n,e){return e<=1?n:n+(n-1)*(e-1)}function R3(n,e,t,s,r,a,o,l,c){let d,f,p;if(typeof n=="number"){d={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const y=E3([e,t],a,s,n,l);f=y[0],p=y[1]}else if(n==="same"){f=Math.ceil(e/s),p=Math.ceil(t/r);const g=Math.max(0,(f-1)*s+a-e),y=Math.max(0,(p-1)*r+o-t),x=Math.floor(g/2),w=g-x,S=Math.floor(y/2),$=y-S;d={top:x,bottom:w,left:S,right:$,type:"SAME"}}else if(n==="valid")d={top:0,bottom:0,left:0,right:0,type:"VALID"},f=Math.ceil((e-a+1)/s),p=Math.ceil((t-o+1)/r);else if(typeof n=="object"){const g=c==="channelsLast"?n[1][0]:n[2][0],y=c==="channelsLast"?n[1][1]:n[2][1],x=c==="channelsLast"?n[2][0]:n[3][0],w=c==="channelsLast"?n[2][1]:n[3][1];d={top:g,bottom:y,left:x,right:w,type:g===0&&y===0&&x===0&&w===0?"VALID":"EXPLICIT"},f=Rc((e-a+g+y)/s+1,l),p=Rc((t-o+x+w)/r+1,l)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outHeight:f,outWidth:p}}function I3(n,e,t,s,r,a,o,l,c,d,f){let p,g,y,x;if(n==="valid"&&(n=0),typeof n=="number"){p={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const S=k3([e,t,s,1],[l,c,d],1,[r,a,o],n,f);g=S[0],y=S[1],x=S[2]}else if(n==="same"){g=Math.ceil(e/r),y=Math.ceil(t/a),x=Math.ceil(s/o);const w=(g-1)*r+l-e,S=(y-1)*a+c-t,$=(x-1)*o+d-s,N=Math.floor(w/2),I=w-N,_=Math.floor(S/2),O=S-_,M=Math.floor($/2),W=$-M;p={top:_,bottom:O,left:M,right:W,front:N,back:I,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:p,outDepth:g,outHeight:y,outWidth:x}}function Rc(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function Ic(n){const[e,t,s]=kc(n);return e===1&&t===1&&s===1}function Gn(n,e){return Ic(n)||Ic(e)}function bo(n){return kc(n).every(e=>e>0)}function gr(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Zs(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")z(Fu(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{z(Fu(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _3(n,e){const s={x:P(n,"x","reshape","string_or_numeric")},r={shape:e};return K.runKernel(b0,s,r)}const de=X({reshape_:_3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A3(n,e,t,s,r){const a=P(n,"x","avgPool","float32"),o=1;z(Gn(t,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);let l=a,c=!1;a.rank===3&&(c=!0,l=de(a,[1,a.shape[0],a.shape[1],a.shape[2]])),z(l.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${l.rank}.`),Zs("avgPool",s,r);const d={x:l},f={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let p=K.runKernel(By,d,f);return p=kt(p,a.dtype),c?de(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const B$=X({avgPool_:A3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D3(n,e,t,s,r,a="NDHWC"){const o=P(n,"x","avgPool3d","float32");let l=o,c=!1;o.rank===4&&(c=!0,l=de(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),z(l.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),z(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),z(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Zs("avgPool3d",s,r);const d={x:l},f={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:a};let p=K.runKernel(My,d,f);return p=kt(p,l.dtype),c?de(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const O3=X({avgPool3d_:D3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P3(n,e=0){z(n.length>=1,()=>"Pass at least one tensor to concat");const t=tf(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),t.length===1)return ni(t[0]);const s=t,r={axis:e};return K.runKernel(Ky,s,r)}const dn=X({concat_:P3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(n,e,t=!1,s=!1){let r=P(n,"a","matMul"),a=P(e,"b","matMul");[r,a]=Vt(r,a);const o={a:r,b:a},l={transposeA:t,transposeB:s};return K.runKernel(Uy,o,l)}const vt=X({matMul_:F3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L3(n){const t={x:P(n,"x","sigmoid","float32")};return K.runKernel(P0,t)}const ia=X({sigmoid_:L3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z3(n,e,t){const s=P(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},a={begin:e,size:t};return K.runKernel(_0,r,a)}const Ze=X({slice_:z3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B3(n){const t={x:P(n,"x","tanh","float32")};return K.runKernel(Y0,t)}const jg=X({tanh_:B3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M3(n,e,t,s,r,a){const o=P(n,"forgetBias","basicLSTMCell"),l=P(e,"lstmKernel","basicLSTMCell"),c=P(t,"lstmBias","basicLSTMCell"),d=P(s,"data","basicLSTMCell"),f=P(r,"c","basicLSTMCell"),p=P(a,"h","basicLSTMCell"),g=dn([d,p],1),y=vt(g,l),x=Pe(y,c),w=x.shape[0],S=x.shape[1]/4,$=[w,S],N=Ze(x,[0,0],$),I=Ze(x,[0,S],$),_=Ze(x,[0,S*2],$),O=Ze(x,[0,S*3],$),M=Pe(be(ia(N),jg(I)),be(f,ia(Pe(o,_)))),W=be(jg(M),ia(O));return[M,W]}const U3=X({basicLSTMCell_:M3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V3(n,e,t){const s=P(n,"x","batchToSpaceND"),r=e.reduce((l,c)=>l*c);z(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),z(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),z(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const a={x:s},o={blockShape:e,crops:t};return K.runKernel(Vy,a,o)}const M$=X({batchToSpaceND_:V3});function W3(n){let e;return n.rank===0||n.rank===1?e=de(n,[1,1,1,n.size]):n.rank===2?e=de(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=de(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G3(n,e,t,s,r,a){a==null&&(a=.001);const o=P(n,"x","batchNorm"),l=P(e,"mean","batchNorm"),c=P(t,"variance","batchNorm");let d;r!=null&&(d=P(r,"scale","batchNorm"));let f;s!=null&&(f=P(s,"offset","batchNorm")),z(l.rank===c.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),z(f==null||l.rank===f.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),z(d==null||l.rank===d.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const g={x:W3(o),scale:d,offset:f,mean:l,variance:c},y={varianceEpsilon:a},x=K.runKernel(Nx,g,y);return de(x,o.shape)}const $f=X({batchNorm_:G3});function H3(n,e,t,s,r,a){const o=P(n,"x","batchNorm"),l=P(e,"mean","batchNorm"),c=P(t,"variance","batchNorm");let d;r!=null&&(d=P(r,"scale","batchNorm"));let f;return s!=null&&(f=P(s,"offset","batchNorm")),z(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),z(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`),z(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${c.rank}.`),d!=null&&z(d.rank===2||d.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${d.rank}.`),f!=null&&z(f.rank===2||f.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${f.rank}.`),$f(o,l,c,f,d,a)}const j3=X({batchNorm2d_:H3});function q3(n,e,t,s,r,a){const o=P(n,"x","batchNorm"),l=P(e,"mean","batchNorm"),c=P(t,"variance","batchNorm");let d;r!=null&&(d=P(r,"scale","batchNorm"));let f;return s!=null&&(f=P(s,"offset","batchNorm")),z(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),z(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`),z(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${c.rank}.`),d!=null&&z(d.rank===3||d.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${d.rank}.`),f!=null&&z(f.rank===3||f.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${f.rank}.`),$f(o,l,c,f,d,a)}const X3=X({batchNorm3d_:q3});function K3(n,e,t,s,r,a){const o=P(n,"x","batchNorm"),l=P(e,"mean","batchNorm"),c=P(t,"variance","batchNorm");let d;r!=null&&(d=P(r,"scale","batchNorm"));let f;return s!=null&&(f=P(s,"offset","batchNorm")),z(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),z(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`),z(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${c.rank}.`),d!=null&&z(d.rank===4||d.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${d.rank}.`),f!=null&&z(f.rank===4||f.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${f.rank}.`),$f(o,l,c,f,d,a)}const Y3=X({batchNorm4d_:K3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q3(n,e,t){const s=P(n,"x","bincount"),r=P(e,"weights","bincount");z(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),z(t>=0,()=>`size must be non-negative, but got ${t}.`),z(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const a={x:s,weights:r},o={size:t};return K.runKernel(Wy,a,o)}const U$=X({bincount_:Q3});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z3(n,e){const t=P(n,"x","bitwiseAnd"),s=P(e,"y","bitwiseAnd");if(!yt(t.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${s.shape}`);if(t.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${s.dtype}`);const r={a:t,b:s};return K.runKernel(BC,r)}const J3=X({bitwiseAnd_:Z3});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e_(n,e){const t=P(n,"s0","broadcastArgs","int32"),s=P(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:t,s1:s};return K.runKernel(Gy,r)}const t_=X({broadcastArgs_:e_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n_(n,e){let t=P(n,"broadcastTo","x");const s=t.shape;if(Es(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const d=t.shape.slice();for(;d.length<e.length;)d.unshift(1);t=de(t,d)}const r=t.shape,a=Array.from(e);for(let d=e.length-1;d>=0;d--)if(r[d]===e[d])a[d]=1;else if(t.shape[d]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(a.map((d,f)=>d>1?f:-1).filter(d=>d>=0).length===0)return ni(t);const l={x:t},c={reps:a};return K.runKernel(vf,l,c)}const Tc=X({broadcastTo_:n_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s_(n){const t={x:P(n,"x","ceil","float32")};return K.runKernel(Hy,t)}const r_=X({ceil_:s_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xc(n,e,t){Es(n),t=t||Xu(e);const s={shape:n,value:e,dtype:t};return K.runKernel(Sx,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a_(n,e,t){const s=P(n,"x","clipByValue");if(z(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Xc(s.shape,e,s.dtype);const r={x:s},a={clipValueMin:e,clipValueMax:t};return K.runKernel(jy,r,a)}const V$=X({clipByValue_:a_});function i_(n){return dn(n,0)}const o_=X({concat1d_:i_});function u_(n,e){return dn(n,e)}const l_=X({concat2d_:u_});function c_(n,e){return dn(n,e)}const d_=X({concat3d_:c_});function h_(n,e){return dn(n,e)}const f_=X({concat4d_:h_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p_(n,e,t,s,r="NHWC",a=[1,1],o){const l=P(n,"x","conv2d","float32"),c=P(e,"filter","conv2d","float32");let d=l,f=!1;l.rank===3&&(f=!0,d=de(l,[1,l.shape[0],l.shape[1],l.shape[2]])),z(d.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${d.rank}.`),z(c.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${c.rank}.`),Zs("conv2d",s,o);const p=r==="NHWC"?d.shape[3]:d.shape[1];z(p===c.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${c.shape[2]}.`),z(Gn(t,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),z(bo(a),()=>"Error in conv2D: Dilated rates should be larger than 0."),z(bo(t),()=>"Error in conv2D: Strides should be larger than 0.");const g={x:d,filter:c},y={strides:t,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},x=K.runKernel(Yy,g,y);return f?de(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const Tf=X({conv2d_:p_});function m_(n,e,t,s,r="NWC",a=1,o){const l=P(n,"x","conv1d"),c=P(e,"filter","conv1d");let d=l,f=!1;l.rank===2&&(f=!0,d=de(l,[1,l.shape[0],l.shape[1]])),z(d.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${d.rank}.`),z(c.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${c.rank}.`),Zs("conv1d",s,o),z(d.shape[2]===c.shape[1],()=>`Error in conv1d: depth of input (${d.shape[2]}) must match input depth for filter ${c.shape[1]}.`),z(Gn(t,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${a}'`),z(bo(a),()=>"Error in conv1D: Dilated rates should be larger than 0."),z(bo(t),()=>"Error in conv1D: Stride should be larger than 0."),z(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const p=de(c,[1,c.shape[0],c.shape[1],c.shape[2]]),g=de(d,[d.shape[0],1,d.shape[1],d.shape[2]]),S=Tf(g,p,[1,t],s,"NHWC",[1,a],o);return f?de(S,[S.shape[2],S.shape[3]]):de(S,[S.shape[0],S.shape[2],S.shape[3]])}const g_=X({conv1d_:m_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y_(n,e,t,s,r,a="NHWC",o){z(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let l=n,c=e,d=!1;e.rank===3&&(d=!0,c=de(e,[1,e.shape[0],e.shape[1],e.shape[2]]),l=[1,n[0],n[1],n[2]]),z(l.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${l.length}.`),z(c.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`),z(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const f=a==="NHWC"?l[3]:l[1],p=a==="NHWC"?c.shape[3]:c.shape[1];z(f===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${t.shape[2]}.`),z(p===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${t.shape[3]}.`),Zs("conv2dDerInput",r,o);const g={dy:c,filter:t},y={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,inputShape:l},x=K.runKernel(Zy,g,y);return d?de(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const W$=X({conv2DBackpropInput_:y_});function x_(n,e,t,s,r,a){const o=P(n,"x","conv2dTranspose"),l=P(e,"filter","conv2dTranspose");return W$(t,o,l,s,r,"NHWC",a)}const b_=X({conv2dTranspose_:x_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v_(n,e,t,s,r="NDHWC",a=[1,1,1]){const o=P(n,"x","conv3d"),l=P(e,"filter","conv3d");let c=o,d=!1;o.rank===4&&(d=!0,c=de(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),z(c.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${c.rank}.`),z(l.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${l.rank}.`),z(c.shape[4]===l.shape[3],()=>`Error in conv3d: depth of input (${c.shape[4]}) must match input depth for filter ${l.shape[3]}.`),z(Gn(t,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),z(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),z(bo(a),()=>"Error in conv3D: Dilated rates should be larger than 0."),z(bo(t),()=>"Error in conv3D: Strides should be larger than 0.");const f={x:c,filter:l},p={strides:t,pad:s,dataFormat:r,dilations:a},g=K.runKernel(Jy,f,p);return d?de(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const w_=X({conv3d_:v_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S_(n,e,t,s,r){z(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,o=e,l=!1;e.rank===4&&(l=!0,o=de(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),a=[1,n[0],n[1],n[2],n[3]]);const c=a[4],d=o.shape[4];z(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),z(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),z(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),z(c===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[3]}.`),z(d===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${t.shape[4]}.`);const f={dy:o,filter:t},p={pad:r,strides:s,inputShape:a},g=K.runKernel(ex,f,p);return l?de(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const C_=X({conv3DBackpropInput_:S_});function $_(n,e,t,s,r){const a=P(n,"x","conv3dTranspose"),o=P(e,"filter","conv3dTranspose");return C_(t,a,o,s,r)}const T_=X({conv3dTranspose_:$_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N_(n){const t={x:P(n,"x","cos","float32")};return K.runKernel(tx,t)}const E_=X({cos_:N_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k_(n){const t={x:P(n,"x","cosh","float32")};return K.runKernel(nx,t)}const R_=X({cosh_:k_});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I_(n,e=0,t=!1,s=!1){const a={x:P(n,"x","cumprod")},o={axis:e,exclusive:t,reverse:s};return K.runKernel(sx,a,o)}const __=X({cumprod_:I_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_(n,e=0,t=!1,s=!1){const a={x:P(n,"x","cumsum")},o={axis:e,exclusive:t,reverse:s};return K.runKernel(rx,a,o)}const D_=X({cumsum_:A_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O_(n,e,t,s=!1){const r=P(n,"x","denseBincount"),a=P(e,"weights","denseBincount");z(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),z(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),z(t>=0,()=>`size must be non-negative, but got ${t}.`),z(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);const o={x:r,weights:a},l={size:t,binaryOutput:s};return K.runKernel(ix,o,l)}const P_=X({denseBincount_:O_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F_(n,e,t="NHWC"){const s=P(n,"x","depthToSpace","float32"),r=t==="NHWC"?s.shape[1]:s.shape[2],a=t==="NHWC"?s.shape[2]:s.shape[3],o=t==="NHWC"?s.shape[3]:s.shape[1];z(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),z(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),z(a*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${e} for depthToSpace with input shape
        ${s.shape}`),z(o%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${o} for depthToSpace with input shape ${s.shape}`);const l={x:s},c={blockSize:e,dataFormat:t};return K.runKernel(ox,l,c)}const L_=X({depthToSpace_:F_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z_(n,e,t,s,r="NHWC",a=[1,1],o){const l=P(n,"x","depthwiseConv2d","float32"),c=P(e,"filter","depthwiseConv2d","float32");let d=l,f=!1;l.rank===3&&(f=!0,d=de(l,[1,l.shape[0],l.shape[1],l.shape[2]])),z(d.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),z(c.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`);const p=r==="NHWC"?d.shape[3]:d.shape[1];z(p===c.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${c.shape[2]}.`),Zs("depthwiseConv2d",s,o);const g={x:d,filter:c},y={strides:t,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},x=K.runKernel(ux,g,y);return f?de(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const o1=X({depthwiseConv2d_:z_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B_(n){const t={x:P(n,"x","diag")};return K.runKernel(dx,t)}const M_=X({diag_:B_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U_(n,e,t,s,r=[1,1],a="NHWC"){const o=P(n,"x","dilation2d"),l=P(e,"filter","dilation2d");z(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),z(l.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${l.rank}.`),z(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let c=o,d=!1;o.rank===3&&(c=de(o,[1,o.shape[0],o.shape[1],o.shape[2]]),d=!0),z(c.shape[3]===l.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${c.shape[3]} vs ${l.shape[2]}`);const f={x:c,filter:l},p={strides:t,pad:s,dilations:r},g=K.runKernel(hx,f,p);return d?de(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const V_=X({dilation2d_:U_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uu(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const a=t-1-r,o=n[a]||1;(e[e.length-1-r]||1)>1&&o===1&&s.unshift(a)}return s}function G$(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],a=e.length-s-1,o=e[a];(r==null||r===1&&o>1)&&t.unshift(a)}return t}function Ye(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let r=0;r<t;r++){let a=n[n.length-r-1];a==null&&(a=1);let o=e[e.length-r-1];if(o==null&&(o=1),a===1)s[t-r-1]=o;else if(o===1)s[t-r-1]=a;else if(a!==o){const l=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(l)}else s[t-r-1]=a}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W_(n,e){let t=P(n,"a","equal","string_or_numeric"),s=P(e,"b","equal","string_or_numeric");[t,s]=Vt(t,s),Ye(t.shape,s.shape);const r={a:t,b:s};return K.runKernel(yx,r)}const H$=X({equal_:W_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G_(n,e,t){const s=P(e,"a","where"),r=P(t,"b","where"),a=P(n,"condition","where","bool"),o=Ye(Ye(a.shape,s.shape),r.shape),l=Tc(a,o),c=Tc(s,o),d=Tc(r,o),f={condition:l,t:c,e:d};return K.runKernel(R0,f)}const si=X({where_:G_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(n){const t={x:P(n,"x","zerosLike")};return K.runKernel(t1,t)}const Ns=X({zerosLike_:H_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j_(n,e){let t=P(n,"a","div"),s=P(e,"b","div");[t,s]=Vt(t,s);const r=et(t,s),a=Ns(r),o=H$(s,a);return si(o,a,r)}const q_=X({divNoNan_:j_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X_(n,e){const t=P(n,"t1","dot"),s=P(e,"t2","dot");z((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],a=s.rank===1?s.size:s.shape[0];if(z(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),t.rank===1&&s.rank===1){const o=de(t,[1,-1]),l=de(s,[-1,1]),c=vt(o,l);return de(c,[])}else if(t.rank===1&&s.rank===2){const o=de(t,[1,-1]),l=de(s,[s.shape[0],s.shape[1]]),c=vt(o,l);return de(c,[c.size])}else if(t.rank===2&&s.rank===1){const o=de(s,[-1,1]),l=vt(t,o);return de(l,[l.size])}else{const o=de(s,[s.shape[0],s.shape[1]]);return vt(t,o)}}const K_=X({dot_:X_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y_(n,...e){const t=e.map((r,a)=>P(r,`tensors${a}`,"einsum")),s={equation:n};return K.runKernel(px,t,s)}const _u=X({einsum_:Y_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q_(n){const t={x:P(n,"x","elu","float32")};return K.runKernel(mx,t)}const j$=X({elu_:Q_});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z_(n,e){const t=P(n,"x","ensureShape","string_or_numeric");if(!kR(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const J_=X({ensureShape_:Z_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eA(n){let e=P(n,"x","erf");z(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=kt(e,"float32"));const t={x:e};return K.runKernel(gx,t)}const tA=X({erf_:eA});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u1(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function q$(n,e,t){const s=n.length+e.length,r=[];let a=0,o=0;for(let l=0;l<s;l++)t.indexOf(l)===-1?r.push(n[a++]):r.push(e[o++]);return r}function ks(n,e){const t=[],s=n.length;for(let a=0;a<s;a++)e.indexOf(a)===-1&&t.push(n[a]);const r=e.map(a=>n[a]);return[t,r]}function fs(n,e){const t=e.map(s=>1);return q$(n,t,e)}function ps(n,e,t){z(u1(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function _n(n,e){if(u1(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function Kc(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function An(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(n,e=null,t=!1){const r={x:P(n,"x","max")},a={reductionIndices:e,keepDims:t};return K.runKernel(jx,r,a)}const Pu=X({max_:nA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sA(n,e=null,t=!1){const r={x:P(n,"x","min")},a={axis:e,keepDims:t};return K.runKernel(Zx,r,a)}const qg=X({min_:sA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rA(n,e){let t=P(n,"base","pow"),s=P(e,"exp","pow");[t,s]=Vt(t,s);const r={a:t,b:s};return K.runKernel(h0,r)}const _c=X({pow_:rA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Je(n,e){if((Ks(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Ks(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ci(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aA(n){const t={x:P(n,"x","sqrt","float32")};return K.runKernel(L0,t)}const da=X({sqrt_:aA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iA(n){const e=P(n,"x","square"),t={};return K.runKernel("Square",{x:e},t)}const qs=X({square_:iA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oA(n,e=null,t=!1){let s=P(n,"x","sum");s.dtype==="bool"&&(s=kt(s,"int32"));const r={x:s},a={axis:e,keepDims:t};return K.runKernel(z0,r,a)}const Ot=X({sum_:oA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uA(n,e="euclidean",t=null,s=!1){n=P(n,"x","norm");const r=X$(n,e,t);let a=r.shape;if(s){const o=Pt(t,n.shape);a=fs(r.shape,o)}return de(r,a)}function X$(n,e,t=null){if(n.rank===0)return Cs(n);if(n.rank!==1&&t===null)return X$(de(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Ot(Cs(n),t);if(e===1/0)return Pu(Cs(n),t);if(e===-1/0)return qg(Cs(n),t);if(e==="euclidean"||e===2)return da(Ot(_c(Cs(n),Je(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Pu(Ot(Cs(n),t[0]),t[1]-1);if(e===1/0)return Pu(Ot(Cs(n),t[1]),t[0]);if(e===-1/0)return qg(Ot(Cs(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return da(Ot(qs(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Nf=X({norm_:uA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(n,e=null,t=!1){return Nf(n,"euclidean",e,t)}const cA=X({euclideanNorm_:lA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dA(n){const t={x:P(n,"x","exp")};return K.runKernel(xx,t)}const ha=X({exp_:dA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hA(n,e=0){const t=P(n,"x","expandDims","string_or_numeric");z(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return K.runKernel(bx,s,r)}const $s=X({expandDims_:hA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fA(n){const t={x:P(n,"x","expm1")};return K.runKernel(vx,t)}const pA=X({expm1_:fA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mA(n,e){const t=P(n,"x","tile","string_or_numeric");z(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return K.runKernel(vf,s,r)}const Nc=X({tile_:mA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gA(n,e,t,s="float32"){e==null&&(e=n);const r=xt([n,e],s),a=n<=e?n:e;for(let l=0;l<a;++l)r.set(1,l,l);const o=de(r.toTensor(),[n,e]);if(t==null)return o;if(t.length===1)return Nc($s(o,0),[t[0],1,1]);if(t.length===2)return Nc($s($s(o,0),0),[t[0],t[1],1,1]);if(t.length===3)return Nc($s($s($s(o,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const K$=X({eye_:gA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yA(n){const t={x:P(n,"x","floor","float32")};return K.runKernel($x,t)}const Y$=X({floor_:yA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xA(n,e,t=0,s=0){const r=P(n,"x","gather"),a=P(e,"indices","gather","int32"),o={x:r,indices:a},l={axis:t,batchDims:s};return K.runKernel(Ex,o,l)}const Q$=X({gather_:xA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bA(n,e){let t=P(n,"a","greater","string_or_numeric"),s=P(e,"b","greater","string_or_numeric");[t,s]=Vt(t,s),Ye(t.shape,s.shape);const r={a:t,b:s};return K.runKernel(Rx,r)}const Ef=X({greater_:bA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vA(n,e){let t=P(n,"a","greaterEqual","string_or_numeric"),s=P(e,"b","greaterEqual","string_or_numeric");[t,s]=Vt(t,s),Ye(t.shape,s.shape);const r={a:t,b:s};return K.runKernel(Ix,r)}const Z$=X({greaterEqual_:vA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wA(n){const t={input:P(n,"input","imag")};return K.runKernel(Ax,t)}const kf=X({imag_:wA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SA(n){const t={x:P(n,"x","isFinite")};return K.runKernel(Dx,t)}const CA=X({isFinite_:SA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(n){const t={x:P(n,"x","isInf")};return K.runKernel(Ox,t)}const TA=X({isInf_:$A});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n){const t={x:P(n,"x","isNaN")};return K.runKernel(Px,t)}const EA=X({isNaN_:NA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kA(n,e=.2){const s={x:P(n,"x","leakyRelu")},r={alpha:e};return K.runKernel(Fx,s,r)}const J$=X({leakyRelu_:kA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RA(n,e){let t=P(n,"a","less","string_or_numeric"),s=P(e,"b","less","string_or_numeric");[t,s]=Vt(t,s),Ye(t.shape,s.shape);const r={a:t,b:s};return K.runKernel(Lx,r)}const Xg=X({less_:RA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(n,e){let t=P(n,"a","lessEqual","string_or_numeric"),s=P(e,"b","lessEqual","string_or_numeric");[t,s]=Vt(t,s),Ye(t.shape,s.shape);const r={a:t,b:s};return K.runKernel(zx,r)}const l1=X({lessEqual_:IA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _A(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return K.runKernel(Bx,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AA(n,e=5,t=1,s=1,r=.5){const a=P(n,"x","localResponseNormalization");z(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),z(Fu(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let o=a,l=!1;a.rank===3&&(l=!0,o=de(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const c={x:o},d={depthRadius:e,bias:t,alpha:s,beta:r},f=K.runKernel(Hx,c,d);return l?de(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const DA=X({localResponseNormalization_:AA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(n){const t={x:P(n,"x","log","float32")};return K.runKernel(Mx,t)}const Ac=X({log_:OA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(n){const t={x:P(n,"x","log1p")};return K.runKernel(Ux,t)}const eT=X({log1p_:PA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FA(n,e){z(Ag(n),()=>"The f passed in variableGrads(f) must be a function"),z(e==null||Array.isArray(e)&&e.every(d=>d instanceof ef),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const d in K.registeredVariables)e.push(K.registeredVariables[d])}const s=t?e.filter(d=>!d.trainable):null,r=e.length;e=e.filter(d=>d.trainable),z(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const a=!0,{value:o,grads:l}=K.gradients(n,e,null,a);z(l.some(d=>d!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),z(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const c={};return e.forEach((d,f)=>{l[f]!=null&&(c[d.name]=l[f])}),s!=null&&s.forEach(d=>c[d.name]=null),{value:o,grads:c}}function fa(n){return K.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LA(n){const t={x:P(n,"x","neg")};return K.runKernel(r0,t)}const Ir=X({neg_:LA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zA(n){const t={x:P(n,"x","softplus")};return K.runKernel(F0,t)}const tT=X({softplus_:zA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BA(n){const e=P(n,"x","logSigmoid");return fa(s=>({value:Ir(tT(Ir(s))),gradFunc:o=>be(o,ia(Ir(s)))}))(e)}const MA=X({logSigmoid_:BA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UA(n,e){let t=P(n,"a","sub"),s=P(e,"b","sub");[t,s]=Vt(t,s);const r={a:t,b:s};return K.runKernel(X0,r)}const je=X({sub_:UA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VA(n,e=-1){const t=P(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return fa((r,a)=>{const l=Pu(r,e,!0),c=je(r,l),d=je(kt(c,"float32"),Ac(Ot(ha(c),e,!0)));return a([d]),{value:d,gradFunc:(p,g)=>{const[y]=g,x=!0,w=ha(y);return je(p,be(Ot(p,e,x),w))}}})(t)}const WA=X({logSoftmax_:VA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GA(n,e=null,t=!1){const s=P(n,"x","logSumExp"),r=Pt(e,s.shape),a=Pu(s,r,!0),o=je(s,a),l=ha(o),c=Ot(l,r),d=Ac(c),f=Pe(de(a,d.shape),d);if(t){const p=fs(f.shape,r);return de(f,p)}return f}const nT=X({logSumExp_:GA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(n,e){const t=P(n,"a","logicalAnd","bool"),s=P(e,"b","logicalAnd","bool");Ye(t.shape,s.shape);const r={a:t,b:s};return K.runKernel(Vx,r)}const nf=X({logicalAnd_:HA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jA(n){const t={x:P(n,"x","logicalNot","bool")};return K.runKernel(Wx,t)}const sT=X({logicalNot_:jA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(n,e){const t=P(n,"a","logicalOr","bool"),s=P(e,"b","logicalOr","bool");Ye(t.shape,s.shape);const r={a:t,b:s};return K.runKernel(Gx,r)}const rT=X({logicalOr_:qA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XA(n,e){const t=P(n,"a","logicalXor","bool"),s=P(e,"b","logicalXor","bool");return Ye(t.shape,s.shape),nf(rT(n,e),sT(nf(n,e)))}const KA=X({logicalXor_:XA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $h=2147483648;function YA(n,e,t="left"){const s=P(n,"sortedSequence","searchSorted"),r=P(e,"values","searchSorted"),a=s.shape[s.shape.length-1],o=r.shape[r.shape.length-1],l=de(s,[-1,a]),c=de(r,[-1,o]);if(l.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(l.shape[0]!==c.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(oe(c.shape)>=$h)throw new Error(`values tensor size must less than ${$h}`);if(l.shape[1]>=$h)throw new Error(`trailing dim_size must less than ${$h} for int32 output type, was ${l.shape[1]}`);const d={sortedSequence:l,values:c},f={side:t};return K.runKernel(k0,d,f)}const c1=X({searchSorted_:YA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(n,e){return c1(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(n,e,t,s,r){const a=P(n,"x","maxPool"),o=1;let l=a,c=!1;a.rank===3&&(c=!0,l=de(a,[1,a.shape[0],a.shape[1],a.shape[2]])),z(l.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.rank}.`),z(Gn(t,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),Zs("maxPool",s,r);const d={x:l},f={filterSize:e,strides:t,pad:s,dimRoundingMode:r},p=K.runKernel(Xx,d,f);return c?de(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const aT=X({maxPool_:ZA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JA(n,e=[1,1,1],t,s,r,a="NDHWC"){const o=P(n,"x","maxPool3d");let l=o,c=!1;o.rank===4&&(c=!0,l=de(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),z(l.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),z(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),Zs("maxPool3d",s,r);const d={x:l},f={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:a},p=K.runKernel(Kx,d,f);return c?de(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const eD=X({maxPool3d_:JA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tD(n,e,t,s,r=!1){const o={x:P(n,"x","maxPoolWithArgmax")},l={filterSize:e,strides:t,pad:s,includeBatchInIndex:r},c=K.runKernel(Yx,o,l);return{result:c[0],indexes:c[1]}}const nD=X({maxPoolWithArgmax_:tD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sD(n,e){let t=P(n,"a","maximum"),s=P(e,"b","maximum");[t,s]=Vt(t,s),t.dtype==="bool"&&(t=kt(t,"int32"),s=kt(s,"int32")),Ye(t.shape,s.shape);const r={a:t,b:s};return K.runKernel(qx,r)}const iT=X({maximum_:sD});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rD(n,e=null,t=!1){const r={x:P(n,"x","mean")},a={axis:e,keepDims:t};return K.runKernel(Qx,r,a)}const sf=X({mean_:rD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pa(n,e="float32"){if(Es(n),e==="complex64"){const s=pa(n,"float32"),r=pa(n,"float32");return ri(s,r)}const t=ua(oe(n),e);return K.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lo(n,e="float32"){if(Es(n),e==="complex64"){const s=lo(n,"float32"),r=pa(n,"float32");return ri(s,r)}const t=OC(oe(n),e);return K.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=P(n,"x","meshgrid",n instanceof Mt?n.dtype:"float32");if(e===void 0)return[s];let r=P(e,"y","meshgrid",e instanceof Mt?e.dtype:"float32");const a=oe(s.shape),o=oe(r.shape);return t==="xy"?(s=de(s,[1,-1]),r=de(r,[-1,1]),[vt(lo([o,1],s.dtype),s),vt(r,lo([1,a],r.dtype))]):(s=de(s,[-1,1]),r=de(r,[1,-1]),[vt(s,lo([1,o],s.dtype)),vt(lo([a,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iD(n,e){let t=P(n,"a","minimum"),s=P(e,"b","minimum");[t,s]=Vt(t,s),t.dtype==="bool"&&(t=kt(t,"int32"),s=kt(s,"int32")),Ye(t.shape,s.shape);const r={a:t,b:s};return K.runKernel(Jx,r)}const Dc=X({minimum_:iD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(n,e,t){z(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=P(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");z(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let l=0;l<s.rank;l++)z(e[l].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),z(e[l][0]>=0&&e[l][0]<=s.shape[l]-r&&e[l][1]>=0&&e[l][1]<=s.shape[l]-r,()=>`Padding in dimension ${l} cannot be greater than or equal to ${s.shape[l]-r} or less than 0 for input of shape ${s.shape}`);const a={paddings:e,mode:t},o={x:s};return K.runKernel(e0,o,a)}const oT=X({mirrorPad_:oD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uD(n,e){let t=P(n,"a","mod"),s=P(e,"b","mod");[t,s]=Vt(t,s);const r={a:t,b:s};return K.runKernel(t0,r)}const lD=X({mod_:uD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cD(n,e=null,t=!1){n=P(n,"x","moments");const s=Pt(e,n.shape),r=sf(n,s,t);let a=r.shape;t||(a=fs(r.shape,s));const o=qs(je(kt(n,"float32"),de(r,a))),l=sf(o,s,t);return{mean:r,variance:l}}const dD=X({moments_:cD});function hD(n,e,t,s){const r=P(e,"data","multiRNNCell"),a=tf(t,"c","multiRNNCell"),o=tf(s,"h","multiRNNCell");let l=r;const c=[];for(let p=0;p<n.length;p++){const g=n[p](l,a[p],o[p]);c.push(g[0]),c.push(g[1]),l=g[1]}const d=[],f=[];for(let p=0;p<c.length;p+=2)d.push(c[p]),f.push(c[p+1]);return[d,f]}const fD=X({multiRNNCell_:hD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pD(n,e,t,s=!1){const r=P(n,"logits","multinomial"),a=r.size,o=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);t=t||Math.random();const c={logits:o===1?de(r,[1,-1]):r},d={numSamples:e,seed:t,normalized:s},f=K.runKernel(n0,c,d);return o===1?de(f,[f.size]):f}const mD=X({multinomial_:pD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gD(n,e){let t=P(n,"a","notEqual","string_or_numeric"),s=P(e,"b","notEqual","string_or_numeric");[t,s]=Vt(t,s),Ye(t.shape,s.shape);const r={a:t,b:s};return K.runKernel(a0,r)}const uT=X({notEqual_:gD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yD(n,e,t=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const o={indices:P(n,"indices","oneHot","int32")},l={dtype:r,depth:e,onValue:t,offValue:s};return K.runKernel(l0,o,l)}const xD=X({oneHot_:yD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bD(n){const t={x:P(n,"x","onesLike")};return K.runKernel(u0,t)}const vD=X({onesLike_:bD});function wD(n,e){const t=P(n,"v1","outerProduct"),s=P(e,"v2","outerProduct");z(t.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const r=de(t,[-1,1]),a=de(s,[1,-1]);return vt(r,a)}const SD=X({outerProduct_:wD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CD(n,e,t=0){const s=P(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},a={x:s};return K.runKernel(d0,a,r)}const ii=X({pad_:CD});function $D(n,e,t=0){return z(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),ii(n,[e],t)}const TD=X({pad1d_:$D});function ND(n,e,t=0){return z(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ii(n,e,t)}const ED=X({pad2d_:ND});function kD(n,e,t=0){return z(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ii(n,e,t)}const RD=X({pad3d_:kD});function ID(n,e,t=0){return z(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ii(n,e,t)}const _D=X({pad4d_:ID});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AD(n,e,t){const s=P(n,"x","spaceToBatchND");z(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),z(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),z(s.shape.reduce((o,l,c)=>c>0&&c<=e.length?o&&(l+t[c-1][0]+t[c-1][1])%e[c-1]===0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},a={blockShape:e,paddings:t};return K.runKernel(B0,r,a)}const lT=X({spaceToBatchND_:AD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DD(n,e,t,s,r,a,o){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");const l=P(n,"x","maxPool");let c=l,d=!1;l.rank===3&&(d=!0,c=de(l,[1,l.shape[0],l.shape[1],l.shape[2]])),z(Gn(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);const f=Qs(c.shape,e,a,r,s),p=[f.dilationHeight,f.dilationWidth];let g;s==="same"?g=PD([f.filterHeight,f.filterWidth],p):g=[[0,0],[0,0]];const y=p[0]===1&&p[1]===1,[x,w]=OD([f.inHeight,f.inWidth],p,g),S=y?s:"valid",$=y?c:lT(c,p,x),I=(t==="avg"?()=>B$($,e,a,S,o):()=>aT($,e,a,S,o))(),_=y?I:M$(I,p,w);return d?de(_,[_.shape[1],_.shape[2],_.shape[3]]):_}function OD(n,e,t){const s=t.map(f=>f[0]),r=t.map(f=>f[1]),a=n.concat(s,r),o=e.map((f,p)=>(f-a[p]%f)%f),l=r.map((f,p)=>f+o[p]),c=e.map((f,p)=>[s[p],l[p]]),d=e.map((f,p)=>[0,o[p]]);return[c,d]}function PD(n,e){const s=n.map((o,l)=>o+(o-1)*(e[l]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),a=s.map((o,l)=>o-r[l]);return s.map((o,l)=>[r[l],a[l]])}const FD=X({pool_:DD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LD(n,e){const t=P(n,"x","prelu"),s=P(e,"alpha","prelu"),r={x:t,alpha:s};return K.runKernel(f0,r)}const cT=X({prelu_:LD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zD(n,e=null,t=!1){let s=P(n,"x","prod");s.dtype==="bool"&&(s=kt(s,"int32"));const r={x:s},a={axis:e,keepDims:t};return K.runKernel(p0,r,a)}const BD=X({prod_:zD});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MD(n,e,t,s){const r=n.map((f,p)=>P(f,`tensors${p}`,"raggedGather","int32")),a=P(e,"paramsDenseValues","raggedGather"),o=P(t,"indices","raggedGather","int32"),l={paramsNestedSplits:r,paramsDenseValues:a,indices:o},c={outputRaggedRank:s},d=K.runKernel(qC,l,c);return{outputNestedSplits:d.slice(0,d.length-1),outputDenseValues:d[d.length-1]}}const UD=X({raggedGather_:MD});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VD(n,e,t){const s=P(n,"starts","raggedRange"),r=P(e,"limits","raggedRange",s.dtype),a=P(t,"deltas","raggedRange",s.dtype),o={starts:s,limits:r,deltas:a},l=K.runKernel(XC,o);return{rtNestedSplits:l[0],rtDenseValues:l[1]}}const WD=X({raggedRange_:VD});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GD(n,e,t,s,r){const a=P(n,"shape","raggedTensorToTensor","int32"),o=P(e,"values","raggedTensorToTensor"),l=P(t,"defaultValue","raggedTensorToTensor",o.dtype),c=s.map((p,g)=>P(p,`tensors${g}`,"raggedTensorToTensor","int32")),d={shape:a,values:o,defaultValue:l,rowPartitionTensors:c},f={rowPartitionTypes:r};return K.runKernel(KC,d,f)}const HD=X({raggedTensorToTensor_:GD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jD(n,e,t){Es(n);const s=oe(n);let r=null;if(t==null||t==="float32")r=new Float32Array(s);else if(t==="int32")r=new Int32Array(s);else if(t==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${t}`);for(let a=0;a<s;a++)r[a]=e();return K.makeTensor(r,n,t)}const qD=X({rand_:jD});var Fh={exports:{}},XD=Fh.exports,Ow;function KD(){return Ow||(Ow=1,function(n){(function(e,t,s){function r(c){var d=this,f=l();d.next=function(){var p=2091639*d.s0+d.c*23283064365386963e-26;return d.s0=d.s1,d.s1=d.s2,d.s2=p-(d.c=p|0)},d.c=1,d.s0=f(" "),d.s1=f(" "),d.s2=f(" "),d.s0-=f(c),d.s0<0&&(d.s0+=1),d.s1-=f(c),d.s1<0&&(d.s1+=1),d.s2-=f(c),d.s2<0&&(d.s2+=1),f=null}function a(c,d){return d.c=c.c,d.s0=c.s0,d.s1=c.s1,d.s2=c.s2,d}function o(c,d){var f=new r(c),p=d&&d.state,g=f.next;return g.int32=function(){return f.next()*4294967296|0},g.double=function(){return g()+(g()*2097152|0)*11102230246251565e-32},g.quick=g,p&&(typeof p=="object"&&a(p,f),g.state=function(){return a(f,{})}),g}function l(){var c=4022871197,d=function(f){f=String(f);for(var p=0;p<f.length;p++){c+=f.charCodeAt(p);var g=.02519603282416938*c;c=g>>>0,g-=c,g*=c,c=g>>>0,g-=c,c+=g*4294967296}return(c>>>0)*23283064365386963e-26};return d}t&&t.exports?t.exports=o:this.alea=o})(XD,n)}(Fh)),Fh.exports}var Lh={exports:{}},YD=Lh.exports,Pw;function QD(){return Pw||(Pw=1,function(n){(function(e,t,s){function r(l){var c=this,d="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var p=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^p^p>>>8},l===(l|0)?c.x=l:d+=l;for(var f=0;f<d.length+64;f++)c.x^=d.charCodeAt(f)|0,c.next()}function a(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function o(l,c){var d=new r(l),f=c&&c.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var g=d.next()>>>11,y=(d.next()>>>0)/4294967296,x=(g+y)/(1<<21);while(x===0);return x},p.int32=d.next,p.quick=p,f&&(typeof f=="object"&&a(f,d),p.state=function(){return a(d,{})}),p}t&&t.exports?t.exports=o:this.xor128=o})(YD,n)}(Lh)),Lh.exports}var zh={exports:{}},ZD=zh.exports,Fw;function JD(){return Fw||(Fw=1,function(n){(function(e,t,s){function r(l){var c=this,d="";c.next=function(){var p=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(p^p<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:d+=l;for(var f=0;f<d.length+64;f++)c.x^=d.charCodeAt(f)|0,f==d.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function a(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function o(l,c){var d=new r(l),f=c&&c.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var g=d.next()>>>11,y=(d.next()>>>0)/4294967296,x=(g+y)/(1<<21);while(x===0);return x},p.int32=d.next,p.quick=p,f&&(typeof f=="object"&&a(f,d),p.state=function(){return a(d,{})}),p}t&&t.exports?t.exports=o:this.xorwow=o})(ZD,n)}(zh)),zh.exports}var Bh={exports:{}},eO=Bh.exports,Lw;function tO(){return Lw||(Lw=1,function(n){(function(e,t,s){function r(l){var c=this;c.next=function(){var f=c.x,p=c.i,g,y;return g=f[p],g^=g>>>7,y=g^g<<24,g=f[p+1&7],y^=g^g>>>10,g=f[p+3&7],y^=g^g>>>3,g=f[p+4&7],y^=g^g<<7,g=f[p+7&7],g=g^g<<13,y^=g^g<<9,f[p]=y,c.i=p+1&7,y};function d(f,p){var g,y=[];if(p===(p|0))y[0]=p;else for(p=""+p,g=0;g<p.length;++g)y[g&7]=y[g&7]<<15^p.charCodeAt(g)+y[g+1&7]<<13;for(;y.length<8;)y.push(0);for(g=0;g<8&&y[g]===0;++g);for(g==8?y[7]=-1:y[g],f.x=y,f.i=0,g=256;g>0;--g)f.next()}d(c,l)}function a(l,c){return c.x=l.x.slice(),c.i=l.i,c}function o(l,c){l==null&&(l=+new Date);var d=new r(l),f=c&&c.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var g=d.next()>>>11,y=(d.next()>>>0)/4294967296,x=(g+y)/(1<<21);while(x===0);return x},p.int32=d.next,p.quick=p,f&&(f.x&&a(f,d),p.state=function(){return a(d,{})}),p}t&&t.exports?t.exports=o:this.xorshift7=o})(eO,n)}(Bh)),Bh.exports}var Mh={exports:{}},nO=Mh.exports,zw;function sO(){return zw||(zw=1,function(n){(function(e,t,s){function r(l){var c=this;c.next=function(){var f=c.w,p=c.X,g=c.i,y,x;return c.w=f=f+1640531527|0,x=p[g+34&127],y=p[g=g+1&127],x^=x<<13,y^=y<<17,x^=x>>>15,y^=y>>>12,x=p[g]=x^y,c.i=g,x+(f^f>>>16)|0};function d(f,p){var g,y,x,w,S,$=[],N=128;for(p===(p|0)?(y=p,p=null):(p=p+"\0",y=0,N=Math.max(N,p.length)),x=0,w=-32;w<N;++w)p&&(y^=p.charCodeAt((w+32)%p.length)),w===0&&(S=y),y^=y<<10,y^=y>>>15,y^=y<<4,y^=y>>>13,w>=0&&(S=S+1640531527|0,g=$[w&127]^=y+S,x=g==0?x+1:0);for(x>=128&&($[(p&&p.length||0)&127]=-1),x=127,w=4*128;w>0;--w)y=$[x+34&127],g=$[x=x+1&127],y^=y<<13,g^=g<<17,y^=y>>>15,g^=g>>>12,$[x]=y^g;f.w=S,f.X=$,f.i=x}d(c,l)}function a(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function o(l,c){l==null&&(l=+new Date);var d=new r(l),f=c&&c.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var g=d.next()>>>11,y=(d.next()>>>0)/4294967296,x=(g+y)/(1<<21);while(x===0);return x},p.int32=d.next,p.quick=p,f&&(f.X&&a(f,d),p.state=function(){return a(d,{})}),p}t&&t.exports?t.exports=o:this.xor4096=o})(nO,n)}(Mh)),Mh.exports}var Uh={exports:{}},rO=Uh.exports,Bw;function aO(){return Bw||(Bw=1,function(n){(function(e,t,s){function r(l){var c=this,d="";c.next=function(){var p=c.b,g=c.c,y=c.d,x=c.a;return p=p<<25^p>>>7^g,g=g-y|0,y=y<<24^y>>>8^x,x=x-p|0,c.b=p=p<<20^p>>>12^g,c.c=g=g-y|0,c.d=y<<16^g>>>16^x,c.a=x-p|0},c.a=0,c.b=0,c.c=-1640531527,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):d+=l;for(var f=0;f<d.length+20;f++)c.b^=d.charCodeAt(f)|0,c.next()}function a(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function o(l,c){var d=new r(l),f=c&&c.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var g=d.next()>>>11,y=(d.next()>>>0)/4294967296,x=(g+y)/(1<<21);while(x===0);return x},p.int32=d.next,p.quick=p,f&&(typeof f=="object"&&a(f,d),p.state=function(){return a(d,{})}),p}t&&t.exports?t.exports=o:this.tychei=o})(rO,n)}(Uh)),Uh.exports}var Vh={exports:{}};const iO={},oO=Object.freeze(Object.defineProperty({__proto__:null,default:iO},Symbol.toStringTag,{value:"Module"})),uO=mR(oO);var lO=Vh.exports,Mw;function cO(){return Mw||(Mw=1,function(n){(function(e,t,s){var r=256,a=6,o=52,l="random",c=s.pow(r,a),d=s.pow(2,o),f=d*2,p=r-1,g;function y(_,O,M){var W=[];O=O==!0?{entropy:!0}:O||{};var G=$(S(O.entropy?[_,I(t)]:_??N(),3),W),F=new x(W),B=function(){for(var D=F.g(a),Q=c,re=0;D<d;)D=(D+re)*r,Q*=r,re=F.g(1);for(;D>=f;)D/=2,Q/=2,re>>>=1;return(D+re)/Q};return B.int32=function(){return F.g(4)|0},B.quick=function(){return F.g(4)/4294967296},B.double=B,$(I(F.S),t),(O.pass||M||function(D,Q,re,he){return he&&(he.S&&w(he,F),D.state=function(){return w(F,{})}),re?(s[l]=D,Q):D})(B,G,"global"in O?O.global:this==s,O.state)}function x(_){var O,M=_.length,W=this,G=0,F=W.i=W.j=0,B=W.S=[];for(M||(_=[M++]);G<r;)B[G]=G++;for(G=0;G<r;G++)B[G]=B[F=p&F+_[G%M]+(O=B[G])],B[F]=O;(W.g=function(D){for(var Q,re=0,he=W.i,le=W.j,ne=W.S;D--;)Q=ne[he=p&he+1],re=re*r+ne[p&(ne[he]=ne[le=p&le+Q])+(ne[le]=Q)];return W.i=he,W.j=le,re})(r)}function w(_,O){return O.i=_.i,O.j=_.j,O.S=_.S.slice(),O}function S(_,O){var M=[],W=typeof _,G;if(O&&W=="object")for(G in _)try{M.push(S(_[G],O-1))}catch{}return M.length?M:W=="string"?_:_+"\0"}function $(_,O){for(var M=_+"",W,G=0;G<M.length;)O[p&G]=p&(W^=O[p&G]*19)+M.charCodeAt(G++);return I(O)}function N(){try{var _;return g&&(_=g.randomBytes)?_=_(r):(_=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(_)),I(_)}catch{var O=e.navigator,M=O&&O.plugins;return[+new Date,e,M,e.screen,I(t)]}}function I(_){return String.fromCharCode.apply(0,_)}if($(s.random(),t),n.exports){n.exports=y;try{g=uO}catch{}}else s["seed"+l]=y})(typeof self<"u"?self:lO,[],Math)}(Vh)),Vh.exports}var cg,Uw;function dO(){if(Uw)return cg;Uw=1;var n=KD(),e=QD(),t=JD(),s=tO(),r=sO(),a=aO(),o=cO();return o.alea=n,o.xor128=e,o.xorwow=t,o.xorshift7=s,o.xor4096=r,o.tychei=a,cg=o,cg}var d1=dO();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class h1{constructor(e,t,s,r,a){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const o=a||Math.random();this.random=d1.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,a,o;do r=2*this.random()-1,a=2*this.random()-1,o=r*r+a*a;while(o>=1||o===0);const l=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*r*l,t=this.mean+this.stdDev*a*l,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class hO{constructor(e,t,s,r){this.alpha=e,this.beta=1/t,this.dtype=s;const a=r||Math.random();this.randu=d1.alea(a.toString()),this.randn=new h1(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,r,a,o;for(;;){do r=this.randn.nextValue(),o=1+this.c*r;while(o<=0);if(o*=o*o,e=r*r,t=1-.331*e*e,s=.5*e+this.d*(1-o+Math.log(o)),a=this.randu(),a<t||Math.log(a)<s)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class fO{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=d1.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pO(n,e,t=1,s="float32",r){if(Es(n),t==null&&(t=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const a=new hO(e,t,s,r),o=xt(n,s);for(let l=0;l<o.values.length;l++)o.values[l]=a.nextValue();return o.toTensor()}const mO=X({randomGamma_:pO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gO(n,e=0,t=1,s,r){if(Es(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const a=new h1(e,t,s,!1,r),o=xt(n,s);for(let l=0;l<o.values.length;l++)o.values[l]=a.nextValue();return o.toTensor()}const dT=X({randomNormal_:gO});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yO(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return dT(n,0,1,e,t)}const xO=X({randomStandardNormal_:yO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bO(n,e=0,t=1,s="float32",r){Es(n);const a=xt(n,s),o=new fO(e,t,null,r);for(let l=0;l<a.values.length;l++)a.values[l]=o.nextValue();return a.toTensor()}const f1=X({randomUniform_:bO});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vO(n,e,t,s){return f1(n,e,t,"int32",s)}const wO=X({randomUniformInt_:vO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oc(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return K.runKernel(m0,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SO(n){const t={input:P(n,"input","real")};return K.runKernel(g0,t)}const Pc=X({real_:SO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CO(n){const t={x:P(n,"x","reciprocal")};return K.runKernel(y0,t)}const $O=X({reciprocal_:CO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TO(n){const t={x:P(n,"x","relu")};return K.runKernel(x0,t)}const Rf=X({relu_:TO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NO(n){const t={x:P(n,"x","relu6")};return K.runKernel(S0,t)}const hT=X({relu6_:NO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(n,e){const s={x:P(n,"x","reverse")},r={dims:e};return K.runKernel(C0,s,r)}const vo=X({reverse_:EO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kO(n){const e=P(n,"x","reverse");return z(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),vo(e,0)}const RO=X({reverse1d_:kO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IO(n,e){const t=P(n,"x","reverse");return z(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),vo(t,e)}const _O=X({reverse2d_:IO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AO(n,e){const t=P(n,"x","reverse");return z(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),vo(t,e)}const DO=X({reverse3d_:AO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OO(n,e){const t=P(n,"x","reverse");return z(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),vo(t,e)}const PO=X({reverse4d_:OO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FO(n){const t={x:P(n,"x","round")};return K.runKernel($0,t)}const fT=X({round_:FO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LO(n){const t={x:P(n,"x","rsqrt","float32")};return K.runKernel(T0,t)}const zO=X({rsqrt_:LO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BO(n){const t={x:P(n,"x","selu")};return K.runKernel(I0,t)}const MO=X({selu_:BO});function UO(n,e,t,s,r,a=[1,1],o="NHWC"){const l=P(n,"x","separableConv2d"),c=P(e,"depthwiseFilter","separableConv2d"),d=P(t,"pointwiseFilter","separableConv2d");let f=l,p=!1;if(l.rank===3&&(p=!0,f=de(l,[1,l.shape[0],l.shape[1],l.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");z(f.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${f.rank}.`),z(c.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${c.rank}.`),z(d.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${c.rank}.`),z(d.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${d.shape[0]}.`),z(d.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${d.shape[1]}.`);const g=c.shape[2],y=c.shape[3];z(d.shape[2]===g*y,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${g*y}, but got ${d.shape[2]}.`);const x=o1(f,c,s,r,o,a),S=Tf(x,d,1,"valid",o);return p?de(S,[S.shape[1],S.shape[2],S.shape[3]]):S}const VO=X({separableConv2d_:UO});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function WO(n,e){const t=P(n,"x","setdiff1d"),s=P(e,"y","setdiff1d");z(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),z(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),z(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await t.data(),a=await s.data(),o=new Set(a);let l=0;for(let f=0;f<r.length;f++)o.has(r[f])||l++;const c=new Lu([l],t.dtype),d=new Lu([l],"int32");for(let f=0,p=0;f<r.length;f++)o.has(r[f])||(c.values[p]=r[f],d.values[p]=f,p++);return[c.toTensor(),d.toTensor()]}const GO=WO;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HO(n){const t={x:P(n,"x","sign")};return K.runKernel(O0,t)}const jO=X({sign_:HO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qO(n){const t={x:P(n,"x","sin","float32")};return K.runKernel(A0,t)}const XO=X({sin_:qO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KO(n){const t={x:P(n,"x","sinh")};return K.runKernel(D0,t)}const YO=X({sinh_:KO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QO(n,e,t){const s=P(n,"x","slice1d");return z(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Ze(s,[e],[t])}const ZO=X({slice1d_:QO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JO(n,e,t){const s=P(n,"x","slice2d");return z(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Ze(s,e,t)}const eP=X({slice2d_:JO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tP(n,e,t){const s=P(n,"x","slice3d");return z(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Ze(s,e,t)}const nP=X({slice3d_:tP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sP(n,e,t){const s=P(n,"x","slice4d");return z(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Ze(s,e,t)}const rP=X({slice4d_:sP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(n,e=-1){const t=P(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return K.runKernel(U0,s,r)}const iP=X({softmax_:aP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oP(n){z(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return K.runKernel(wx,e)}const p1=X({fft_:oP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(n){z(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return K.runKernel(_x,e)}const rf=X({ifft_:uP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=de(n,[t,e]);s=rf(r)}else{const r=[t,2*(e-1)],a=de(Pc(n),[t,e]),o=de(kf(n),[t,e]),l=vo(Ze(a,[0,1],[t,e-2]),1),c=be(vo(Ze(o,[0,1],[t,e-2]),1),Je(-1)),d=dn([a,l],1),f=dn([o,c],1),p=de(ri(d,f),[r[0],r[1]]);s=rf(p)}if(s=Pc(s),n.rank===3&&n.shape[0]!==0){const r=s,a=n.shape[0];s=de(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}const pT=X({irfft_:lP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cP(n,e,t=0){const r={x:P(n,"x","split")},a={numOrSizeSplits:e,axis:t};return K.runKernel(M0,r,a)}const Fc=X({split_:cP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(n,e){z(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const x=n.shape.map(S=>0),w=n.shape.map(S=>S);w[n.shape.length-1]=e,r=Ze(n,x,w),t=e}else if(e!=null&&e>t){const x=n.shape.map(w=>w);x[n.shape.length-1]=e-t,r=dn([n,pa(x)],n.shape.length-1),t=e}else r=n;const a=Ns(r),o=de(ri(r,a),[s,t]),l=p1(o),c=Math.floor(t/2)+1,d=Pc(l),f=kf(l),p=Fc(d,[c,t-c],d.shape.length-1),g=Fc(f,[c,t-c],f.shape.length-1),y=r.shape.slice();return y[r.shape.length-1]=c,de(ri(p[0],g[0]),y)}const m1=X({rfft_:dP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hP(n,e){let t=P(n,"a","squaredDifference"),s=P(e,"b","squaredDifference");[t,s]=Vt(t,s),Ye(t.shape,s.shape);const r={a:t,b:s},a={};return K.runKernel(H0,r,a)}const mT=X({squaredDifference_:hP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(n,e){const t=P(n,"x","squeeze","string_or_numeric");return de(t,ui(t.shape,e).newShape)}const bt=X({squeeze_:fP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pP(n,e=0){const t=tf(n,"tensors","stack","string_or_numeric");z(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&z(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return K.runKernel(c0,s,r)}const ma=X({stack_:pP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mP(n,e=0){const s={x:P(n,"x","step")},r={alpha:e};return K.runKernel(n1,s,r)}const gT=X({step_:mP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(n,e,t,s,r=0,a=0,o=0,l=0,c=0){const f={x:P(n,"x","stridedSlice","string_or_numeric")},p={begin:e,end:t,strides:s,beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:l,shrinkAxisMask:c};return K.runKernel(j0,f,p)}const yP=X({stridedSlice_:gP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xP(n){const t={x:P(n,"x","tan","float32")};return K.runKernel(K0,t)}const bP=X({tan_:xP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function In(n,e){qu(n);const t=li(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ci(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xs(n,e,t){if(qu(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=li(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ci(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yT(n,e,t){if(qu(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=li(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ci(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vP(n,e,t){if(qu(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=li(n,t);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ci(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wP(n,e,t){if(qu(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=li(n,t);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ci(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SP(n,e,t){if(qu(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=li(n,t);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,ci(n,e,s,t)}function xT(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(a+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(a+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(a+` update.rank != ${r+n.length-s}`);for(let o=0;o<r;++o)if(t.shape[o]!==e.shape[o])throw new Error(a+` updates.shape[${o}] (${t.shape[o]}) != indices.shape[${o}] (${e.shape[o]}).`);for(let o=0;o<t.rank-r;++o)if(t.shape[o+r]!==n[o+s])throw new Error(a+` updates.shape[${o+r}] (${t.shape[o+r]}) != shape[${o+r}] (${n[o+r]})`)}function g1(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}xT(t,e,n)}function $o(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,a=t.length;let o=1;for(let p=r;p<a;++p)o*=t[p];const l=r<1?1:r,c=oe(e.shape)/l,d=[...Ut(t.slice(0,r)),1],f=oe(t);return{sliceRank:r,numUpdates:c,sliceSize:o,strides:d,outputSize:f}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CP(n,e,t){const s=P(n,"tensor","tensorScatterupdate"),r=P(e,"indices","tensorScatterupdate","int32"),a=P(t,"updates","tensorScatterupdate");if(g1(a,r,s.shape),s.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${a.dtype}.`);const o={tensor:s,indices:r,updates:a},l={};return K.runKernel(E0,o,l)}const $P=X({tensorScatterUpdate_:CP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TP(n,e=1,t=!0){const s=P(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const a={x:s},o={k:e,sorted:t},[l,c]=K.runKernel(Q0,a,o);return{values:l,indices:c}}const NP=X({topk_:TP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EP(n,e=0,t=1,s,r){if(Es(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const a=new h1(e,t,s,!0,r),o=xt(n,s);for(let l=0;l<o.values.length;l++)o.values[l]=a.nextValue();return o.toTensor()}const kP=X({truncatedNormal_:EP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RP(n,e=0){const t=P(n,"x","unique","string_or_numeric");z(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[a,o]=K.runKernel(r$,s,r);return{values:a,indices:o}}const IP=X({unique_:RP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _P(n,e,t){const s=P(n,"x","unsortedSegmentSum"),r=P(e,"segmentIds","unsortedSegmentSum","int32");z(Fu(t),()=>"numSegments must be of dtype int");const a={x:s,segmentIds:r},o={numSegments:t};return K.runKernel(e1,a,o)}const AP=X({unsortedSegmentSum_:_P});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DP(n,e=0){const t=P(n,"x","unstack","string_or_numeric");z(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return K.runKernel(J0,s,r)}const To=X({unstack_:DP});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OP(n,e){return c1(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PP(n,e=!0,t,s){return K.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bT(n,e){const t=[];for(let a=0;a<e.length;a++)e[a]&&t.push(a);const s=xt(n,"int32"),r=xt([t.length,n.length],"int32");for(let a=0;a<t.length;a++){const o=s.indexToLoc(t[a]),l=a*n.length;r.values.set(o,l)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function FP(n){const e=P(n,"condition","whereAsync","bool"),t=await e.data(),s=bT(e.shape,t);return n!==e&&e.dispose(),s}const vT=FP;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function LP(n,e,t){const s=P(n,"tensor","boolMask"),r=P(e,"mask","boolMask","bool"),a=t??0,o=r.rank,l=s.shape;z(o>0,()=>"mask cannot be scalar"),hs(l.slice(a,a+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let w=a;w<a+o;w++)c*=l[w];const d=l.slice(0,a).concat([c],l.slice(a+o)),f=de(s,d),p=de(r,[-1]),g=await vT(p),y=bt(g,[1]),x=Q$(f,y,a);return n!==s&&s.dispose(),e!==r&&r.dispose(),y.dispose(),f.dispose(),p.dispose(),g.dispose(),x}const zP=LP;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BP(n,e,t){const s=P(n,"x","transpose");if(e==null&&(e=s.shape.map((o,l)=>l).reverse()),z(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(o=>{z(o>=0&&o<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},a={perm:e};return s.dtype==="complex64"?Ge(()=>{let o=Pc(s),l=kf(s);return o=K.runKernel($c,{x:o},a),l=K.runKernel($c,{x:l},a),t&&(l=Ir(l)),ri(o,l)}):K.runKernel($c,r,a)}const Kg=X({transpose_:BP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MP(n,e,t,s,r=!0){const a=P(n,"v","movingAverage"),o=P(e,"x","movingAverage"),l=P(t,"decay","movingAverage");uI(a,o),z(yt(a.shape,o.shape),()=>"Shape mismatch in v and x");const c=Je(1),d=je(c,l);let f=be(je(o,a),d);if(r){z(s!=null,()=>"When using zeroDebias: true, step is required.");const p=P(s,"step","movingAverage");f=et(f,je(c,_c(l,p)))}return Pe(a,f)}const UP=X({movingAverage_:MP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VP(n,e,t){Es(t);const s=P(n,"indices","scatterND","int32"),r=P(e,"updates","scatterND");g1(r,s,t);const a={indices:s,updates:r},o={shape:t};return K.runKernel(N0,a,o)}const WP=X({scatterND_:VP});function GP(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,a=n.rank>1?n.shape[1]:1;if(t.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${a}.`);const o=e.size;if(!(e.rank===0||e.rank===1&&o===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HP(n,e,t,s=0){Es(t);const r=P(n,"sparseIndices","sparseToDense","int32"),a=P(e,"sparseValues","sparseToDense","string_or_numeric"),o=P(s,"defaultValue","sparseToDense",a.dtype);GP(r,a,t,o);const l={sparseIndices:r,sparseValues:a,defaultValue:o},c={outputShape:t};return K.runKernel(G0,l,c)}const jP=X({sparseToDense_:HP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qP(n,e){const t=P(e,"indices","gatherND","int32"),r={params:P(n,"x","gatherND","string_or_numeric"),indices:t};return K.runKernel(kx,r)}const XP=X({gatherND_:qP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KP(n,e){if(e==null)return n.shape.slice();if(yt(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YP(n,e,t,s){const r=P(n,"x","dropout");if(z(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),z(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Mt?r.clone():r;const a=KP(r,t),o=1-e,l=et(Y$(Pe(f1(a,0,1,"float32",s),o)),o);return be(r,l)}const QP=X({dropout_:YP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wT(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function y1(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let a=0;a<n;++a){const o=2*Math.PI*a/(n+s-1);r[a]=e-t*Math.cos(o)}return In(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ZP(n,e,t=1){const s=P(n,"predictions","inTopK"),r=P(e,"targets","inTopK");z(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),z(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),hs(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=s.shape[s.shape.length-1];z(t>0&&t<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${t}`);const o=await s.data(),l=await r.data(),[c,d]=[o.length/a,a],f=Ar("bool",c);for(let p=0;p<c;p++){const g=p*d,y=o.subarray(g,g+d),x=[];for(let w=0;w<y.length;w++)x.push({value:y[w],index:w});x.sort((w,S)=>S.value-w.value),f[p]=0;for(let w=0;w<t;w++)if(x[w].index===l[p]){f[p]=1;break}}return n!==s&&s.dispose(),e!==r&&r.dispose(),Rr(f,r.shape,"bool")}const JP=ZP;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eF(n,e,t,s,r,a="NHWC",o){let l=n;n.rank===3&&(l=de(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=de(e,[1,e.shape[0],e.shape[1],e.shape[2]])),z(l.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`),z(c.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`),z(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const d=a==="NHWC"?l.shape[3]:l.shape[1],f=a==="NHWC"?c.shape[3]:c.shape[1];z(d===t[2],()=>`Error in conv2dDerFilter: depth of input ${d}) must match input depth in filter (${t[2]}.`),z(f===t[3],()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${t[3]}).`),Zs("conv2dDerFilter",r,o);const p={x:l,dy:c},g={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,filterShape:t};return K.runKernel(Qy,p,g)}const tF=X({conv2DBackpropFilter_:eF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function If(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return be(n,gT(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function _f(n,e){let t=e;const s=G$(n.shape,e.shape);return s.length>0&&(t=Ot(t,s)),de(t,n.shape)}function Af(n,e,t,s){if(e==="linear")return n;if(e==="relu")return Rf(n);if(e==="elu")return j$(n);if(e==="relu6")return hT(n);if(e==="prelu")return cT(n,t);if(e==="leakyrelu")return J$(n,s);if(e==="sigmoid")return ia(n);throw new Error(`Unknown fused activation ${e}.`)}const Df=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nF({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:l,activation:c="linear",preluActivationWeights:d,leakyreluAlpha:f}){if(c=c||"linear",Df(K.state.gradientDepth,c)===!1){z(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let M=Tf(n,e,t,s,r,a,o);return l!=null&&(M=Pe(M,l)),Af(M,c,d,f)}const p=P(n,"x","conv2d","float32"),g=P(e,"filter","conv2d","float32");let y=p,x=!1;p.rank===3&&(x=!0,y=de(p,[1,p.shape[0],p.shape[1],p.shape[2]])),z(y.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${y.rank}.`),z(g.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${g.rank}.`),Zs("fused conv2d",s,o);const w=r==="NHWC"?y.shape[3]:y.shape[1];z(g.shape[2]===w,()=>`Error in conv2d: depth of input (${w}) must match input depth for filter ${g.shape[2]}.`),z(Gn(t,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);const S=Qt(y.shape,g.shape,t,a,s,o);let $;l!=null&&($=P(l,"bias","fused conv2d"),[$]=Vt($,p),r==="NHWC"?Ye(S.outShape,$.shape):(z($.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${$.shape.length}.`),z($.shape.length===0||$.shape[0]===S.outChannels||$.shape[0]===1,()=>`Error in fused conv2d: bias shape (${$.shape}) is not compatible with the number of output channels (${S.outChannels})`)));let N;if(d!=null){const M=d.shape;if(z(M.length<=1||M.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${M.length}.`),M.length===1)z(M[0]===1||M[0]===S.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${M}) is not compatible with the number of output channels (${S.outChannels}).`);else if(M.length===3)try{Ye(M,S.outShape)}catch{const G=`Error in fused conv2d: PReLU activation weights (${M}) is not compatible with the output shape of the conv2d (${S.outShape}).`;throw Error(G)}N=P(d,"prelu weights","fused conv2d")}const I=(M,W)=>{z(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[G,F,B,D]=W,Q=If(M,B,c);z(Ic(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const re=W$(F.shape,Q,G,t,s),he=tF(F,Q,G.shape,t,s),le=[re,he];if(D!=null){const ne=_f(D,Q);le.push(ne)}return le},_={x:y,filter:g,bias:$,preluActivationWeights:N},O={strides:t,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:c,leakyreluAlpha:f};return l==null?fa((W,G,F)=>{let B=K.runKernel(Yh,_,O);return F([G,W,B]),x&&(B=de(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:I}})(y,g):fa((W,G,F,B)=>{let D=K.runKernel(Yh,_,O);return B([G,W,D,F]),x&&(D=de(D,[D.shape[1],D.shape[2],D.shape[3]])),{value:D,gradFunc:I}})(y,g,$)}const sF=X({fusedConv2d_:nF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rF(n,e,t,s,r,a=[1,1],o){let l=n;n.rank===3&&(l=de(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=de(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const d={x:l,dy:c},f={strides:s,pad:r,dimRoundingMode:o,dilations:a,filterShape:t};return K.runKernel(lx,d,f)}const aF=X({depthwiseConv2dNativeBackpropFilter_:rF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iF(n,e,t,s,r,a=[1,1],o){let l=e,c=!1;e.rank===3&&(c=!0,l=de(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const d={dy:l,filter:t},f={strides:s,pad:r,dimRoundingMode:o,dilations:a,inputShape:n},p=K.runKernel(cx,d,f);return c?de(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const oF=X({depthwiseConv2dNativeBackpropInput_:iF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:l,activation:c="linear",preluActivationWeights:d,leakyreluAlpha:f}){if(Df(K.state.gradientDepth,c)===!1){let O=o1(n,e,t,s,r,a,o);return l!=null&&(O=Pe(O,l)),Af(O,c,d,f)}const p=P(n,"x","depthwiseConv2d","float32"),g=P(e,"filter","depthwiseConv2d","float32");let y=p,x=!1;p.rank===3&&(x=!0,y=de(p,[1,p.shape[0],p.shape[1],p.shape[2]])),z(y.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${y.rank}.`),z(g.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${g.rank}.`),z(y.shape[3]===g.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${y.shape[3]}) must match the inChannels dimension in filter ${g.shape[2]}.`),a==null&&(a=[1,1]),z(Gn(t,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),Zs("fused depthwiseConv2d",s,o);const w=Qt(y.shape,g.shape,t,a,s,o,!0);let S;l!=null&&(S=P(l,"bias","fused conv2d"),[S]=Vt(S,p),Ye(w.outShape,S.shape));let $;d!=null&&($=P(d,"prelu weights","fused depthwiseConv2d"));const N=(O,M)=>{z(Ic(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[W,G,F,B]=M,D=If(O,F,c),Q=oF(G.shape,D,W,t,s,a,o),re=aF(G,D,W.shape,t,s,a,o);if(B!=null){const he=_f(S,D);return[Q,re,he]}return[Q,re]},I={x:y,filter:g,bias:S,preluActivationWeights:$},_={strides:t,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:c,leakyreluAlpha:f};return l==null?fa((M,W,G)=>{let F=K.runKernel(Qh,I,_);return G([W,M,F]),x&&(F=de(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:N}})(y,g):fa((M,W,G,F)=>{let B=K.runKernel(Qh,I,_);return F([W,M,B,G]),x&&(B=de(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:N}})(y,g,S)}const lF=X({fusedDepthwiseConv2d_:uF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cF({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:l=.2}){if(Df(K.state.gradientDepth,a)===!1){let D=vt(n,e,t,s);return r!=null&&(D=Pe(D,r)),Af(D,a,o,l)}let c=P(n,"a","fused matMul"),d=P(e,"b","fused matMul");[c,d]=Vt(c,d);const f=t?c.shape[c.rank-2]:c.shape[c.rank-1],p=s?d.shape[d.rank-1]:d.shape[d.rank-2],g=t?c.shape[c.rank-1]:c.shape[c.rank-2],y=s?d.shape[d.rank-2]:d.shape[d.rank-1],x=c.shape.slice(0,-2),w=d.shape.slice(0,-2),S=oe(x),$=oe(w);z(f===p,()=>`Error in fused matMul: inner shapes (${f}) and (${p}) of Tensors with shapes ${c.shape} and ${d.shape} and transposeA=${t} and transposeB=${s} must match.`);const I=Ye(c.shape.slice(0,-2),d.shape.slice(0,-2)).concat([g,y]),_=t?de(c,[S,f,g]):de(c,[S,g,f]),O=s?de(d,[$,y,p]):de(d,[$,p,y]);let M;r!=null&&(M=P(r,"bias","fused matMul"),[M]=Vt(M,c),Ye(I,M.shape));let W;o!=null&&(W=P(o,"prelu weights","fused matMul"));const G=(D,Q)=>{const[re,he,le,ne]=Q,ge=If(de(D,le.shape),le,a);let pe,Se;if(!t&&!s?(pe=vt(ge,he,!1,!0),Se=vt(re,ge,!0,!1)):!t&&s?(pe=vt(ge,he,!1,!1),Se=vt(ge,re,!0,!1)):t&&!s?(pe=vt(he,ge,!1,!0),Se=vt(re,ge,!1,!1)):(pe=vt(he,ge,!0,!0),Se=vt(ge,re,!0,!0)),r!=null){const q=_f(ne,ge);return[pe,Se,q]}else return[pe,Se]},F={a:_,b:O,bias:M,preluActivationWeights:W},B={transposeA:t,transposeB:s,activation:a,leakyreluAlpha:l};return r==null?fa((Q,re,he)=>{const le=K.runKernel(Kh,F,B);return he([Q,re,le]),{value:de(le,I),gradFunc:G}})(_,O):fa((Q,re,he,le)=>{const ne=K.runKernel(Kh,F,B);return le([Q,re,ne,he]),{value:de(ne,I),gradFunc:G}})(_,O,M)}const dF=X({fusedMatMul_:cF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hF=Object.freeze(Object.defineProperty({__proto__:null,conv2d:sF,depthwiseConv2d:lF,matMul:dF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fF(n){return y1(n,.54,.46)}const pF=X({hammingWindow_:fF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mF(n){return y1(n,.5,.5)}const ST=X({hannWindow_:mF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gF(n,e,t,s=!1,r=0){let a=0;const o=[];for(;a+e<=n.size;)o.push(Ze(n,a,e)),a+=t;if(s)for(;a<n.size;){const l=a+e-n.size,c=dn([Ze(n,a,e-l),Xc([l],r)]);o.push(c),a+=t}return o.length===0?Xs([],[0,e]):de(dn(o),[o.length,e])}const CT=X({frame_:gF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yF(n,e,t,s,r=ST){s==null&&(s=wT(e));const a=CT(n,e,t),o=be(a,r(e));return m1(o,s)}const xF=X({stft_:yF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n,e,t,s,r="bilinear",a=0){const o=P(n,"image","cropAndResize"),l=P(e,"boxes","cropAndResize","float32"),c=P(t,"boxInd","cropAndResize","int32"),d=l.shape[0];z(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),z(l.rank===2&&l.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${d},4] but had shape ${l.shape}.`),z(c.rank===1&&c.shape[0]===d,()=>`Error in cropAndResize: boxInd must be have size [${d}] but had shape ${l.shape}.`),z(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),z(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),z(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const f={image:o,boxes:l,boxInd:c},p={method:r,extrapolationValue:a,cropSize:s};return K.runKernel(ax,f,p)}const vF=X({cropAndResize_:bF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wF(n){const e=P(n,"image","flipLeftRight","float32");z(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return K.runKernel(Cx,t,{})}const SF=X({flipLeftRight_:wF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CF(n){const e=P(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];z(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),z(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,Nc(e,r)}const $F=X({grayscaleToRGB_:CF});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TF(n){const e=P(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];z(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),z(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=e.dtype,a=kt(e,"float32"),o=In([.2989,.587,.114]);let l;switch(e.rank){case 2:l=_u("ij,j->i",a,o);break;case 3:l=_u("ijk,k->ij",a,o);break;case 4:l=_u("ijkl,l->ijk",a,o);break;case 5:l=_u("ijklm,m->ijkl",a,o);break;case 6:l=_u("ijklmn,n->ijklm",a,o);break;default:throw new Error("Not a valid tensor rank.")}return l=$s(l,-1),kt(l,r)}const NF=X({rgbToGrayscale_:TF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EF(n,e,t=0,s=.5){const r=P(n,"image","rotateWithOffset","float32");z(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const a={image:r},o={radians:e,fillValue:t,center:s};return K.runKernel(s1,a,o)}const kF=X({rotateWithOffset_:EF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yu(n,e,t,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);const o=n.shape[0];return t=Math.min(t,o),z(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),z(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),z(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),z(e.rank===1,()=>"scores must be a 1D tensor"),z(e.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${e.shape[0]}`),z(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const a=P(n,"boxes","nonMaxSuppression","float32"),o=P(e,"scores","nonMaxSuppression","float32"),l=Yu(a,o,t,s,r);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold;const c={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return K.runKernel(i0,{boxes:a,scores:o},c)}const IF=X({nonMaxSuppression_:RF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _F(n,e,t){const s=AF(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function AF(n,e,t){return OF(n,e,t||DF)}function DF(n,e){return n>e?1:n<e?-1:0}function OF(n,e,t){let s=0,r=n.length,a=0,o=!1;for(;s<r;){a=s+(r-s>>>1);const l=t(e,n[a]);l>0?s=a+1:(r=a,o=!l)}return o?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x1(n,e,t,s,r){return v1(n,e,t,s,r,0)}function $T(n,e,t,s,r,a){return v1(n,e,t,s,r,0,!1,a,!0)}function b1(n,e,t,s,r,a){return v1(n,e,t,s,r,a,!0)}function v1(n,e,t,s,r,a,o=!1,l=!1,c=!1){const d=[];for(let S=0;S<e.length;S++)e[S]>r&&d.push({score:e[S],boxIndex:S,suppressBeginIndex:0});d.sort(Vw);const f=a>0?-.5/a:0,p=[],g=[];for(;p.length<t&&d.length>0;){const S=d.pop(),{score:$,boxIndex:N,suppressBeginIndex:I}=S;if($<r)break;let _=!1;for(let O=p.length-1;O>=I;--O){const M=PF(n,N,p[O]);if(M>=s){_=!0;break}if(S.score=S.score*FF(s,f,M),S.score<=r)break}S.suppressBeginIndex=p.length,_||(S.score===$?(p.push(N),g.push(S.score)):S.score>r&&_F(d,S,Vw))}const y=p.length,x=t-y;l&&x>0&&(p.push(...new Array(x).fill(0)),g.push(...new Array(x).fill(0)));const w={selectedIndices:p};return o&&(w.selectedScores=g),c&&(w.validOutputs=y),w}function PF(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),a=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),l=Math.max(s[0],s[2]),c=Math.max(s[1],s[3]),d=Math.min(r[0],r[2]),f=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),g=Math.max(r[1],r[3]),y=(l-a)*(c-o),x=(p-d)*(g-f);if(y<=0||x<=0)return 0;const w=Math.max(a,d),S=Math.max(o,f),$=Math.min(l,p),N=Math.min(c,g),I=Math.max($-w,0)*Math.max(N-S,0);return I/(y+x-I)}function FF(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function Vw(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function LF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const a=P(n,"boxes","nonMaxSuppressionAsync"),o=P(e,"scores","nonMaxSuppressionAsync"),l=Yu(a,o,t,s,r);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold;const c=await Promise.all([a.data(),o.data()]),d=c[0],f=c[1],{selectedIndices:p}=x1(d,f,t,s,r);return a!==n&&a.dispose(),o!==e&&o.dispose(),In(p,"int32")}const zF=LF;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const o=P(n,"boxes","nonMaxSuppression"),l=P(e,"scores","nonMaxSuppression"),c=Yu(o,l,t,s,r,a);t=c.maxOutputSize,s=c.iouThreshold,r=c.scoreThreshold,a=c.softNmsSigma;const d={boxes:o,scores:l},f={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},p=K.runKernel(o0,d,f);return{selectedIndices:p[0],selectedScores:p[1]}}const MF=X({nonMaxSuppressionWithScore_:BF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function UF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const o=P(n,"boxes","nonMaxSuppressionAsync"),l=P(e,"scores","nonMaxSuppressionAsync"),c=Yu(o,l,t,s,r,a);t=c.maxOutputSize,s=c.iouThreshold,r=c.scoreThreshold,a=c.softNmsSigma;const d=await Promise.all([o.data(),l.data()]),f=d[0],p=d[1],{selectedIndices:g,selectedScores:y}=b1(f,p,t,s,r,a);return o!==n&&o.dispose(),l!==e&&l.dispose(),{selectedIndices:In(g,"int32"),selectedScores:In(y)}}const VF=UF;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const o=P(n,"boxes","nonMaxSuppression"),l=P(e,"scores","nonMaxSuppression"),c=Yu(o,l,t,s,r,null),d=c.maxOutputSize,f=c.iouThreshold,p=c.scoreThreshold,g={boxes:o,scores:l},y={maxOutputSize:d,iouThreshold:f,scoreThreshold:p,padToMaxOutputSize:a},x=K.runKernel(jC,g,y);return{selectedIndices:x[0],validOutputs:x[1]}}const GF=X({nonMaxSuppressionPadded_:WF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function HF(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const o=P(n,"boxes","nonMaxSuppressionAsync"),l=P(e,"scores","nonMaxSuppressionAsync"),c=Yu(o,l,t,s,r,null),d=c.maxOutputSize,f=c.iouThreshold,p=c.scoreThreshold,[g,y]=await Promise.all([o.data(),l.data()]),{selectedIndices:x,validOutputs:w}=$T(g,y,d,f,p,a);return o!==n&&o.dispose(),l!==e&&l.dispose(),{selectedIndices:In(x,"int32"),validOutputs:Je(w,"int32")}}const jF=HF;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qF(n,e,t=!1,s=!1){const r=P(n,"images","resizeBilinear");z(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),z(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),z(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=de(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={images:a},c={alignCorners:t,halfPixelCenters:s,size:e},d=K.runKernel(w0,l,c);return o?de(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const XF=X({resizeBilinear_:qF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(n,e,t=!1,s=!1){const r=P(n,"images","resizeNearestNeighbor");z(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),z(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),z(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),z(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=de(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={images:a},c={alignCorners:t,halfPixelCenters:s,size:e},d=K.runKernel(v0,l,c);return o?de(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const YF=X({resizeNearestNeighbor_:KF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QF(n,e="binary",t=!1,s=.5){const r=P(n,"image","threshold"),a=.2989,o=.587,l=.114,c=r.shape[0]*r.shape[1];let d=be(In([s]),255),f,p,g,y;if(z(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),z(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),z(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),z(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[f,p,g]=Fc(r,[1,1,1],-1);const S=be(f,a),$=be(p,o),N=be(g,l);y=Pe(Pe(S,$),N)}else y=n;if(e==="otsu"){const S=U$(kt(fT(y),"int32"),Rr([]),256);d=ZF(S,c)}const x=t?l1(y,d):Ef(y,d);return kt(be(x,255),"int32")}function ZF(n,e){let t=In([-1]),s=In([0]),r=In([0]),a,o,l,c,d,f;for(let p=0;p<n.size-1;p++){a=Ze(n,0,p+1),o=Ze(n,p+1),d=et(Ot(a),e),f=et(Ot(o),e);const g=Ot(be(a,Oc(0,a.size)));l=et(g,Ot(a));const y=Xc(o.shape,a.size),x=Pe(Oc(0,o.size),y),w=be(o,x);c=et(Ot(w),Ot(o));const S=je(l,c),$=je(l,c),N=be(d,f);r=be(be(N,S),$);const I=Ef(r,s);s=si(I,r,s),t=si(I,In([p]),t)}return t}const JF=X({threshold_:QF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eL(n,e,t="nearest",s="constant",r=0,a){const o=P(n,"image","transform","float32"),l=P(e,"transforms","transform","float32");z(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),z(l.rank===2&&(l.shape[0]===o.shape[0]||l.shape[0]===1)&&l.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),z(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);const c={image:o,transforms:l},d={interpolation:t,fillMode:s,fillValue:r,outputShape:a};return K.runKernel(Z0,c,d)}const tL=X({transform_:eL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nL(n,e,t){const s=P(n,"a","bandPart");z(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[a,o]=s.shape.slice(-2);let l,c;typeof e=="number"?(z(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),z(e<=a,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${a}).`),l=P(e<0?a:e,"numLower","bandPart")):(z(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),l=si(Xg(e,0),a,Dc(e,a))),typeof t=="number"?(z(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),z(t<=o,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${o}).`),c=P(t<0?o:t,"numUpper","bandPart")):(z(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),c=si(Xg(t,0),o,Dc(t,o)));const d=de(Oc(0,a,1,"int32"),[-1,1]),f=Oc(0,o,1,"int32"),p=je(d,f),g=nf(l1(p,l),Z$(p,Ir(c))),y=pa([a,o],s.dtype);return de(ma(To(de(s,[-1,a,o])).map(x=>si(g,x,y))),r)}const sL=X({bandPart_:nL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(n){let e;if(Array.isArray(n)){e=!1,z(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let a=1;a<n.length;++a)z(n[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[a].shape[0]} vs. ${r})`)}else e=!0,n=Fc(n,n.shape[0],0).map(r=>bt(r,[0]));z(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(K.tidy(()=>{let a=s[r];if(r>0)for(let o=0;o<r;++o){const l=be(Ot(be(t[o],a)),t[o]);a=je(a,l)}return et(a,Nf(a,"euclidean"))}));return e?ma(t,0):t}const aL=X({gramSchmidt_:rL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iL(n,e=!1){if(z(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return Ww(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((c,d)=>c*d),s=To(de(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],a=[];s.forEach(c=>{const[d,f]=Ww(c,e);r.push(d),a.push(f)});const o=de(ma(r,0),n.shape),l=de(ma(a,0),n.shape);return[o,l]}}function Ww(n,e=!1){return K.tidy(()=>{z(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=K$(t),a=ni(n);const o=Xs([[1]],[1,1]);let l=ni(o);const c=t>=s?s:t;for(let d=0;d<c;++d){const f=a,p=l,g=r;[l,a,r]=K.tidy(()=>{const y=Ze(a,[d,d],[t-d,1]),x=Nf(y),w=Ze(a,[d,d],[1,1]),S=si(Ef(w,0),Xs([[-1]]),Xs([[1]])),$=je(w,be(S,x)),N=et(y,$);N.shape[0]===1?l=ni(o):l=dn([o,Ze(N,[1,0],[N.shape[0]-1,N.shape[1]])],0);const I=Ir(et(vt(S,$),x)),_=Ze(a,[d,0],[t-d,s]),O=be(I,l),M=Kg(l);if(d===0)a=je(_,vt(O,vt(M,_)));else{const F=je(_,vt(O,vt(M,_)));a=dn([Ze(a,[0,0],[d,s]),F],0)}const W=Kg(O),G=Ze(r,[0,d],[t,r.shape[1]-d]);if(d===0)r=je(G,vt(vt(G,l),W));else{const F=je(G,vt(vt(G,l),W));r=dn([Ze(r,[0,0],[t,d]),F],1)}return[l,a,r]}),gt([f,p,g])}return!e&&t>s&&(r=Ze(r,[0,0],[t,s]),a=Ze(a,[0,0],[s,s])),[r,a]})}const oL=X({qr_:iL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Qn;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Qn||(Qn={}));function uL(n,e,t=Qn.SUM_BY_NONZERO_WEIGHTS){const s=P(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=P(e,"weights","computeWeightedLoss"));const a=r==null?s:be(s,r);if(t===Qn.NONE)return a;if(t===Qn.SUM)return Ot(a);if(t===Qn.MEAN){if(r==null)return sf(a);{const o=s.size/r.size,l=et(Ot(a),Ot(r));return o>1?et(l,Je(o)):l}}if(t===Qn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return et(Ot(a),Je(s.size));{const o=be(r,lo(s.shape)),l=kt(Ot(uT(o,Je(0))),"float32");return et(Ot(a),l)}}throw Error(`Unknown reduction: ${t}`)}const ya=X({computeWeightedLoss_:uL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lL(n,e,t,s=Qn.SUM_BY_NONZERO_WEIGHTS){const r=P(n,"labels","absoluteDifference"),a=P(e,"predictions","absoluteDifference");let o=null;t!=null&&(o=P(t,"weights","absoluteDifference")),hs(r.shape,a.shape,"Error in absoluteDifference: ");const l=Cs(je(r,a));return ya(l,o,s)}const cL=X({absoluteDifference_:lL});function dL(n,e,t,s,r=Qn.SUM_BY_NONZERO_WEIGHTS){const a=P(n,"labels","cosineDistance"),o=P(e,"predictions","cosineDistance");let l=null;s!=null&&(l=P(s,"weights","cosineDistance")),hs(a.shape,o.shape,"Error in cosineDistance: ");const c=Je(1),d=je(c,Ot(be(a,o),t,!0));return ya(d,l,r)}const hL=X({cosineDistance_:dL});function fL(n,e,t,s=Qn.SUM_BY_NONZERO_WEIGHTS){let r=P(n,"labels","hingeLoss");const a=P(e,"predictions","hingeLoss");let o=null;t!=null&&(o=P(t,"weights","hingeLoss")),hs(r.shape,a.shape,"Error in hingeLoss: ");const l=Je(1);r=je(be(Je(2),r),l);const c=Rf(je(l,be(r,a)));return ya(c,o,s)}const pL=X({hingeLoss_:fL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mL(n,e,t,s=1,r=Qn.SUM_BY_NONZERO_WEIGHTS){const a=P(n,"labels","huberLoss"),o=P(e,"predictions","huberLoss");let l=null;t!=null&&(l=P(t,"weights","huberLoss")),hs(a.shape,o.shape,"Error in huberLoss: ");const c=Je(s),d=Cs(je(o,a)),f=Dc(d,c),p=je(d,f),g=Pe(be(Je(.5),qs(f)),be(c,p));return ya(g,l,r)}const gL=X({huberLoss_:mL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yL(n,e,t,s=1e-7,r=Qn.SUM_BY_NONZERO_WEIGHTS){const a=P(n,"labels","logLoss"),o=P(e,"predictions","logLoss");let l=null;t!=null&&(l=P(t,"weights","logLoss")),hs(a.shape,o.shape,"Error in logLoss: ");const c=Je(1),d=Je(s),f=Ir(be(a,Ac(Pe(o,d)))),p=be(je(c,a),Ac(Pe(je(c,o),d))),g=je(f,p);return ya(g,l,r)}const xL=X({logLoss_:yL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(n,e,t,s=Qn.SUM_BY_NONZERO_WEIGHTS){const r=P(n,"labels","meanSquaredError"),a=P(e,"predictions","meanSquaredError");let o=null;t!=null&&(o=P(t,"weights","meanSquaredError")),hs(r.shape,a.shape,"Error in meanSquaredError: ");const l=mT(r,a);return ya(l,o,s)}const vL=X({meanSquaredError_:bL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wL(n,e){const t=P(n,"labels","sigmoidCrossEntropyWithLogits"),s=P(e,"logits","sigmoidCrossEntropyWithLogits");hs(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Rf(s),a=be(s,t),o=eT(ha(Ir(Cs(s))));return Pe(je(r,a),o)}function SL(n,e,t,s=0,r=Qn.SUM_BY_NONZERO_WEIGHTS){let a=P(n,"multiClassLabels","sigmoidCrossEntropy");const o=P(e,"logits","sigmoidCrossEntropy");let l=null;if(t!=null&&(l=P(t,"weights","sigmoidCrossEntropy")),hs(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){const d=Je(s),f=Je(1),p=Je(.5);a=Pe(be(a,je(f,d)),be(p,d))}const c=wL(a,o);return ya(c,l,r)}const CL=X({sigmoidCrossEntropy_:SL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $L(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return fa((r,a,o)=>{const c=nT(a,[t],!0),d=je(kt(a,"float32"),c);o([r,d]);const f=Ir(be(d,r));return{value:Ot(f,[t]),gradFunc:(y,x)=>{const[w,S]=x,$=fs(y.shape,[t]);return[be(de(y,$),je(kt(w,"float32"),ha(S))),be(de(y,$),je(ha(S),kt(w,"float32")))]}}})(n,e)}function TL(n,e,t,s=0,r=Qn.SUM_BY_NONZERO_WEIGHTS){let a=P(n,"onehotLabels","softmaxCrossEntropy");const o=P(e,"logits","softmaxCrossEntropy");let l=null;if(t!=null&&(l=P(t,"weights","softmaxCrossEntropy")),hs(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){const d=Je(s),f=Je(1),p=Je(a.shape[1]);a=Pe(be(a,je(f,d)),et(d,p))}const c=$L(a,o);return ya(c,l,r)}const NL=X({softmaxCrossEntropy_:TL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EL(n,e,t,s){const r=P(n,"indices","sparseFillEmptyRows","int32"),a=P(e,"values","sparseFillEmptyRows"),o=P(t,"denseShape","sparseFillEmptyRows","int32"),l=P(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(l.rank!==0)throw new Error(`Default value should be a scalar but received shape ${l.shape}`);const c={indices:r,values:a,denseShape:o,defaultValue:l},d=K.runKernel(ZC,c);return{outputIndices:d[0],outputValues:d[1],emptyRowIndicator:d[2],reverseIndexMap:d[3]}}const kL=X({sparseFillEmptyRows_:EL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RL(n,e,t){const s=P(n,"inputIndices","sparseReshape","int32"),r=P(e,"inputShape","sparseReshape","int32"),a=P(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const o={inputIndices:s,inputShape:r,newShape:a},l=K.runKernel(JC,o);return{outputIndices:l[0],outputShape:l[1]}}const IL=X({sparseReshape_:RL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _L(n,e,t){const s=P(n,"data","sparseSegmentMean"),r=P(e,"indices","sparseSegmentMean","int32"),a=P(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);const o={data:s,indices:r,segmentIds:a};return K.runKernel(V0,o)}const AL=X({sparseSegmentMean_:_L});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(n,e,t){const s=P(n,"data","sparseSegmentSum"),r=P(e,"indices","sparseSegmentSum","int32"),a=P(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);const o={data:s,indices:r,segmentIds:a};return K.runKernel(W0,o)}const OL=X({sparseSegmentSum_:DL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PL(n,e,t,s,r,a,o,l){const c=P(n,"data","stringNGrams","string");if(c.dtype!=="string")throw new Error("Data must be of datatype string");if(c.shape.length!==1)throw new Error(`Data must be a vector, saw: ${c.shape}`);const d=P(e,"dataSplits","stringNGrams");if(d.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const f={separator:t,nGramWidths:s,leftPad:r,rightPad:a,padWidth:o,preserveShortSequences:l},p={data:c,dataSplits:d},g=K.runKernel(q0,p,f);return{nGrams:g[0],nGramsSplits:g[1]}}const FL=X({stringNGrams_:PL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LL(n,e,t=!0){const s=P(n,"input","stringSplit","string"),r=P(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const a={skipEmpty:t},o={input:s,delimiter:r},l=K.runKernel(n$,o,a);return{indices:l[0],values:l[1],shape:l[2]}}const zL=X({stringSplit_:LL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BL(n,e){const t=P(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return K.runKernel(s$,r,s)}const ML=X({stringToHashBucketFast_:BL});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UL(n,e,t,s=!0){const r=P(n,"input","staticRegexReplace","string"),a={pattern:e,rewrite:t,replaceGlobal:s};return K.runKernel(t$,{x:r},a)}const VL=X({staticRegexReplace_:UL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WL={fft:p1,ifft:rf,rfft:m1,irfft:pT},GL={hammingWindow:pF,hannWindow:ST,frame:CT,stft:xF},ho={flipLeftRight:SF,grayscaleToRGB:$F,resizeNearestNeighbor:YF,resizeBilinear:XF,rgbToGrayscale:NF,rotateWithOffset:kF,cropAndResize:vF,nonMaxSuppression:IF,nonMaxSuppressionAsync:zF,nonMaxSuppressionWithScore:MF,nonMaxSuppressionWithScoreAsync:VF,nonMaxSuppressionPadded:GF,nonMaxSuppressionPaddedAsync:jF,threshold:JF,transform:tL},HL={bandPart:sL,gramSchmidt:aL,qr:oL},jL={absoluteDifference:cL,computeWeightedLoss:ya,cosineDistance:hL,hingeLoss:pL,huberLoss:gL,logLoss:xL,meanSquaredError:vL,sigmoidCrossEntropy:CL,softmaxCrossEntropy:NL},qL={sparseFillEmptyRows:kL,sparseReshape:IL,sparseSegmentMean:AL,sparseSegmentSum:OL},XL={stringNGrams:FL,stringSplit:zL,stringToHashBucketFast:ML,staticRegexReplace:VL};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KL=new Map,YL=new Map;class QL{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ro{constructor(){this.classNameMap={}}static getMap(){return ro.instance==null&&(ro.instance=new ro),ro.instance}static register(e){ro.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ZL(n,e,t){z(n.className!=null,()=>"Class being registered does not have the static className property defined."),z(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),z(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,r=e+">"+s;return ro.register(n),KL.set(r,n),YL.set(n,r),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class No extends QL{minimize(e,t=!1,s){const{value:r,grads:a}=this.computeGradients(e,s);if(s!=null){const o=s.map(l=>({name:l.name,tensor:a[l.name]}));this.applyGradients(o)}else this.applyGradients(a);return gt(a),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return FA(e,t)}dispose(){this.iterations_!=null&&gt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Je(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(No,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JL extends No{static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=K.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const a=K.registeredVariables[s],o=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:Ge(()=>Ns(a).variable(o))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:Ge(()=>Ns(a).variable(o))});const l=Array.isArray(e)?e[r].tensor:e[s];if(l==null)return;const c=this.accumulatedGrads[r].variable,d=this.accumulatedUpdates[r].variable;Ge(()=>{const f=Pe(be(c,this.rho),be(qs(l),1-this.rho)),p=be(et(da(Pe(d,this.epsilon)),da(Pe(c,this.epsilon))),l),g=Pe(be(d,this.rho),be(qs(p),1-this.rho));c.assign(f),d.assign(g);const y=Pe(be(p,-this.learningRate),a);a.assign(y)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(gt(this.accumulatedGrads.map(e=>e.variable)),gt(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ez extends No{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const a=K.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:Ge(()=>Xc(a.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const l=this.accumulatedGrads[r].variable;Ge(()=>{const c=Pe(l,qs(o));l.assign(c);const d=Pe(be(et(o,da(Pe(c,K.backend.epsilon()))),-this.learningRate),a);a.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&gt(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tz extends No{static get className(){return"Adam"}constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ge(()=>{this.accBeta1=Je(t).variable(),this.accBeta2=Je(s).variable()}),r==null&&(this.epsilon=K.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);Ge(()=>{const s=je(1,this.accBeta1),r=je(1,this.accBeta2);t.forEach((a,o)=>{const l=K.registeredVariables[a],c=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${a}/m`,variable:Ge(()=>Ns(l).variable(c))}),this.accumulatedSecondMoment[o]==null&&(this.accumulatedSecondMoment[o]={originalName:`${a}/v`,variable:Ge(()=>Ns(l).variable(c))});const d=Array.isArray(e)?e[o].tensor:e[a];if(d==null)return;const f=this.accumulatedFirstMoment[o].variable,p=this.accumulatedSecondMoment[o].variable,g=Pe(be(f,this.beta1),be(d,1-this.beta1)),y=Pe(be(p,this.beta2),be(qs(d),1-this.beta2)),x=et(g,s),w=et(y,r);f.assign(g),p.assign(y);const S=Pe(be(et(x,Pe(da(w),this.epsilon)),-this.learningRate),l);l.assign(S)}),this.accBeta1.assign(be(this.accBeta1,this.beta1)),this.accBeta2.assign(be(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&gt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&gt(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Ge(()=>{this.accBeta1.assign(_c(this.beta1,this.iterations_+1)),this.accBeta2.assign(_c(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nz extends No{static get className(){return"Adamax"}constructor(e,t,s,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ge(()=>{this.iteration=Je(0).variable(),this.accBeta1=Je(t).variable()}),r==null&&(this.epsilon=K.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);Ge(()=>{const s=je(1,this.accBeta1),r=et(-this.learningRate,Pe(be(this.iteration,this.decay),1));t.forEach((a,o)=>{const l=K.registeredVariables[a],c=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${a}/m`,variable:Ns(l).variable(c)}),this.accumulatedWeightedInfNorm[o]==null&&(this.accumulatedWeightedInfNorm[o]={originalName:`${a}/v`,variable:Ns(l).variable(c)});const d=Array.isArray(e)?e[o].tensor:e[a];if(d==null)return;const f=this.accumulatedFirstMoment[o].variable,p=this.accumulatedWeightedInfNorm[o].variable,g=Pe(be(f,this.beta1),be(d,1-this.beta1)),y=be(p,this.beta2),x=Cs(d),w=iT(y,x);f.assign(g),p.assign(w);const S=Pe(be(et(r,s),et(g,Pe(w,this.epsilon))),l);l.assign(S)}),this.iteration.assign(Pe(this.iteration,1)),this.accBeta1.assign(be(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&gt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&gt(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TT extends No{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const o=K.registeredVariables[s];Ge(()=>{const l=Pe(be(this.c,a),o);o.assign(l)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Er(Je(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sz extends TT{static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=Je(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const a=K.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:Ge(()=>Ns(a).variable(!1))});const o=this.accumulations[r].variable,l=Array.isArray(e)?e[r].tensor:e[s];l!=null&&Ge(()=>{let c;const d=Pe(be(this.m,o),l);this.useNesterov?c=Pe(be(this.c,Pe(l,be(d,this.m))),a):c=Pe(be(this.c,d),a),o.assign(d),a.assign(c)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&gt(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rz extends No{static get className(){return"RMSProp"}constructor(e,t=.9,s=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,r==null&&(this.epsilon=K.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const a=K.registeredVariables[s],o=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:Ge(()=>Ns(a).variable(o))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:Ge(()=>Ns(a).variable(o))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:Ge(()=>Ns(a).variable(o))});const l=Array.isArray(e)?e[r].tensor:e[s];if(l==null)return;const c=this.accumulatedMeanSquares[r].variable,d=this.accumulatedMoments[r].variable;Ge(()=>{const f=Pe(be(c,this.decay),be(qs(l),1-this.decay));if(this.centered){const p=this.accumulatedMeanGrads[r].variable,g=Pe(be(p,this.decay),be(l,1-this.decay)),y=et(be(l,this.learningRate),da(je(f,Pe(qs(g),this.epsilon)))),x=Pe(be(d,this.momentum),y);c.assign(f),p.assign(g),d.assign(x);const w=je(a,x);a.assign(w)}else{const p=Pe(be(c,this.decay),be(qs(l),1-this.decay)),g=Pe(be(d,this.momentum),et(be(l,this.learningRate),da(Pe(p,this.epsilon))));c.assign(p),d.assign(g);const y=je(a,g);a.assign(y)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&gt(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&gt(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&gt(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const az=[JL,ez,tz,nz,sz,rz,TT];function iz(){for(const n of az)ZL(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oz="model",uz=".json",lz=".weights.bin";function Gw(n){return new Promise(e=>setTimeout(e)).then(n)}class wo{constructor(e){if(!ee().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(wo.URL_SCHEME)&&(e=e.slice(wo.URL_SCHEME.length)),(e==null||e.length===0)&&(e=oz),this.modelJsonFileName=e+uz,this.weightDataFileName=e+lz}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=mr.join(e.weightData),s=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a=E$(e,r),o=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),l=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(l.download=this.modelJsonFileName,l.href=o,await Gw(()=>l.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const c=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;c.download=this.weightDataFileName,c.href=s,await Gw(()=>c.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:jc(e)}}}}wo.URL_SCHEME="downloads://";class cz{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const s=new FileReader;s.onload=r=>{const a=JSON.parse(r.target.result),o=a.modelTopology;if(o==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(a.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:o});return}const c=a1(a,d=>this.loadWeights(d));e(c)},s.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const t=[],s=[];for(const o of e)t.push(...o.weights),s.push(...o.paths);const r=this.checkManifestAndWeightFiles(e),a=s.map(o=>this.loadWeightsFile(o,r[o]));return Promise.all(a).then(o=>[t,o])}loadWeightsFile(e,t){return new Promise((s,r)=>{const a=new FileReader;a.onload=o=>{const l=o.target.result;s(l)},a.onerror=o=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],s=this.weightsFiles.map(a=>Dw(a.name)),r={};for(const a of e)a.paths.forEach(o=>{const l=Dw(o);if(t.indexOf(l)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${l}'`);if(t.push(l),s.indexOf(l)===-1)throw new Error(`Weight file with basename '${l}' is not provided.`);r[o]=this.weightsFiles[s.indexOf(l)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const dz=n=>ee().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(wo.URL_SCHEME)?hz(n.slice(wo.URL_SCHEME.length)):null;Ft.registerSaveRouter(dz);function hz(n="model"){return new wo(n)}function fz(n){return new cz(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hw(n,e,t,s){o(n),t=t??0,s=s??1,l(t,s);let r=0;const a=c=>(c.then(d=>{const f=t+ ++r/n.length*(s-t);return e(f),d}),c);function o(c){z(c!=null&&Array.isArray(c)&&c.length>0,()=>"promises must be a none empty array")}function l(c,d){z(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${c}`),z(d>=0&&d<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${d}`),z(d>=c,()=>`startFraction must be no more than endFraction, but got startFraction ${c} and endFraction ${d}`)}return Promise.all(n.map(a))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function NT(n,e){e==null&&(e={});const t=e.fetchFunc==null?ee().platform.fetch:e.fetchFunc,s=n.map(p=>t(p,e.requestInit,{isBinary:!0})),l=(e.onProgress==null?await Promise.all(s):await Hw(s,e.onProgress,0,.5)).map(p=>p.arrayBuffer());return e.onProgress==null?await Promise.all(l):await Hw(l,e.onProgress,.5,1)}function pz(n,e){var t;const s=e.fetchFunc==null?ee().platform.fetch:e.fetchFunc;let r=0,a;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async o=>{for(var l;r<n.length;){a||(a=(await s(n[r],e.requestInit,{isBinary:!0})).body.getReader());const{done:c,value:d}=await a.read();if(c){r++,a=void 0,(l=e.onProgress)===null||l===void 0||l.call(e,r/n.length);continue}o.enqueue(d);return}o.close()}})}async function mz(n,e="",t,s){return ET(o=>NT(o,{requestInit:s}))(n,e,t)}function ET(n){return async(e,t="",s)=>{const r=e.map(()=>!1),a={},o=s!=null?s.map(()=>!1):[],l=[];if(e.forEach((y,x)=>{let w=0;y.weights.forEach(S=>{const $="quantization"in S?S.quantization.dtype:S.dtype,N=go[$]*oe(S.shape),I=()=>{r[x]=!0,a[x]==null&&(a[x]=[]),a[x].push({manifestEntry:S,groupOffset:w,sizeBytes:N})};s!=null?s.forEach((_,O)=>{_===S.name&&(I(),o[O]=!0)}):I(),l.push(S.name),w+=N})}),!o.every(y=>y)){const y=s.filter((x,w)=>!o[w]);throw new Error(`Could not find weights in manifest with names: ${y.join(", ")}. 
Manifest JSON has weights with names: ${l.join(", ")}.`)}const c=r.reduce((y,x,w)=>(x&&y.push(w),y),[]),d=[];c.forEach(y=>{e[y].paths.forEach(x=>{const w=t+(t.endsWith("/")?"":"/")+x;d.push(w)})});const f=await n(d),p={};let g=0;return c.forEach(y=>{const x=e[y].paths.length,w=new mr(f.slice(g,g+x));a[y].forEach($=>{const N=w.slice($.groupOffset,$.groupOffset+$.sizeBytes),I=$$(N,[$.manifestEntry]);for(const _ in I)p[_]=I[_]}),g+=x}),p}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gz="application/octet-stream",yz="application/json";class w1{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(z(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=ee().platform.fetch,z(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&z(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=E$(e,s);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:yz}),"model.json"),e.weightData!=null){const o=mr.join(e.weightData);t.body.append("model.weights.bin",new Blob([o],{type:gz}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:jc(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let o=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?o+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":o+=" Please make sure the server is serving valid JSON for this request.",new Error(o)}const s=t.modelTopology,r=t.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return a1(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),s=Ug(e.weightsManifest),r=()=>pz(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=xz(t),a=this.weightPathPrefix||s,o=[],l=[];for(const c of e)for(const d of c.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(d)):o.push(a+d+r);return this.weightUrlConverter&&o.push(...await Promise.all(l)),o}async loadWeights(e){const t=await this.getWeightUrls(e),s=Ug(e),r=await NT(t,this.loadOptions);return[s,r]}}w1.URL_SCHEME_REGEX=/^https?:\/\//;function xz(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function Yg(n){return n.match(w1.URL_SCHEME_REGEX)!=null}const kT=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>Yg(s)):t=Yg(n),t)return S1(n,e)}return null};Ft.registerSaveRouter(kT);Ft.registerLoadRouter(kT);function S1(n,e){return new w1(n,e)}function bz(n,e){return S1(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dg{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class RT{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class vz{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function wz(n,e,t,s){const r=arguments;return new vz(IT(...r))}function IT(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new dg(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new dg({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new dg({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s}))}function Sz(n){return new RT(n)}function Cz(n){return new RT(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _T=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:mr,browserFiles:fz,browserHTTPRequest:bz,concatenateArrayBuffers:CI,copyModel:HI,decodeWeights:$$,decodeWeightsStream:N$,encodeWeights:yI,fromMemory:wz,fromMemorySync:IT,getLoadHandlers:_I,getModelArtifactsForJSON:a1,getModelArtifactsForJSONSync:k$,getModelArtifactsInfoForJSON:jc,getSaveHandlers:II,getWeightSpecs:Ug,http:S1,isHTTPScheme:Yg,listModels:WI,loadWeights:mz,moveModel:jI,registerLoadRouter:RI,registerSaveRouter:kI,removeModel:GI,weightsLoaderFactory:ET,withSaveHandler:Sz,withSaveHandlerSync:Cz},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ji,jw=!1;function $z(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,r=!1,a=!1,o=!1,l=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)a=!0;else if(n.getContext!=null)o=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)l=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(Jh(Xh,K.backendName)!=null){const x={pixels:n},w={numChannels:e};return K.runKernel(Xh,x,w)}const[d,f]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let p;if(o)p=n.getContext("2d").getImageData(0,0,d,f).data;else if(s||t)p=n.data;else if(a||r||l){if(Ji==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Ji=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Ji=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Ji.canvas.width=d,Ji.canvas.height=f,Ji.drawImage(n,0,0,d,f),p=Ji.getImageData(0,0,d,f).data}let g;if(e===4)g=new Int32Array(p);else{const x=d*f;g=new Int32Array(x*e);for(let w=0;w<x;w++)for(let S=0;S<e;++S)g[w*e+S]=p[w*4+S]}return yT(g,[f,d,e],"int32")}function Tz(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}async function C1(n,e){let t=P(n,"img","toPixels");if(!(n instanceof Mt)){const d=t;t=kt(d,"int32"),d.dispose()}Tz(t);const[s,r]=t.shape.slice(0,2),a=t.rank===2?1:t.shape[2],o=await t.data(),l=t.dtype==="float32"?255:1,c=new Uint8ClampedArray(r*s*4);for(let d=0;d<s*r;++d){const f=[0,0,0,255];for(let g=0;g<a;g++){const y=o[d*a+g];if(t.dtype==="float32"){if(y<0||y>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${y}.`)}else if(t.dtype==="int32"&&(y<0||y>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${y}.`);a===1?(f[0]=y*l,f[1]=y*l,f[2]=y*l):f[g]=y*l}const p=d*4;c[p+0]=Math.round(f[0]),c[p+1]=Math.round(f[1]),c[p+2]=Math.round(f[2]),c[p+3]=Math.round(f[3])}if(e!=null){jw||Jh(UC,K.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),jw=!0),e.width=r,e.height=s;const d=e.getContext("2d"),f=new ImageData(c,r,s);d.putImageData(f,0,0)}return t!==n&&t.dispose(),c}const AT=X({fromPixels_:$z});function $1(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(oe(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,a=r[r.length-1];let o=1;for(let p=0;p<r.length-1;++p)o*=r[p];const l=n.shape,c=r.slice();c.pop();let d=1;for(let p=a;p<t;++p)d*=l[p],c.push(l[p]);const f=[...Ut(n.shape).map(p=>p/d),1].slice(0,a);return[c,o,d,f]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qg=-2,Nz=-1;function T1(n,e,t){const s=n.shape.length;z(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),z(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)z(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function Ez(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function N1(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function DT(n,e,t,s){const r=[...n];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<t;a++)a===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function OT(n,e,t){return t<=n?t:t-(e-1)}function PT(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function kz(n,e,t,s,r,a,o,l,c){const d=n.length;let f=new Array(d),p=new Array(d),g=new Array(d);if(e.length&&t>0){const y=e[0],x=t+1;f=FT(o,y,x,s,n),p=LT(l,y,x,r,n),g=DT(a,y,x,n)}else for(let y=0;y<d;y++)f[y]=BT(o,s,a,n,y,c),p[y]=MT(l,r,a,n,y,c),g[y]=zT(a,y,c);return{begin:f,end:p,strides:g}}function FT(n,e,t,s,r){const a=[...r],o=PT(t,e);for(let l=0;l<a.length;l++)if(o.indexOf(l)>-1)a[l]=0;else{const c=OT(e,t,l);let d=s[c];n&1<<c&&(d=0),a[l]=d}return a}function LT(n,e,t,s,r){const a=[...r],o=PT(t,e);for(let l=0;l<a.length;l++)if(o.indexOf(l)>-1)a[l]=Number.MAX_SAFE_INTEGER;else{const c=OT(e,t,l);let d=s[c];n&1<<c&&(d=Number.MAX_SAFE_INTEGER),a[l]=d}for(let l=0;l<a.length;l++){const c=r[l];a[l]<0&&(a[l]+=c),a[l]=jh(0,a[l],r[l])}return a}function zT(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function BT(n,e,t,s,r,a){let o=e[r];const l=t[r]||1;(n&1<<r||a&1<<r||o==null)&&(l>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);const c=s[r];return o<0&&(o+=c),o=jh(0,o,c-1),o}function MT(n,e,t,s,r,a){let o=e[r];const l=t[r]||1;(n&1<<r||a&1<<r||o==null)&&(l>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);const c=s[r];return o<0&&(o+=c),l>0?o=jh(0,o,c):o=jh(-1,o,c-1),o}function E1(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function k1(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function R1(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(o=>{z(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return t==null?a=new Array(r).fill(-1):typeof t=="number"?a=[t,...new Array(r-1).fill(-1)]:t.length<r?a=t.concat(new Array(r-t.length).fill(-1)):a=t,a=a.map((o,l)=>o>=0?o:(z(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${l}.`),n.shape[l]-s[l])),[s,a]}function I1(n,e,t,s,r,a,o,l,c){let d;if(s==null?(d=new Array(e.length),d.fill(1)):d=s,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let f=!1;const p={dims:d.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:d.slice(),beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:l,shrinkAxisMask:c};for(let I=0;I<p.dims;I++)f&&(1<<I&l)!==0&&p.numAddAxisAfterEllipsis++,1<<I&o&&(f=!0);f||(p.ellipsisMask|=1<<p.dims,p.dims++);const g={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};Rz(p,g);let y=!0,x=!0,w=!0;const S=[],$=[];for(let I=0;I<n.length;++I){if(g.strides[I]===0)throw Error(`strides[${I}] must be non-zero`);const _=!!(g.shrinkAxisMask&1<<I),O=n[I];if(O===-1){S.push(_?1:-1);continue}const M=[g.beginMask&1<<I,g.endMask&1<<I],W=[g.strides[I]>0?0:-1,g.strides[I]>0?O:O-1];if(_&&g.strides[I]<=0)throw Error("only stride 1 allowed on non-range indexing.");w=w&&g.strides[I]===1;const G=!!(g.beginMask&1<<I&&g.endMask&1<<I);if(g.beginValid&&g.endValid){if(_){const Q=g.begin[I]<0?O+g.begin[I]:g.begin[I];if(g.begin[I]=Q,g.end[I]=g.begin[I]+1,Q<0||Q>=O)throw Error(`slice index ${g.begin[I]} of dimension ${I} out of bounds.`)}else g.begin[I]=qw(g.begin[I],0,g.strides[I],O,M,W),g.end[I]=qw(g.end[I],1,g.strides[I],O,M,W);const D=g.strides[I]===1&&g.begin[I]===0&&g.end[I]===O;y=y&&D,x=x&&(I===0&&g.strides[I]===1||D)}else y=y&&g.strides[I]===1&&G,x=x&&(I===0&&g.strides[I]===1||G);let F,B=!1;if(g.beginValid&&g.endValid?(F=g.end[I]-g.begin[I],B=!0):_?(F=1,B=!0):G&&O>=0&&(g.strides[I]<0?F=-O:F=O,B=!0),B){let D;F===0||F<0!=g.strides[I]<0?D=0:D=Math.trunc(F/g.strides[I])+(F%g.strides[I]!==0?1:0),S.push(D)}else S.push(-1)}for(let I=0;I<g.finalShapeGatherIndices.length;++I){const _=g.finalShapeGatherIndices[I];_>=0?$.push(S[_]):_===Qg&&$.push(1)}return{finalShapeSparse:$.filter((I,_)=>g.finalShapeGatherIndices[_]!==Qg),finalShape:$,isIdentity:y,sliceDim0:x,isSimpleSlice:w,begin:g.begin,end:g.end,strides:g.strides}}function Rz(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<r;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(Qg),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(Nz),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function qw(n,e,t,s,r,a){if(r[e])return t>0?a[e]:a[e+1&1];{const o=n<0?s+n:n;return o<a[0]?a[0]:o>a[1]?a[1]:o}}const Iz=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:T1,computeFlatOffset:k1,computeOutShape:N1,getNormalizedAxes:kz,isSliceContinous:E1,maskToAxes:Ez,parseSliceParams:R1,sliceInfo:I1,startForAxis:BT,startIndicesWithElidedDims:FT,stopForAxis:MT,stopIndicesWithElidedDims:LT,stridesForAxis:zT,stridesWithElidedDims:DT},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _z=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function Az(){return new Promise(n=>_z(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _1(n,e){const t=n[0].length;n.forEach((r,a)=>{z(r.length===t,()=>`Error in concat${t}D: rank of tensors[${a}] must be the same as the rank of the rest (${t})`)}),z(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,a)=>{for(let o=0;o<t;o++)z(o===e||r[o]===s[o],()=>`Error in concat${t}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function Ys(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var hr;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(hr||(hr={}));function UT(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let r=1;r<t.length;++r){const a=t[r],o=s[s.length-t.length+r],l=s[o];if(a>=0)if(l>=0){if(l!==a)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+n}] = ${a} but shape[${r+n}] = ${l}`)}else s[o]=a}return s}function VT(n){const e={FIRST_DIM_SIZE:hr.FIRST_DIM_SIZE,VALUE_ROWIDS:hr.VALUE_ROWIDS,ROW_LENGTHS:hr.ROW_LENGTHS,ROW_SPLITS:hr.ROW_SPLITS,ROW_LIMITS:hr.ROW_LIMITS,ROW_STARTS:hr.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function WT(n){return n.length===0?0:n[0]===hr.FIRST_DIM_SIZE?n.length-1:n.length}function GT(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(t,s-1);++r){const a=n[r],o=e[r+1];if(a>=0&&o>=0&&a!==1&&a!==o)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-n.length}] = ${a} but ragged tensor input.flatValues.shape[${r-n.length}] = ${o}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A1=30;function Of(n){return n<=A1?n:Dg(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D1(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yc(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const a=e.length;for(let o=0;o<a;++o)r=r.concat([n[o+1]/e[o],e[o]]);r=r.concat(n.slice(a+1))}return r}function Qc(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],a=[];for(let o=1;o<n;++o)o>=e*2+1||o%2===1?a.push(o):r.push(o);s.push(...r),s.push(0),s.push(...a)}return s}function Zc(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let a=1;a<n.length;++a)a<=e.length?s?r.push(e[a-1]*n[a]):r.push(n[a]/e[a-1]):r.push(n[a]);return r}function O1(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function P1(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F1=1.7580993408473768,L1=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z1=.3275911,B1=.254829592,M1=-.284496736,U1=1.421413741,V1=-1.453152027,W1=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lc(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function Dz(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function Oz(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function Pz(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function Fz(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function Lz(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function zz(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const a=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:t,imag:s}}function Bz(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hg="->",Mz=/->/g,Xw=",",Kw="...";function G1(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(Mz,"").length)/hg.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${hg}").`);const[s,r]=n.split(hg);z(s.indexOf(Kw)===-1,()=>`The ellipsis notation ("${Kw}") is not supported yet.`);const a=s.split(Xw),o=a.length;if(e!==o)throw new Error(`Expected ${o} input tensors, received ${e}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const l=[];for(let g=0;g<r.length;++g){const y=r[g];if(!a.some(x=>x.indexOf(y)!==-1))throw new Error(`Output subscripts contain the label ${y} not present in the input subscripts.`);l.indexOf(y)===-1&&l.push(y)}for(let g=0;g<s.length;++g){const y=s[g];l.indexOf(y)===-1&&y!==Xw&&l.push(y)}const c=new Array(a.length);for(let g=0;g<o;++g){if(new Set(a[g].split("")).size!==a[g].length)throw new Error(`Found duplicate axes in input component ${a[g]}. Support for duplicate axes in input is not implemented yet.`);c[g]=[];for(let y=0;y<a[g].length;++y)c[g].push(l.indexOf(a[g][y]))}const d=l.length,f=r.length,p=[];for(let g=f;g<d;++g)p.push(g);return{allDims:l,summedDims:p,idDims:c}}function H1(n,e){let t=new Array(n);t.fill(-1);for(let r=0;r<e.length;++r)t[e[r]]=r;const s=[];for(let r=0;r<n;++r)t[r]===-1&&s.push(r);return t=t.filter(r=>r!==-1),{permutationIndices:t,expandDims:s}}function j1(n,e,t){const s=new Array(n);for(let r=0;r<t.length;++r){const a=t[r].shape;for(let o=0;o<e[r].length;++o)s[e[r][o]]===void 0?s[e[r][o]]=a[o]:z(s[e[r][o]]===a[o],()=>`Expected dimension ${s[e[r][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function q1(n,e){const t=n,s=[];let r=0;n.length===0&&t.push(-1),r=n.length+1;for(let o=0;o<r;++o)s.push([]);const a=[];for(let o=0;o<t.length;++o){const l=t[o],c=Uz(e,l);for(const d of c)a.indexOf(d)===-1&&(s[o].push(d),a.push(d))}return{path:t,steps:s}}function X1(n){return n.every((e,t)=>e===t)}function Uz(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function K1(n,e,t=0){let s=[];if(typeof e=="number")z(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((o,l)=>(l===-1&&(o+=1),o),0);z(r<=1,()=>"There should be only one negative value in split array.");const a=e.indexOf(-1);if(a!==-1){const o=e.reduce((l,c)=>c>0?l+c:l);e[a]=n.shape[t]-o}z(n.shape[t]===e.reduce((o,l)=>o+l),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HT(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function jT(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function qT(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XT(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function KT(n,e){return`size ${n} must be non-negative, not ${e}`}function YT(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function QT(n,e){const t=oe(n),s=oe(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function ZT(n,e){const t=oe(n),s=oe(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zg(){return"segment ids must be >= 0"}function JT(){return"segment ids are not increasing"}function eN(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function tN(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nN(n,e){let t=!1,s;for(n<=A1?(s=n,t=!0):s=Dg(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=Dg(n,s+1);return s}function Y1(n,e,t){const s=[],r=n.length;for(let a=0;a<r;a++)a!==e?s.push(n[a]):s.push(t);return s}function Q1(n,e,t,s){const r=e.shape.length,a=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let p=0;p<s;++p)if(n.shape[p]!==e.shape[p])throw new Error(`x.shape[${p}]: ${n.shape[p]} should be equal to indices.shape[${p}]: ${e.shape[p]}.`);const o=n.shape[t],l=[];let c=1,d=1,f=1;for(let p=0;p<s;++p)l.push(n.shape[p]),c*=n.shape[p];for(let p=s;p<t;p++)l.push(n.shape[p]),d*=n.shape[p];for(let p=s;p<r;p++)l.push(e.shape[p]);for(let p=t+1;p<a;p++)l.push(n.shape[p]),f*=n.shape[p];return{batchSize:c,sliceSize:f,outerSize:d,dimSize:o,outputShape:l}}const Vz=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Q1,computeOutShape:Y1,segOpComputeOptimalWindowSize:nN},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oi(n){try{return n.map(e=>la(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function sN(n){return n.map(e=>ti(e))}const Wz=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:B1,ERF_A2:M1,ERF_A3:U1,ERF_A4:V1,ERF_A5:W1,ERF_P:z1,PARALLELIZE_THRESHOLD:A1,get RowPartitionType(){return hr},SELU_SCALE:L1,SELU_SCALEALPHA:F1,applyActivation:Af,assertAndGetBroadcastShape:Ye,assertAxesAreInnerMostDims:ps,assertParamsConsistent:_1,assignToTypedArray:Lz,axesAreInnerMostDims:u1,calculateShapes:$o,checkEinsumDimSizes:j1,checkPadOnDimRoundingMode:Zs,combineLocations:q$,combineRaggedTensorToTensorShapes:UT,complexWithEvenIndex:Oz,complexWithOddIndex:Pz,computeConv2DInfo:Qt,computeConv3DInfo:di,computeDefaultPad:i1,computeDilation2DInfo:qc,computeOptimalWindowSize:Of,computeOutAndReduceShapes:ks,computeOutShape:Ys,computePool2DInfo:Qs,computePool3DInfo:ga,convertConv2DDataFormat:gr,decodeEinsumEquation:G1,eitherStridesOrDilationsAreOne:Gn,expandShapeToKeepDim:fs,exponent:Bz,exponents:zz,fromStringArrayToUint8:sN,fromUint8ToStringArray:oi,getAxesPermutation:_n,getBroadcastDims:Uu,getComplexWithIndex:Fz,getEinsumComputePath:q1,getEinsumPermutation:H1,getFusedBiasGradient:_f,getFusedDyActivation:If,getImageCenter:D1,getInnerMostAxes:An,getPermuted:Qc,getRaggedRank:WT,getReductionAxes:G$,getReshaped:Yc,getReshapedPermuted:Zc,getRowPartitionTypesHelper:VT,getSliceBeginCoords:O1,getSliceSize:P1,getSparseFillEmptyRowsIndicesDenseShapeMismatch:HT,getSparseFillEmptyRowsNegativeIndexErrorMessage:jT,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:qT,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:YT,getSparseReshapeInputOutputMismatchErrorMessage:ZT,getSparseReshapeInputOutputMultipleErrorMessage:QT,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:XT,getSparseReshapeNegativeOutputDimErrorMessage:KT,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:tN,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Zg,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:JT,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:eN,getUndoAxesPermutation:Kc,isIdentityPermutation:X1,log:VR,mergeRealAndImagArrays:Lc,prepareAndValidate:$1,prepareSplitSize:K1,segment_util:Vz,shouldFuse:Df,slice_util:Iz,splitRealAndImagArrays:Dz,stridesOrDilationsArePositive:bo,tupleValuesAreOne:Ic,upcastType:Jn,validateDefaultValueShape:GT,validateInput:g1,validateUpdateShape:xT,warn:fr},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */iz();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ao={},Th={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Gz(n,e){ao[n]=e}function pr(n,e){if(!(n in ao)||e!=null){const s=jz(n,e);if(s!==null)ao[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=ao[n];return t==null||t.isContextLost()?(delete ao[n],pr(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),ao[n])}function Hz(n){if(!ee().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function jz(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??Hz(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete ao[n]},!1),ee().getBool("SOFTWARE_WEBGL_ENABLED")&&(Th.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Th)||t.getContext("experimental-webgl",Th):t.getContext("webgl2",Th)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var zc;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(zc||(zc={}));var Ts;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Ts||(Ts={}));var bn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(bn||(bn={}));function Jc(n,e){return[e,n]}function qz(n,e){return n*e}function Nh(n){const e=oe(n),t=Math.ceil(e/4);return _g(t)}function Qu(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function Xz(n,e){const[t,s]=Qu(n,e);return t*s*4}function Z1(n,e){const t=n;let s,r,a,o,l,c,d,f,p,g;return ee().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,a=t.RGBA16F,o=t.RGBA32F,l=t.RED,d=4,f=1,p=t.HALF_FLOAT,g=t.FLOAT,c=t.RGBA8):(s=n.RGBA,r=n.RGBA,a=n.RGBA,o=t.RGBA,l=n.RGBA,d=4,f=4,p=e!=null?e.HALF_FLOAT_OES:null,g=n.FLOAT,c=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:l,downloadTextureFormat:c,downloadUnpackNumChannels:d,defaultNumChannels:f,textureTypeHalfFloat:p,textureTypeFloat:g}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _e(n,e){const t=e();return ee().getBool("DEBUG")&&Kz(n),t}function Kz(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+Jz(n,e))}const Yz=596e-10,Qz=65504;function Zz(n){return!!(ee().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||Yz<Math.abs(n)&&Math.abs(n)<Qz)}function Jz(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Eh(n,e){return xa(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function e4(n,e){const t=xa(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(_e(n,()=>n.shaderSource(t,e)),_e(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function t4(n,e){const t=xa(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(_e(n,()=>n.shaderSource(t,e)),_e(n,()=>n.compileShader(t)),ee().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw rN(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const n4=/ERROR: [0-9]+:([0-9]+):/g;function rN(n,e){const t=n4.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],r=n.split(`
`),a=r.length.toString().length+2,o=r.map((p,g)=>Au((g+1).toString(),a)+p);let l=0;for(let p=0;p<o.length;p++)l=Math.max(o[p].length,l);const c=o.slice(0,s-1),d=o.slice(s-1,s),f=o.slice(s);console.log(c.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Au(d[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(f.join(`
`))}function s4(n){return xa(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function r4(n,e){if(_e(n,()=>n.linkProgram(e)),!ee().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function fg(n,e){if(_e(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function a4(n,e){const t=xa(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return _e(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),_e(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function i4(n,e){const t=xa(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return _e(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),_e(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function o4(n){return xa(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function u4(n,e){const t=ee().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function l4(n){return xa(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Yw(n,e,t,s,r,a,o){const l=n.getAttribLocation(e,t);return l===-1?!1:(_e(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),_e(n,()=>n.vertexAttribPointer(l,r,n.FLOAT,!1,a,o)),_e(n,()=>n.enableVertexAttribArray(l)),!0)}function c4(n,e,t){m4(n,t),_e(n,()=>n.activeTexture(n.TEXTURE0+t)),_e(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function d4(n,e,t){return xa(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function h4(n,e,t){return n.getUniformLocation(e,t)}function f4(n,e,t,s){_e(n,()=>c4(n,e,s)),_e(n,()=>n.uniform1i(t,s))}function pg(n,e,t){_e(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),_e(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function Qw(n,e){_e(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),_e(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function kh(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+p4(n,e))}function p4(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function xa(n,e,t){const s=_e(n,()=>e());if(s==null)throw new Error(t);return s}function m4(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Vu(n,e=2){return oe(n.slice(0,n.length-e))}function Wu(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Rh(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Vu(n),...Wu(n)]),e}function g4(n,e=!1){let t=ee().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=ee().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&ee().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((l,c)=>c>=n.length-2?Cy(n[c]):n[c]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=ui(n).newShape);let r=oe(n),a=null;n.length<=1&&r<=t?a=[1,r]:n.length===2&&n[0]<=t&&n[1]<=t?a=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?a=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?a=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?a=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(a=[n[0],n[1]*n[2]*n[3]]);const o=a!=null&&Math.max(...a)>s&&Math.min(...a)<=(e?2:1)&&Math.min(...a)>0;if(a==null||o)if(e){const l=Vu(n);let c=2,d=2;n.length&&([c,d]=Wu(n)),r=l*(c/2)*(d/2),a=_g(r).map(f=>f*2)}else a=_g(r);return a}function Ih(n){return n%2===0}function af(n,e){if(n=n.slice(-2),e=e.slice(-2),yt(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||Ih(t)&&Ih(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Ih(n[0])&&Ih(e[0])}let mg,gg;function y4(n){if(mg==null){const e=pr(n);mg=e.getParameter(e.MAX_TEXTURE_SIZE)}return mg}function x4(n){if(gg==null){const e=pr(n);gg=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,gg)}function b4(n){if(n===0)return 0;let e;const t=pr(n);return js(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:js(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function js(n,e){return n.getExtension(e)!=null}function Zw(n){try{if(pr(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function v4(n){if(n===0)return!1;const e=pr(n);if(n===1){if(!js(e,"OES_texture_float"))return!1}else if(!js(e,"EXT_color_buffer_float"))return!1;return Jg(e)}function w4(n){if(n===0)return!1;const e=pr(n);if(n===1){if(!js(e,"OES_texture_float")||!js(e,"WEBGL_color_buffer_float"))return!1}else{if(js(e,"EXT_color_buffer_float"))return Jg(e);const s="EXT_color_buffer_half_float";if(js(e,s)){const r=e.getExtension(s);return S4(e,r)}return!1}return Jg(e)}function Jg(n){const e=Z1(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const o=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(a),o}function S4(n,e){const t=Z1(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const l=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(o),l}function C4(n){return n!==2?!1:pr(n).fenceSync!=null}function ed(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&z(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oe=ee();Oe.registerFlag("HAS_WEBGL",()=>Oe.getNumber("WEBGL_VERSION")>0);Oe.registerFlag("WEBGL_VERSION",()=>Zw(2)?2:Zw(1)?1:0);Oe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Oe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Oe.get("WEBGL_VERSION")===2);Oe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Oe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Oe.registerFlag("WEBGL_PACK",()=>Oe.getBool("HAS_WEBGL"));Oe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_CLIP",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_REDUCE",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_LAZILY_UNPACK",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_CONV_IM2COL",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Oe.getBool("WEBGL_PACK"));Oe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>y4(Oe.getNumber("WEBGL_VERSION")));Oe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>x4(Oe.getNumber("WEBGL_VERSION")));Oe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Oe.getNumber("WEBGL_VERSION");return n===0?0:b4(n)});Oe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Oe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!b$());Oe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>v4(Oe.getNumber("WEBGL_VERSION")));Oe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Oe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Oe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Oe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>w4(Oe.getNumber("WEBGL_VERSION")));Oe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>C4(Oe.getNumber("WEBGL_VERSION")));Oe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Oe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Oe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Oe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>b$()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Oe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Oe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Oe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Oe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Oe.registerFlag("WEBGL_EXP_CONV",()=>!1);Oe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Oe.getBool("IS_TEST"));Oe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Oe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Oe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Oe.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hn(){let n,e,t,s,r,a,o,l,c,d;return ee().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",l=ee().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",c="",d=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",a="gl_FragColor",o="",l=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,c=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,d=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:l,defineSpecialInf:c,defineRound:d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eo(n,e,t="index"){const s=Ut(e);return s.map((r,a)=>{const o=`int ${n[a]} = ${t} / ${r}`,l=a===s.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${r}`:`index -= ${n[a]} * ${r}`;return`${o}; ${l};`}).join("")}function Pf(n,e,t="index"){const s=Ut(e);return s.map((r,a)=>{const o=`int ${n[a]} = ${t} / outShapeStrides[${a}]`,l=a===s.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * outShapeStrides[${a}]`:`index -= ${n[a]} * outShapeStrides[${a}]`;return`${o}; ${l};`}).join("")}function $4(n,e){const t=n.length,s=n.map(a=>`${e}[${a}]`),r=new Array(t-1);r[t-2]=s[t-1];for(let a=t-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function T4(n,e,t="index"){const s=n.map((a,o)=>o),r=$4(s,e);return r.map((a,o)=>{const l=`int ${n[o]} = ${t} / ${r[o]}`,c=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${r[o]}`:`index -= ${n[o]} * ${r[o]}`;return`${l}; ${c};`}).join("")}function J1(n){const e=Ut(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function eb(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const aN=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:iN}=Wz;function N4(n,e,t){const s=[];if(n.forEach(y=>{const x=oe(y.shapeInfo.logicalShape);if(y.shapeInfo.isUniform?s.push(`uniform float ${y.name}${x>1?`[${x}]`:""};`):(s.push(`uniform sampler2D ${y.name};`),s.push(`uniform int offset${y.name};`)),t.enableShapeUniforms){const{uniformShape:w}=tb(t.packedInputs,y.shapeInfo.logicalShape,y.shapeInfo.texShape);switch(w.length){case 1:s.push(`uniform int ${y.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${y.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${y.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${y.name}Shape;`);break}s.push(`uniform ivec2 ${y.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(y=>{s.push(`uniform ${y.type} ${y.name}${y.arrayIndex?`[${y.arrayIndex}]`:""};`)});const r=s.join(`
`),a=n.map(y=>E4(y,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),o=e.texShape,l=Hn(),c=I4(l);let d,f,p=D4(l);return e.isPacked?(d=k4(e.logicalShape,o,t.enableShapeUniforms),f=A4(l)):(d=R4(e.logicalShape,o,t.enableShapeUniforms),f=_4(l)),t.packedInputs&&(p+=L4),[p,c,f,r,d,a,t.userCode].join(`
`)}function Zu(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return K4(n,e);case 1:return Q4(n,e);case 2:return J4(n,e);case 3:return tB(n,e);case 4:return sB(n,e);case 5:return rB(n);case 6:return aB(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function oN(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return X4(n);case 1:return Y4(n,e);case 2:return Z4(n,e);case 3:return eB(n,e);default:return nB(n,e)}}function E4(n,e,t=!1,s){let r="";t?r+=oN(n,s):r+=Zu(n,s);const a=n.shapeInfo.logicalShape,o=e.logicalShape;return a.length<=o.length&&(t?r+=iB(n,e):r+=oB(n,e)),r}function k4(n,e,t){switch(n.length){case 0:return uN();case 1:return z4(n,e,t);case 2:return j4(n,e,t);case 3:return M4(n,e,t);default:return V4(n,e,t)}}function R4(n,e,t){switch(n.length){case 0:return uN();case 1:return B4(n,e,t);case 2:return q4(n,e,t);case 3:return U4(n,e,t);case 4:return W4(n,e,t);case 5:return G4(n,e);case 6:return H4(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function I4(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function _4(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function A4(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function D4(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${O4}
    ${P4}
    ${F4}
  `}const O4=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,P4=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,F4=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,L4=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function uN(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function z4(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function B4(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function M4(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[2]/2),a=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function U4(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Pf(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Eo(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function V4(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[n.length-1]/2),a=r*Math.ceil(n[n.length-2]/2);let o=a,l="",c="b, r, c";for(let d=2;d<n.length-1;d++)o*=n[n.length-d-1],l=`
      int b${d} = index / ${o};
      index -= b${d} * ${o};
    `+l,c=`b${d}, `+c;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${l}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${c});
    }
  `}function W4(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Pf(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Eo(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function G4(n,e){const t=Eo(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function H4(n,e){const t=Eo(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function j4(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(yt(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function q4(n,e,t){return yt(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function ko(n){return`offset${n}`}function X4(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Hn();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function K4(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[r,a]=n.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const o=ko(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${o});
      return sampleTexture(${t}, uv);
    }
  `;const[l,c]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${l}, ${c}, ${o});
      return sampleTexture(${t}, uv);
    }
  `}function Y4(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,a=Hn();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${t}, uv);
    }
  `;const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${t}, uv);
    }
  `}function Q4(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Ju(n)}
      }
    `;const r=n.shapeInfo.texShape,a=r[0],o=r[1];if(o===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const l=ko(t);return o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / ${a}.0);
        return sampleTexture(${t}, uv);
      }
    `:a===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${l});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${l});
      return sampleTexture(${t}, uv);
    }
  `}function Z4(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n.shapeInfo.texShape,o=a[0],l=a[1],c=Hn();if(a!=null&&yt(t,a))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${c.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${o}.0);

        return ${c.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `;const d=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],f=Math.ceil(t[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${f}, ${d[0]}, ${d[1]}, row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `}function J4(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n.shapeInfo.texShape;if(a!=null&&yt(t,a)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const g=a[0],y=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${y}.0, ${g}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:o,keptDims:l}=ui(t),c=o;if(c.length<t.length){const g=el(n,c),y=["row","col"];return`
      ${Zu(g,e)}
      float ${r}(int row, int col) {
        return ${r}(${tl(y,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Ju(n)}
      }
    `;const d=a[0],f=a[1],p=ko(s);return f===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `:d===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${f}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${p};
    vec2 uv = uvFromFlat(${d}, ${f}, index);
    return sampleTexture(${s}, uv);
  }
`}function eB(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(t[0]===1){const g=t.slice(1),y=[1,2],x=el(n,g),w=["b","row","col"];return`
        ${oN(x,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${tl(w,y)});
        }
      `}const l=Hn();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const c=o[0],d=o[1],f=Math.ceil(t[2]/2),p=f*Math.ceil(t[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${d}, ${p}, ${f}, b, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function tB(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=t[1]*t[2],o=t[2],{newShape:l,keptDims:c}=ui(t),d=l;if(d.length<t.length){const w=el(n,d),S=["row","col","depth"];return`
        ${Zu(w,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${tl(S,c)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${Ju(n)}
      }
    `;const f=n.shapeInfo.texShape,p=f[0],g=f[1],y=n.shapeInfo.flatOffset;if(g===a&&y==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${g}.0, ${p}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(g===o&&y==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${g}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `;const x=ko(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${x};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${x};
        vec2 uv = uvFromFlat(${p}, ${g}, index);
        return sampleTexture(${s}, uv);
      }
  `}function nB(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Hn();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${t}, uv);
    }
  `;const a=n.shapeInfo.logicalShape,o=a.length,l=n.shapeInfo.texShape,c=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)],d=c[0],f=c[1],p=Math.ceil(a[o-1]/2);let g=p*Math.ceil(a[o-2]/2),y="int b, int row, int col",x=`b * ${g} + (row / 2) * ${p} + (col / 2)`;for(let w=2;w<o-1;w++)y=`int b${w}, `+y,g*=a[o-w-1],x=`b${w} * ${g} + `+x;return`
    vec4 ${s}(${y}) {
      int index = ${x};
      int texR = index / ${f};
      int texC = index - texR * ${f};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${f}, ${d});
      return ${r.texture2D}(${t}, uv);
    }
  `}function sB(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=t[3],o=t[2]*a,l=t[1]*o,{newShape:c,keptDims:d}=ui(t);if(c.length<t.length){const N=el(n,c),I=["row","col","depth","depth2"];return`
      ${Zu(N,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${tl(I,d)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${l}, ${o}, ${a}, 1)));
        ${Ju(n)}
      }
    `;const f=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,g=p[0],y=p[1],x=`int stride2 = ${s}Shape[3];`,w=`int stride1 = ${s}Shape[2] * stride2;`,S=`int stride0 = ${s}Shape[1] * stride1;`;if(y===l&&f==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${x}
        ${w}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${g}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(y===a&&f==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${g}.0);
        return sampleTexture(${s}, uv);
      }
    `;const $=ko(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${x}
      ${w}
      ${S}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${$});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${g}, ${y}, index + ${$});
      return sampleTexture(${s}, uv);
    }
  `}function rB(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],a=e[3]*r,o=e[2]*a,l=e[1]*o,{newShape:c,keptDims:d}=ui(e);if(c.length<e.length){const w=el(n,c),S=["row","col","depth","depth2","depth3"];return`
      ${Zu(w)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${tl(S,d)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${o}, ${a}, ${r})) +
          depth3;
        ${Ju(n)}
      }
    `;const f=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,g=p[0],y=p[1];if(y===l&&f==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${g}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(y===r&&f==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${g}.0);
        return sampleTexture(${t}, uv);
      }
    `;const x=ko(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${o} + depth * ${a} +
          depth2 * ${r} + depth3 + ${x};
      vec2 uv = uvFromFlat(${g}, ${y}, index);
      return sampleTexture(${t}, uv);
    }
  `}function aB(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:a}=ui(e);if(r.length<e.length){const S=el(n,r),$=["row","col","depth","depth2","depth3","depth4"];return`
      ${Zu(S)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${tl($,a)});
      }
    `}const o=e[5],l=e[4]*o,c=e[3]*l,d=e[2]*c,f=e[1]*d;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${f}, ${d}, ${c}, ${l})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${Ju(n)}
      }
    `;const p=n.shapeInfo.flatOffset,g=n.shapeInfo.texShape,y=g[0],x=g[1];if(x===f&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${d}, ${c}, ${l}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${x}.0, ${y}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(x===o&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${x}.0, ${y}.0);
        return sampleTexture(${t}, uv);
      }
    `;const w=ko(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${f} + col * ${d} + depth * ${c} +
          depth2 * ${l} + depth3 * ${o} + depth4 + ${w};
      vec2 uv = uvFromFlat(${y}, ${x}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Ju(n){const e=n.name,t=oe(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function iB(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",a=n.shapeInfo.logicalShape.length,o=e.logicalShape.length,l=iN(n.shapeInfo.logicalShape,e.logicalShape),c=wt(o),d=o-a;let f;const p=["x","y","z","w","u","v"];a===0?f="":o<2&&l.length>=1?f="coords = 0;":f=l.map(N=>`coords.${p[N+d]} = 0;`).join(`
`);let g="";o<2&&a>0?g="coords":g=n.shapeInfo.logicalShape.map((N,I)=>`coords.${p[I+d]}`).join(", ");let y="return outputValue;";const w=oe(n.shapeInfo.logicalShape)===1,$=oe(e.logicalShape)===1;if(a===1&&!w&&!$)y=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(w&&!$)o===1?y=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:y=`
        return vec4(outputValue.x);
      `;else if(l.length){const N=a-2,I=a-1;l.indexOf(N)>-1&&l.indexOf(I)>-1?y="return vec4(outputValue.x);":l.indexOf(N)>-1?y="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(I)>-1&&(y="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${c} coords = getOutputCoords();
      ${f}
      vec4 outputValue = get${s}(${g});
      ${y}
    }
  `}function oB(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",a=e.texShape,o=n.shapeInfo.texShape,l=n.shapeInfo.logicalShape.length,c=e.logicalShape.length;if(!n.shapeInfo.isUniform&&l===c&&n.shapeInfo.flatOffset==null&&yt(o,a))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const d=wt(c),f=iN(n.shapeInfo.logicalShape,e.logicalShape),p=c-l;let g;const y=["x","y","z","w","u","v"];l===0?g="":c<2&&f.length>=1?g="coords = 0;":g=f.map(w=>`coords.${y[w+p]} = 0;`).join(`
`);let x="";return c<2&&l>0?x="coords":x=n.shapeInfo.logicalShape.map((w,S)=>`coords.${y[S+p]}`).join(", "),`
    float ${r}() {
      ${d} coords = getOutputCoords();
      ${g}
      return get${s}(${x});
    }
  `}function wt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function tb(n,e,t){const{newShape:s,keptDims:r}=ui(e),a=e.length,o=n&&a===3&&e[0]===1,l=o?e.slice(1):s,c=!n&&a>1&&!yt(e,t)&&s.length<a||o;return{useSqueezeShape:c,uniformShape:c?l:e,keptDims:r}}function el(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function tl(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uB(n,e,t,s){const r=t.map((f,p)=>{const g={logicalShape:f.shape,texShape:f.isUniform?null:f.texData.texShape,isUniform:f.isUniform,isPacked:f.isUniform?!1:f.texData.isPacked,flatOffset:null};return f.texData!=null&&f.texData.slice!=null&&f.texData.slice.flatOffset>0&&(g.flatOffset=f.texData.slice.flatOffset),{name:e.variableNames[p],shapeInfo:g}}),a=r.map(f=>f.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=N4(r,o,e),c=t4(n.gl,l),d=n.createProgram(c);return ee().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:c,source:l,webGLProgram:d,inShapeInfos:a,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(d),Object.assign({program:e,fragmentShader:c,source:l,webGLProgram:d,inShapeInfos:a,outShapeInfo:o},lN(n,e,d)))}function lN(n,e,t){const s=[],r=[];let a,o,l,c=null,d=null;d=n.getUniformLocation(t,"NAN",!1),ee().getNumber("WEBGL_VERSION")===1&&(c=n.getUniformLocation(t,"INFINITY",!1));const f=!1;for(const p of e.variableNames){const g={name:p,uniform:n.getUniformLocation(t,p,f),offset:n.getUniformLocation(t,`offset${p}`,f)};e.enableShapeUniforms&&(g.shape=n.getUniformLocation(t,`${p}Shape`,f),g.texShape=n.getUniformLocation(t,`${p}TexShape`,f)),s.push(g)}if(e.enableShapeUniforms&&(a=n.getUniformLocation(t,"outShape",f),l=n.getUniformLocation(t,"outShapeStrides",f),o=n.getUniformLocation(t,"outTexShape",f)),e.customUniforms)for(const p of e.customUniforms)r.push(n.getUniformLocation(t,p.name,f));return{variablesLocations:s,customUniformLocations:r,infLoc:c,nanLoc:d,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:o}}function Jw(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,a=e[s],o=a.shape;if(!yt(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(t.isUniform&&a.isUniform)return;const l=t.texShape,c=a.isUniform?null:a.texData.texShape;if(!yt(l,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${l} and ${c} must match`)})}function lB(n,e,t,s,r){e.program.enableShapeUniforms||(Jw(e.inShapeInfos,t),Jw([e.outShapeInfo],[s]));const a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):n.setOutputMatrixTexture(a.texture,o[0],o[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),ee().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let c=0;c<t.length;++c){const d=t[c],{uniform:f,offset:p,shape:g,texShape:y}=e.variablesLocations[c];if(g){const{uniformShape:x}=tb(e.program.packedInputs,d.shape,d.texData.texShape);switch(x.length){case 1:n.gl.uniform1iv(g,new Int32Array(x));break;case 2:n.gl.uniform2iv(g,new Int32Array(x));break;case 3:n.gl.uniform3iv(g,new Int32Array(x));break;case 4:n.gl.uniform4iv(g,new Int32Array(x));break}}if(y&&n.gl.uniform2i(y,d.texData.texShape[0],d.texData.texShape[1]),f!=null){if(d.isUniform){if(oe(d.shape)<2)n.gl.uniform1f(f,d.uniformValues[0]);else{let x=d.uniformValues;x instanceof Float32Array||(x=new Float32Array(x)),n.gl.uniform1fv(f,x)}continue}d.texData.slice!=null&&p!=null&&n.gl.uniform1i(p,d.texData.slice.flatOffset),n.setInputMatrixTexture(d.texData.texture.texture,f,c)}}const l=e.outShapeLocation;if(l)switch(s.shape.length){case 1:n.gl.uniform1iv(l,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(l,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(l,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(l,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const c=Ut(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(c));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(c));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(c));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r)for(let c=0;c<e.program.customUniforms.length;++c){const d=e.program.customUniforms[c],f=e.customUniformLocations[c],p=r[c];if(d.type==="float")n.gl.uniform1fv(f,p);else if(d.type==="vec2")n.gl.uniform2fv(f,p);else if(d.type==="vec3")n.gl.uniform3fv(f,p);else if(d.type==="vec4")n.gl.uniform4fv(f,p);else if(d.type==="int")n.gl.uniform1iv(f,p);else if(d.type==="ivec2")n.gl.uniform2iv(f,p);else if(d.type==="ivec3")n.gl.uniform3iv(f,p);else if(d.type==="ivec4")n.gl.uniform4iv(f,p);else throw Error(`uniform type ${d.type} is not supported yet.`)}n.executeProgram()}function cB(n,e,t){let s="";e.concat(t).forEach(o=>{const l=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!o.isUniform){const c=o.texData.texShape,{useSqueezeShape:d,uniformShape:f,keptDims:p}=tb(n.packedInputs,o.shape,c);let g="",y="",x="";if(f.length===1&&n.packedInputs){const O=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];g=`${O[0]>1}_${O[1]>1}`}else if(f.length===2&&!n.packedInputs)y=`${f[0]>1}_${f[1]>1}`;else if(f.length>2&&!n.packedInputs){const O=Ut(f);x=`${O[0]===c[1]}_${O[O.length-1]===c[1]}`}const w=o.shape.length,S=f.length===2&&yt(o.shape,c),$=oe(o.shape)===1,N=Uu(o.shape,t.shape),I=!n.packedInputs&&w===t.shape.length&&yt(c,t.texData.texShape),_=n.packedInputs||f.length>2?"":`${c[0]>1}_${c[1]>1}`;s+=`${w}_${I}_${d?p:""}_${f.length}_${$}_${N}_${S}_${g}_${y}_${x}_${_}_${l}`}else{const c=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${c}_${l}`}});const r=n.userCode;let a=n.constructor.name;return a+="_"+s+"_"+r+`${ee().getNumber("WEBGL_VERSION")}`,a}function Dn(n){return ee().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dB{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=zc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Hn();this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Pf(["r","c","d"],e):Eo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hB{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=zc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Hn();this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Pf(["r","c","d"],e):Eo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fB{constructor(e){this.variableNames=["A"],this.outTexUsage=Ts.DOWNLOAD;const t=Hn();this.outputShape=e,this.userCode=`
      ${aN}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pB{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Ts.DOWNLOAD;const t=Hn();this.outputShape=e,this.userCode=`
      ${aN}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mB={R:0,G:1,B:2,A:3};class eS{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Hn();this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let o="";for(let l=0;l<s.length;l++){const c=s[l];o+=`
          if(offset == ${l}) {
            result = values[${mB[c]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?eb():J1(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${o}
        }
        ${r.output} = vec4(${a}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gB{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Hn();this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let l=0;l<=1;l++){const c=o*2+l;r+=`
          localCoords = coords;
          if(localCoords[2] + ${l} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${l};
          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${o};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${c}] = values[0];
            } else if (offset == 1) {
              result[${c}] = values[1];
            } else if (offset == 2) {
              result[${c}] = values[2];
            } else {
              result[${c}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?eb():J1(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${a};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(n){const e=Hn(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return e4(n,t)}function xB(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return a4(n,e)}function bB(n){const e=new Uint16Array([0,1,2,2,1,3]);return i4(n,e)}function td(n,e,t,s,r,a){u4(e,t);const o=o4(n),l=n.TEXTURE_2D;return _e(n,()=>n.bindTexture(l,o)),_e(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),_e(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),_e(n,()=>n.texParameteri(l,n.TEXTURE_MIN_FILTER,n.NEAREST)),_e(n,()=>n.texParameteri(l,n.TEXTURE_MAG_FILTER,n.NEAREST)),ee().getNumber("WEBGL_VERSION")===1?_e(n,()=>n.texImage2D(l,0,s,e,t,0,r,a,null)):_e(n,()=>n.texStorage2D(l,1,s,e,t)),_e(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:o,texShape:[t,e]}}function cN(n){return n.internalFormatFloat}function vB(n,e,t,s){const[r,a]=Jc(e,t);return td(n,r,a,cN(s),s.textureFormatFloat,n.FLOAT)}function dN(n){return n.internalFormatHalfFloat}function wB(n,e,t,s){const[r,a]=Jc(e,t);return td(n,r,a,dN(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function hN(n){return n.downloadTextureFormat}function SB(n,e,t,s){const[r,a]=Jc(e,t);return td(n,r,a,hN(s),n.RGBA,n.UNSIGNED_BYTE)}function fN(n){return n.internalFormatPackedFloat}function CB(n,e,t,s){const[r,a]=Qu(e,t);return td(n,r,a,fN(s),n.RGBA,n.FLOAT)}function pN(n){return n.internalFormatPackedHalfFloat}function $B(n,e,t,s){const[r,a]=Qu(e,t);return td(n,r,a,pN(s),n.RGBA,s.textureTypeHalfFloat)}function TB(n,e,t){return _e(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Yw(n,e,"clipSpacePos",t,3,20,0)&&Yw(n,e,"uv",t,2,20,12)}function NB(n,e,t,s,r,a){_e(n,()=>n.bindTexture(n.TEXTURE_2D,e));let o,l,c;r instanceof Uint8Array?(o=new Uint8Array(t*s*4),l=n.UNSIGNED_BYTE,c=n.RGBA):(o=new Float32Array(t*s*4),l=n.FLOAT,c=a.internalFormatPackedFloat),o.set(r),ee().getNumber("WEBGL_VERSION")===2?_e(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,l,o)):_e(n,()=>n.texImage2D(n.TEXTURE_2D,0,c,t,s,0,n.RGBA,l,o)),_e(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function EB(n,e,t){_e(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?ee().getNumber("WEBGL_VERSION")===2?_e(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):_e(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):ee().getNumber("WEBGL_VERSION")===2?_e(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):_e(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),_e(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function kB(n,e,t,s){const r=n.createBuffer();_e(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const l=4*4*e*t;return _e(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,l,n.STREAM_READ)),_e(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),_e(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function RB(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function IB(n,e,t,s){const[r,a]=Jc(e,t),o=4,l=new Uint8Array(qz(e*t,o));return _e(n,()=>n.readPixels(0,0,r,a,s.downloadTextureFormat,n.UNSIGNED_BYTE,l)),new Float32Array(l.buffer)}function _B(n,e,t,s,r,a,o,l){const c=n,d=new Float32Array(Xz(a,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,d),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),d}function AB(n,e,t){const s=new Float32Array(e*t*4);return _e(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yg{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=ee().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,Gz(t,e)):this.gl=pr(t),e=this.gl,ee().getNumber("WEBGL_VERSION")===2){const a=e;this.createVertexArray=()=>_e(a,()=>a.createVertexArray()),this.bindVertexArray=o=>_e(a,()=>a.bindVertexArray(o)),this.deleteVertexArray=o=>_e(a,()=>a.deleteVertexArray(o)),this.getVertexArray=()=>_e(a,()=>a.getParameter(a.VERTEX_ARRAY_BINDING))}else if(e!=null){const a=e.getExtension("OES_vertex_array_object");if(a==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>_e(e,()=>a.createVertexArrayOES()),this.bindVertexArray=o=>_e(e,()=>a.bindVertexArrayOES(o)),this.deleteVertexArray=o=>_e(e,()=>a.deleteVertexArrayOES(o)),this.getVertexArray=()=>_e(e,()=>e.getParameter(a.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),ee().getNumber("WEBGL_VERSION")===1){const a="OES_texture_float",o="OES_texture_half_float";if(this.textureFloatExtension=Eh(this.gl,a),js(this.gl,o))this.textureHalfFloatExtension=Eh(this.gl,o);else if(ee().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),js(this.gl,r))this.colorBufferHalfFloatExtension=Eh(this.gl,r);else if(ee().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",js(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(js(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=xB(this.gl),this.indexBuffer=bB(this.gl),this.framebuffer=l4(this.gl),this.textureConfig=Z1(this.gl,this.textureHalfFloatExtension)}get debug(){return ee().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;_e(e,()=>e.finish()),_e(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),_e(e,()=>e.deleteFramebuffer(this.framebuffer)),_e(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),_e(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),_e(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),vB(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),wB(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),SB(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),EB(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),NB(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),$B(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),CB(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Qw(this.gl,this.framebuffer),this.outputTexture=null),_e(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>IB(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,a,o){return _B(this.gl,e,t,s,r,a,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return RB(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=kB(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(ee().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const o=r.clientWaitSync(a,0,0);return o===r.ALREADY_SIGNALED||o===r.CONDITION_SATISFIED},t=a}else ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>AB(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=yB(t));const s=s4(t);_e(t,()=>t.attachShader(s,this.vertexShader)),_e(t,()=>t.attachShader(s,e)),r4(t,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&fg(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;_e(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),TB(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(_e(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&fg(this.gl,this.program),_e(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?d4(this.gl,e,t):h4(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),_e(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),f4(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,a]=Qu(t,s);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&fg(this.gl,this.program),kh(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}_e(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),_e(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Eh(this.gl,ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,a),a}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ww(()=>this.disposed||this.isQueryAvailable(e,ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=DB(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in ee().platform&&(s=ee().platform.setTimeoutCustom.bind(ee().platform)),ww(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),pg(this.gl,e,this.framebuffer),this.debug&&kh(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(pg(this.gl,this.outputTexture,this.framebuffer),this.debug&&kh(this.gl)):Qw(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;pg(r,e,this.framebuffer),this.debug&&kh(r),this.outputTexture=e,_e(r,()=>r.viewport(0,0,t,s)),_e(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),_e(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function DB(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OB(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ts(n){return(e,t,s,r,a)=>{const o=Ye(e,t),l=o.length,c=Ut(o),d=oe(o),f=Ar(a,d),p=e.length,g=t.length,y=Ut(e),x=Ut(t),w=Uu(e,o),S=Uu(t,o);if(w.length+S.length===0)for(let $=0;$<f.length;++$)f[$]=n(s[$%s.length],r[$%r.length]);else for(let $=0;$<f.length;++$){const N=$y($,l,c),I=N.slice(-p);w.forEach(W=>I[W]=0);const _=Pg(I,p,y),O=N.slice(-g);S.forEach(W=>O[W]=0);const M=Pg(O,g,x);f[$]=n(s[_],r[M])}return[f,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PB(n,e,t,s){if(s==="int32"){const r=Int32Array.from(n);return[e,"int32",r]}if(s==="bool"){const r=Sf([0],t),[a,o]=ts((l,c)=>l!==c?1:0)(e,[],n,r,"bool");return[o,"bool",a]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FB=ts((n,e)=>n+e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n,e,t,s,r){const a=oe(s),o=ua(r,t);for(let l=0;l<n.length;l++){const c=n[l];if(c<0)throw new Error("Input x must be non-negative!");c>=r||(a>0?o[c]+=e[l]:o[c]+=1)}return o}function zB(n,e,t,s=!1){const r=n.shape[0],a=n.shape[1],o=xt([r,t],e.dtype);for(let l=0;l<r;l++)for(let c=0;c<a;c++){const d=n.get(l,c);if(d<0)throw new Error("Input x must be non-negative!");d>=t||(s?o.set(1,l,d):e.size>0?o.set(o.get(l,d)+e.get(l,c),l,d):o.set(o.get(l,d)+1,l,d))}return o}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BB=ts((n,e)=>n&e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ba(n){return(e,t,s)=>{const r=sn(t,e.length);for(let a=0;a<e.length;++a)r[a]=n(e[a],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MB=ba(n=>Math.ceil(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(n,e,t,s){const r=sn(t,oe(e));if(s&&t!=="string"){let a=0;n.forEach(o=>{const l=oe(o.shape);r.set(o.vals,a),a+=l})}else{let a=0;n.forEach(o=>{const l=t==="string"?oi(o.vals):o.vals;let c=0;for(let d=0;d<o.shape[0];++d){const f=d*e[1]+a;for(let p=0;p<o.shape[1];++p)r[f+p]=l[c++]}a+=o.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VB=ts((n,e)=>n===e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WB=ba(n=>Math.exp(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GB=ba(n=>Math.expm1(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HB=ba(n=>Math.floor(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jB=ts((n,e)=>Math.floor(n/e));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qB(n,e,t,s,r,a,o,l,c){const d=xt([s,a],t);for(let f=0;f<s;f++){const p=[];let g=0;for(let y=0;y<r;y++){const x=n[f*r+y];g+=x*o[y],p.push(x)}if(g<0||g>=c/a)throw new Error(`Invalid indices: ${p} does not index into ${l}`);for(let y=0;y<a;y++)d.values[f*a+y]=e.get(...e.indexToLoc(g*a+y))}return d}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(n,e,t){const s=xt(t,n.dtype);for(let r=0;r<s.size;++r){const o=s.indexToLoc(r).slice(),l=o[0],c=o[2],d=e.locToIndex([l,c]);o[2]=e.values[d];const f=n.locToIndex(o);0<=f&&f<n.values.length&&(s.values[r]=n.values[f])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KB=ts((n,e)=>n>e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YB=ts((n,e)=>n>=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QB=ts((n,e)=>n<e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZB=ts((n,e)=>n<=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(n,e,t){const s=(e-n)/(t-1),r=ua(t,"float32");r[0]=n;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eM=ba(n=>Math.log(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n,e,t,s){const r=Ar(s,oe(t));for(let a=0;a<r.length;++a){const o=a*e;let l=n[o];for(let c=0;c<e;++c){const d=n[o+c];(Number.isNaN(d)||d>l)&&(l=d)}r[a]=l}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nM=ts((n,e)=>Math.max(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sM=ts((n,e)=>Math.min(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mN=ts((n,e)=>n*e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rM(n,e,t){const s=Ku(-1,t);return mN([],e,s,n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aM=ts((n,e)=>n!==e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iM(n,e,t,s,r){const a=e.length,o=oe(e),l=Ut(e),c=Ut(r),d=Ar(t,oe(r));for(let f=0;f<o;++f){const p=$y(f,a,l),g=new Array(p.length);for(let x=0;x<g.length;x++)g[x]=p[s[x]];const y=Pg(g,a,c);d[y]=n[f]}return d}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oM(n,e,t,s){const[r,a]=ks(n,s),o=Jn(e,"int32"),l=ua(oe(r),o),c=oe(a);for(let d=0;d<l.length;++d){const f=d*c;let p=1;for(let g=0;g<c;++g)p*=t[f+g];l[d]=p}return{outVals:l,outShape:r,outDtype:o}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uM(n,e,t){n.forEach((s,r)=>{if(s<0||s>=t){const a=$y(r,e.length,Ut(e)).join(",");throw new Error(`indices[${a}] = ${s} is not in [0, ${t})`)}})}function lM(n,e){for(let t=0;t<n.length;++t){const s=n[t],r=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let a=1;a<s.length;++a)if(s[a-1]>s[a])throw new Error("Ragged splits must be sorted in ascending order")}}function cM(n,e,t,s){const r=[];let a=0;const o=e.length-1+t.length,l=new Array(o).fill(null).map(()=>[0]);lM(t,s);let c=1;for(let d=0;d<e.length-1;++d){c*=e[d];const f=e[d+1];for(let p=1;p<c+1;++p)l[d].push(p*f)}for(let d=0;d<n.length;++d){let f=n[d],p=n[d]+1;for(let g=0;g<t.length;++g){const y=t[g],x=g+e.length-1;if(x>=0){const w=l[x],S=w[w.length-1]-y[f];for(let $=f;$<p;++$)l[x].push(y[$+1]+S)}f=y[f],p=y[p]}p!==f&&(r.push([f,p]),a+=p-f)}return{outSplits:l,valueSlices:r,numValues:a}}function dM(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,r=sn("int32",s);e.push(r),n[t].forEach((a,o)=>r[o]=a)}return e}function tS(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function hM(n,e,t,s,r,a){const o=tS(e,2)[1],l=tS(a,2)[1];let c=0;for(const d of t)for(let f=d[0];f<d[1];++f){for(let p=0;p<s;++p)r[c*l+p]=n[f*o+p];++c}}function fM(n,e,t,s,r){const a=e.slice();a[0]=r;const o=sn(t,oe(a)),l=n.length,c=l===0?0:l/e[0];return hM(n,e,s,c,o,a),[o,a]}function pM(n,e,t,s,r,a,o,l){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const c=e[0][0]-1;if(uM(a,o,c),s.length===0)throw new Error("params.rank must be nonzero");const d=s[0],{outSplits:f,valueSlices:p,numValues:g}=cM(a,o,n,d),y=dM(f),x=fM(t,s,r,p,g);return[y,x[0],x[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nS=2147483647;function mM(n,e,t,s,r,a,o){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const l=e.length===0,c=r.length===0,d=o.length===0,f=[];l||f.push(e[0]),c||f.push(r[0]),d||f.push(o[0]);for(let S=1;S<f.length;++S)if(f[S]!==f[S-1])throw new Error("starts, limits, and deltas must have the same shape");const p=f.length===0?1:f[0],g=sn("int32",p+1);g[0]=0;for(let S=0;S<p;++S){const $=l?n[0]:n[S],N=c?s[0]:s[S],I=d?a[0]:a[S];if(I===0)throw new Error("Requires delta != 0");let _;if(I>0&&N<$||I<0&&N>$)_=0;else if(_=Math.ceil(Math.abs((N-$)/I)),_>nS)throw new Error(`Requires ((limit - start) / delta) <= ${nS}`);g[S+1]=g[S]+_}const y=g[p],x=sn(t,y);let w=0;for(let S=0;S<p;++S){const $=g[S+1]-g[S];let N=l?n[0]:n[S];const I=d?a[0]:a[S];for(let _=0;_<$;++_)x[w++]=N,N+=I}return[g,x]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Gs=hr;class of{constructor(e,t,s,r,a,o,l,c,d,f){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=r,this.valuesDType=a,this.defaultValue=o,this.defaultValueShape=l,this.rowPartitionValues=c,this.rowPartitionValuesShapes=d,this.rowPartitionTypes=VT(f),this.raggedRank=WT(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Gs.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Gs.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Gs.VALUE_ROWIDS:return of.getMaxWidthValueRowID(t);case Gs.ROW_SPLITS:return of.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Gs[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let r=0;r<t-1;++r){const a=e[r+1]-e[r];a>s&&(s=a)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,r=e[0],a=0;for(let o=1;o<t;++o){const l=e[o];l!==r&&(r=l,a=Math.max(o-s,a),s=o)}return Math.max(t-s,a)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return rS(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;GT(s,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=UT(this.raggedRank,r,t);o[0]<0&&(o[0]=e);for(let l=1;l<=this.raggedRank;++l)o[l]<0&&(o[l]=this.getMaxWidth(l));return o}calculateFirstParentOutputIndex(e,t,s){const r=Math.min(e,s),a=[];let o=0;for(let l=0;l<r;++l,o+=t)a.push(o);for(let l=r;l<e;++l)a.push(-1);return z(a.length===e,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(e,t,s,r){const a=e.length,o=[];for(let l=0;l<a-1;++l){const c=e[l+1]-e[l];let d=Math.min(r,c),f=t[l];f===-1&&(d=0);for(let p=0;p<d;++p)o.push(f),f+=s;for(let p=0;p<c-d;++p)o.push(-1)}if(a>0&&o.length!==e[a-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(e,t,s,r){const a=e.length,o=[];if(a===0)return[];let l=0,c=e[0];if(c>=t.length)throw new Error(`Got currentValueRowId=${c}, which is not less than ${t.length}`);let d=t[c];o.push(d);for(let f=1;f<a;++f){const p=e[f];if(p===c)d>=0&&(++l,l<r?d+=s:d=-1);else{if(l=0,c=p,p>=t.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${t.length}`);d=t[p]}o.push(d)}if(o.length!==e.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(e,t,s,r){const a=this.getRowPartitionTensor(e),o=this.getRowPartitionTypeByDimension(e);switch(o){case Gs.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,s,r);case Gs.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,s,r);default:throw new Error(`Unsupported partition type: ${Gs[o]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Gs.FIRST_DIM_SIZE:return e[0];case Gs.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Gs.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Gs[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let c=r.length-2;c>=0;--c)r[c]=r[c+1]*s[c+1];const a=rS(s,!1),o=sn(this.valuesDType,oe(a));if(r[0]*s[0]>0){let c=this.calculateFirstParentOutputIndex(t,r[0],s[0]);for(let d=1;d<=this.raggedRank;++d)c=this.calculateOutputIndex(d-1,c,r[d],s[d]);this.setOutput(this.raggedRank,c,o,a)}return[a,o]}setOutput(e,t,s,r){if(s.length===0)return;const a=this.values,o=s;let l=r.slice();l=l.slice(e+1);const c=oe(l),d=t.length;let f=this.defaultValue;if(f.length!==c&&f.length!==1){const x=this.defaultValueShape;Ge(()=>{const w=de(f,x);f=Tc(w,l).dataSync()})}let p=0,g=0,y=0;for(let x=0;x<=d;++x){let w=x<d?t[x]:-1;if(w===y){++y;continue}if(g<y){const S=a.subarray(p*c),$=o.subarray(g*c),N=(y-g)*c;sS($,S,N)}if(x>=d){const S=s.length;w=Math.floor(S/c)}if(w>y)if(this.defaultValue.length===1)o.subarray(y*c,w*c).fill(this.defaultValue[0]),y=w;else for(;w>y;){const S=o.slice(y*c);sS(S,f,c),++y}w<0?(p=x+1,g=y):(p=x,g=y,y=g+1)}}}function sS(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function rS(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function gM(n,e,t,s,r,a,o,l,c,d){return new of(n,e,t,s,r,a,o,l,c,d).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(n,e,t,s){const r=n===e,a=n<e&&t<0,o=e<n&&t>1;if(r||a||o)return ua(0,s);const l=Math.abs(Math.ceil((e-n)/t)),c=ua(l,s);e<n&&t===1&&(t=-1),c[0]=n;for(let d=1;d<c.length;d++)c[d]=c[d-1]+t;return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xM=ba(n=>1/Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bM(n,e,t,s,r,a,o,l,c,d){const f=[s/r,r],p=n.values,g=e.values;if(s===0)return xt(t,e.dtype);const y=c instanceof Lu?c:xt(f,e.dtype);typeof c=="string"||typeof c=="number"?y.values.fill(c):typeof c=="boolean"&&y.values.fill(+c);for(let x=0;x<a;x++){const w=[];let S=0;for(let $=0;$<o;$++){const N=p[x*o+$];w.push(N),S+=N*l[$]}if(S<0||S>=s/r)throw new Error(`Invalid indices: ${w} does not index into ${t}`);for(let $=0;$<r;$++)d?y.values[S*r+$]+=g[x*r+$]:y.values[S*r+$]=e.rank===0?g[0]:g[x*r+$]}return y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vM=ba(n=>1/(1+Math.exp(-n)));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wM(n,e,t,s,r){const a=E1(s,e,t),o=oe(t),l=Ut(s);if(a){const p=k1(e,l);return r==="string"?n.slice(p,p+o):n.subarray(p,p+o)}const c=r==="string"?oi(n):n,d=xt(s,r,c),f=xt(t,r);for(let p=0;p<f.size;++p){const g=f.indexToLoc(p),y=g.map((x,w)=>x+e[w]);f.set(d.get(...y),...g)}return r==="string"?sN(f.values):f.values}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SM(n,e,t,s,r,a,o){const l=e[0],c=a[0],d=new Array(c),f=new Array(l),p=e[1];if(c===0){if(l!==0)throw new Error(HT(l));const S=sn(t,0),$=sn(r,0);return[S,[0,p],$,d,f]}let g=!0,y=0;const x=new Array(c).fill(0);for(let S=0;S<l;++S){const $=n[S*p];if($<0)throw new Error(jT(S,$));if($>=c)throw new Error(qT(S,$,c));++x[$],g=g&&$>=y,y=$}let w=!0;for(let S=0;S<c;++S){const $=x[S]===0;d[S]=$,w=w&&!$,x[S]=Math.max(x[S],1),S>0&&(x[S]+=x[S-1])}if(w&&g){const S=n,$=s;for(let N=0;N<l;++N)f[N]=N;return[S,[l,p],$,d,f]}else{const S=x[c-1],$=sn(t,S*p),N=sn(r,S),I=new Array(c).fill(0);for(let _=0;_<l;++_){const O=n[_*p],M=I[O],W=(O===0?0:x[O-1])+M;I[O]++;for(let G=0;G<p;++G)$[W*p+G]=n[_*p+G];N[W]=s[_],f[_]=W}for(let _=0;_<c;++_)if(I[_]===0){const M=_===0?0:x[_-1];$[M*p+0]=_;for(let W=1;W<p;++W)$[M*p+W]=0;N[M]=o}return[$,[S,p],N,d,f]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CM(n,e,t,s,r){const a=oe(s),o=e[0],l=r.length,c=[];let d=1,f=-1;for(let S=0;S<l;++S){const $=r[S];if($===-1){if(f!==-1)throw new Error(XT(f,S));f=S,c.push(1)}else{if($<0)throw new Error(KT(S,$));d*=$,c.push($)}}if(f!==-1){if(d<=0)throw new Error(YT());const S=Math.trunc(a/d);if(d*S!==a)throw new Error(QT(s,c));c[f]=S}if(oe(c)!==a)throw new Error(ZT(s,c));const g=s.length,y=[];if(g>0){y[g-1]=1;for(let S=g-2;S>=0;--S)y[S]=y[S+1]*s[S+1]}const x=[];if(l>0){x[l-1]=1;for(let S=l-2;S>=0;--S)x[S]=x[S+1]*c[S+1]}const w=sn(t,o*l);for(let S=0;S<o;++S){let $=0;for(let N=0;N<g;++N)$+=n[S*g+N]*y[N];for(let N=0;N<l;++N)w[S*l+N]=Math.trunc($/x[N]),$%=x[N]}return[w,[o,l],c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $M(n,e,t,s,r,a=!1,o=0){const l=s.length,c=[e[0],n.length/e[0]],d=c[1],p=l>0?r[l-1]+1:0;if(p<0)throw new Error(Zg());const g=e.slice();g[0]=p;const y=g.reduce((I,_)=>I*_,1),x=sn(t,y);if(l===0)return p>0&&x.fill(o),[x,g];if(p<=0)throw new Error(Zg());let w=0,S=1,$=0,N=r[w];for(;;){let I=0;if(S<l){if(I=r[S],N===I){++S;continue}if(N>=I)throw new Error(JT())}if(N<0||N>=p)throw new Error(eN(N,p));N>$&&x.fill(o,$*d,N*d);for(let _=w;_<S;++_){const O=s[_];if(O<0||O>=c[0])throw new Error(tN(_,s[_],c[0]));for(let M=0;M<d;M++)x[N*d+M]+=n[O*d+M]}if(a)for(let _=0;_<d;_++)x[N*d+_]/=S-w;if(w=S,++S,$=N+1,N=I,S>l)break}return $<p&&x.fill(o,$*d,p*d),[x,g]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TM=ba(n=>Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NM=ts((n,e)=>{const t=n-e;return t*t});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EM=ba((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:r}=e;return n.replace(new RegExp(t,s?"g":""),r)});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(n,e,t,s){const r=xt(n,e.dtype);for(let a=0;a<r.size;a++){const o=r.indexToLoc(a),l=new Array(o.length);for(let c=0;c<l.length;c++)l[c]=o[c]*t[c]+s[c];r.set(e.get(...l),...o)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RM{constructor(e,t,s,r,a,o){this.separator=ti(e),this.nGramWidths=t,this.leftPad=ti(s),this.rightPad=ti(r),this.padWidth=a,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,r,a,o){for(let l=0;l<a;++l){const c=this.getPadWidth(o),d=Math.max(0,c-l),f=Math.max(0,c-(a-(l+1))),p=o-(d+f),g=t+(d>0?0:l-c);let y=0;y+=d*this.leftPad.length;for(let N=0;N<p;++N)y+=e[g+N].length;y+=f*this.rightPad.length;const x=d+f+p-1;y+=x*this.separator.length,s[r+l]=new Uint8Array(y);const w=s[r+l];let S=0;const $=N=>N.forEach(I=>w[S++]=I);for(let N=0;N<d;++N)$(this.leftPad),$(this.separator);for(let N=0;N<p-1;++N)$(e[g+N]),$(this.separator);if(p>0){$(e[g+p-1]);for(let N=0;N<f;++N)$(this.separator),$(this.rightPad)}else{for(let N=0;N<f-1;++N)$(this.rightPad),$(this.separator);$(this.rightPad)}}}compute(e,t){const s=e.length,r=t.length;if(r>0){let c=t[0];if(c!==0)throw new Error(`First split value must be 0, got ${c}`);for(let d=1;d<r;++d){let f=t[d]>=c;if(f=f&&t[d]<=s,!f)throw new Error(`Invalid split value ${t[d]}, must be in [${c}, ${s}]`);c=t[d]}if(c!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${c}`)}const a=r-1,o=sn("int32",r);if(s===0||r===0){const c=new Array(s);for(let d=0;d<=a;++d)o[d]=0;return[c,o]}o[0]=0;for(let c=1;c<=a;++c){const d=t[c]-t[c-1];let f=0;this.nGramWidths.forEach(p=>{f+=this.getNumNGrams(d,p)}),this.preserveShort&&d>0&&f===0&&(f=1),o[c]=o[c-1]+f}const l=new Array(o[a]);for(let c=0;c<a;++c){const d=t[c];let f=o[c];if(this.nGramWidths.forEach(p=>{const g=t[c+1]-t[c],y=this.getNumNGrams(g,p);this.createNGrams(e,d,l,f,y,p),f+=y}),this.preserveShort&&f===o[c]){const p=t[c+1]-t[c];if(p===0)continue;const g=p+2*this.padWidth;this.createNGrams(e,d,l,f,1,g)}}return[l,o]}}function IM(n,e,t,s,r,a,o,l){return new RM(t,s,r,a,o,l).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _M(n,e,t,s){if(!n.length)return;if(e.length===0){for(let a=0;a<n.length;++a)s.push(n.subarray(a,a+1));return}if(e.length===1){const a=e[0];let o=n.indexOf(a);for(;o!==-1;){const l=n.subarray(0,o);(!t||l.length!==0)&&s.push(l),n=n.subarray(o+1),o=n.indexOf(a)}(!t||n.length!==0)&&s.push(n);return}let r=0;for(let a=0;a<n.length+1;a++)if(a===n.length||e.indexOf(n[a])!==-1){const o=n.subarray(r,a);(!t||o.length!==0)&&s.push(o),r=a+1}}function AM(n,e,t){const s=n.length,r=[];let a=0,o=0;const l=new Array(s);for(let g=0;g<s;++g){const y=r.length;_M(n[g],e,t,r);const x=r.length-y;l[g]=x,a+=x,o=Math.max(o,x)}const c=sn("int32",a*2),d=new Array(a),f=[s,o];let p=0;for(let g=0;g<s;++g)for(let y=0;y<l[g];++y)c[p*2]=g,c[p*2+1]=y,d[p]=r[p],++p;return[c,d,f]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(n,e){const t=sn("int32",n.length);for(let s=0;s<n.length;++s)t[s]=YR(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OM=ts((n,e)=>n-e);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=xt(t,n.dtype);for(let r=0;r<s.values.length;++r){const a=s.indexToLoc(r),o=new Array(n.rank);for(let c=0;c<o.length;c++)o[c]=a[c]%n.shape[c];const l=n.locToIndex(o);s.values[r]=n.values[l]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wc=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function gN(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const l=s-t+1,c=e-t+1,d=Math.log(l),f=.5*Math.exp(2*d/3),p=.5*Math.sqrt(d*f*(l-f)/l)*Math.sign(c-l/2),g=Math.max(t,Math.floor(e-c*f/l+p)),y=Math.min(s,Math.floor(e+(l-c)*f/l+p));gN(n,e,g,y)}const r=n[e];let a=t,o=s;for(mc(n,t,e),wc(n[s],r)>0&&mc(n,t,s);a<o;){for(mc(n,a,o),a++,o--;wc(n[a],r)<0;)a=a+1;for(;wc(n[o],r)>0;)o=o-1}wc(n[t],r)===0?mc(n,t,o):(o=o+1,mc(n,o,s)),o<=e&&(t=o+1),e<=o&&(s=o-1)}}function FM(n,e,t,s,r){const a=e[e.length-1],[o,l]=[n.length/a,a],c=Ar(t,o*s),d=Ar("int32",o*s);for(let p=0;p<o;p++){const g=p*l,y=n.subarray(g,g+l);let x=new Array(y.length);y.forEach((N,I)=>x[I]={value:N,index:I}),s<x.length&&(gN(x,s),x=x.slice(0,s)),r&&x.sort(wc);const w=p*s,S=c.subarray(w,w+s),$=d.subarray(w,w+s);for(let N=0;N<s;N++)S[N]=x[N].value,$[N]=x[N].index}const f=e.slice();return f[f.length-1]=s,[xt(f,t,c),xt(f,"int32",d)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(n,e,t,s){const r=Pt(e,t)[0],a=[1,t[0],1];for(let x=0;x<r;x++)a[0]*=t[x];a[1]=t[r];for(let x=r+1;x<t.length;x++)a[2]*=t[x];const o=new Map,l=new Int32Array(t[r]),c=new Lu(a,s,n),d=[],f=a[0]===1&&a[2]===1;for(let x=0;x<t[r];x++){let w;if(f)w=n[x].toString();else{const $=[];for(let N=0;N<a[0];N++)for(let I=0;I<a[2];I++)$.push(c.get(N,x,I));w=$.join(",")}const S=o.get(w);if(S!=null)l[x]=S;else{const $=o.size;o.set(w,$),l[x]=$,d.push(x)}}const p=a.slice();p[1]=o.size;const g=new Lu(p,s);d.forEach((x,w)=>{for(let S=0;S<a[0];S++)for(let $=0;$<a[2];$++)g.set(c.get(S,x,$),S,w,$)});const y=t.slice();return y[r]=p[1],{outputValues:g.values,outputShape:y,indices:l}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yN=Object.freeze(Object.defineProperty({__proto__:null,addImpl:FB,bincountImpl:LB,bincountReduceImpl:zB,bitwiseAndImpl:BB,castImpl:PB,ceilImpl:MB,concatImpl:UB,equalImpl:VB,expImpl:WB,expm1Impl:GB,floorDivImpl:jB,floorImpl:HB,gatherNdImpl:qB,gatherV2Impl:XB,greaterEqualImpl:YB,greaterImpl:KB,lessEqualImpl:ZB,lessImpl:QB,linSpaceImpl:JB,logImpl:eM,maxImpl:tM,maximumImpl:nM,minimumImpl:sM,multiplyImpl:mN,negImpl:rM,notEqualImpl:aM,prodImpl:oM,raggedGatherImpl:pM,raggedRangeImpl:mM,raggedTensorToTensorImpl:gM,rangeImpl:yM,rsqrtImpl:xM,scatterImpl:bM,sigmoidImpl:vM,simpleAbsImpl:OB,sliceImpl:wM,sparseFillEmptyRowsImpl:SM,sparseReshapeImpl:CM,sparseSegmentReductionImpl:$M,sqrtImpl:TM,squaredDifferenceImpl:NM,staticRegexReplaceImpl:EM,stridedSliceImpl:kM,stringNGramsImpl:IM,stringSplitImpl:AM,stringToHashBucketFastImpl:DM,subImpl:OM,tileImpl:PM,topKImpl:FM,transposeImpl:iM,uniqueImpl:LM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:zM,bincountImpl:xN,bincountReduceImpl:BM,bitwiseAndImpl:MM,castImpl:UM,ceilImpl:VM,concatImpl:WM,equalImpl:GM,expImpl:HM,expm1Impl:jM,floorImpl:qM,gatherNdImpl:XM,gatherV2Impl:KM,greaterImpl:YM,greaterEqualImpl:QM,lessImpl:ZM,lessEqualImpl:JM,linSpaceImpl:eU,logImpl:tU,maxImpl:nU,maximumImpl:sU,minimumImpl:rU,multiplyImpl:aU,negImpl:iU,notEqualImpl:oU,prodImpl:uU,raggedGatherImpl:lU,raggedRangeImpl:cU,raggedTensorToTensorImpl:dU,rangeImpl:hU,rsqrtImpl:fU,scatterImpl:pU,sigmoidImpl:mU,simpleAbsImpl:bN,sliceImpl:gU,sparseFillEmptyRowsImpl:yU,sparseReshapeImpl:xU,sparseSegmentReductionImpl:vN,sqrtImpl:bU,staticRegexReplaceImpl:vU,stridedSliceImpl:wU,stringNGramsImpl:SU,stringSplitImpl:CU,stringToHashBucketFastImpl:$U,subImpl:TU,tileImpl:NU,topKImpl:EU,transposeImpl:nb,uniqueImpl:kU}=yN;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wN(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function Vn(n,e){return e===1?[n]:wN(n,e)}function RU(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IU{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Dn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=Vn("rc",this.rank),s=wt(this.rank),r=this.getOutOfBoundsCondition(t),a=this.getSetup(t),o=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${o}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let o=2;o<this.rank;o++)a=`${e[e.length-1-o]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length);let s="";for(let r=0;r<4;r++){let a="thisRC = rc;";r%2===1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),s+=`
        ${a}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${_U(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?eb():J1(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function _U(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?T4(["r","c","d"],"inputShape"):Eo(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let AU=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const r=iS(t,s),a=oS(e,r,s);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const o=aS(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const c=this.freeTextures[a].pop();return this.usedTextures[a].push(c),c}let l;return r===bn.PACKED_2X2_FLOAT32?l=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===bn.PACKED_2X2_FLOAT16?l=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===bn.UNPACKED_FLOAT32?l=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===bn.UNPACKED_FLOAT16?l=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===bn.PACKED_4X1_UNSIGNED_BYTE&&(l=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(l),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),l}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const a=iS(s,r),o=oS(t,a,r);o in this.freeTextures||(this.freeTextures[o]=[]);const l=aS(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),c=ee().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");c!==-1&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=l):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=l),this.numUsedTextures--;const d=this.usedTextures[o],f=d&&d.indexOf(e);if(f==null||f<0)throw new Error("Cannot release a texture that was never provided by this texture manager");d[f]=d[d.length-1],d.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function DU(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function aS(n,e,t,s,r){const a=OU(e,s);let o;if(r){const[c,d]=Qu(n[0],n[1]);o=c*d}else{const[c,d]=Jc(n[0],n[1]);o=c*d}const l=DU(t,a);return o*l}function OU(n,e){switch(n){case bn.PACKED_2X2_FLOAT32:return fN(e);case bn.PACKED_2X2_FLOAT16:return pN(e);case bn.UNPACKED_FLOAT32:return cN(e);case bn.UNPACKED_FLOAT16:return dN(e);case bn.PACKED_4X1_UNSIGNED_BYTE:return hN(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function PU(n){return ee().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?bn.PACKED_2X2_FLOAT32:bn.UNPACKED_FLOAT32:n?bn.PACKED_2X2_FLOAT16:bn.UNPACKED_FLOAT16}function iS(n,e){if(n===Ts.UPLOAD)return bn.PACKED_2X2_FLOAT32;if(n===Ts.RENDER||n==null)return PU(e);if(n===Ts.DOWNLOAD||n===Ts.PIXELS)return bn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function oS(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kr=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}};const Js="if (isnan(x)) return x;",FU="return x;",uS="return abs(x);",LU="return (x >= 0.0) ? x : (exp(x) - 1.0);",zU=Js+`
  return (x < 0.0) ? 0.0 : x;
`,BU=Js+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ya="return x;",MU="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UU="return x;",VU=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,WU=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,GU=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,HU="return 1.0 / (1.0 + exp(-1.0 * x));";class Za{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jU{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length);const t=e.length,s=Vn("rc",t),r=wt(t),a=RU(t,s),o=s.slice(-2),l=t<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${l}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qU=bT,XU=1e-7,KU=1e-4,_h={};function YU(n){return n in _h||(_h[n]={}),_h[n]}const QU=ee().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),ZU=600;function JU(){return ee().global.screen==null?1024:ee().global.screen.height*ee().global.screen.width*window.devicePixelRatio*ZU/1024/1024}class Ff extends Sy{nextDataId(){return Ff.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ee().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof yg)t=e;else{const s=pr(ee().getNumber("WEBGL_VERSION"),e);t=new yg(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=pr(ee().getNumber("WEBGL_VERSION"));t=new yg(s),this.binaryCache=YU(ee().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new AU(this.gpgpu),this.numMBBeforeWarning=JU(),this.texData=new RC(this,ls())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,r,a,o){const l=this.makeTensorInfo(t,s),c=this.texData.get(l.dataId);c.isPacked=!1,c.texture={texture:e,texShape:[r,a]},c.texShape=[r,a];const d=Rh(t),f=new eS(d,!1,o),p=this.runWebGLProgram(f,[l],s,[[r,a]]);return p.shape=t,c.texture=null,this.disposeIntermediateTensorInfo(l),p.dataId}write(e,t,s){if((ee().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ee().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:Ts.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,r,a){if(ee().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:Ts.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:a,slice:o,shape:l,isPacked:c}=t;if(o!=null){let g;c?g=new Za(l,Ya):g=new kr(l,Ya);const y=this.runWebGLProgram(g,[{dataId:e,shape:l,dtype:r}],r),x=this.readSync(y.dataId);return this.disposeIntermediateTensorInfo(y),x}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const d=this.activeTimers!=null;let f;d&&(f=cr());let p;if(r==="complex64"){const g=this.readSync(a.real.dataId),y=this.readSync(a.imag.dataId);p=Lc(g,y)}else p=this.getValuesFromTexture(e);return d&&(this.downloadWaitMs+=cr()-f),this.convertAndCacheOnCPU(e,p)}async read(e){if(this.pendingRead.has(e)){const x=this.pendingRead.get(e);return new Promise(w=>x.push(w))}const t=this.texData.get(e),{values:s,shape:r,slice:a,dtype:o,complexTensorInfos:l,isPacked:c}=t;if(a!=null){let x;c?x=new Za(r,Ya):x=new kr(r,Ya);const w=this.runWebGLProgram(x,[{dataId:e,shape:r,dtype:o}],o),S=this.read(w.dataId);return this.disposeIntermediateTensorInfo(w),S}if(s!=null)return this.convertAndCacheOnCPU(e);if(ee().getBool("DEBUG")&&!ee().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&ee().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let d=null,f;if(o!=="complex64"&&ee().get("WEBGL_BUFFER_SUPPORTED")){f=this.decode(e);const x=this.texData.get(f.dataId);d=this.gpgpu.createBufferFromTexture(x.texture.texture,...Nh(r))}this.pendingRead.set(e,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(o==="complex64"){const x=await Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),w=x[0],S=x[1];p=Lc(w,S)}else if(d==null)p=this.getValuesFromTexture(e);else{const x=oe(r);p=this.gpgpu.downloadFloat32MatrixFromBuffer(d,x)}if(f!=null&&this.disposeIntermediateTensorInfo(f),d!=null){const x=this.gpgpu.gl;_e(x,()=>x.deleteBuffer(d))}const g=this.convertAndCacheOnCPU(e,p),y=this.pendingRead.get(e);return this.pendingRead.delete(e),y.forEach(x=>x(g)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ls().removeDataId(e,this),this.pendingDeletes--),g}readToGPU(e,t={}){const s=this.texData.get(e),{values:r,shape:a,slice:o,dtype:l,isPacked:c,texture:d}=s;if(l==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let y;c?y=new Za(a,Ya):y=new kr(a,Ya);const x=this.runWebGLProgram(y,[{dataId:e,shape:a,dtype:l}],l),w=this.readToGPU(x,t);return this.disposeIntermediateTensorInfo(x),w}if(d==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const f=this.decode(e,t.customTexShape),p=ls().makeTensorFromTensorInfo(f),g=this.texData.get(f.dataId);return Object.assign({tensorRef:p},g.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>la(r));return xt(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return xt(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!Zz(s))throw ee().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),a=oe(t);if(ee().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const g=this.decode(e),y=this.texData.get(g.dataId),x=this.gpgpu.downloadMatrixFromPackedTexture(y.texture.texture,...Nh(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(g),x}const o=ee().getBool("WEBGL_PACK")&&r===!0,l=o?Rh(t):t,c=o?new pB(l):new fB(l),d=this.runWebGLProgram(c,[{shape:l,dtype:s,dataId:e}],"float32"),f=this.texData.get(d.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(f.texture.texture,f.texShape[0],f.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(d),p}timerAvailable(){return ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const a=ca(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),o=ca(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const c=await Promise.all(a);l.kernelMs=IC(c),l.getExtraProfileInfo=()=>c.map((d,f)=>({name:o[f],ms:d})).map(d=>`${d.name}: ${d.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:cr(),endMs:null}}endTimer(e){return ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=cr(),e)}async getQueryTime(e){if(ee().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:a,isPacked:o,slice:l}=this.texData.get(e),c=l&&l.origDataId||e,d=this.dataRefCount.get(c);d>1?this.dataRefCount.set(c,d-1):(this.dataRefCount.delete(c),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,a,o)));const f=this.texData.get(e);f.texture=null,f.texShape=null,f.isPacked=!1,f.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=QU){return ee().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&oe(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){fr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return qU(e.shape,t)}packedUnaryOp(e,t,s){const r=new Za(e.shape,t),a=this.compileAndRun(r,[e],s);return ls().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=bN(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(ee().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,uS,e.dtype);const t=new kr(e.shape,uS),s=this.compileAndRun(t,[e]);return ls().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Hc(s[0])){const a=s.map(o=>ti(o));r=this.write(a,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){return ls().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new jU(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new IU(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[Vu(e.shape),...Wu(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[Vu(t),...Wu(t)],o=new SN(a,s),l=!0,c=[s],d=this.runWebGLProgram(o,[r],e.dtype,c,l);return{dataId:d.dataId,shape:t,dtype:d.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:r,shape:a,dtype:o}=s;if(t!=null){const g=oe(a),y=t[0]*t[1]*4;z(g<=y,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const l=Rh(a);let c;r?c=new hB(l):c=new dB(l);const d=!0,f=[t??Nh(l)],p=this.runWebGLProgram(c,[{shape:l,dtype:o,dataId:e}],o,f,d,t);return{dtype:o,shape:a,dataId:p.dataId}}runWebGLProgram(e,t,s,r,a=!1,o){const l=this.makeTensorInfo(e.outputShape,s),c=this.texData.get(l.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===zc.DENSE){const $=o??Nh(e.outputShape);c.texShape=$.map(N=>N*2)}if(e.outTexUsage!=null&&(c.usage=e.outTexUsage),oe(l.shape)===0)return c.values=Ar(l.dtype,0),l;const d=[],f=t.map($=>{if($.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let N=this.texData.get($.dataId);if(N.texture==null){if(!e.packedInputs&&oe($.shape)<=ee().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:$.shape,texData:null,isUniform:!0,uniformValues:N.values};e.packedInputs&&(N.isPacked=!0,N.shape=$.shape)}if(this.uploadToGPU($.dataId),!!N.isPacked!=!!e.packedInputs)$=N.isPacked?this.unpackTensor($):this.packTensor($),d.push($),N=this.texData.get($.dataId);else if(N.isPacked&&!af(N.shape,$.shape)){const I=$,_=$.shape;$.shape=N.shape,$=this.packedReshape($,_),d.push($),N=this.texData.get($.dataId),I.shape=_}return{shape:$.shape,texData:N,isUniform:!1}});this.uploadToGPU(l.dataId);const p={shape:l.shape,texData:c,isUniform:!1},g=cB(e,f,p),y=this.getAndSaveBinary(g,()=>uB(this.gpgpu,e,f,p)),x=this.activeTimers!=null;let w;x&&(w=this.startTimer()),ee().get("ENGINE_COMPILE_ONLY")||lB(this.gpgpu,y,f,p,r),d.forEach($=>this.disposeIntermediateTensorInfo($)),x&&(w=this.endTimer(w),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(w)}));const S=ee().getNumber("WEBGL_FLUSH_THRESHOLD");if(S>0){const $=cr();$-this.lastGlFlushTime>S&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=$)}if(!ee().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&a===!1){const $=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),$}return l}compileAndRun(e,t,s,r,a=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(ee().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Ge(()=>{if(!ee().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=ee().getBool("DEBUG");ee().set("DEBUG",!1);const t=this.abs(Je(1e-8)).dataSync()[0];if(ee().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?XU:KU}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:a,texture:o,usage:l,isPacked:c}=t;if(o!=null)return;const d=this.activeTimers!=null;let f;d&&(f=cr());let p=t.texShape;if(p==null&&(p=g4(s,c),t.texShape=p),a!=null){const g=Rh(s);let y,x=p[1],w=p[0];const S=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(c||!S)&&([x,w]=Qu(p[0],p[1])),c?y=new gB(g,S):y=new eS(g,S);const $=S?[w,x]:p,N=this.makeTensorInfo($,r),I=this.texData.get(N.dataId);S?I.usage=Ts.PIXELS:I.usage=Ts.UPLOAD,I.texShape=$,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(N.dataId),x,w,a);const _=[[w,x]],M=this.runWebGLProgram(y,[N],r,_,!0),W=this.texData.get(M.dataId);t.texShape=W.texShape,t.isPacked=W.isPacked,t.usage=W.usage,ee().get("ENGINE_COMPILE_ONLY")?this.disposeData(M.dataId):(t.texture=W.texture,t.values=null,this.texData.delete(M.dataId)),this.disposeIntermediateTensorInfo(N),d&&(this.uploadWaitMs+=cr()-f)}else{const g=this.acquireTexture(p,l,r,c);t.texture=g}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return t!=null&&(s.values=eV(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*qh(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(a){throw a}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Az(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(rN(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:r,nanLoc:a,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:c}=lN(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=c}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:r,height:a,width:o,channels:l}=e,c=ls().backend;if(!c.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const d=c.writeTexture(r,t,s,a,o,l);return ls().makeTensorFromDataId(d,t,s,c)}}Ff.nextDataId=0;function eV(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */v$()&&C$("webgl",()=>new Ff,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sb=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;let So=class{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=Ye(t,s),this.enableShapeUniforms=Dn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ro=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class nl{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ye(t,s);const a=this.outputShape.length;this.enableShapeUniforms=Dn(a);let o="";if(r)if(a===0||oe(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          ${wt(a)} coords = getOutputCoords();
        `,a===1)this.enableShapeUniforms?o+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:o+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const c=Vn("coords",a);this.enableShapeUniforms?o+=`
            bool nextRowOutOfBounds =
              (${c[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${c[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:o+=`
            bool nextRowOutOfBounds =
              (${c[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${c[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${o}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cs(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const tV={kernelName:bf,backendName:"webgl",kernelFunc:cs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hi(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,a=t.makeTensorInfo(s.shape,"complex64"),o=t.texData.get(a.dataId),l=cs({inputs:{x:s},backend:t}),c=cs({inputs:{x:r},backend:t});return o.complexTensorInfos={real:l,imag:c},a}const nV={kernelName:qy,backendName:"webgl",kernelFunc:hi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CN="return (a < 0.) ? b * a : a;",$N=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function sV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:a}=s,o=t.makeTensorInfo([],"float32",Ku(a,"float32")),l=ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nl($N,r.shape,o.shape):new So(CN,r.shape,o.shape),c=t.runWebGLProgram(l,[r,o],"float32");return t.disposeIntermediateTensorInfo(o),c}const rV={kernelName:Fx,backendName:"webgl",kernelFunc:sV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TN="return (a < 0.) ? b * a : a;",NN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function aV(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,a=ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nl(NN,s.shape,r.shape):new So(TN,s.shape,r.shape);return t.runWebGLProgram(a,[s,r],"float32")}const iV={kernelName:f0,backendName:"webgl",kernelFunc:aV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sl="if (isnan(x)) return x;";function lt({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:a})=>{const{x:o}=r,l=a,c=s||o.dtype;if(l.shouldExecuteOnCPU([o])&&t!=null){const p=l.texData.get(o.dataId),g=t(p.values,c);return l.makeTensorInfo(o.shape,c,g)}const d=ee().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let f;return d?f=new Za(o.shape,e):f=new kr(o.shape,n),l.runWebGLProgram(f,[o],c)}}function wn({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:l})=>{const{a:c,b:d}=o,f=l;if(s&&c.dtype==="complex64"){const x=f.texData.get(c.dataId),w=f.texData.get(d.dataId),[S,$]=[[x.complexTensorInfos.real,w.complexTensorInfos.real],[x.complexTensorInfos.imag,w.complexTensorInfos.imag]].map(I=>{const[_,O]=I,M={dataId:_.dataId,dtype:_.dtype,shape:c.shape},W={dataId:O.dataId,dtype:O.dtype,shape:d.shape},G=new So(n,c.shape,d.shape);return f.runWebGLProgram(G,[M,W],Jn(_.dtype,O.dtype))}),N=hi({inputs:{real:S,imag:$},backend:f});return f.disposeIntermediateTensorInfo(S),f.disposeIntermediateTensorInfo($),N}const p=a||Jn(c.dtype,d.dtype);if((c.dtype==="string"||d.dtype==="string"||f.shouldExecuteOnCPU([c,d]))&&r!=null){const x=f.texData.get(c.dataId).values,w=f.texData.get(d.dataId).values,S=c.dtype==="string"?oi(x):x,$=c.dtype==="string"?oi(w):w,[N,I]=r(c.shape,d.shape,S,$,p),_=f.makeTensorInfo(I,p),O=f.texData.get(_.dataId);return O.values=N,_}const g=ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let y;return g?y=new nl(e,c.shape,d.shape,t):y=new So(n,c.shape,d.shape),f.runWebGLProgram(y,[c,d],p)}}function Bc(n,e=!1){if(n==="linear")return e?UU:FU;if(n==="relu")return e?WU:zU;if(n==="elu")return e?VU:LU;if(n==="relu6")return e?GU:BU;if(n==="prelu")return e?NN:TN;if(n==="leakyrelu")return e?$N:CN;if(n==="sigmoid")return e?HU:MU;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let EN=class{constructor(e,t,s,r=!1,a=!1,o=!1,l=null,c=!1,d=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Dn(this.outputShape.length);const f=r?e[1]:e[2],p=Math.ceil(f/2),g=r?"i * 2, rc.y":"rc.y, i * 2",y=a?"rc.z, i * 2":"i * 2, rc.z",x=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],w=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let S="",$="";l&&(c?S=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${l}
        }`:d?S=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${l}
        }`:S=`vec4 activation(vec4 x) {
          ${l}
        }`,$="result = activation(result);");const N=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),d&&this.variableNames.push("leakyreluAlpha");let I="rc.x",_="rc.x";e[0]<t[0]?I=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(_=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${S}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${I};
        int batchB = ${_};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${g});
          vec4 b = getMatrixB(batchB, ${y});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${x[0]} * ${w[0]});
          result += (${x[1]} * ${w[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${N}

        ${$}

        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lS={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};let cS=class{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ye(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dS="return a * b;";function rb(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,a=Jn(s.dtype,r.dtype);if(s.dtype==="complex64"){const l=t.texData.get(s.dataId),c=t.texData.get(r.dataId),d=new cS(lS.REAL,s.shape,r.shape),f=new cS(lS.IMAG,s.shape,r.shape),p=[{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:s.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:r.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:r.shape}],g=t.runWebGLProgram(d,p,"float32"),y=t.runWebGLProgram(f,p,"float32"),x=hi({inputs:{real:g,imag:y},backend:t});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),x}if(t.shouldExecuteOnCPU([s,r])){const l=t.texData.get(s.dataId),c=t.texData.get(r.dataId),[d,f]=aU(s.shape,r.shape,l.values,c.values,a),p=t.makeTensorInfo(f,a),g=t.texData.get(p.dataId);return g.values=d,p}let o;return ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new nl(dS,s.shape,r.shape):o=new So(dS,s.shape,r.shape),t.runWebGLProgram(o,[s,r],a)}const oV={kernelName:s0,backendName:"webgl",kernelFunc:rb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(n,e,t){const s=[Vu(n.shape),...Wu(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},a=[Vu(e),...Wu(e)],o=new SN(a,s),l=!0,c=[s],d=t.runWebGLProgram(o,[r],n.dtype,c,l);return{dataId:d.dataId,shape:e,dtype:d.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:a}=s,o=t,l=oe(r.shape),c=_C(a,l),d=oe(c);z(l===d,()=>`The new shape (${c}) has ${d} elements and the old shape (${r.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`);const f=o.texData.get(r.dataId);return f.isPacked&&!af(r.shape,c)&&!(f.texture!==null&&af(f.shape,c))?uV(r,c,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:c,dtype:r.dtype})}const lV={kernelName:b0,backendName:"webgl",kernelFunc:Ee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hS{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:a,outSize:o}=e;this.outputShape=[r,o];const l=Math.floor(s/4)*4,c=s%4;let d="sumValue += dot(values, ones);";if(t!=null){const p=1/t;d=`sumValue += dot(values * ${Fu(p)?p.toPrecision(2):p}, ones);`}let f="";a%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${l};
        if (${c===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${d}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${d}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${d}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cV=class{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:a,outSize:o}=e;this.outputShape=[r,o];let l="0.0",c="";t==="prod"?l="1.0":t==="min"?(l="1.0 / 1e-20",c="min"):t==="max"&&(l="-1.0 / 1e-20",c="max");let d=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?d="sumValue":t==="prod"?d="prodValue":t==="all"?d="allValue":t==="any"&&(d="anyValue");const f=Math.floor(s/4)*4,p=s%4;let g=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${c}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${c}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,y="vec4";t==="all"?(l="1.0",g=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,y="bvec4"):t==="any"&&(l="0.0",g=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,y="bvec4");let x="";a%s>0&&(x=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${l};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${x}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${l});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${f}; i += 4) {
          int inIdx = inOffset + i;
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${g}
        }

        int inIdx = inOffset + ${f};
        if (${p===1}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${g}
        } else if (${p===2}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${g}
        } else if (${p===3}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${g}
        }
        setOutput(${d});
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=Of(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Io(n,e,t,s){const r=dV(n.shape);let a=n;for(let o=0;o<r.length;o++){const{inSize:l,windowSize:c,outSize:d}=r[o];let f,p;t==="mean"?f=o===0?new hS({windowSize:c,inSize:l,batchSize:n.shape[0],outSize:d},l):new hS({windowSize:c,inSize:l,batchSize:n.shape[0],outSize:d}):f=new cV({windowSize:c,inSize:l,batchSize:n.shape[0],outSize:d},t),p=a,a=s.runWebGLProgram(f,[a],e),p.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(p)}return a}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let hV=class{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let o=0;o<s.length;o++)s[o]=e[t[o]];this.outputShape=s,this.rank=s.length;const r=wt(this.rank),a=fV(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}};function fV(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pV{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let f=0;f<s.length;f++)s[f]=e[t[f]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=wt(this.rank),a=wN("rc",this.rank),o=new Array(this.rank);for(let f=0;f<t.length;f++)o[t[f]]=a[f];const l=`vec2(${o.slice(-2).join()})`,c=`++${a[this.rank-1]} < ${s[this.rank-1]}`,d=`getChannel(getA(${o.join()}), ${l})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${d};
      if(${c}) {
        result[1] = ${d};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${d};
        if(${c}) {
          result[3] = ${d};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lf(n,e,t){const s=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pV(n.shape,e):new hV(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(n,e,t,s){const r=e,a=n.shape.length,o=Pt(r,n.shape);let l=o;const c=_n(l,a),d=c!=null;let f=n;d&&(f=Lf(n,c,s),l=An(l.length,a)),ps("sum",l,a);const[p,g]=ks(f.shape,l);let y=p;t&&(y=fs(p,o));const x=oe(g),S=oe(n.shape)/x,$=Ee({inputs:{x:f},attrs:{shape:[S,x]},backend:s}),N=Cf(n.dtype),I=Io($,N,"sum",s),_=Ee({inputs:{x:I},attrs:{shape:y},backend:s});return s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(I),d&&s.disposeIntermediateTensorInfo(f),_}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zf(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s;return mV(r,a,o,t)}const gV={kernelName:z0,backendName:"webgl",kernelFunc:zf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:a}=s,o=t,l=r.shape.length,c=new Array(l);for(let f=0;f<c.length;f++)c[f]=r.shape[a[f]];let d;if(o.shouldExecuteOnCPU([r])){const p=o.texData.get(r.dataId).values,g=nb(p,r.shape,r.dtype,a,c);d=o.makeTensorInfo(c,r.dtype);const y=o.texData.get(d.dataId);y.values=g}else d=Lf(r,a,o);return d}const yV={kernelName:$c,backendName:"webgl",kernelFunc:Wn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kN=1e3;function uf({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:c=null}){const d=n.shape.length,f=e.shape.length,p=t?n.shape[d-2]:n.shape[d-1],g=s?e.shape[f-1]:e.shape[f-2],y=t?n.shape[d-1]:n.shape[d-2],x=s?e.shape[f-2]:e.shape[f-1],w=n.shape.slice(0,-2),S=e.shape.slice(0,-2),$=oe(w),N=oe(S),_=Ye(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([y,x]);z(p===g,()=>`Error in matMul: inner shapes (${p}) and (${g}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const O=t?[$,p,y]:[$,y,p],M=s?[N,x,g]:[N,g,x],W=Ee({inputs:{x:n},backend:r,attrs:{shape:O}}),G=Ee({inputs:{x:e},backend:r,attrs:{shape:M}}),F=[W,G],B=Math.max($,N),D=t?W.shape[1]:W.shape[2],Q=a!=null,re=o!=null,he=c==="leakyrelu",le=c!=null?Bc(c,!0):null,ne=Q||re||he||le!=null;let ge;if((y===1||x===1)&&D>kN&&ne===!1){let Se=W,q=G;t&&(Se=Wn({inputs:{x:W},backend:r,attrs:{perm:[0,2,1]}}),F.push(Se)),s&&(q=Wn({inputs:{x:G},backend:r,attrs:{perm:[0,2,1]}}),F.push(q));const ue=x!==1,Te=x===1;let ke=Se;ue&&(ke=Ee({inputs:{x:Se},backend:r,attrs:{shape:[B,D,1]}}),F.push(ke));const ve=x===1?2:1;let Xe=q;Te&&(Xe=Ee({inputs:{x:q},backend:r,attrs:{shape:[B,1,D]}}),F.push(Xe));const Be=rb({inputs:{a:ke,b:Xe},backend:r});ge=zf({inputs:{x:Be},backend:r,attrs:{axis:ve,keepDims:!0}}),F.push(Be)}else{const Se=Jn(n.dtype,e.dtype),q=new EN(O,M,[B,y,x],t,s,Q,le,re,he),ue=[W,G];if(a!=null&&ue.push(a),re&&ue.push(o),he){const Te=r.makeTensorInfo([],"float32",Ku(l,"float32"));ue.push(Te),F.push(Te)}ge=r.runWebGLProgram(q,ue,Se)}const pe=Ee({inputs:{x:ge},backend:r,attrs:{shape:_}});F.push(ge);for(const Se of F)r.disposeIntermediateTensorInfo(Se);return pe}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xV(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:a,bias:o,preluActivationWeights:l}=e,{transposeA:c,transposeB:d,activation:f,leakyreluAlpha:p}=s;return uf({a:r,b:a,transposeA:c,transposeB:d,backend:t,bias:o,preluActivationWeights:l,leakyreluAlpha:p,activation:f})}const bV={kernelName:Kh,backendName:"webgl",kernelFunc:xV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fS="return abs(x);";function vV(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const a=t.texData.get(s.dataId),o=bN(a.values);return t.makeTensorInfo(s.shape,s.dtype,o)}let r;return ee().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Za(s.shape,fS):r=new kr(s.shape,fS),t.runWebGLProgram(r,[s],s.dtype)}const wV={kernelName:Ny,backendName:"webgl",kernelFunc:vV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SV=Js+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,CV=lt({opSnippet:SV}),$V={kernelName:Ey,backendName:"webgl",kernelFunc:CV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TV=Js+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,NV=lt({opSnippet:TV}),EV={kernelName:ky,backendName:"webgl",kernelFunc:NV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pS="return a + b;",kV=wn({opSnippet:pS,packedOpSnippet:pS,supportsComplex:!0,cpuKernelImpl:zM}),RV={kernelName:yf,backendName:"webgl",kernelFunc:kV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IV{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((a,o)=>`T${o}`);const s=[];this.variableNames.forEach(a=>{s.push(`float v${a} = get${a}AtOutCoords();`)});const r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _V=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((a,o)=>`T${o}`);const s=[];this.variableNames.forEach(a=>{s.push(`vec4 v${a} = get${a}AtOutCoords();`)});const r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wh(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return cs({inputs:{x:s[0]},backend:t});if(s.length>ee().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const c=Math.floor(s.length/2),d=Wh({inputs:s.slice(0,c),backend:t}),f=Wh({inputs:s.slice(c),backend:t});return Wh({inputs:[d,f],backend:t})}const r=s.map(c=>c.dtype).reduce((c,d)=>Jn(c,d)),a=s.map(c=>c.shape),l=ee().getBool("WEBGL_PACK")?new _V(s[0].shape,a):new IV(s[0].shape,a);return t.runWebGLProgram(l,s,r)}const AV={kernelName:Ry,backendName:"webgl",kernelFunc:Wh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s,l=r.shape.length,c=Pt(a,r.shape);let d=c;const f=_n(d,l);let p=r;f!=null&&(p=Wn({inputs:{x:r},backend:t,attrs:{perm:f}}),d=An(d.length,l)),ps("all",d,l);const[g,y]=ks(p.shape,d),x=oe(y),w=Ee({inputs:{x:p},backend:t,attrs:{shape:[-1,x]}}),S=Io(w,w.dtype,"all",t);let $;if(o){const N=fs(g,c);$=Ee({inputs:{x:S},backend:t,attrs:{shape:N}})}else $=Ee({inputs:{x:S},backend:t,attrs:{shape:g}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(S),f!=null&&t.disposeIntermediateTensorInfo(p),$}const OV={kernelName:Iy,backendName:"webgl",kernelFunc:DV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s,l=r.shape.length,c=Pt(a,r.shape);let d=c;const f=_n(d,l);let p=r;f!=null&&(p=Wn({inputs:{x:r},backend:t,attrs:{perm:f}}),d=An(d.length,l)),ps("any",d,l);const[g,y]=ks(p.shape,d),x=oe(y),w=Ee({inputs:{x:p},backend:t,attrs:{shape:[-1,x]}}),S=Io(w,w.dtype,"any",t);let $;if(o){const N=fs(g,c);$=Ee({inputs:{x:S},backend:t,attrs:{shape:N}})}else $=Ee({inputs:{x:S},backend:t,attrs:{shape:g}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(S),f!=null&&t.disposeIntermediateTensorInfo(p),$}const FV={kernelName:_y,backendName:"webgl",kernelFunc:PV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let LV=class{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:o}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[a,o];const l=t==="max"?">":"<",c=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${c};
          float candidate = getA(batch, inIdx);
          if (candidate ${l} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zV{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,z(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const a=e[e.length-1],o=Math.ceil(a/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const l=this.outputShape,c=l.length,d=wt(c),f=Vn("coords",c);let p,g;if(o===1){g=c+1;const G=wt(g);p=`
        ${G} sourceLocR = ${G}(${f.join()}, 0);
        ++${f[c-1]};
        ${G} sourceLocG = ${G}(${f.join()}, 0);
        ++${f[c-2]};
        ${G} sourceLocA = ${G}(${f.join()}, 0);
        --${f[c-1]};
        ${G} sourceLocB = ${G}(${f.join()}, 0);
        --${f[c-2]};`}else g=c,p=`
        ${d} sourceLocR = coords;
        ++${f[c-1]};
        ${d} sourceLocG = coords;
        ++${f[c-2]};
        ${d} sourceLocA = coords;
        --${f[c-1]};
        ${d} sourceLocB = coords;
        --${f[c-2]};`;const y=["x","y","z","w","u","v"].slice(0,g),x="."+y[g-1],w=y.map(G=>"int "+G),S=Vn("sourceLocR",g-1).concat("inIdx.r"),$=Vn("sourceLocG",g-1).concat("inIdx.g"),N=Vn("sourceLocB",g-1).concat("inIdx.b"),I=Vn("sourceLocA",g-1).concat("inIdx.a"),_=s==="max"?"greaterThan":"lessThan",O=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${S.join()}),
                             getBestIndicesAChannel(${$.join()}),
                             getBestIndicesAChannel(${N.join()}),
                             getBestIndicesAChannel(${I.join()})));`,M=`vec4(
            getAChannel(${S.join()}),
            hasNextCol ? getAChannel(${$.join()}) : 0.,
            hasNextRow ? getAChannel(${N.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${I.join()}) : 0.)`,W=r?"":`
      float getBestIndicesAChannel(${w.join()}) {
        return getChannel(getBestIndicesA(${y.join()}),
                                          vec2(${y.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${w.join()}) {
        return getChannel(getA(${y.join()}),
                               vec2(${y.slice(-2).join()}));
      }
      ${W}
      void main() {
        ${d} coords = getOutputCoords();
        bool hasNextCol = ${f[c-1]} < ${l[c-1]-1};
        bool hasNextRow = ${f[c-2]} < ${l[c-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${x}, sourceLocG${x},
          sourceLocB${x}, sourceLocA${x}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${M};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${O}
          vec4 candidate = ${M};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${_}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RN(n,e,t,s=null){let r=e.shape[0],a=e.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);const o=Of(a),l={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},c=new LV(l,t,s==null),d=[e];s!=null&&d.push(s);const f=n.runWebGLProgram(c,d,"int32");if(f.shape[1]===1)return f;const p=RN(n,e,t,f);return n.disposeIntermediateTensorInfo(f),p}function IN(n,e,t,s=null){const r=s!=null?s.shape:e.shape,a=r[r.length-1],o=Of(a),l=new zV(r,o,t,s==null),c=s==null?[e]:[e,s],d=n.runWebGLProgram(l,c,"int32");if(d.shape.length===e.shape.length){const f=IN(n,e,t,d);return n.disposeIntermediateTensorInfo(d),f}return d}function _N(n,e,t,s){const r=[t];if(ps("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!ee().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const a=[],o=n.texData.get(e.dataId),l=o!==null&&o.isPacked;let c=e;l&&(c=n.unpackTensor(e),a.push(c));const[d,f]=ks(c.shape,r),p=oe(f),g=Ee({inputs:{x:c},backend:n,attrs:{shape:[-1,p]}});a.push(g);const y=RN(n,g,s);a.push(y);const x=Ee({inputs:{x:y},backend:n,attrs:{shape:d}});return a.forEach(w=>n.disposeIntermediateTensorInfo(w)),x}return IN(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a}=s;let o=Pt(a,r.shape);const l=_n(o,r.shape.length);let c=r;const d=[];l!=null&&(c=Wn({inputs:{x:r},backend:t,attrs:{perm:l}}),d.push(c),o=An(o.length,c.shape.length)),ps("argMax",[o[0]],c.shape.length);const f=_N(t,c,o[0],"max");return d.forEach(p=>t.disposeIntermediateTensorInfo(p)),f}const MV={kernelName:Ay,backendName:"webgl",kernelFunc:BV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a}=s;let o=Pt(a,r.shape);const l=_n(o,r.shape.length);let c=r;const d=[];l!=null&&(c=Wn({inputs:{x:r},backend:t,attrs:{perm:l}}),d.push(c),o=An(o.length,c.shape.length)),ps("argMin",[o[0]],c.shape.length);const f=_N(t,c,o[0],"min");return d.forEach(p=>t.disposeIntermediateTensorInfo(p)),f}const VV={kernelName:Dy,backendName:"webgl",kernelFunc:UV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WV=Js+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,GV=lt({opSnippet:WV}),HV={kernelName:Oy,backendName:"webgl",kernelFunc:GV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jV=Js+"return log(x + sqrt(x * x + 1.0));",qV=lt({opSnippet:jV}),XV={kernelName:Py,backendName:"webgl",kernelFunc:qV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KV=Js+`
  return atan(x);
`,YV=lt({opSnippet:KV}),QV={kernelName:Fy,backendName:"webgl",kernelFunc:YV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZV=sb+`
  return atan(a, b);
`,JV=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ro+`
  return result;
`,eW=wn({opSnippet:ZV,packedOpSnippet:JV}),tW={kernelName:zy,backendName:"webgl",kernelFunc:eW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nW=Js+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,sW=lt({opSnippet:nW}),rW={kernelName:Ly,backendName:"webgl",kernelFunc:sW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Mc=class{constructor(e,t,s,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,l=e.strideHeight,c=e.strideWidth,d=e.dilationHeight,f=e.dilationWidth,p=e.effectiveFilterHeight,g=e.effectiveFilterWidth,y=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const w=t==="avg",S=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,$=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let N="0.0";if(w||(N="-1.0 / 1e-20"),s){const G=">=";this.userCode=`
        const ivec2 strides = ivec2(${l}, ${c});
        const ivec2 pads = ivec2(${y}, ${x});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${g};
                wC += ${f}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${G} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?a?S:$:`wR * ${g} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let _=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(_="avgValue / max(count, 1.0)");const O=Math.floor(o/4)*4,M=o%4,W=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${y}, ${x});
      const float initializationValue = ${N};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${N});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${d}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${O}; wC += 4) {
            int xC = xCCorner + wC * ${f};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${f}, d),
              getValue(batch, xR, xC + 2 * ${f}, d),
              getValue(batch, xR, xC + 3 * ${f}, d)
            );

            ${W}
          }

          int xC = xCCorner + ${O};
          if (${M===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${W}
          } else if (${M===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${f}, d),
              initializationValue,
              initializationValue
            );

            ${W}
          } else if (${M===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${f}, d),
              getValue(batch, xR, xC + 2 * ${f}, d),
              initializationValue
            );

            ${W}
          }
        }
        setOutput(${_});
      }
    `}},ab=class{constructor(e,t,s,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,l=e.strideDepth,c=e.strideHeight,d=e.strideWidth,f=e.dilationDepth,p=e.dilationHeight,g=e.dilationWidth,y=e.effectiveFilterDepth,x=e.effectiveFilterHeight,w=e.effectiveFilterWidth,S=e.padInfo.front,$=e.padInfo.top,N=e.padInfo.left;this.outputShape=e.outShape;const I=t==="avg";let _="0.0";if(I||(_="-1.0 / 1e-20"),s){const B=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${l}, ${c}, ${d});
        const ivec3 pads = ivec3(${S}, ${$}, ${N});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${y};
              wD += ${f}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${x};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${w};
                  wC += ${g}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${B} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${x} * ${w} +
                      wR * ${w} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const O="max";let M=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(M="avgValue / max(count, 1.0)");const W=Math.floor(o/4)*4,G=o%4,F=`
      if (${I}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${O}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${l}, ${c}, ${d});
      const ivec3 pads = ivec3(${S}, ${$}, ${N});
      const float initializationValue = ${_};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${_});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${y};
            wD += ${f}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${x};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${W}; wC += 4) {
              int xC = xCCorner + wC * ${g};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${g}, ch),
                getValue(batch, xD, xR, xC + 2 * ${g}, ch),
                getValue(batch, xD, xR, xC + 3 * ${g}, ch)
              );

              ${F}
            }

            int xC = xCCorner + ${W};
            if (${G===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${F}
            } else if (${G===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${g}, ch),
                initializationValue,
                initializationValue
              );

              ${F}
            } else if (${G===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${g}, ch),
                getValue(batch, xD, xR, xC + 2 * ${g}, ch),
                initializationValue
              );

              ${F}
            }
          }
        }
        setOutput(${M});
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;ed(r,"avgPool");const{filterSize:a,strides:o,pad:l,dimRoundingMode:c}=s,d=1;z(Gn(o,d),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const f=Qs(r.shape,a,o,d,l,c);if(f.filterWidth===1&&f.filterHeight===1&&yt(f.inShape,f.outShape))return cs({inputs:{x:r},backend:t});const p=new Mc(f,"avg",!1);return t.runWebGLProgram(p,[r],"float32")}const iW={kernelName:By,backendName:"webgl",kernelFunc:aW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:c,dataFormat:d}=s,f=[1,1,1],p=ga(r.shape,a,o,f,l,c,d),g=new ab(p,"avg",!1);return t.runWebGLProgram(g,[r],"float32")}const uW={kernelName:My,backendName:"webgl",kernelFunc:oW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lW=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,a=e.strideWidth,o=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=c-1-e.padInfo.top,p=d-1-e.padInfo.left,g=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${f}, ${p});
      const float avgMultiplier = float(${g});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c};
            wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${d};
            wC+= ${l}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},cW=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,a=e.strideDepth,o=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,d=e.dilationHeight,f=e.dilationWidth,p=e.effectiveFilterDepth,g=e.effectiveFilterHeight,y=e.effectiveFilterWidth,x=p-1-e.padInfo.front,w=g-1-e.padInfo.top,S=y-1-e.padInfo.left,$=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${x}, ${w}, ${S});
      const float avgMultiplier = float(${$});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${g};
              wR += ${d}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${y};
                wC += ${f}) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dW(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,o=a,{filterSize:l,strides:c,pad:d,dimRoundingMode:f}=s,p=[1,1,1],g=ga(o.shape,l,c,p,d,f),y=new cW(g);return t.runWebGLProgram(y,[r],o.dtype)}const hW={kernelName:zC,backendName:"webgl",kernelFunc:dW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fW(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,o=a;ed([r,a],"avgPoolGrad");const{filterSize:l,strides:c,pad:d}=s,f=Qs(o.shape,l,c,1,d),p=new lW(f);return t.runWebGLProgram(p,[r],o.dtype)}const pW={kernelName:LC,backendName:"webgl",kernelFunc:fW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mW(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:a}=e,{transposeA:o,transposeB:l}=s;return uf({a:r,b:a,transposeA:o,transposeB:l,backend:t})}const gW={kernelName:Uy,backendName:"webgl",kernelFunc:mW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yW=class{constructor(e,t,s,r,a,o){this.outputShape=[],this.variableNames=["x","mean","variance"],Ye(e,t),Ye(e,s);let l="0.0";r!=null&&(Ye(e,r),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let c="1.0";a!=null&&(Ye(e,a),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${l};
        float scale = ${c};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xW{constructor(e,t,s,r,a,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ye(e,t),Ye(e,s);let l="vec4(0.0)";r!=null&&(Ye(e,r),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let c="vec4(1.0)";a!=null&&(Ye(e,a),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${l};
        vec4 scale = ${c};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bW=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:a,offset:o,scale:l}=n;z(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),z(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),z(l==null||r.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=t;c==null&&(c=.001);const d=[s,r,a];let f=null;o!=null&&(f=o.shape,d.push(o));let p=null;l!=null&&(p=l.shape,d.push(l));const g=ee().getBool("WEBGL_PACK_NORMALIZATION")?new xW(s.shape,r.shape,a.shape,f,p,c):new yW(s.shape,r.shape,a.shape,f,p,c);return e.runWebGLProgram(g,d,d[0].dtype)},vW={kernelName:Nx,backendName:"webgl",kernelFunc:bW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wW=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=wt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=SW(this.rank);let r;const a=e.map((o,l)=>`sourceLoc.${ey[l]} = start[${l}] + coords.${ey[l]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}};const ey=["x","y","z","w","u","v"];function SW(n){if(n===1)return"sourceLoc";if(n<=6)return ey.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CW{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=wt(this.rank),s=Vn("coords",this.rank),r=Vn("sourceLoc",this.rank),a=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,o=`getChannel(getSource(${r.join()}), ${a})`,l=`
      result.x = ${o};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${o};
        --${r[this.rank-1]};
      }
    `,c=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${o};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${o};
        }
      }
    `,d=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((f,p)=>`start[${p}]`).join()});`:e.map((f,p)=>`${r[p]} = ${s[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${d}
        vec4 result = vec4(0.);
        ${l}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $W(n,e,t,s){const r=s.texData.get(n.dataId),a=s.makeTensorInfo(t,n.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.refCount=1,o.shape=t,o.dtype=n.dtype;let l=k1(e,Ut(n.shape));r.slice&&(l+=r.slice.flatOffset),o.slice={flatOffset:l,origDataId:r.slice&&r.slice.origDataId||n.dataId};const c=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,c+1),a}function rl(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:a,size:o}=s,[l,c]=R1(r,a,o);if(T1(r,l,c),oe(c)===0)return t.makeTensorInfo(c,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const p=t.texData.get(r.dataId),g=gU(p.values,l,c,r.shape,r.dtype);return t.makeTensorInfo(c,r.dtype,g)}const{isPacked:d}=t.texData.get(r.dataId),f=E1(r.shape,l,c);if(d||!f){const p=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new CW(c):new wW(c),g=[l];return t.runWebGLProgram(p,[r],r.dtype,g)}return t.uploadToGPU(r.dataId),$W(r,l,c,t)}const TW={kernelName:_0,backendName:"webgl",kernelFunc:rl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NW=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:a,crops:o}=s;z(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const l=a.reduce((N,I)=>N*I),c=Yc(r.shape,a,l),d=Qc(c.length,a.length),f=Zc(r.shape,a,l),p=O1(o,a.length),g=P1(f,o,a.length),y=[],x=Ee({inputs:{x:r},backend:t,attrs:{shape:c}}),w=Wn({inputs:{x},backend:t,attrs:{perm:d}}),S=Ee({inputs:{x:w},backend:t,attrs:{shape:f}}),$=rl({inputs:{x:S},backend:t,attrs:{begin:p,size:g}});return y.push(x),y.push(w),y.push(S),y.forEach(N=>t.disposeIntermediateTensorInfo(N)),$},EW={kernelName:Vy,backendName:"webgl",kernelFunc:NW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:a}=e,{size:o}=s,l=t.readSync(r.dataId),c=t.readSync(a.dataId),d=xN(l,c,a.dtype,a.shape,o);return t.makeTensorInfo([o],a.dtype,d)}const RW={kernelName:Wy,backendName:"webgl",kernelFunc:kW};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IW=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,_W=`
  return float(int(a.r) & int(b.r));
`;function AW(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,a=ee().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=ee().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,r])||o===1){const c=t.texData.get(s.dataId).values,d=t.texData.get(r.dataId).values,[f,p]=MM(s.shape,r.shape,c,d,s.dtype),g=t.makeTensorInfo(p,s.dtype),y=t.texData.get(g.dataId);return y.values=f,g}let l;return a?l=new nl(IW,s.shape,r.shape,!1):l=new So(_W,s.shape,r.shape),t.runWebGLProgram(l,[s,r],s.dtype)}const DW={kernelName:BC,backendName:"webgl",kernelFunc:AW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OW(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,a=t.readSync(s.dataId),o=t.readSync(r.dataId),l=Ye(Array.from(a),Array.from(o));return t.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const PW={kernelName:Gy,backendName:"webgl",kernelFunc:OW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FW="return float(a != b);",AN=wn({opSnippet:FW,cpuKernelImpl:oU,dtype:"bool"}),LW={kernelName:a0,backendName:"webgl",kernelFunc:AN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nd(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return cs({inputs:{x:r.complexTensorInfos.real},backend:t})}const zW={kernelName:g0,backendName:"webgl",kernelFunc:nd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BW="return float(int(x));";function MW(n,e){const t=new kr(n.shape,BW),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ty(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return cs({inputs:{x:r},backend:t});const o=pa(r.shape),l=ty({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),c=hi({inputs:{real:l,imag:o},backend:t});return o.dispose(),t.disposeIntermediateTensorInfo(l),c}if(r.dtype==="complex64"){const o=nd({inputs:{input:r},backend:t}),l=ty({inputs:{x:o},backend:t,attrs:{dtype:a}});return t.disposeIntermediateTensorInfo(o),l}if(!AC(r.dtype,a)){const o=cs({inputs:{x:r},backend:t});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(t.shouldExecuteOnCPU([r])){const o=t.texData.get(r.dataId).values,[l,c,d]=UM(o,r.shape,r.dtype,a);return t.makeTensorInfo(l,c,d)}if(a==="int32")return MW(r,t);if(a==="bool"){const o=t.makeTensorInfo([],"bool",Ar("bool",1)),c=AN({inputs:{a:r,b:o},backend:t});return t.disposeIntermediateTensorInfo(o),c}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}const UW={kernelName:xf,backendName:"webgl",kernelFunc:ty};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mS="return ceil(x);",VW=lt({opSnippet:mS,packedOpSnippet:mS,cpuKernelImpl:VM}),WW={kernelName:Hy,backendName:"webgl",kernelFunc:VW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let GW=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HW{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:a,clipValueMax:o}=s;let l;ee().getBool("WEBGL_PACK_CLIP")?l=new HW(r.shape):l=new GW(r.shape);const c=[[a],[o]];return t.runWebGLProgram(l,[r],r.dtype,c)}const qW={kernelName:jy,backendName:"webgl",kernelFunc:jW};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let XW=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gS(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function KW(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),a=new XW(s.shape),o=[gS(s,r.complexTensorInfos.real),gS(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(a,o,o[0].dtype)}const YW={kernelName:Xy,backendName:"webgl",kernelFunc:KW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let QW=class{constructor(e){this.outputShape=[],this.outputShape=Ys(e,1),this.variableNames=e.map((o,l)=>`T${l}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let o=1;o<t.length;o++)t[o]=t[o-1]+e[o][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<t.length;o++){const l=t[o-1];s.push(`else if (yC < ${t[o]}) setOutput(getT${o}(yR, yC-${l}));`)}const r=t.length,a=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZW{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ys(e,t);const s=this.outputShape,r=s.length,a=wt(r),o=Vn("coords",r),l=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((w,S)=>`T${S}`);const c=new Array(e.length-1);c[0]=e[0][t];for(let w=1;w<c.length;w++)c[w]=c[w-1]+e[w][t];const d=l[t],f=l.slice(-2),p=l.join();let g=`if (${d} < ${c[0]}) {
        return getChannel(
            getT0(${p}), vec2(${f.join()}));
        }`;for(let w=1;w<c.length;w++){const S=c[w-1];g+=`
        if (${d} < ${c[w]}  && ${d} >= ${c[w-1]}) {
          return getChannel(
            getT${w}(${Ah(l,d,S)}),
            vec2(${Ah(f,d,S)}));
        }`}const y=c.length,x=c[c.length-1];g+=`
        return getChannel(
          getT${y}(${Ah(l,d,x)}),
          vec2(${Ah(f,d,x)}));`,this.userCode=`
      float getValue(${l.map(w=>"int "+w)}) {
        ${g}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${o}), 0., 0., 0.);

        ${o[r-1]} = ${o[r-1]} + 1;
        if (${o[r-1]} < ${s[r-1]}) {
          result.g = getValue(${o});
        }

        ${o[r-2]} = ${o[r-2]} + 1;
        if (${o[r-2]} < ${s[r-2]}) {
          result.a = getValue(${o});
        }

        ${o[r-1]} = ${o[r-1]} - 1;
        if (${o[r-2]} < ${s[r-2]} &&
            ${o[r-1]} < ${s[r-1]}) {
          result.b = getValue(${o});
        }
        setOutput(result);
      }
    `}}function Ah(n,e,t){const s=n.indexOf(e);return n.map((a,o)=>o===s?`${a} - ${t}`:a).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bf(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return cs({inputs:{x:r.complexTensorInfos.imag},backend:t})}const JW={kernelName:Ax,backendName:"webgl",kernelFunc:Bf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sc(n,e,t){const s=n[0].dtype;if(s==="complex64"){const y=n.map(N=>nd({inputs:{input:N},backend:t})),x=n.map(N=>Bf({inputs:{input:N},backend:t})),w=Sc(y,e,t),S=Sc(x,e,t),$=hi({inputs:{real:w,imag:S},backend:t});return y.forEach(N=>t.disposeIntermediateTensorInfo(N)),x.forEach(N=>t.disposeIntermediateTensorInfo(N)),t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(S),$}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const y=n.map(_=>{const M=[-1,oe(_.shape.slice(e))];return Ee({inputs:{x:_},backend:t,attrs:{shape:M}})}),x=y.map(_=>({vals:t.readSync(_.dataId),shape:_.shape})),w=Ys(y.map(_=>_.shape),1),S=y[0].shape[0]===1,$=WM(x,w,s,S),N=Ys(n.map(_=>_.shape),e),I=t.makeTensorInfo(N,s,$);return y.forEach(_=>t.disposeIntermediateTensorInfo(_)),I}const a=n.filter(y=>oe(y.shape)>0),o=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(a.length===1){const y=o?new kr(n[0].shape,Ya):new Za(n[0].shape,Ya);return t.runWebGLProgram(y,n,s)}const l=ee().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>l){const y=[];for(let w=0;w<a.length;w+=l){const S=a.slice(w,w+l);y.push(Sc(S,e,t))}const x=Sc(y,e,t);for(const w of y)t.disposeIntermediateTensorInfo(w);return x}if(o){const y=new ZW(a.map(x=>x.shape),e);return t.runWebGLProgram(y,a,s)}const{tensors2D:c,outShape:d}=eG(a,e,t),f=new QW(c.map(y=>y.shape)),p=t.runWebGLProgram(f,c,s);c.forEach(y=>t.disposeIntermediateTensorInfo(y));const g=Ee({inputs:{x:p},attrs:{shape:d},backend:t});return t.disposeIntermediateTensorInfo(p),g}function eG(n,e,t){const s=Ys(n.map(a=>a.shape),e);return{tensors2D:n.map(a=>Ee({inputs:{x:a},attrs:{shape:[-1,oe(a.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DN(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,a=Pt(r,e[0].shape)[0],o=e.map(d=>d.shape);_1(o,a);const l=Ys(e.map(d=>d.shape),a);if(oe(l)===0)return t.makeTensorInfo(l,e[0].dtype,[]);const c=e.filter(d=>oe(d.shape)>0);return c.length===1?cs({inputs:{x:c[0]},backend:t}):Sc(c,a,t)}const tG={kernelName:Ky,backendName:"webgl",kernelFunc:DN};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ON{constructor(e,t=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.padInfo.top,l=e.padInfo.left,c=e.strideHeight,d=e.strideWidth,f=e.dilationHeight,p=e.dilationWidth,g=e.filterHeight,y=e.filterWidth,x=Math.floor(e.inChannels/4)*4,w=e.inChannels%4,S=e.dataFormat==="channelsLast",$=S?1:2,N=S?2:3,I=S?3:1;let _="",O="";s&&(r?_=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:a?_=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:_=`
          float activation(float x) {
            ${s}
          }
        `,O="result = activation(result);");const M=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${_}

      const ivec2 strides = ivec2(${c}, ${d});
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${I}];

        ivec2 xRCCorner =
            ivec2(coords[${$}], coords[${N}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${g}; wR++) {
          int xR = xRCorner + wR * ${f};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${y}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${x}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${S}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${w===1}) {

              if (${S}) {
                dotProd +=
                    getX(batch, xR, xC, ${x}) *
                    getW(wR, wC, ${x}, d2);
              } else {
                dotProd +=
                    getX(batch, ${x}, xR, xC) *
                    getW(wR, wC, ${x}, d2);
              }

            } else if (${w===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${x}, d2),
                getW(wR, wC, ${x} + 1, d2)
              );

              if (${S}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${x}),
                  getX(batch, xR, xC, ${x} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${x}, xR, xC),
                  getX(batch, ${x} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${w===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${x}, d2),
                getW(wR, wC, ${x} + 1, d2),
                getW(wR, wC, ${x} + 2, d2)
              );

              if (${S}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${x}),
                  getX(batch, xR, xC, ${x} + 1),
                  getX(batch, xR, xC, ${x} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${x}, xR, xC),
                  getX(batch, ${x} + 1, xR, xC),
                  getX(batch, ${x} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${M}
        ${O}
        setOutput(result);
      }
    `}}class nG{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,o=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,d=e.dilationHeight,f=e.dilationWidth,p=e.filterDepth,g=e.filterHeight,y=e.filterWidth,x=Math.floor(e.inChannels/4)*4,w=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${o}, ${l});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${c};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${g}; wR++) {
            int xR = xRCorner + wR * ${d};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${y}; wC++) {
              int xC = xCCorner + wC * ${f};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${x}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${w===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${x}) *
                  getW(wF, wR, wC, ${x}, d2);
              } else if (${w===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${x}),
                  getX(batch, xF, xR, xC, ${x} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${x}, d2),
                  getW(wF, wR, wC, ${x} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${w===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${x}),
                  getX(batch, xF, xR, xC, ${x} + 1),
                  getX(batch, xF, xR, xC, ${x} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${x}, d2),
                  getW(wF, wR, wC, ${x} + 1, d2),
                  getW(wF, wR, wC, ${x} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PN{constructor(e,t=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Dn(this.outputShape.length);const o=e.padInfo.left,l=e.strideWidth,c=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,p=f;let g=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let S=0;S<f;S++)g+=`
           vec4 xTexelC${S*2};
           int xTexelC${S*2}Ready;
           vec4 xTexelC${S*2+1};
           int xTexelC${S*2+1}Ready;
           vec4 xC${S};`;g+=`
     for (int r = 0; r < ${d}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let S=0;S<f;S++)g+=`
           xTexelC${S*2} = vec4(0.0);
           xTexelC${S*2}Ready = 0;
           xTexelC${S*2+1} = vec4(0.0);
           xTexelC${S*2+1}Ready = 0;
           xC${S} = vec4(0.0);`;g+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let S=0;S<(p+1)/2;S++){const $=S*2;if(g+=`
           xC = xCCorner + ${$*c};
           `,l===1){if($<f&&(o%2===1?(g+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                   xTexelC${$} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${$}.zw = vec2(0.0);
                   }
                   xTexelC${$}Ready = 1;
                 }
               `,c===1&&$>0?g+=`
                 xC${$} = vec4(xTexelC${$-2}.zw, xTexelC${$}.xy);
                 `:g+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${$} = vec4(previous.zw, xTexelC${$}.xy);
                   } else {
                     xC${$} = vec4(0.0, 0.0, xTexelC${$}.xy);
                   }
                   `):g+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                   xTexelC${$} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${$}.zw = vec2(0.0);
                   }
                   xTexelC${$}Ready = 1;
                 }

                 xC${$} = xTexelC${$};
                 `,$+1<f)){const N=o%2===0?Cy(c):c;c%2===0&&o%2===1||c%2!==0&&o%2!==1?(g+=`
                   xCOffset = xC + imod(pads[1], 2) + ${N};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                     xTexelC${$+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${$+1}.zw = vec2(0.0);
                     }
                     xTexelC${$+1}Ready = 1;
                   }
                   `,c>1?g+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${$+1} = vec4(previous.zw, xTexelC${$+1}.xy);
                     } else {
                      xC${$+1} = vec4(0.0, 0.0, xTexelC${$+1}.xy);
                     }
                     `:g+=`
                     xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.xy);
                     `):N===1?g+=`
                     xC${$+1} = xTexelC${$};
                     `:g+=`
                     xCOffset = xC + ${N};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                       xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${$+1}.zw = vec2(0.0);
                       }
                       xTexelC${$+1}Ready = 1;
                     }

                     xC${$+1} = xTexelC${$+1};
                     `}}else $<f&&(o%2===1?(g+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                   xTexelC${$} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${$}.zw = vec2(0.0);
                   }
                   xTexelC${$}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${$+1}Ready == 0) {
                   xTexelC${$+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${$+1}.zw = vec2(0.0);
                   }
                   xTexelC${$+1}Ready = 1;
                 }

                 xC${$} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
               `,$+1<f&&(g+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${$+1} = vec4(xTexelC${$+1}.xy, final.xy);
                 `)):(g+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                   xTexelC${$} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${$}.zw = vec2(0.0);
                   }
                   xTexelC${$}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                   xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${$+1}.zw = vec2(0.);
                   }
                   xTexelC${$+1}Ready = 1;
                 }

                 xC${$} = vec4(
                   xTexelC${$}.xy, xTexelC${$+1}.xy);
               `,$+1<f&&(g+=`
                   xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
                 `)));$<f&&(g+=`
             wTexel = getW(r, ${$}, d1, d2);
             dotProd += xC${$}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${$}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,$+1<f&&(g+=`
               wTexel = getW(r, ${$+1}, d1, d2);
               dotProd += xC${$+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${$+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}g+=`
     }
   `,g+=`
     }
   `,g+=`
     }
   `;let y="",x="";s&&(r?y=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:a?y=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:y=`vec4 activation(vec4 x) {
           ${s}
         }`,x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${y}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${g}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${w}
         ${x}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sG{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length);const{dataFormat:s}=t,r=Hn(),a=s==="channelsLast",o=a?1:2,l=a?2:3,c=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let d="";for(let f=0;f<=1;f++)for(let p=0;p<=1;p++)d+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${f};

          ${c}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${o}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${l}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${f*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${f*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${d}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lf(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function FN({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const c=n.shape,d=s.texData.get(n.dataId),f=t.inChannels,p=c[0]*c[1]*c[2],g=t.outChannels,y=t.dataFormat==="channelsLast",x=!1,w=!1;let S;const $=[];if(a!=null){const _=lf(a.shape,y);_!=null&&(a=Ee({inputs:{x:a},backend:s,attrs:{shape:_}}),$.push(a))}if(r!=null){const _=lf(r.shape,y);_!=null&&(r=Ee({inputs:{x:r},backend:s,attrs:{shape:_}}),$.push(r))}if(!((p===1||g===1)&&f>kN)&&d.isPacked&&y&&d.texture!=null&&c[2]%2!==0&&yt(d.shape.slice(-3),c.slice(-3))){const _=c[0]*c[1]*(c[2]+1),O={dataId:n.dataId,shape:[1,_,t.inChannels],dtype:n.dtype},M=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,z(af(d.shape,O.shape),()=>`packed reshape ${d.shape} to ${O.shape} isn't free`);const W=Ee({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});$.push(W);const G=uf({a:O,b:W,backend:s,transposeA:x,transposeB:w,bias:r,activation:l,preluActivationWeights:a,leakyreluAlpha:o}),F=s.texData.get(G.dataId);z(F.isPacked,()=>"batchMatMul result is expected to be packed"),d.shape=M,F.shape=t.outShape,S=cs({inputs:{x:G},backend:s}),S.shape=t.outShape,$.push(G)}else{const _=t.outHeight*t.outWidth,O=Ee({inputs:{x:n},backend:s,attrs:{shape:y?[t.batchSize,_,t.inChannels]:[t.batchSize,t.inChannels,_]}}),M=Ee({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),W=uf({a:y?O:M,b:y?M:O,transposeA:!y,transposeB:w,backend:s,bias:r,activation:l,preluActivationWeights:a,leakyreluAlpha:o});S=Ee({inputs:{x:W},backend:s,attrs:{shape:t.outShape}}),$.push(O),$.push(M),$.push(W)}for(const _ of $)s.disposeIntermediateTensorInfo(_);return S}function LN({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const{filterWidth:c,filterHeight:d,inChannels:f,outWidth:p,outHeight:g,dataFormat:y}=t,x=y==="channelsLast",w=c*d*f,S=g*p,$=[t.batchSize,w,S],N=!0,I=!1,_=[];if(a!=null){const pe=lf(a.shape,x);pe!=null&&(a=Ee({inputs:{x:a},backend:s,attrs:{shape:pe}}),_.push(a))}if(r!=null){const pe=lf(r.shape,x);pe!=null&&(r=Ee({inputs:{x:r},backend:s,attrs:{shape:pe}}),_.push(r))}const O=Ee({inputs:{x:e},backend:s,attrs:{shape:[1,w,oe(e.shape)/w]}});_.push(O);const M=new sG($,t),W=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],G=s.runWebGLProgram(M,[n],"float32",W),F=Ee({inputs:{x:G},backend:s,attrs:{shape:$}});_.push(G),_.push(F);const B=r!=null,D=a!=null,Q=l==="leakyrelu",re=l?Bc(l,!0):null,he=new EN(x?F.shape:O.shape,x?O.shape:F.shape,x?[t.batchSize,S,t.outChannels]:[t.batchSize,t.outChannels,S],N,I,B,re,D,Q),le=x?[F,O]:[O,F];if(r&&le.push(r),D&&le.push(a),Q){const pe=s.makeTensorInfo([],"float32",Ku(o,"float32"));le.push(pe),_.push(pe)}const ne=s.runWebGLProgram(he,le,"float32"),ge=Ee({inputs:{x:ne},backend:s,attrs:{shape:t.outShape}});_.push(ne);for(const pe of _)s.disposeIntermediateTensorInfo(pe);return ge}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:l,dataFormat:c,dilations:d,dimRoundingMode:f}=s,p=gr(c),g=Qt(r.shape,a.shape,o,d,l,f,!1,p);let y;if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=FN({x:r,filter:a,convInfo:g,backend:t});else if(g.strideWidth<=2&&p==="channelsLast"&&ee().getBool("WEBGL_EXP_CONV")){const w=new PN(g),S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]];y=t.runWebGLProgram(w,[r,a],"float32",S)}else if(ee().getBool("WEBGL_CONV_IM2COL"))y=LN({x:r,filter:a,convInfo:g,backend:t});else{const w=new ON(g);y=t.runWebGLProgram(w,[r,a],"float32")}const x=Ee({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return t.disposeIntermediateTensorInfo(y),x}const aG={kernelName:Yy,backendName:"webgl",kernelFunc:rG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let iG=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,o=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${o?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},oG=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,a=e.strideWidth,o=e.dataFormat==="channelsLast",l=t-1-e.padInfo.top,c=s-1-e.padInfo.left,d=o?1:2,f=o?2:3,p=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${d}], coords[${f}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${o}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},uG=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,o=e.padInfo.top,l=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${o};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${l};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},lG=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,a=e.strideDepth,o=e.strideHeight,l=e.strideWidth,c=t-1-e.padInfo.front,d=s-1-e.padInfo.top,f=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${d}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:a}=e,{strides:o,pad:l,dataFormat:c,dimRoundingMode:d,filterShape:f}=s,p=gr(c),g=Qt(r.shape,f,o,1,l,d,!1,p),y=new iG(g);return t.runWebGLProgram(y,[r,a],"float32")}const dG={kernelName:Qy,backendName:"webgl",kernelFunc:cG};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hG{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Dn(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,r=t-1-e.padInfo.top,a=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fG(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:a}=e,{inputShape:o,strides:l,pad:c,dataFormat:d,dimRoundingMode:f}=s,p=gr(d),g=Qt(o,a.shape,l,1,c,f,!1,p);if(ee().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){const y=[[g.strideHeight,g.strideWidth]],x=new hG(g);return t.runWebGLProgram(x,[r,a],"float32",y)}else{const y=new oG(g);return t.runWebGLProgram(y,[r,a],"float32")}}const pG={kernelName:Zy,backendName:"webgl",kernelFunc:fG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:l,dilations:c}=s,d=di(r.shape,a.shape,o,c,l),f=new nG(d);return t.runWebGLProgram(f,[r,a],"float32")}const gG={kernelName:Jy,backendName:"webgl",kernelFunc:mG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:a}=e,{strides:o,pad:l,filterShape:c}=s,d=di(r.shape,c,o,1,l),f=new uG(d);return t.runWebGLProgram(f,[r,a],"float32")}const xG={kernelName:MC,backendName:"webgl",kernelFunc:yG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bG(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:a}=e,{pad:o,strides:l,inputShape:c}=s,d=di(c,a.shape,l,1,o),f=new lG(d);return t.runWebGLProgram(f,[r,a],"float32")}const vG={kernelName:ex,backendName:"webgl",kernelFunc:bG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wG=sl+`
  return cos(x);
`,SG=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Ro}
  return result;
`,CG=lt({opSnippet:wG,packedOpSnippet:SG}),$G={kernelName:tx,backendName:"webgl",kernelFunc:CG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TG=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,NG=lt({opSnippet:TG}),EG={kernelName:nx,backendName:"webgl",kernelFunc:NG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kG=class{constructor(e,t,s,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,l,c,d]=e,[f]=t,[p,g]=s;this.outputShape=[f,p,g,d];const y=r==="bilinear"?1:0,[x,w]=[`${l-1}.0`,`${c-1}.0`],[S,$,N]=p>1?[`${(l-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${x} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${x}`],[I,_,O]=g>1?[`${(c-1)/(g-1)}`,"(x2-x1) * width_ratio",`x1*${w} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${w}`];this.userCode=`
      const float height_ratio = float(${S});
      const float width_ratio = float(${I});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${o}) {
          return;
        }

        float height_scale = ${$};
        float width_scale = ${_};

        float in_y = ${N};
        if( in_y < 0.0 || in_y > ${x} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${O};
        if( in_x < 0.0 || in_x > ${w} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${y} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RG=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:a,boxInd:o}=e,{cropSize:l,method:c,extrapolationValue:d}=s,f=new kG(r.shape,a.shape,l,c,d);return t.runWebGLProgram(f,[r,a,o],"float32")},IG={kernelName:ax,backendName:"webgl",kernelFunc:RG};var Uc;(function(n){n.Prod="*",n.Sum="+"})(Uc||(Uc={}));let yS=class{constructor(e,t,s,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,o=this.op===Uc.Prod?"1.0":"0.0",l=s?o:`getX(${xS(a,"coords",this.op)})`,c=this.outputShape[this.outputShape.length-1];let d="",f="";s?(d=r?`end != ${c-1}`:"end != 0",f=r?"end + 1":"end - 1"):(d=r?`end + pow2 < ${c}`:"end >= pow2",f=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${wt(a)} coords = getOutputCoords();
        int end = ${bS(a,"coords",this.op)};
        float val = ${l};
        int pow2 = int(pow(2.0, index));
        if (${d}) {
          int idx = ${f};
          ${bS(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${xS(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function xS(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function bS(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zN(n,e,t,s,r,a){const o=e.shape.length,l=_n([s],o);let c=e;l!=null&&(c=Wn({inputs:{x:e},backend:t,attrs:{perm:l}}));const d=An(1,o)[0];if(d!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const f=c.shape[d];let p=cs({inputs:{x:c},backend:t});for(let g=0;g<=Math.ceil(Math.log2(f))-1;g++){const y=new yS(n,c.shape,!1,a),x=[[g]],w=p;p=t.runWebGLProgram(y,[p],p.dtype,x),t.disposeIntermediateTensorInfo(w)}if(r){const g=new yS(n,c.shape,r,a),y=p;p=t.runWebGLProgram(g,[p],p.dtype),t.disposeIntermediateTensorInfo(y)}if(l!=null){const g=Kc(l),y=Wn({inputs:{x:p},backend:t,attrs:{perm:g}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(c),y}return p}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _G(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,exclusive:o,reverse:l}=s;return zN(Uc.Prod,r,t,a,o,l)}const AG={kernelName:sx,backendName:"webgl",kernelFunc:_G};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,exclusive:o,reverse:l}=s;return zN(Uc.Sum,r,t,a,o,l)}const OG={kernelName:rx,backendName:"webgl",kernelFunc:DG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:a}=e,{size:o,binaryOutput:l}=s;if(r.shape.length===1){const c=t.readSync(r.dataId),d=t.readSync(a.dataId),f=xN(c,d,a.dtype,a.shape,o);return t.makeTensorInfo([o],a.dtype,f)}else if(r.shape.length===2){const c=t.bufferSync(r),d=t.bufferSync(a),f=BM(c,d,o,l);return t.makeTensorInfo(f.shape,a.dtype,f.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const FG={kernelName:ix,backendName:"webgl",kernelFunc:PG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let LG=class{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:a,dataFormat:o}=s,l=r.shape[0],c=o==="NHWC"?r.shape[1]:r.shape[2],d=o==="NHWC"?r.shape[2]:r.shape[3],f=o==="NHWC"?r.shape[3]:r.shape[1],p=c*a,g=d*a,y=f/(a*a),x=o==="NHWC"?[l,p,g,y]:[l,y,p,g],w=new LG(x,a,o);return t.runWebGLProgram(w,[r],r.dtype)}const BG={kernelName:ox,backendName:"webgl",kernelFunc:zG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let BN=class{constructor(e,t=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Dn(this.outputShape.length);const o=e.filterHeight,l=e.filterWidth,c=e.outChannels/e.inChannels;let d="",f="";s&&(r?d=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:a?d=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:d=`
          float activation(float x) {
            ${s}
          }
        `,f="result = activation(result);");const p=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${d}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${c};
        int q = d2 - d1 * ${c};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${l}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${f}
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MN{constructor(e,t=!1,s=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Dn(this.outputShape.length);const o=e.outChannels/e.inChannels,l=e.padInfo.left,c=e.strideWidth,d=e.dilationWidth,f=e.filterHeight,p=e.filterWidth,g=p;let y=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let $=0;$<p;$++)y+=`
          vec4 xTexelC${$*2};
          int xTexelC${$*2}Ready;
          vec4 xTexelC${$*2+1};
          int xTexelC${$*2+1}Ready;
          vec4 xC${$};`;y+=`
    for (int r = 0; r < ${f}; r++) {
      `;for(let $=0;$<p;$++)y+=`
          xTexelC${$*2} = vec4(0.0);
          xTexelC${$*2}Ready = 0;
          xTexelC${$*2+1} = vec4(0.0);
          xTexelC${$*2+1}Ready = 0;
          xC${$} = vec4(0.0);`;y+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let $=0;$<(g+1)/2;$++){const N=$*2;if(y+=`
          xC = xCCorner + ${N*d};
          `,c===1){if(N<p&&(l%2===1?(y+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${N}Ready == 0) {
                  xTexelC${N} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${N}.zw = vec2(0.0);
                  }
                  xTexelC${N}Ready = 1;
                }
              `,d===1&&N>0?y+=`
                xC${N} = vec4(xTexelC${N-2}.zw, xTexelC${N}.xy);
                `:y+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${N} = vec4(previous.zw, xTexelC${N}.xy);
                  } else {
                    xC${N} = vec4(0.0, 0.0, xTexelC${N}.xy);
                  }
                  `):y+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${N}Ready == 0) {
                  xTexelC${N} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${N}.zw = vec2(0.0);
                  }
                  xTexelC${N}Ready = 1;
                }

                xC${N} = xTexelC${N};
                `,N+1<p)){const I=l%2===0?Cy(d):d;d%2===0&&l%2===1||d%2!==0&&l%2!==1?(y+=`
                  xCOffset = xC + imod(pads[1], 2) + ${I};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${N+1}Ready == 0) {
                    xTexelC${N+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${N+1}.zw = vec2(0.0);
                    }
                    xTexelC${N+1}Ready = 1;
                  }
                  `,d>1?y+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${N+1} = vec4(previous.zw, xTexelC${N+1}.xy);
                    } else {
                     xC${N+1} = vec4(0.0, 0.0, xTexelC${N+1}.xy);
                    }
                    `:y+=`
                    xC${N+1} = vec4(xTexelC${N}.zw, xTexelC${N+1}.xy);
                    `):I===1?y+=`
                    xC${N+1} = xTexelC${N};
                    `:y+=`
                    xCOffset = xC + ${I};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${N+1}Ready == 0) {
                      xTexelC${N+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${N+1}.zw = vec2(0.0);
                      }
                      xTexelC${N+1}Ready = 1;
                    }

                    xC${N+1} = xTexelC${N+1};
                    `}}else N<p&&(l%2===1?(y+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${N}Ready == 0) {
                  xTexelC${N} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${N}.zw = vec2(0.0);
                  }
                  xTexelC${N}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${N+1}Ready == 0) {
                  xTexelC${N+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${N+1}.zw = vec2(0.0);
                  }
                  xTexelC${N+1}Ready = 1;
                }

                xC${N} = vec4(xTexelC${N}.zw, xTexelC${N+1}.zw);
              `,N+1<p&&(y+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${N+1} = vec4(xTexelC${N+1}.xy, final.xy);
                `)):(y+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${N}Ready == 0) {
                  xTexelC${N} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${N}.zw = vec2(0.0);
                  }
                  xTexelC${N}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${N+1}Ready == 0) {
                  xTexelC${N+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${N+1}.zw = vec2(0.);
                  }
                  xTexelC${N+1}Ready = 1;
                }

                xC${N} = vec4(
                  xTexelC${N}.xy, xTexelC${N+1}.xy);
              `,N+1<p&&(y+=`
                  xC${N+1} = vec4(xTexelC${N}.zw, xTexelC${N+1}.zw);
                `)));N<p&&(y+=`
            wTexel = getW(r, ${N}, d1, q);
            dotProd += xC${N} * vec4(wTexel.xz, wTexel.xz);
          `,N+1<p&&(y+=`
              wTexel = getW(r, ${N+1}, d1, q);
              dotProd += xC${N+1} * vec4(wTexel.xz, wTexel.xz);
            `))}y+=`
    }
  `,y+=`
      }
    `;let x="",w="";s&&(r?x=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:a?x=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:x=`vec4 activation(vec4 x) {
          ${s}
        }`,w="result = activation(result);");const S=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${y}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${S}
        ${w}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:l,dilations:c,dimRoundingMode:d}=s;let f=c;f==null&&(f=[1,1]),z(Gn(o,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${f}'`);const p=Qt(r.shape,a.shape,o,f,l,d,!0);let g;ee().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?g=new MN(p):g=new BN(p);const y=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return t.runWebGLProgram(g,[r,a],"float32",y)}const UG={kernelName:ux,backendName:"webgl",kernelFunc:MG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let VG=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${o} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},WG=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,a=e.strideWidth,o=t-1-e.padInfo.top,l=s-1-e.padInfo.left,c=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${c}; dm++) {
              int d2 = d1 * ${c} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:a}=e,{strides:o,dilations:l,pad:c,dimRoundingMode:d,filterShape:f}=s,p=Qt(r.shape,f,o,l,c,d,!0),g=new VG(p);return t.runWebGLProgram(g,[r,a],"float32")}const HG={kernelName:lx,backendName:"webgl",kernelFunc:GG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jG(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:a}=e,{strides:o,dilations:l,pad:c,dimRoundingMode:d,inputShape:f}=s,p=Qt(f,a.shape,o,l,c,d,!0),g=new WG(p);return t.runWebGLProgram(g,[r,a],"float32")}const qG={kernelName:cx,backendName:"webgl",kernelFunc:jG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let XG=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KG(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],a=oe(s.shape),o=Ee({inputs:{x:s},backend:t,attrs:{shape:[a]}}),l=new XG(a),c=t.runWebGLProgram(l,[o],o.dtype),d=Ee({inputs:{x:c},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(c),d}const YG={kernelName:dx,backendName:"webgl",kernelFunc:KG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let QG=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:a,strideWidth:o,filterHeight:l,filterWidth:c,dilationHeight:d,dilationWidth:f}=e,{top:p,left:g}=r;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${o});
      const ivec2 pads = ivec2(${p}, ${g});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${l}; h++) {
          int hIn = hBeg + h * ${d};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${c}; w++) {
              int wIn = wBeg + w * ${f};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:l,dilations:c}=s,d=qc(r.shape,a.shape,o,l,"NHWC",c);let f;const p=new QG(d);f=t.runWebGLProgram(p,[r,a],"float32");const g=Ee({inputs:{x:f},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(f),g}const JG={kernelName:hx,backendName:"webgl",kernelFunc:ZG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,a=e,{allDims:o,summedDims:l,idDims:c}=G1(r,a.length);j1(o.length,c,a);const{path:d,steps:f}=q1(l,c),p=f.length;let g=null,y=o.length;const x=[];for(let w=0;w<p;++w){for(const S of f[w]){const{permutationIndices:$,expandDims:N}=H1(y,c[S]);let I;X1($)?I=a[S]:(I=Wn({inputs:{x:a[S]},backend:t,attrs:{perm:$}}),x.push(I));const _=I.shape.slice();for(let O=0;O<N.length;++O)_.splice(N[O],0,1);yt(I.shape,_)||(I=Ee({inputs:{x:I},backend:t,attrs:{shape:_}}),x.push(I)),g===null?g=I:(g=rb({inputs:{a:I,b:g},backend:t}),x.push(g))}w<p-1&&(d[w]>=0&&(g=zf({inputs:{x:g},backend:t,attrs:{axis:d[w]-(o.length-y),keepDims:!1}}),x.push(g)),y--)}for(const w of x)w!==g&&t.disposeIntermediateTensorInfo(w);return g}const tH={kernelName:px,backendName:"webgl",kernelFunc:eH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nH="return (x >= 0.0) ? x : (exp(x) - 1.0);",sH=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,rH=lt({opSnippet:nH,packedOpSnippet:sH}),aH={kernelName:mx,backendName:"webgl",kernelFunc:rH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iH="return (b >= 0.0) ? a : a * (b + 1.0);",oH=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,uH=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,a=ee().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nl(oH,s.shape,r.shape):new So(iH,s.shape,r.shape);return t.runWebGLProgram(a,[s,r],s.dtype)},lH={kernelName:VC,backendName:"webgl",kernelFunc:uH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cH=`
  return vec4(equal(a, b));
`,dH="return float(a == b);",hH=wn({opSnippet:dH,packedOpSnippet:cH,dtype:"bool",cpuKernelImpl:GM}),fH={kernelName:yx,backendName:"webgl",kernelFunc:hH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pH=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${z1};
  float a1 = ${B1};
  float a2 = ${M1};
  float a3 = ${U1};
  float a4 = ${V1};
  float a5 = ${W1};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,mH=lt({opSnippet:pH}),gH={kernelName:gx,backendName:"webgl",kernelFunc:mH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yH=sl+`
  return exp(x);
`,xH=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,UN=lt({opSnippet:yH,packedOpSnippet:xH,cpuKernelImpl:HM,dtype:"float32"}),bH={kernelName:xx,backendName:"webgl",kernelFunc:UN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ny(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:a}=e,o=a.shape.length,l=a.shape.slice();let c=r;return r<0&&(z(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),c=o+r+1),l.splice(c,0,1),Ee({inputs:{x:a},backend:s,attrs:{shape:l}})}const vH={kernelName:bx,backendName:"webgl",kernelFunc:ny};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vS="return exp(x) - 1.0;",wH=lt({opSnippet:vS,packedOpSnippet:vS,cpuKernelImpl:jM}),SH={kernelName:vx,backendName:"webgl",kernelFunc:wH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wS=class{constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=s?`${r}.0`:"1.0";let l;if(e==="real")l="return real * expR - imag * expI;";else if(e==="imag")l="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${a};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${l}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VN(n,e,t){const s=t.texData.get(n.dataId),r=oe(n.shape),a=n.shape[n.shape.length-1],o=r/a,l=Ee({inputs:{x:n},backend:t,attrs:{shape:[o,a]}}),c=l.shape,d=new wS("real",c,e),f=new wS("imag",c,e),p=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:c},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:c}],g=t.runWebGLProgram(d,p,"float32"),y=t.runWebGLProgram(f,p,"float32"),x=hi({inputs:{real:g,imag:y},backend:t});t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y);const w=Ee({inputs:{x},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(x),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CH(n){const{inputs:e,backend:t}=n,{input:s}=e;return VN(s,!1,t)}const $H={kernelName:wx,backendName:"webgl",kernelFunc:CH};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let TH=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sd(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:a}=t;if(a=a||Xu(r),a==="string"){const o=sn(a,oe(s));return o.fill(r),e.makeTensorInfo(s,a,o)}else{const o=new TH(s,r),l=[[r]];return e.runWebGLProgram(o,[],a,l)}}const NH={kernelName:Sx,backendName:"webgl",kernelFunc:sd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let EH=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kH={kernelName:Cx,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new EH(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SS="return floor(x);",RH=lt({opSnippet:SS,packedOpSnippet:SS,cpuKernelImpl:qM}),IH={kernelName:$x,backendName:"webgl",kernelFunc:RH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _H=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,AH=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,DH=wn({opSnippet:_H,packedOpSnippet:AH,dtype:"int32"}),OH={kernelName:Tx,backendName:"webgl",kernelFunc:DH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let PH=class{constructor(e){this.variableNames=["A"];const t=Hn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FH{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Hn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LH={kernelName:Xh,backendName:"webgl",kernelFunc:zH};let Tu,xg=ee().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function zH(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:a}=s,o=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,l=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[c,d]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],f=[d,c],p=[d,c,a];if(l||o){const w=ee().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Tu==null||w!==xg)&&(xg=w,Tu=document.createElement("canvas").getContext("2d",{willReadFrequently:xg})),Tu.canvas.width=c,Tu.canvas.height=d,Tu.drawImage(r,0,0,c,d),r=Tu.canvas}const g=t.makeTensorInfo(f,"int32");t.texData.get(g.dataId).usage=Ts.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(g.dataId),r);const y=ee().getBool("WEBGL_PACK")?new FH(p):new PH(p),x=t.runWebGLProgram(y,[g],"int32");return t.disposeData(g.dataId),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:l}=e,{strides:c,pad:d,dataFormat:f,dilations:p,dimRoundingMode:g,activation:y,leakyreluAlpha:x}=s,w=gr(f),S=Qt(r.shape,a.shape,c,p,d,g,!1,w);let $;const N=[],I=o!=null,_=l!=null,O=y==="leakyrelu",M=()=>{const G=[r,a],F=(B,D)=>{if(D==="NCHW"&&B.shape.length===1&&B.shape[0]!==1){const Q=Ee({inputs:{x:B},backend:t,attrs:{shape:[B.shape[0],1,1]}});return N.push(Q),Q}return B};if(I&&G.push(F(o,f)),_&&G.push(F(l,f)),O){const B=t.makeTensorInfo([],"float32",Ku(x,"float32"));G.push(B),N.push(B)}return G};if(S.filterHeight===1&&S.filterWidth===1&&S.dilationHeight===1&&S.dilationWidth===1&&S.strideHeight===1&&S.strideWidth===1&&(S.padInfo.type==="SAME"||S.padInfo.type==="VALID"))$=FN({x:r,filter:a,convInfo:S,backend:t,bias:o,activation:y,preluActivationWeights:l,leakyreluAlpha:x});else if(S.strideWidth<=2&&w==="channelsLast"&&ee().getBool("WEBGL_EXP_CONV")){const G=y?Bc(y,!0):null,F=new PN(S,I,G,_,O),B=[[S.padInfo.top,S.padInfo.left],[S.strideHeight,S.strideWidth],[S.dilationHeight,S.dilationWidth],[S.inHeight,S.inWidth]],D=M();$=t.runWebGLProgram(F,D,"float32",B)}else if(ee().getBool("WEBGL_CONV_IM2COL"))$=LN({x:r,filter:a,convInfo:S,backend:t,bias:o,activation:y,preluActivationWeights:l,leakyreluAlpha:x});else{const G=y?Bc(y,!1):null,F=new ON(S,I,G,_,O),B=M();$=t.runWebGLProgram(F,B,"float32")}const W=Ee({inputs:{x:$},backend:t,attrs:{shape:S.outShape}});return N.push($),N.forEach(G=>t.disposeIntermediateTensorInfo(G)),W}const MH={kernelName:Yh,backendName:"webgl",kernelFunc:BH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:l}=e,{strides:c,pad:d,dilations:f,dimRoundingMode:p,activation:g,leakyreluAlpha:y}=s,x=[];let w=f;w==null&&(w=[1,1]),z(Gn(c,w),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${w}'`);const S=Qt(r.shape,a.shape,c,w,d,p,!0),$=ee().getBool("WEBGL_PACK_DEPTHWISECONV")&&S.strideWidth<=2&&S.outChannels/S.inChannels===1,N=g?Bc(g,$):null,I=[r,a],_=o!=null,O=l!=null,M=g==="leakyrelu";if(_&&I.push(o),O&&I.push(l),M){const B=t.makeTensorInfo([],"float32",Ku(y,"float32"));I.push(B),x.push(B)}let W;$?W=new MN(S,_,N,O,M):W=new BN(S,_,N,O,M);const G=[[S.padInfo.top,S.padInfo.left],[S.strideHeight,S.strideWidth],[S.dilationHeight,S.dilationWidth],[S.inHeight,S.inWidth]],F=t.runWebGLProgram(W,I,"float32",G);return x.forEach(B=>t.disposeIntermediateTensorInfo(B)),F}const VH={kernelName:Qh,backendName:"webgl",kernelFunc:UH};let WH=class{constructor(e,t,s,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const a=wt(s.length);let o=`
    int index;`;for(let l=0;l<this.sliceDim;l++)o+=`
          index = round(getIndices(coords[0], ${l}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[l]};
          flattenIndex += index * ${this.strides[l]};`;this.userCode=`
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GH(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,a=r.shape,o=a[a.length-1],l=oe(s.shape),[c,d,f,p]=$1(s,r),g=Ee({inputs:{x:r},backend:t,attrs:{shape:[d,o]}}),y=Ee({inputs:{x:s},backend:t,attrs:{shape:[oe(s.shape)/f,f]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const $=t.readSync(r.dataId),N=t.bufferSync(s),I=XM($,N,s.dtype,d,o,f,p,s.shape,l);return t.makeTensorInfo(c,s.dtype,I.values)}const x=new WH(o,p,[d,f],s.shape),w=t.runWebGLProgram(x,[y,g],y.dtype),S=Ee({inputs:{x:w},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(w),S}const HH={kernelName:kx,backendName:"webgl",kernelFunc:GH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let jH=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=wt(this.rank),r=qH(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}};function qH(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${t[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WN(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:a}=e,{axis:o,batchDims:l}=s,c=Pt(o,r.shape)[0];if(ee().get("DEBUG")){const N=t.readSync(a.dataId),I=r.shape[c];for(let _=0;_<N.length;++_){const O=N[_];z(O<=I-1&&O>=0,()=>`GatherV2: the index value ${O} is not in [0, ${I-1}]`)}}const d=Q1(r,a,c,l),f=oe(a.shape),p=[],g=Ee({inputs:{x:r},backend:t,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),y=Ee({inputs:{x:a},backend:t,attrs:{shape:[d.batchSize,f/d.batchSize]}});p.push(g),p.push(y);const x=[d.batchSize,d.outerSize,f/d.batchSize,d.sliceSize];if(t.shouldExecuteOnCPU([r,a])||r.dtype==="string"){const N=t.bufferSync(y),I=t.bufferSync(g),_=KM(I,N,x);return p.forEach(O=>t.disposeIntermediateTensorInfo(O)),t.makeTensorInfo(d.outputShape,_.dtype,_.values)}const w=new jH(g.shape,x),S=t.runWebGLProgram(w,[g,y],g.dtype);p.push(S);const $=Ee({inputs:{x:S},backend:t,attrs:{shape:d.outputShape}});return p.forEach(N=>t.disposeIntermediateTensorInfo(N)),$}const XH={kernelName:Ex,backendName:"webgl",kernelFunc:WN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KH="return float(a > b);",YH=`
  return vec4(greaterThan(a, b));
`,QH=wn({opSnippet:KH,packedOpSnippet:YH,cpuKernelImpl:YM,dtype:"bool"}),ZH={kernelName:Rx,backendName:"webgl",kernelFunc:QH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JH="return float(a >= b);",e6=`
  return vec4(greaterThanEqual(a, b));
`,t6=wn({opSnippet:JH,packedOpSnippet:e6,dtype:"bool",cpuKernelImpl:QM}),n6={kernelName:Ix,backendName:"webgl",kernelFunc:t6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s6(n){const{inputs:e,backend:t}=n,{input:s}=e;return VN(s,!0,t)}const r6={kernelName:_x,backendName:"webgl",kernelFunc:s6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a6="return float(!isnan(x) && !isinf(x));",i6=lt({opSnippet:a6,dtype:"bool"}),o6={kernelName:Dx,backendName:"webgl",kernelFunc:i6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u6="return float(isinf(x));",l6=lt({opSnippet:u6,dtype:"bool"}),c6={kernelName:Ox,backendName:"webgl",kernelFunc:l6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6="return float(isnan(x));",h6=lt({opSnippet:d6,dtype:"bool"}),f6={kernelName:Px,backendName:"webgl",kernelFunc:h6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p6="return float(a < b);",m6=`
  return vec4(lessThan(a, b));
`,g6=wn({opSnippet:p6,packedOpSnippet:m6,cpuKernelImpl:ZM,dtype:"bool"}),y6={kernelName:Lx,backendName:"webgl",kernelFunc:g6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x6="return float(a <= b);",b6=`
  return vec4(lessThanEqual(a, b));
`,v6=wn({opSnippet:x6,packedOpSnippet:b6,cpuKernelImpl:JM,dtype:"bool"}),w6={kernelName:zx,backendName:"webgl",kernelFunc:v6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S6(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:a}=t,o=eU(s,r,a);return e.makeTensorInfo([o.length],"float32",o)}const C6={kernelName:Bx,backendName:"webgl",kernelFunc:S6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $6=sl+`
  return x < 0.0 ? 0./0. : log(x);
`,T6=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,N6=lt({opSnippet:$6,packedOpSnippet:T6,cpuKernelImpl:tU}),E6={kernelName:Mx,backendName:"webgl",kernelFunc:N6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6=sl+`
  return log(1.0 + x);
`,R6=lt({opSnippet:k6}),I6={kernelName:Ux,backendName:"webgl",kernelFunc:R6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _6="return float(a >= 1.0 && b >= 1.0);",A6=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,D6=wn({opSnippet:_6,packedOpSnippet:A6,dtype:"bool"}),O6={kernelName:Vx,backendName:"webgl",kernelFunc:D6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P6="return float(!(x >= 1.0));",F6=lt({opSnippet:P6}),L6={kernelName:Wx,backendName:"webgl",kernelFunc:F6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z6="return float(a >= 1.0 || b >= 1.0);",B6=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,M6=wn({opSnippet:z6,packedOpSnippet:B6,dtype:"bool"}),U6={kernelName:Gx,backendName:"webgl",kernelFunc:M6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let V6=class{constructor(e,t,s,r,a){this.variableNames=["x"],this.outputShape=[];const o=t,l=e[3]-1;this.outputShape=e;let c;const d=`float(${s}) + float(${r}) * sum`;a===.5?c=`inversesqrt(${d})`:a===1?c=`1.0/(${d})`:c=`exp(log(${d}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${o}; j <= ${o}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${l}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${c};
        setOutput(val);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W6{constructor(e,t,s,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=t,l=e[3]-1;this.outputShape=e;let c;const d=`float(${s}) + float(${r}) * sum`;a===.5?c=`inversesqrt(${d})`:a===1?c=`1.0/(${d})`:c=`exp(log(${d}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${o};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${o}; j <= ${o}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${l}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${c};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G6=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:a,bias:o,alpha:l,beta:c}=s,d=ee().getBool("WEBGL_PACK_NORMALIZATION")?new W6(r.shape,a,o,l,c):new V6(r.shape,a,o,l,c);return t.runWebGLProgram(d,[r],r.dtype)},H6={kernelName:Hx,backendName:"webgl",kernelFunc:G6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let j6=class{constructor(e,t,s,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${a})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q6=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:a,dy:o}=e,{depthRadius:l,bias:c,alpha:d,beta:f}=s,p=new j6(r.shape,l,c,d,f);return t.runWebGLProgram(p,[r,a,o],r.dtype)},X6={kernelName:WC,backendName:"webgl",kernelFunc:q6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K6(n,e,t,s){const r=oe(e),o=oe(n.shape)/r,l=Ee({inputs:{x:n},attrs:{shape:[o,r]},backend:s}),c=Io(l,n.dtype,"max",s),d=Ee({inputs:{x:c},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(l),s.disposeIntermediateTensorInfo(c),d}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GN(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:a,keepDims:o}=s,l=r.shape.length,c=Pt(a,r.shape);let d=c;const f=_n(d,l),p=f!=null,g=t.shouldExecuteOnCPU([r]);let y=r;if(p){if(g){const I=t.texData.get(y.dataId).values,_=new Array(l);for(let W=0;W<_.length;W++)_[W]=r.shape[f[W]];const O=nb(I,r.shape,r.dtype,f,_);y=t.makeTensorInfo(_,r.dtype);const M=t.texData.get(y.dataId);M.values=O}else y=Lf(r,f,t);d=An(d.length,l)}ps("max",d,l);const[x,w]=ks(y.shape,d);let S=x;o&&(S=fs(x,c));let $;if(g){const I=t.texData.get(y.dataId).values,_=nU(I,oe(w),S,r.dtype);$=t.makeTensorInfo(S,r.dtype);const O=t.texData.get($.dataId);O.values=_}else $=K6(y,w,S,t);return p&&t.disposeIntermediateTensorInfo(y),$}const Y6={kernelName:jx,backendName:"webgl",kernelFunc:GN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q6=sb+`
  return max(a, b);
`,Z6=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ro+`
  return result;
`,J6=wn({opSnippet:Q6,packedOpSnippet:Z6,cpuKernelImpl:sU}),e5={kernelName:qx,backendName:"webgl",kernelFunc:J6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;ed(r,"maxPool");const{filterSize:a,strides:o,pad:l,dimRoundingMode:c}=s,d=1;z(Gn(o,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const f=Qs(r.shape,a,o,d,l,c);if(f.filterWidth===1&&f.filterHeight===1&&yt(f.inShape,f.outShape))return cs({inputs:{x:r},backend:t});const p=new Mc(f,"max",!1);return t.runWebGLProgram(p,[r],r.dtype)}const n5={kernelName:Xx,backendName:"webgl",kernelFunc:t5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:a,strides:o,pad:l,dataFormat:c,dimRoundingMode:d}=s,f=[1,1,1],p=ga(r.shape,a,o,f,l,d,c),g=new ab(p,"max",!1);return t.runWebGLProgram(g,[r],r.dtype)}const r5={kernelName:Kx,backendName:"webgl",kernelFunc:s5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let a5=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,o=e.effectiveFilterWidth,l=a-1-e.padInfo.top,c=o-1-e.padInfo.left,d=a*o-1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${d} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${o} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},i5=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,p=c-1-e.padInfo.front,g=d-1-e.padInfo.top,y=f-1-e.padInfo.left,x=c*d*f-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${g}, ${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${x} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${d} * ${f} +
                  wR * ${f} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o5(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,o=a,{filterSize:l,strides:c,pad:d,dimRoundingMode:f}=s,p=[1,1,1],g=ga(o.shape,l,c,p,d,f),y=new ab(g,"max",!0),x=t.runWebGLProgram(y,[o],o.dtype),w=new i5(g),S=t.runWebGLProgram(w,[r,x],o.dtype);return t.disposeIntermediateTensorInfo(x),S}const u5={kernelName:HC,backendName:"webgl",kernelFunc:o5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l5(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a,output:o}=e,l=a;ed([a,o],"maxPoolGrad");const{filterSize:c,strides:d,pad:f,dimRoundingMode:p}=s,g=Qs(l.shape,c,d,1,f,p),y=!0,x=new Mc(g,"max",y),w=t.runWebGLProgram(x,[l],l.dtype),S=new a5(g),$=t.runWebGLProgram(S,[r,w],l.dtype);return t.disposeIntermediateTensorInfo(w),$}const c5={kernelName:GC,backendName:"webgl",kernelFunc:l5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d5(n,e,t,s){let r=new Mc(t,"max",!1);const a=s.runWebGLProgram(r,[n],"float32");r=new Mc(t,"max",!0,!0,e);const o=s.runWebGLProgram(r,[n],"float32");return[a,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h5={kernelName:Yx,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:a,pad:o,includeBatchInIndex:l}=e,c=t;z(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const d=[1,1];z(Gn(a,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const f=Qs(s.shape,r,a,d,o),[p,g]=d5(s,l,f,c);return[p,g]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f5(n,e,t,s){const r=oe(e),o=oe(n.shape)/r,l=Ee({inputs:{x:n},attrs:{shape:[o,r]},backend:s}),c=Io(l,"float32","mean",s),d=Ee({inputs:{x:c},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(l),s.disposeIntermediateTensorInfo(c),d}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p5={kernelName:Qx,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:a}=e,o=t,l=s.shape.length,c=Pt(a,s.shape);let d=c;const f=_n(d,l),p=f!=null,g=o.shouldExecuteOnCPU([s]),y=[];let x=s;if(p){if(g){const _=o.texData.get(x.dataId).values,O=new Array(l);for(let G=0;G<O.length;G++)O[G]=s.shape[f[G]];const M=nb(_,s.shape,s.dtype,f,O);x=o.makeTensorInfo(O,s.dtype);const W=o.texData.get(x.dataId);W.values=M}else x=Lf(s,f,o);y.push(x),d=An(d.length,l)}ps("sum",d,l);const[w,S]=ks(x.shape,d);let $=w;r&&($=fs(w,c));const N=f5(x,S,$,o);for(const I of y)o.disposeIntermediateTensorInfo(I);return N}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s,l=r.shape.length,c=Pt(a,r.shape);let d=c;const f=_n(d,l);let p=r;f!=null&&(p=Wn({inputs:{x:r},backend:t,attrs:{perm:f}}),d=An(d.length,r.shape.length)),ps("min",d,l);const[g,y]=ks(p.shape,d),x=oe(y),w=Ee({inputs:{x:p},backend:t,attrs:{shape:[-1,x]}}),S=Io(w,w.dtype,"min",t);let $;if(o){const N=fs(g,c);$=Ee({inputs:{x:S},backend:t,attrs:{shape:N}})}else $=Ee({inputs:{x:S},backend:t,attrs:{shape:g}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(S),f!=null&&t.disposeIntermediateTensorInfo(p),$}const g5={kernelName:Zx,backendName:"webgl",kernelFunc:m5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y5=sb+`
  return min(a, b);
`,x5=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ro+`
  return result;
`,b5=wn({opSnippet:y5,packedOpSnippet:x5,cpuKernelImpl:rU}),v5={kernelName:Jx,backendName:"webgl",kernelFunc:b5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let w5=class{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((f,p)=>f[0]+e[p]+f[1]);const r=e.length,a=wt(r),o=t.map(f=>f[0]).join(","),l=t.map((f,p)=>f[0]+e[p]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),d=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${o};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${d};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${d};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${o});
      ${a} end = ${a}(${l});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${d};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${d};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${c}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S5{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((x,w)=>x[0]+e[w]+x[1]);const r=e.length,a=wt(r),o=t.map(x=>x[0]).join(","),l=t.map((x,w)=>x[0]+e[w]).join(","),c=Vn("rc",r),d=Vn("source",r),f=`${c[r-1]} < ${this.outputShape[r-1]}`,p=r===1?"source":`vec2(${d.slice(-2).join()})`,g=s==="reflect"?0:1;let y="";if(r===1){const x=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${g};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${g};
        }
        source -= start;
      `;y=`
        ${a} rc = outputLoc;
        ${x}
        result[0] = getChannel(getX(${d.join()}), ${p});
        ${c[r-1]} += 1;
        if(${f}) {
          ${x}
          result[1] = getChannel(getX(${d.join()}), ${p});
        }
      `}else{const x=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${g}) +
                gte * ((end - 1) * 2 - source + ${g});
        source -= start;
      `;y=`
        ${a} rc = outputLoc;
        ${x}
        result[0] = getChannel(getX(${d.join()}), ${p});
        ${c[r-1]} += 1;
        if(${f}) {
          ${x}
          result[1] = getChannel(getX(${d.join()}), ${p});
        }
        rc = outputLoc;
        ${c[r-2]} += 1;
        if(${c[r-2]} < ${this.outputShape[r-2]}) {
          ${x}
          result[2] = getChannel(getX(${d.join()}), ${p});
          ${c[r-1]} += 1;
          if(${f}) {
            ${x}
            result[3] = getChannel(getX(${d.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${o});
      const ${a} end = ${a}(${l});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${y}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C5=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:a}=t,o=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new S5(s.shape,r,a):new w5(s.shape,r,a);return e.runWebGLProgram(o,[s],s.dtype)},$5={kernelName:e0,backendName:"webgl",kernelFunc:C5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T5=`if (b == 0.0) return NAN;
  return mod(a, b);`,N5=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Ro+`
  return result;
`,E5=wn({opSnippet:T5,packedOpSnippet:N5}),k5={kernelName:t0,backendName:"webgl",kernelFunc:E5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let R5=class{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I5=`
if (a == b) {
  return 1.0;
};
return a / b;`,_5=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,HN=wn({opSnippet:I5,packedOpSnippet:_5,checkOutOfBounds:!0}),A5={kernelName:fx,backendName:"webgl",kernelFunc:HN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CS="return a - b;",jN=wn({opSnippet:CS,packedOpSnippet:CS,supportsComplex:!0,cpuKernelImpl:TU}),D5={kernelName:X0,backendName:"webgl",kernelFunc:jN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qN(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:a}=s,o=Pt([a],r.shape),l=GN({inputs:{x:r},backend:t,attrs:{reductionIndices:o,keepDims:!1}}),c=fs(l.shape,o),d=Ee({inputs:{x:l},backend:t,attrs:{shape:c}}),f=jN({inputs:{a:r,b:d},backend:t}),p=UN({inputs:{x:f},backend:t}),g=zf({inputs:{x:p},backend:t,attrs:{axis:o,keepDims:!1}}),y=Ee({inputs:{x:g},backend:t,attrs:{shape:c}}),x=HN({inputs:{a:p,b:y},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),x}const O5={kernelName:U0,backendName:"webgl",kernelFunc:qN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P5(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:a,seed:o,normalized:l}=s,c=l?r:qN({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),d=c.shape[0],f=c.shape[1],p=new R5(d,f,a),g=[[o]],y=t.runWebGLProgram(p,[c],"int32",g);return l||t.disposeIntermediateTensorInfo(c),y}const F5={kernelName:n0,backendName:"webgl",kernelFunc:P5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L5=Js+`
  return -x;
`,z5=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function B5(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const a=t.texData.get(s.dataId),[o,l]=iU(a.values,s.shape,s.dtype);return t.makeTensorInfo(l,s.dtype,o)}let r;return ee().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Za(s.shape,z5):r=new kr(s.shape,L5),t.runWebGLProgram(r,[s],s.dtype)}const M5={kernelName:r0,backendName:"webgl",kernelFunc:B5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U5=x1;function V5(n){fr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:l,scoreThreshold:c}=s,d=t.readSync(r.dataId),f=t.readSync(a.dataId),{selectedIndices:p}=U5(d,f,o,l,c);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}const W5={kernelName:i0,backendName:"webgl",kernelFunc:V5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G5=$T;function H5(n){fr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:l,scoreThreshold:c,padToMaxOutputSize:d}=s,f=t.readSync(r.dataId),p=t.readSync(a.dataId),{selectedIndices:g,validOutputs:y}=G5(f,p,o,l,c,d);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([],"int32",new Int32Array([y]))]}const j5={kernelName:jC,backendName:"webgl",kernelFunc:H5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q5=b1;function X5(n){fr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:l,scoreThreshold:c,softNmsSigma:d}=s,f=t.readSync(r.dataId),p=t.readSync(a.dataId),g=o,y=l,x=c,w=d,{selectedIndices:S,selectedScores:$}=q5(f,p,g,y,x,w);return[t.makeTensorInfo([S.length],"int32",new Int32Array(S)),t.makeTensorInfo([$.length],"float32",new Float32Array($))]}const K5={kernelName:o0,backendName:"webgl",kernelFunc:X5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Y5=class{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q5=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:a,depth:o,onValue:l,offValue:c}=s,d=oe(r.shape),f=new Y5(d,o,l,c),p=Ee({inputs:{x:r},backend:t,attrs:{shape:[d]}}),g=t.runWebGLProgram(f,[p],a);t.disposeIntermediateTensorInfo(p);const y=[...r.shape,o],x=Ee({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),x},Z5={kernelName:l0,backendName:"webgl",kernelFunc:Q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cf(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=nd({inputs:{input:s},backend:t}),a=cf({inputs:{x:r},backend:t}),o=Bf({inputs:{input:s},backend:t}),l=cf({inputs:{x:o},backend:t}),c=hi({inputs:{real:a,imag:l},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),c}else return sd({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const J5={kernelName:t1,backendName:"webgl",kernelFunc:cf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XN(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=nd({inputs:{input:s},backend:t}),a=XN({inputs:{x:r},backend:t}),o=Bf({inputs:{input:s},backend:t}),l=cf({inputs:{x:o},backend:t}),c=hi({inputs:{real:a,imag:l},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),c}else return sd({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const ej={kernelName:u0,backendName:"webgl",kernelFunc:XN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tj(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return ny({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const a=e[0].shape,o=e[0].dtype;e.forEach(f=>{hs(a,f.shape,"All tensors passed to stack must have matching shapes"),z(o===f.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],c=e.map(f=>{const p=ny({inputs:{input:f},backend:t,attrs:{dim:r}});return l.push(p),p}),d=DN({inputs:c,backend:t,attrs:{axis:r}});return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}const nj={kernelName:c0,backendName:"webgl",kernelFunc:tj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sj=class{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((d,f)=>d[0]+e[f]+d[1]);const r=e.length,a=wt(r),o=t.map(d=>d[0]).join(","),l=t.map((d,f)=>d[0]+e[f]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${o};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${o});
      ${a} end = ${a}(${l});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${c}));
        }
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rj{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((w,S)=>w[0]+e[S]+w[1]);const r=e.length,a=wt(r),o=t.map(w=>w[0]).join(","),l=t.map((w,S)=>w[0]+e[S]).join(","),c=Vn("rc",r),d=Vn("source",r),f=`${c[r-1]} < ${this.outputShape[r-1]}`,p=r===1?"source":`vec2(${d.slice(-2).join()})`,g=[`${a} rc = outputLoc;`,`${c[r-1]} += 1;
       if(${f}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${c[r-2]} += 1;
       if(${c[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${c[r-1]} += 1;
         if(${f}) {`],y=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let x="";for(let w=0,S=r===1?2:4;w<S;w++)x+=`
        ${g[w]}
        if (${y}) {
          result[${w}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${w}] = getChannel(getX(${d.join()}), ${p});
        }
      `;x+=r===1?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${o});
      const ${a} end = ${a}(${l});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${x}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KN=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:a,constantValue:o}=s;if(oe(r.shape)===0){const d=a.map((f,p)=>f[0]+r.shape[p]+f[1]);return sd({backend:t,attrs:{shape:d,value:o,dtype:r.dtype}})}const l=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rj(r.shape,a,o):new sj(r.shape,a,o),c=[[o]];return t.runWebGLProgram(l,[r],r.dtype,c)},aj={kernelName:d0,backendName:"webgl",kernelFunc:KN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ij=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,oj=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Ro+`
  return result;
`,uj=wn({opSnippet:ij,packedOpSnippet:oj}),lj={kernelName:h0,backendName:"webgl",kernelFunc:uj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s,l=r.shape.length,c=[],d=Pt(a,r.shape);let f=d;const p=_n(f,l);let g=r;p!=null&&(g=Wn({inputs:{x:r},backend:t,attrs:{perm:p}}),f=An(f.length,l),c.push(g)),ps("prod",f,l);let y;if(t.shouldExecuteOnCPU([g])){const x=t.texData.get(g.dataId).values,{outVals:w,outShape:S,outDtype:$}=uU(g.shape,g.dtype,x,f);y=t.makeTensorInfo(S,$,w)}else{const[x,w]=ks(g.shape,f),S=oe(w),$=Ee({inputs:{x:g},backend:t,attrs:{shape:[-1,S]}}),N=Cf(r.dtype),I=Io($,N,"prod",t);y=Ee({inputs:{x:I},backend:t,attrs:{shape:x}}),c.push($),c.push(I)}if(o){c.push(y);const x=fs(y.shape,d);y=Ee({inputs:{x:y},backend:t,attrs:{shape:x}})}return c.forEach(x=>t.disposeIntermediateTensorInfo(x)),y}const dj={kernelName:p0,backendName:"webgl",kernelFunc:cj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hj(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:a,indices:o}=e,{outputRaggedRank:l}=s,c=r.map($=>t.readSync($.dataId)),d=r.map($=>$.shape),f=t.readSync(a.dataId),p=t.readSync(o.dataId),[g,y,x]=lU(c,d,f,a.shape,a.dtype,p,o.shape,l),w=g.map($=>t.makeTensorInfo([$.length],"int32",$)),S=t.makeTensorInfo(x,a.dtype,y);return w.concat([S])}const fj={kernelName:qC,backendName:"webgl",kernelFunc:hj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pj(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:a}=e,o=t.readSync(s.dataId),l=t.readSync(r.dataId),c=t.readSync(a.dataId),[d,f]=cU(o,s.shape,s.dtype,l,r.shape,c,a.shape),p=t.makeTensorInfo([d.length],"int32",d),g=t.makeTensorInfo([f.length],s.dtype,f);return[p,g]}const mj={kernelName:XC,backendName:"webgl",kernelFunc:pj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gj(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:a,defaultValue:o,rowPartitionTensors:l}=e,{rowPartitionTypes:c}=s,d=t.readSync(r.dataId),f=t.readSync(a.dataId),p=t.readSync(o.dataId),g=l.map(S=>t.readSync(S.dataId)),y=l.map(S=>S.shape),[x,w]=dU(d,r.shape,f,a.shape,a.dtype,p,o.shape,g,y,c);return t.makeTensorInfo(x,a.dtype,w)}const yj={kernelName:KC,backendName:"webgl",kernelFunc:gj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YN=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:a,dtype:o}=t,l=hU(s,r,a,o);return e.makeTensorInfo([l.length],o,l)},xj={kernelName:m0,backendName:"webgl",kernelFunc:YN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bj="return 1.0 / x;",vj=lt({opSnippet:bj}),wj={kernelName:y0,backendName:"webgl",kernelFunc:vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sj=Js+`
  return (x < 0.0) ? 0.0 : x;
`,Cj=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$j=lt({opSnippet:Sj,packedOpSnippet:Cj}),Tj={kernelName:x0,backendName:"webgl",kernelFunc:$j};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nj=Js+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ej=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,kj=lt({opSnippet:Nj,packedOpSnippet:Ej}),Rj={kernelName:S0,backendName:"webgl",kernelFunc:kj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ij=class{constructor(e,t,s,r,a){this.variableNames=["A"],this.outputShape=[];const[o,l,c,d]=e;this.outputShape=[o,t,s,d];const f=[r&&t>1?l-1:l,r&&s>1?c-1:c],p=[r&&t>1?t-1:t,r&&s>1?s-1:s];let g;a?g="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":g="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${f[0]/p[0]},
          ${f[1]/p[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${g};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _j{constructor(e,t,s,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,l,c,d]=e;this.outputShape=[o,t,s,d];const f=[r&&t>1?l-1:l,r&&s>1?c-1:c],p=[r&&t>1?t-1:t,r&&s>1?s-1:s];let g;a?g="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":g="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${f[0]/p[0]},
          ${f[1]/p[1]},
          ${f[1]/p[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${g};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${d-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aj(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:a,halfPixelCenters:o,size:l}=s,[c,d]=l,f=ee().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new _j(r.shape,c,d,a,o):new Ij(r.shape,c,d,a,o);return t.runWebGLProgram(f,[r],"float32")}const Dj={kernelName:w0,backendName:"webgl",kernelFunc:Aj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Oj=class{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,o,l]=e,c=[s&&o>1?r-1:r,s&&l>1?a-1:a],d=[s&&o>1?o-1:o,s&&l>1?l-1:l],f=c[0]/d[0],p=c[1]/d[1],g=1/f,y=1/p,x=Math.ceil(g)*2+2,w=Math.ceil(y)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${f});
        const float widthScale = float(${p});

        const float invHeightScale = float(${g});
        const float invWidthScale = float(${y});

        const int winHeight = int(${x});
        const int winWidth = int(${w});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pj(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:a}=e,{alignCorners:o}=s,l=new Oj(a.shape,r.shape,o);return t.runWebGLProgram(l,[a],a.dtype)}const Fj={kernelName:QC,backendName:"webgl",kernelFunc:Pj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Lj=class{constructor(e,t,s,r,a){this.variableNames=["A"],this.outputShape=[];const[o,l,c,d]=e;this.outputShape=[o,t,s,d];const f=[r&&t>1?l-1:l,r&&s>1?c-1:c],p=[r&&t>1?t-1:t,r&&s>1?s-1:s],g=r?"0.5":"0.0";let y;a?y="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":y="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${f[0]/p[0]},
          ${f[1]/p[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${y};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${g})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zj{constructor(e,t,s,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,l,c,d]=e;this.outputShape=[o,t,s,d];const f=[r&&t>1?l-1:l,r&&s>1?c-1:c],p=[r&&t>1?t-1:t,r&&s>1?s-1:s],g=r?"0.5":"0.0";let y;a?y="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":y="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${f[0]/p[0]},
          ${f[1]/p[1]},
          ${f[1]/p[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${y};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${g})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${d-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bj(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:a,halfPixelCenters:o,size:l}=s,[c,d]=l,f=ee().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new zj(r.shape,c,d,a,o):new Lj(r.shape,c,d,a,o);return t.runWebGLProgram(f,[r],r.dtype)}const Mj={kernelName:v0,backendName:"webgl",kernelFunc:Bj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Uj=class{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,o,l]=e,c=[s&&o>1?r-1:r,s&&l>1?a-1:a],d=[s&&o>1?o-1:o,s&&l>1?l-1:l],f=c[0]/d[0],p=c[1]/d[1],g=1/f,y=1/p,x=Math.ceil(g)*2+2,w=Math.ceil(y)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${f});
        const float widthScale = float(${p});

        const float invHeightScale = float(${g});
        const float invWidthScale = float(${y});

        const int winHeight = int(${x});
        const int winWidth = int(${w});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float sourceFracRow =
              float(${c[0]}) *
                (float(dyR) / float(${d[0]}));

            float sourceFracCol =
                float(${c[1]}) *
                  (float(dyC) / float(${d[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vj(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:a}=e,{alignCorners:o}=s,l=new Uj(a.shape,r.shape,o);return t.runWebGLProgram(l,[a],a.dtype)}const Wj={kernelName:YC,backendName:"webgl",kernelFunc:Vj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Gj=class{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=l=>t.indexOf(l)!==-1&&e[l]!==1?`${e[l]} - coords[${l}] - 1`:`coords[${l}]`,a=e.map((l,c)=>r(c)).join(","),o=wt(s);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hj{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=Vn("rc",s),a=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,o=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,l=wt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${l} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${c(r.slice())};
          if(${a}){
            result.g = ${d(r.slice())};
          }
          if(${o}) {
            result.b = ${f(r.slice())};
            if(${a}) {
              result.a = ${p(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function c(x){return g(x)}function d(x){return x[s-1]="("+x[s-1]+" + 1)",g(x)}function f(x){return x[s-2]="("+x[s-2]+" + 1)",g(x)}function p(x){return x[s-1]="("+x[s-1]+" + 1)",x[s-2]="("+x[s-2]+" + 1)",g(x)}function g(x){const w=e.map((N,I)=>y(I,x)),S=w.join(","),$=w.slice(-2).join(",");return`getChannel(getX(${S}), vec2(${$}))`}function y(x,w){return t.indexOf(x)!==-1&&e[x]!==1?`${e[x]} - ${w[x]} - 1`:`${w[x]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:a}=s,o=r.shape.length,l=Pt(a,r.shape);if(o===0)return cs({inputs:{x:r},backend:t});const c=ee().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Hj(r.shape,l):new Gj(r.shape,l);return t.runWebGLProgram(c,[r],r.dtype)}const qj={kernelName:C0,backendName:"webgl",kernelFunc:jj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Xj=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let a="";typeof t=="number"?a=`float outputValue = ${t.toFixed(2)};`:a=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kj={kernelName:s1,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:a,center:o}=e,l=t,c=new Xj(s.shape,a),[d,f]=D1(o,s.shape[1],s.shape[2]),p=[[d,f,Math.sin(r),Math.cos(r)]];return l.runWebGLProgram(c,[s],s.dtype,p)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yj=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Qj=lt({opSnippet:Yj}),Zj={kernelName:$0,backendName:"webgl",kernelFunc:Qj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jj="return inversesqrt(x);",e8=lt({opSnippet:Jj,cpuKernelImpl:fU}),t8={kernelName:T0,backendName:"webgl",kernelFunc:e8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ib=class{constructor(e,t,s,r,a,o,l=!0,c=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const d=wt(a.length),f=wt(o.length);let p="";s===1?p="i":s===2&&(p="i, j");const g=`getIndices(${p})`;let y="";r===1?y="i":r===2&&(y="i, coords[1]");const x=`getUpdates(${y})`;let w="";c&&(w="coords[0], coords[1]");const S=`getDefaultValue(${w})`,$=t>1?"strides[j]":"strides";this.userCode=`
        ${d} strides = ${d}(${a});

        void main() {
          ${f} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${g});
              flattenedIndex += index * ${$};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${x};
              found = true;
            }
          }
          setOutput(mix(${S}, sum, float(found)));
        }
      `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n8{constructor(e,t,s,r,a,o,l=!0,c=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o;const d=wt(a.length),f=wt(o.length);let p="";s===1?p="i":s===2&&(p="i, j");const g=`getIndices(${p})`;let y="";r===1?y="i":r===2&&(y="i, coords[1]");const x=`getUpdates(${y})`;let w="";c&&(w="coords[0], coords[1]");const S=`getDefaultValue(${w})`,$=t>1?"strides[j]":"strides",N=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${d} strides = ${d}(${a});

        void main() {
          ${f} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${g});
              flattenedIndex += index.xz * ${$};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${N};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${x};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${S}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s8(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:a}=e,{shape:o}=s,{sliceRank:l,numUpdates:c,sliceSize:d,strides:f,outputSize:p}=$o(a,r,o),g=[p/d,d];if(p===0)return t.makeTensorInfo(o,r.dtype);const y=Ee({inputs:{x:r},backend:t,attrs:{shape:[c,l]}}),x=Ee({inputs:{x:a},backend:t,attrs:{shape:[c,d]}}),w=t.makeTensorInfo([],"float32",new Float32Array([0]));let S;ee().getBool("WEBGL_PACK")?S=new n8(c,l,y.shape.length,x.shape.length,f,g):S=new ib(c,l,y.shape.length,x.shape.length,f,g);const $=t.runWebGLProgram(S,[x,y,w],x.dtype),N=Ee({inputs:{x:$},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo($),t.disposeIntermediateTensorInfo(w),N}const r8={kernelName:N0,backendName:"webgl",kernelFunc:s8};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let a8=class{constructor(e,t,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const a="while (left < right) {",o=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,l=ee().getNumber("WEBGL_VERSION")===2?a:o,c=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${l}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${c} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i8(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:a}=e,{side:o}=s,l=new a8(r.shape[0],r.shape[1],a.shape[1],o),c=[[r.shape[1]]];return t.runWebGLProgram(l,[r,a],"int32",c)}const o8={kernelName:k0,backendName:"webgl",kernelFunc:i8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let u8=class{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,a;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)a="resRC",r="resRC";else{const l=["resRC.x","resRC.y","resRC.z","resRC.w"],c=[],d=[];for(let f=0;f<t.length;f++)d.push(`${l[f]}`),f<e&&c.push(`${l[f]}`);r=c.join(),a=d.join()}const o=wt(s);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l8(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:a}=e,o=new u8(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(o,[s,r,a],Jn(r.dtype,a.dtype))}const c8={kernelName:R0,backendName:"webgl",kernelFunc:l8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d8=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${F1};
  float scale = ${L1};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,h8=lt({opSnippet:d8}),f8={kernelName:I0,backendName:"webgl",kernelFunc:h8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p8=sl+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,m8=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,g8=lt({opSnippet:p8,packedOpSnippet:m8,cpuKernelImpl:mU}),y8={kernelName:P0,backendName:"webgl",kernelFunc:g8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x8=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,b8=lt({opSnippet:x8}),v8={kernelName:O0,backendName:"webgl",kernelFunc:b8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w8=sl+`
  return sin(x);
`,S8=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Ro}
  return result;
`,C8=lt({opSnippet:w8,packedOpSnippet:S8}),$8={kernelName:A0,backendName:"webgl",kernelFunc:C8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T8=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,N8=lt({opSnippet:T8}),E8={kernelName:D0,backendName:"webgl",kernelFunc:N8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k8=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,R8=lt({opSnippet:k8}),I8={kernelName:F0,backendName:"webgl",kernelFunc:R8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _8=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:a,paddings:o}=s;z(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const l=a.reduce(($,N)=>$*N),c=[[0,0]];c.push(...o);for(let $=1+a.length;$<r.shape.length;++$)c.push([0,0]);const d=[],f=KN({inputs:{x:r},backend:t,attrs:{paddings:c,constantValue:0}}),p=Yc(f.shape,a,l,!1),g=Qc(p.length,a.length,!1),y=Zc(f.shape,a,l,!1),x=Ee({inputs:{x:f},backend:t,attrs:{shape:p}}),w=Wn({inputs:{x},backend:t,attrs:{perm:g}}),S=Ee({inputs:{x:w},backend:t,attrs:{shape:y}});return d.push(f),d.push(x),d.push(w),d.forEach($=>t.disposeIntermediateTensorInfo($)),S},A8={kernelName:B0,backendName:"webgl",kernelFunc:_8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D8(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:a,defaultValue:o}=e;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const l=t.readSync(s.dataId),c=t.readSync(r.dataId),d=t.readSync(a.dataId),f=t.readSync(o.dataId)[0],[p,g,y,x,w]=yU(l,s.shape,s.dtype,c,r.dtype,d,f);return[t.makeTensorInfo(g,s.dtype,p),t.makeTensorInfo([g[0]],r.dtype,y),t.makeTensorInfo([x.length],"bool",new Uint8Array(x.map(S=>Number(S)))),t.makeTensorInfo([w.length],s.dtype,new Int32Array(w))]}const O8={kernelName:ZC,backendName:"webgl",kernelFunc:D8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P8(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:a}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(t.readSync(r.dataId)),l=t.readSync(s.dataId),c=Array.from(t.readSync(a.dataId)),[d,f,p]=xU(l,s.shape,s.dtype,o,c);return[t.makeTensorInfo(f,s.dtype,d),t.makeTensorInfo([p.length],a.dtype,new Int32Array(p))]}const F8={kernelName:JC,backendName:"webgl",kernelFunc:P8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L8(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:a}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);const o=t.readSync(s.dataId),l=t.readSync(r.dataId),c=t.readSync(a.dataId),[d,f]=vN(o,s.shape,s.dtype,l,c,!0);return t.makeTensorInfo(f,s.dtype,d)}const z8={kernelName:V0,backendName:"webgl",kernelFunc:L8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B8(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:a}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);const o=t.readSync(s.dataId),l=t.readSync(r.dataId),c=t.readSync(a.dataId),[d,f]=vN(o,s.shape,s.dtype,l,c);return t.makeTensorInfo(f,s.dtype,d)}const M8={kernelName:W0,backendName:"webgl",kernelFunc:B8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U8(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:a,defaultValue:o}=e,{outputShape:l}=s,{sliceRank:c,numUpdates:d,sliceSize:f,strides:p,outputSize:g}=$o(a,r,l),y=!1;if(a.dtype==="string"){const $=t.bufferSync(r),N=t.bufferSync(a),I=la(t.readSync(o.dataId)[0]),_=pU($,N,l,g,f,d,c,p,I,y);return t.makeTensorInfo(l,_.dtype,_.values)}const x=new ib(d,c,r.shape.length,a.shape.length,p,[g,1],y),w=t.runWebGLProgram(x,[a,r,o],a.dtype),S=Ee({inputs:{x:w},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(w),S}const V8={kernelName:G0,backendName:"webgl",kernelFunc:U8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:a,axis:o}=s,l=Pt(o,r.shape)[0],c=K1(r,a,l),d=r.shape.length,f=new Array(d).fill(0),p=r.shape.slice();return c.map(g=>{const y=[...p];y[l]=g;const x=rl({inputs:{x:r},backend:t,attrs:{begin:f,size:y}});return f[l]+=g,x})}const G8={kernelName:M0,backendName:"webgl",kernelFunc:W8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $S="return sqrt(x);",H8=lt({opSnippet:$S,packedOpSnippet:$S,cpuKernelImpl:bU}),j8={kernelName:L0,backendName:"webgl",kernelFunc:H8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q8="return x * x;",X8=lt({opSnippet:q8}),K8={kernelName:e$,backendName:"webgl",kernelFunc:X8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TS="return (a - b) * (a - b);",Y8=wn({opSnippet:TS,packedOpSnippet:TS}),Q8={kernelName:H0,backendName:"webgl",kernelFunc:Y8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const a=t.readSync(r.dataId),o=oi(a),l=vU(o,"string",s);return t.makeTensorInfo(r.shape,"string",l)}const J8={kernelName:t$,backendName:"webgl",kernelFunc:Z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eq({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=Js+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,a=new kr(s.shape,r);return t.runWebGLProgram(a,[s],s.dtype)}const tq={kernelName:n1,backendName:"webgl",kernelFunc:eq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let nq=class{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,a=wt(s.length),o=wt(s.length);let l="";if(r===1)l="coords * strides + begin";else{let c=0;l=s.map((d,f)=>(c++,s.length===1?`coords * strides[${f}] + begin[${f}]`:`coords[${c-1}] * strides[${f}] + begin[${f}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${l}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:a,end:o,strides:l,beginMask:c,endMask:d,ellipsisMask:f,newAxisMask:p,shrinkAxisMask:g}=s,{finalShapeSparse:y,finalShape:x,isIdentity:w,sliceDim0:S,isSimpleSlice:$,begin:N,end:I,strides:_}=I1(r.shape,a,o,l,c,d,f,p,g);let O;if(w)O=Ee({inputs:{x:r},backend:t,attrs:{shape:x}});else if(S||$){z(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const W=N1(N,I,_),G=rl({inputs:{x:r},backend:t,attrs:{begin:N,size:W}});O=Ee({inputs:{x:G},backend:t,attrs:{shape:x}}),t.disposeIntermediateTensorInfo(G)}else if(t.shouldExecuteOnCPU([r])){const G=t.readSync(r.dataId),F=xt(r.shape,r.dtype,G),B=wU(y,F,_,N);O=t.makeTensorInfo(x,r.dtype,B.values)}else{const G=new nq(N,_,y);O=t.runWebGLProgram(G,[r],r.dtype)}const M=Ee({inputs:{x:O},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(O),M}const rq={kernelName:j0,backendName:"webgl",kernelFunc:sq};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aq(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:a,leftPad:o,rightPad:l,padWidth:c,preserveShortSequences:d}=s,{data:f,dataSplits:p}=e,g=t.readSync(f.dataId),y=t.readSync(p.dataId),[x,w]=SU(g,y,r,a,o,l,c,d);return[t.makeTensorInfo([x.length],"string",x),t.makeTensorInfo(p.shape,"int32",w)]}const iq={kernelName:q0,backendName:"webgl",kernelFunc:aq};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oq(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:a,delimiter:o}=e;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const l=t.readSync(a.dataId),c=t.readSync(o.dataId)[0],[d,f,p]=CU(l,c,r),g=f.length;return[t.makeTensorInfo([g,2],"int32",d),t.makeTensorInfo([g],"string",f),t.makeTensorInfo([2],"int32",new Int32Array(p))]}const uq={kernelName:n$,backendName:"webgl",kernelFunc:oq};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lq(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:a}=e;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=t.readSync(a.dataId),l=$U(o,r);return t.makeTensorInfo(a.shape,"int32",l)}const cq={kernelName:s$,backendName:"webgl",kernelFunc:lq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dq="return tan(x);",hq=lt({opSnippet:dq}),fq={kernelName:K0,backendName:"webgl",kernelFunc:hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pq=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,mq=lt({opSnippet:pq}),gq={kernelName:Y0,backendName:"webgl",kernelFunc:mq};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yq(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:a,updates:o}=e,{sliceRank:l,numUpdates:c,sliceSize:d,strides:f,outputSize:p}=$o(o,a,r.shape),g=[p/d,d];if(p===0)return t.makeTensorInfo(r.shape,a.dtype);const y=Ee({inputs:{x:a},backend:t,attrs:{shape:[c,l]}}),x=Ee({inputs:{x:o},backend:t,attrs:{shape:[c,d]}}),w=Ee({inputs:{x:r},backend:t,attrs:{shape:g}}),S=new ib(c,l,y.shape.length,x.shape.length,f,g,!1,!0),$=t.runWebGLProgram(S,[x,y,w],w.dtype),N=Ee({inputs:{x:$},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo($),N}const xq={kernelName:E0,backendName:"webgl",kernelFunc:yq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bq=class{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let o=0;o<s.length;o++)s[o]=e[o]*t[o];this.outputShape=s,this.rank=s.length;const r=wt(this.rank),a=vq(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}};function vq(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){const c=t.readSync(r.dataId),d=r.dtype==="string"?c.map(g=>la(g)):c,f=xt(r.shape,r.dtype,d),p=NU(f,a);return t.makeTensorInfo(p.shape,p.dtype,p.values)}const o=new bq(r.shape,a);return t.runWebGLProgram(o,[r],r.dtype)}const wq={kernelName:vf,backendName:"webgl",kernelFunc:QN};let Sq=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Cq=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eo(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function NS(n){let e=1;for(;e<n;)e*=2;return e}function $q(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:a,sorted:o}=s,l=ee().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=ee().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),d=r.shape,f=d[d.length-1];if(t.shouldExecuteOnCPU([r])||f<l||a>c){const B=t.readSync(r.dataId),[D,Q]=EU(B,d,r.dtype,a,o);return[t.makeTensorInfo(D.shape,D.dtype,D.values),t.makeTensorInfo(Q.shape,Q.dtype,Q.values)]}if(a===0)return d[d.length-1]=0,[t.makeTensorInfo(d,r.dtype,[]),t.makeTensorInfo(d,"int32",[])];if(f===1)return[r,sd({attrs:{shape:d,dtype:"int32",value:0},backend:t})];const p=t.texData.get(r.dataId),g=p!==null&&p.isPacked,y=g?t.unpackTensor(r):r,w=oe(d)/f,S=Ee({inputs:{x:y},attrs:{shape:[w,f]},backend:t});g&&eo(t,y);const $=NS(a),N=NS(f);let I=null;const _=()=>I===null?[S,S]:[S,I],O=(B,D,Q)=>{const re=_(),he=new Sq(Q),ne=[[f],[I===null?1:0],[Number.NEGATIVE_INFINITY],[B],[D]],ge=I;I=t.runWebGLProgram(he,re,"int32",ne),eo(t,ge)};for(let B=1;B<$;B*=2){const D=B*2;for(let Q=B;Q>=1;Q/=2)O(D,Q,[w,N])}for(let B=N;B>$;B/=2){const D=_(),Q=new Cq([w,B/2]),he=[[f],[I===null?1:0],[$]],le=I;I=t.runWebGLProgram(Q,D,"int32",he),eo(t,le);const ne=$/2,ge=ne*2;for(let pe=ne;pe>=1;pe/=2)O(ge,pe,I.shape)}let M=I;I=rl({inputs:{x:I},backend:t,attrs:{begin:0,size:[w,a]}}),eo(t,M);let W=WN({inputs:{x:S,indices:I},backend:t,attrs:{axis:1,batchDims:1}});eo(t,S);const G=d.slice(0,-1);G.push(a),M=I,I=Ee({inputs:{x:I},attrs:{shape:G},backend:t}),eo(t,M);const F=W;return W=Ee({inputs:{x:W},attrs:{shape:G},backend:t}),eo(t,F),[W,I]}const Tq={kernelName:Q0,backendName:"webgl",kernelFunc:$q};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Nq=class{constructor(e,t,s,r,a,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const l=s==="nearest"?1:2;let c;switch(r){case"constant":c=1;break;case"reflect":c=2;break;case"wrap":c=3;break;case"nearest":c=4;break;default:c=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${c} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${l} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eq(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:a}=e,{interpolation:o,fillMode:l,fillValue:c,outputShape:d}=s,[f,p,g,y]=r.shape,[x,w]=d??[p,g],S=[f,x,w,y],$=new Nq(p,g,o,l,c,S);return t.runWebGLProgram($,[r,a],"float32")}const kq={kernelName:Z0,backendName:"webgl",kernelFunc:Eq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rq(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:a}=e;ed(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=s.readSync(a.dataId),{outputValues:l,outputShape:c,indices:d}=kU(o,r,a.shape,a.dtype);return[s.makeTensorInfo(c,a.dtype,l),s.makeTensorInfo([d.length],"int32",d)]}const Iq={kernelName:r$,backendName:"webgl",kernelFunc:Rq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _q(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:a}=s;a<0&&(a+=r.shape.length);const o=r,l=o.shape.length,c=r.shape[a],d=new Array(l-1);let f=0;for(let w=0;w<l;w++)w!==a&&(d[f++]=o.shape[w]);const p=[],g=new Array(l).fill(0),y=o.shape.slice();y[a]=1;const x=new Array(c);for(let w=0;w<x.length;w++){g[a]=w;const S=rl({inputs:{x:o},backend:t,attrs:{begin:g,size:y}}),$=Ee({inputs:{x:S},backend:t,attrs:{shape:d}});x[w]=$,p.push(S)}return p.forEach(w=>t.disposeIntermediateTensorInfo(w)),x}const Aq={kernelName:J0,backendName:"webgl",kernelFunc:_q};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dq{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,a=e.inSize,o=e.numSegments,l=o*Math.ceil(a/s);this.outputShape=[r,l];const c="0.0",d="sumValue",f=Math.floor(s/4)*4,p=s%4,g=`
        sumValue += dot(values, segFilter);
    `;let y="";a%s>0&&(y=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let x="";a%s>0&&(x=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${c};

      float getValue(int batch, int inIdx) {
        ${y}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${x}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${o})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${o})));

        float sumValue = 0.0;

        for (int i = 0; i < ${f}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${g}
        }

        int inIdx = inOffset + ${f};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${g}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${g}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${g}
        }
        setOutput(${d});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:a}=e,{numSegments:o}=s,l=r.shape.length,c=[];let d=0;const f=_n([d],l);let p=r;f!=null&&(p=Wn({inputs:{x:r},backend:t,attrs:{perm:f}}),c.push(p),d=An(1,l)[0]);const g=Y1(p.shape,d,o),y=oe([p.shape[d]]),x=Ee({inputs:{x:p},backend:t,attrs:{shape:[-1,y]}});c.push(x);const w=Cf(r.dtype),S=(_,O,M,W,G)=>{const F=_.shape[0],B=_.shape[1],D=nN(B,G),Q={windowSize:D,inSize:B,batchSize:F,numSegments:G},re=new Dq(Q,O),he=t.compileAndRun(re,[_,M],W);if(c.push(he),he.shape[1]===G)return he;const le=YN({backend:t,attrs:{start:0,stop:G,step:1,dtype:"float32"}}),ne=QN({inputs:{x:le},backend:t,attrs:{reps:[B/D]}});return c.push(le),c.push(ne),S(he,O,ne,W,G)},$=S(x,"unsortedSegmentSum",a,w,o),N=Ee({inputs:{x:$},backend:t,attrs:{shape:g}});let I=N;if(f!=null){c.push(N);const _=Kc(f);I=Wn({inputs:{x:I},backend:t,attrs:{perm:_}})}return c.forEach(_=>t.disposeIntermediateTensorInfo(_)),I}const Pq={kernelName:e1,backendName:"webgl",kernelFunc:Oq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fq=[bV,wV,$V,EV,RV,AV,OV,FV,MV,VV,HV,XV,QV,tW,rW,iW,uW,hW,pW,gW,vW,EW,RW,DW,PW,UW,WW,qW,nV,YW,tG,aG,dG,pG,gG,xG,vG,$G,EG,IG,AG,OG,FG,BG,UG,HG,qG,YG,JG,tH,aH,lH,fH,gH,bH,vH,SH,$H,NH,kH,IH,OH,LH,MH,VH,HH,XH,ZH,n6,tV,r6,JW,o6,c6,f6,rV,y6,w6,C6,E6,I6,O6,L6,U6,H6,X6,Y6,e5,n5,r5,u5,c5,h5,p5,g5,v5,$5,k5,F5,oV,M5,W5,j5,K5,LW,Z5,ej,nj,aj,lj,iV,dj,fj,mj,yj,xj,zW,A5,wj,Tj,Rj,lV,Dj,Fj,Mj,Wj,qj,Kj,Zj,t8,r8,o8,c8,f8,y8,v8,$8,E8,TW,O5,I8,A8,O8,F8,z8,M8,V8,G8,j8,K8,Q8,J8,tq,rq,iq,uq,cq,D5,gV,fq,gq,xq,wq,Tq,kq,yV,Iq,Aq,Pq,J5];for(const n of Fq)a$(n);var bg={},ES;function Lq(){return ES||(ES=1,(function(){var n;function e(v){var T=0;return function(){return T<v.length?{done:!1,value:v[T++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(v,T,k){return v==Array.prototype||v==Object.prototype||(v[T]=k.value),v};function s(v){v=[typeof globalThis=="object"&&globalThis,v,typeof window=="object"&&window,typeof self=="object"&&self,typeof lw=="object"&&lw];for(var T=0;T<v.length;++T){var k=v[T];if(k&&k.Math==Math)return k}throw Error("Cannot find global object")}var r=s(this);function a(v,T){if(T)e:{var k=r;v=v.split(".");for(var A=0;A<v.length-1;A++){var U=v[A];if(!(U in k))break e;k=k[U]}v=v[v.length-1],A=k[v],T=T(A),T!=A&&T!=null&&t(k,v,{configurable:!0,writable:!0,value:T})}}a("Symbol",function(v){function T(H){if(this instanceof T)throw new TypeError("Symbol is not a constructor");return new k(A+(H||"")+"_"+U++,H)}function k(H,V){this.h=H,t(this,"description",{configurable:!0,writable:!0,value:V})}if(v)return v;k.prototype.toString=function(){return this.h};var A="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",U=0;return T}),a("Symbol.iterator",function(v){if(v)return v;v=Symbol("Symbol.iterator");for(var T="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),k=0;k<T.length;k++){var A=r[T[k]];typeof A=="function"&&typeof A.prototype[v]!="function"&&t(A.prototype,v,{configurable:!0,writable:!0,value:function(){return o(e(this))}})}return v});function o(v){return v={next:v},v[Symbol.iterator]=function(){return this},v}function l(v){var T=typeof Symbol<"u"&&Symbol.iterator&&v[Symbol.iterator];return T?T.call(v):{next:e(v)}}function c(v){if(!(v instanceof Array)){v=l(v);for(var T,k=[];!(T=v.next()).done;)k.push(T.value);v=k}return v}var d=typeof Object.assign=="function"?Object.assign:function(v,T){for(var k=1;k<arguments.length;k++){var A=arguments[k];if(A)for(var U in A)Object.prototype.hasOwnProperty.call(A,U)&&(v[U]=A[U])}return v};a("Object.assign",function(v){return v||d});var f=typeof Object.create=="function"?Object.create:function(v){function T(){}return T.prototype=v,new T},p;if(typeof Object.setPrototypeOf=="function")p=Object.setPrototypeOf;else{var g;e:{var y={a:!0},x={};try{x.__proto__=y,g=x.a;break e}catch{}g=!1}p=g?function(v,T){if(v.__proto__=T,v.__proto__!==T)throw new TypeError(v+" is not extensible");return v}:null}var w=p;function S(v,T){if(v.prototype=f(T.prototype),v.prototype.constructor=v,w)w(v,T);else for(var k in T)if(k!="prototype")if(Object.defineProperties){var A=Object.getOwnPropertyDescriptor(T,k);A&&Object.defineProperty(v,k,A)}else v[k]=T[k];v.za=T.prototype}function $(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function N(v){if(v.m)throw new TypeError("Generator is already running");v.m=!0}$.prototype.u=function(v){this.i=v};function I(v,T){v.l={ma:T,na:!0},v.h=v.s||v.v}$.prototype.return=function(v){this.l={return:v},this.h=this.v};function _(v,T,k){return v.h=k,{value:T}}function O(v){this.h=new $,this.i=v}function M(v,T){N(v.h);var k=v.h.j;return k?W(v,"return"in k?k.return:function(A){return{value:A,done:!0}},T,v.h.return):(v.h.return(T),G(v))}function W(v,T,k,A){try{var U=T.call(v.h.j,k);if(!(U instanceof Object))throw new TypeError("Iterator result "+U+" is not an object");if(!U.done)return v.h.m=!1,U;var H=U.value}catch(V){return v.h.j=null,I(v.h,V),G(v)}return v.h.j=null,A.call(v.h,H),G(v)}function G(v){for(;v.h.h;)try{var T=v.i(v.h);if(T)return v.h.m=!1,{value:T.value,done:!1}}catch(k){v.h.i=void 0,I(v.h,k)}if(v.h.m=!1,v.h.l){if(T=v.h.l,v.h.l=null,T.na)throw T.ma;return{value:T.return,done:!0}}return{value:void 0,done:!0}}function F(v){this.next=function(T){return N(v.h),v.h.j?T=W(v,v.h.j.next,T,v.h.u):(v.h.u(T),T=G(v)),T},this.throw=function(T){return N(v.h),v.h.j?T=W(v,v.h.j.throw,T,v.h.u):(I(v.h,T),T=G(v)),T},this.return=function(T){return M(v,T)},this[Symbol.iterator]=function(){return this}}function B(v){function T(A){return v.next(A)}function k(A){return v.throw(A)}return new Promise(function(A,U){function H(V){V.done?A(V.value):Promise.resolve(V.value).then(T,k).then(H,U)}H(v.next())})}function D(v){return B(new F(new O(v)))}a("Promise",function(v){function T(V){this.i=0,this.j=void 0,this.h=[],this.u=!1;var Y=this.l();try{V(Y.resolve,Y.reject)}catch(ie){Y.reject(ie)}}function k(){this.h=null}function A(V){return V instanceof T?V:new T(function(Y){Y(V)})}if(v)return v;k.prototype.i=function(V){if(this.h==null){this.h=[];var Y=this;this.j(function(){Y.m()})}this.h.push(V)};var U=r.setTimeout;k.prototype.j=function(V){U(V,0)},k.prototype.m=function(){for(;this.h&&this.h.length;){var V=this.h;this.h=[];for(var Y=0;Y<V.length;++Y){var ie=V[Y];V[Y]=null;try{ie()}catch(ye){this.l(ye)}}}this.h=null},k.prototype.l=function(V){this.j(function(){throw V})},T.prototype.l=function(){function V(ye){return function(Ne){ie||(ie=!0,ye.call(Y,Ne))}}var Y=this,ie=!1;return{resolve:V(this.I),reject:V(this.m)}},T.prototype.I=function(V){if(V===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(V instanceof T)this.L(V);else{e:switch(typeof V){case"object":var Y=V!=null;break e;case"function":Y=!0;break e;default:Y=!1}Y?this.F(V):this.s(V)}},T.prototype.F=function(V){var Y=void 0;try{Y=V.then}catch(ie){this.m(ie);return}typeof Y=="function"?this.M(Y,V):this.s(V)},T.prototype.m=function(V){this.v(2,V)},T.prototype.s=function(V){this.v(1,V)},T.prototype.v=function(V,Y){if(this.i!=0)throw Error("Cannot settle("+V+", "+Y+"): Promise already settled in state"+this.i);this.i=V,this.j=Y,this.i===2&&this.K(),this.H()},T.prototype.K=function(){var V=this;U(function(){if(V.D()){var Y=r.console;typeof Y<"u"&&Y.error(V.j)}},1)},T.prototype.D=function(){if(this.u)return!1;var V=r.CustomEvent,Y=r.Event,ie=r.dispatchEvent;return typeof ie>"u"?!0:(typeof V=="function"?V=new V("unhandledrejection",{cancelable:!0}):typeof Y=="function"?V=new Y("unhandledrejection",{cancelable:!0}):(V=r.document.createEvent("CustomEvent"),V.initCustomEvent("unhandledrejection",!1,!0,V)),V.promise=this,V.reason=this.j,ie(V))},T.prototype.H=function(){if(this.h!=null){for(var V=0;V<this.h.length;++V)H.i(this.h[V]);this.h=null}};var H=new k;return T.prototype.L=function(V){var Y=this.l();V.T(Y.resolve,Y.reject)},T.prototype.M=function(V,Y){var ie=this.l();try{V.call(Y,ie.resolve,ie.reject)}catch(ye){ie.reject(ye)}},T.prototype.then=function(V,Y){function ie(Fe,Ie){return typeof Fe=="function"?function(Me){try{ye(Fe(Me))}catch(He){Ne(He)}}:Ie}var ye,Ne,Ue=new T(function(Fe,Ie){ye=Fe,Ne=Ie});return this.T(ie(V,ye),ie(Y,Ne)),Ue},T.prototype.catch=function(V){return this.then(void 0,V)},T.prototype.T=function(V,Y){function ie(){switch(ye.i){case 1:V(ye.j);break;case 2:Y(ye.j);break;default:throw Error("Unexpected state: "+ye.i)}}var ye=this;this.h==null?H.i(ie):this.h.push(ie),this.u=!0},T.resolve=A,T.reject=function(V){return new T(function(Y,ie){ie(V)})},T.race=function(V){return new T(function(Y,ie){for(var ye=l(V),Ne=ye.next();!Ne.done;Ne=ye.next())A(Ne.value).T(Y,ie)})},T.all=function(V){var Y=l(V),ie=Y.next();return ie.done?A([]):new T(function(ye,Ne){function Ue(Me){return function(He){Fe[Me]=He,Ie--,Ie==0&&ye(Fe)}}var Fe=[],Ie=0;do Fe.push(void 0),Ie++,A(ie.value).T(Ue(Fe.length-1),Ne),ie=Y.next();while(!ie.done)})},T});function Q(v,T){v instanceof String&&(v+="");var k=0,A=!1,U={next:function(){if(!A&&k<v.length){var H=k++;return{value:T(H,v[H]),done:!1}}return A=!0,{done:!0,value:void 0}}};return U[Symbol.iterator]=function(){return U},U}a("Array.prototype.keys",function(v){return v||function(){return Q(this,function(T){return T})}}),a("Array.prototype.fill",function(v){return v||function(T,k,A){var U=this.length||0;for(0>k&&(k=Math.max(0,U+k)),(A==null||A>U)&&(A=U),A=Number(A),0>A&&(A=Math.max(0,U+A)),k=Number(k||0);k<A;k++)this[k]=T;return this}});function re(v){return v||Array.prototype.fill}a("Int8Array.prototype.fill",re),a("Uint8Array.prototype.fill",re),a("Uint8ClampedArray.prototype.fill",re),a("Int16Array.prototype.fill",re),a("Uint16Array.prototype.fill",re),a("Int32Array.prototype.fill",re),a("Uint32Array.prototype.fill",re),a("Float32Array.prototype.fill",re),a("Float64Array.prototype.fill",re),a("Object.is",function(v){return v||function(T,k){return T===k?T!==0||1/T===1/k:T!==T&&k!==k}}),a("Array.prototype.includes",function(v){return v||function(T,k){var A=this;A instanceof String&&(A=String(A));var U=A.length;for(k=k||0,0>k&&(k=Math.max(k+U,0));k<U;k++){var H=A[k];if(H===T||Object.is(H,T))return!0}return!1}}),a("String.prototype.includes",function(v){return v||function(T,k){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(T instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(T,k||0)!==-1}});var he=this||self;function le(v,T){v=v.split(".");var k=he;v[0]in k||typeof k.execScript>"u"||k.execScript("var "+v[0]);for(var A;v.length&&(A=v.shift());)v.length||T===void 0?k[A]&&k[A]!==Object.prototype[A]?k=k[A]:k=k[A]={}:k[A]=T}function ne(v){var T;e:{if((T=he.navigator)&&(T=T.userAgent))break e;T=""}return T.indexOf(v)!=-1}var ge=Array.prototype.map?function(v,T){return Array.prototype.map.call(v,T,void 0)}:function(v,T){for(var k=v.length,A=Array(k),U=typeof v=="string"?v.split(""):v,H=0;H<k;H++)H in U&&(A[H]=T.call(void 0,U[H],H,v));return A},pe={},Se=null;function q(v){var T=v.length,k=3*T/4;k%3?k=Math.floor(k):"=.".indexOf(v[T-1])!=-1&&(k="=.".indexOf(v[T-2])!=-1?k-2:k-1);var A=new Uint8Array(k),U=0;return ue(v,function(H){A[U++]=H}),U!==k?A.subarray(0,U):A}function ue(v,T){function k(ie){for(;A<v.length;){var ye=v.charAt(A++),Ne=Se[ye];if(Ne!=null)return Ne;if(!/^[\s\xa0]*$/.test(ye))throw Error("Unknown base64 encoding at char: "+ye)}return ie}Te();for(var A=0;;){var U=k(-1),H=k(0),V=k(64),Y=k(64);if(Y===64&&U===-1)break;T(U<<2|H>>4),V!=64&&(T(H<<4&240|V>>2),Y!=64&&T(V<<6&192|Y))}}function Te(){if(!Se){Se={};for(var v="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),T=["+/=","+/","-_=","-_.","-_"],k=0;5>k;k++){var A=v.concat(T[k].split(""));pe[k]=A;for(var U=0;U<A.length;U++){var H=A[U];Se[H]===void 0&&(Se[H]=U)}}}}var ke=typeof Uint8Array<"u",ve=!(ne("Trident")||ne("MSIE"))&&typeof he.btoa=="function";function Xe(v){if(!ve){var T;T===void 0&&(T=0),Te(),T=pe[T];for(var k=Array(Math.floor(v.length/3)),A=T[64]||"",U=0,H=0;U<v.length-2;U+=3){var V=v[U],Y=v[U+1],ie=v[U+2],ye=T[V>>2];V=T[(V&3)<<4|Y>>4],Y=T[(Y&15)<<2|ie>>6],ie=T[ie&63],k[H++]=ye+V+Y+ie}switch(ye=0,ie=A,v.length-U){case 2:ye=v[U+1],ie=T[(ye&15)<<2]||A;case 1:v=v[U],k[H]=T[v>>2]+T[(v&3)<<4|ye>>4]+ie+A}return k.join("")}for(T="";10240<v.length;)T+=String.fromCharCode.apply(null,v.subarray(0,10240)),v=v.subarray(10240);return T+=String.fromCharCode.apply(null,v),btoa(T)}var Be=RegExp("[-_.]","g");function St(v){switch(v){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function nt(v){if(!ve)return q(v);Be.test(v)&&(v=v.replace(Be,St)),v=atob(v);for(var T=new Uint8Array(v.length),k=0;k<v.length;k++)T[k]=v.charCodeAt(k);return T}var Rt;function mt(){return Rt||(Rt=new Uint8Array(0))}var rn={},pi=typeof Uint8Array.prototype.slice=="function",Ct=0,Zt=0;function mi(v){var T=0>v;v=Math.abs(v);var k=v>>>0;v=Math.floor((v-k)/4294967296),T&&(k=l(Oo(k,v)),T=k.next().value,v=k.next().value,k=T),Ct=k>>>0,Zt=v>>>0}var wa=typeof BigInt=="function";function Oo(v,T){return T=~T,v?v=~v+1:T+=1,[v,T]}function gi(v,T){this.i=v>>>0,this.h=T>>>0}function Po(v){if(!v)return Fo||(Fo=new gi(0,0));if(!/^-?\d+$/.test(v))return null;if(16>v.length)mi(Number(v));else if(wa)v=BigInt(v),Ct=Number(v&BigInt(4294967295))>>>0,Zt=Number(v>>BigInt(32)&BigInt(4294967295));else{var T=+(v[0]==="-");Zt=Ct=0;for(var k=v.length,A=T,U=(k-T)%6+T;U<=k;A=U,U+=6)A=Number(v.slice(A,U)),Zt*=1e6,Ct=1e6*Ct+A,4294967296<=Ct&&(Zt+=Ct/4294967296|0,Ct%=4294967296);T&&(T=l(Oo(Ct,Zt)),v=T.next().value,T=T.next().value,Ct=v,Zt=T)}return new gi(Ct,Zt)}var Fo;function Lo(v,T){return Error("Invalid wire type: "+v+" (at position "+T+")")}function ul(){return Error("Failed to read varint, encoding is invalid.")}function ad(v,T){return Error("Tried to read past the end of the data "+T+" > "+v)}function fn(){throw Error("Invalid UTF8")}function id(v,T){return T=String.fromCharCode.apply(null,T),v==null?T:v+T}var yi=void 0,zo,Bo=typeof TextDecoder<"u",od,ud=typeof TextEncoder<"u",ld;function cd(v){if(v!==rn)throw Error("illegal external caller")}function er(v,T){if(cd(T),this.V=v,v!=null&&v.length===0)throw Error("ByteString should be constructed with non-empty values")}function Cn(){return ld||(ld=new er(null,rn))}function dd(v){cd(rn);var T=v.V;return T=T==null||ke&&T!=null&&T instanceof Uint8Array?T:typeof T=="string"?nt(T):null,T==null?T:v.V=T}function yr(v){if(typeof v=="string")return{buffer:nt(v),C:!1};if(Array.isArray(v))return{buffer:new Uint8Array(v),C:!1};if(v.constructor===Uint8Array)return{buffer:v,C:!1};if(v.constructor===ArrayBuffer)return{buffer:new Uint8Array(v),C:!1};if(v.constructor===er)return{buffer:dd(v)||mt(),C:!0};if(v instanceof Uint8Array)return{buffer:new Uint8Array(v.buffer,v.byteOffset,v.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function On(v,T){this.i=null,this.m=!1,this.h=this.j=this.l=0,ll(this,v,T)}function ll(v,T,k){k=k===void 0?{}:k,v.S=k.S===void 0?!1:k.S,T&&(T=yr(T),v.i=T.buffer,v.m=T.C,v.l=0,v.j=v.i.length,v.h=v.l)}On.prototype.reset=function(){this.h=this.l};function Pr(v,T){if(v.h=T,T>v.j)throw ad(v.j,T)}function xi(v){var T=v.i,k=v.h,A=T[k++],U=A&127;if(A&128&&(A=T[k++],U|=(A&127)<<7,A&128&&(A=T[k++],U|=(A&127)<<14,A&128&&(A=T[k++],U|=(A&127)<<21,A&128&&(A=T[k++],U|=A<<28,A&128&&T[k++]&128&&T[k++]&128&&T[k++]&128&&T[k++]&128&&T[k++]&128)))))throw ul();return Pr(v,k),U}function bi(v,T){if(0>T)throw Error("Tried to read a negative byte length: "+T);var k=v.h,A=k+T;if(A>v.j)throw ad(T,v.j-k);return v.h=A,k}var vi=[];function tr(){this.h=[]}tr.prototype.length=function(){return this.h.length},tr.prototype.end=function(){var v=this.h;return this.h=[],v};function wi(v,T,k){for(;0<k||127<T;)v.h.push(T&127|128),T=(T>>>7|k<<25)>>>0,k>>>=7;v.h.push(T)}function ms(v,T){for(;127<T;)v.h.push(T&127|128),T>>>=7;v.h.push(T)}function cl(v,T){if(vi.length){var k=vi.pop();ll(k,v,T),v=k}else v=new On(v,T);this.h=v,this.j=this.h.h,this.i=this.l=-1,this.setOptions(T)}cl.prototype.setOptions=function(v){v=v===void 0?{}:v,this.ca=v.ca===void 0?!1:v.ca},cl.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function dl(v){var T=v.h;if(T.h==T.j)return!1;v.j=v.h.h;var k=xi(v.h)>>>0;if(T=k>>>3,k&=7,!(0<=k&&5>=k))throw Lo(k,v.j);if(1>T)throw Error("Invalid field number: "+T+" (at position "+v.j+")");return v.l=T,v.i=k,!0}function Si(v){switch(v.i){case 0:if(v.i!=0)Si(v);else e:{v=v.h;for(var T=v.h,k=T+10,A=v.i;T<k;)if((A[T++]&128)===0){Pr(v,T);break e}throw ul()}break;case 1:v=v.h,Pr(v,v.h+8);break;case 2:v.i!=2?Si(v):(T=xi(v.h)>>>0,v=v.h,Pr(v,v.h+T));break;case 5:v=v.h,Pr(v,v.h+4);break;case 3:T=v.l;do{if(!dl(v))throw Error("Unmatched start-group tag: stream EOF");if(v.i==4){if(v.l!=T)throw Error("Unmatched end-group tag");break}Si(v)}while(!0);break;default:throw Lo(v.i,v.j)}}var Sa=[];function Ci(){this.j=[],this.i=0,this.h=new tr}function Ca(v,T){T.length!==0&&(v.j.push(T),v.i+=T.length)}function hd(v,T){if(T=T.R){Ca(v,v.h.end());for(var k=0;k<T.length;k++)Ca(v,dd(T[k])||mt())}}var Is=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function xr(v,T){return Is?v[Is]|=T:v.A!==void 0?v.A|=T:(Object.defineProperties(v,{A:{value:T,configurable:!0,writable:!0,enumerable:!1}}),T)}function hl(v,T){Is?v[Is]&&(v[Is]&=~T):v.A!==void 0&&(v.A&=~T)}function Lt(v){var T;return Is?T=v[Is]:T=v.A,T??0}function an(v,T){Is?v[Is]=T:v.A!==void 0?v.A=T:Object.defineProperties(v,{A:{value:T,configurable:!0,writable:!0,enumerable:!1}})}function Jt(v){return xr(v,1),v}function Pn(v,T){an(T,(v|0)&-51)}function nr(v,T){an(T,(v|18)&-41)}var $i={};function Mo(v){return v!==null&&typeof v=="object"&&!Array.isArray(v)&&v.constructor===Object}var Ti,fl=[];an(fl,23),Ti=Object.freeze(fl);function Fr(v){if(Lt(v.o)&2)throw Error("Cannot mutate an immutable Message")}function Ni(v){var T=v.length;(T=T?v[T-1]:void 0)&&Mo(T)?T.g=1:(T={},v.push((T.g=1,T)))}function br(v){var T=v.i+v.G;return v.B||(v.B=v.o[T]={})}function pn(v,T){return T===-1?null:T>=v.i?v.B?v.B[T]:void 0:v.o[T+v.G]}function Fn(v,T,k,A){Fr(v),_s(v,T,k,A)}function _s(v,T,k,A){v.j&&(v.j=void 0),T>=v.i||A?br(v)[T]=k:(v.o[T+v.G]=k,(v=v.B)&&T in v&&delete v[T])}function Wt(v,T,k,A){var U=pn(v,T);Array.isArray(U)||(U=Ti);var H=Lt(U);if(H&1||Jt(U),A)H&2||xr(U,2),k&1||Object.freeze(U);else{A=!(k&2);var V=H&2;k&1||!V?A&&H&16&&!V&&hl(U,16):(U=Jt(Array.prototype.slice.call(U)),_s(v,T,U))}return U}function Uo(v,T){var k=pn(v,T),A=k==null?k:typeof k=="number"||k==="NaN"||k==="Infinity"||k==="-Infinity"?Number(k):void 0;return A!=null&&A!==k&&_s(v,T,A),A}function pl(v,T,k,A,U){v.h||(v.h={});var H=v.h[k],V=Wt(v,k,3,U);if(!H){var Y=V;H=[];var ie=!!(Lt(v.o)&16);V=!!(Lt(Y)&2);var ye=Y;!U&&V&&(Y=Array.prototype.slice.call(Y));for(var Ne=V,Ue=0;Ue<Y.length;Ue++){var Fe=Y[Ue],Ie=T,Me=!1;if(Me=Me===void 0?!1:Me,Fe=Array.isArray(Fe)?new Ie(Fe):Me?new Ie:void 0,Fe!==void 0){Ie=Fe.o;var He=Me=Lt(Ie);V&&(He|=2),ie&&(He|=16),He!=Me&&an(Ie,He),Ie=He,Ne=Ne||!!(2&Ie),H.push(Fe)}}return v.h[k]=H,ie=Lt(Y),T=ie|33,T=Ne?T&-9:T|8,ie!=T&&(Ne=Y,Object.isFrozen(Ne)&&(Ne=Array.prototype.slice.call(Ne)),an(Ne,T),Y=Ne),ye!==Y&&_s(v,k,Y),(U||A&&V)&&xr(H,2),A&&Object.freeze(H),H}return U||(U=Object.isFrozen(H),A&&!U?Object.freeze(H):!A&&U&&(H=Array.prototype.slice.call(H),v.h[k]=H)),H}function sr(v,T,k){var A=!!(Lt(v.o)&2);if(T=pl(v,T,k,A,A),v=Wt(v,k,3,A),!(A||Lt(v)&8)){for(A=0;A<T.length;A++){if(k=T[A],Lt(k.o)&2){var U=gl(k,!1);U.j=k}else U=k;k!==U&&(T[A]=U,v[A]=U.o)}xr(v,8)}return T}function $n(v,T,k){if(k!=null&&typeof k!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof k+": "+k);Fn(v,T,k)}function As(v,T,k,A,U){Fr(v);var H=pl(v,k,T,!1,!1);return k=A??new k,v=Wt(v,T,2,!1),U!=null?(H.splice(U,0,k),v.splice(U,0,k.o)):(H.push(k),v.push(k.o)),k.C()&&hl(v,8),k}function Vo(v,T){return v??T}function gs(v,T,k){return k=k===void 0?0:k,Vo(Uo(v,T),k)}var Ei;function Gf(v){switch(typeof v){case"number":return isFinite(v)?v:String(v);case"object":if(v)if(Array.isArray(v)){if((Lt(v)&128)!==0)return v=Array.prototype.slice.call(v),Ni(v),v}else{if(ke&&v!=null&&v instanceof Uint8Array)return Xe(v);if(v instanceof er){var T=v.V;return T==null?"":typeof T=="string"?T:v.V=Xe(T)}}}return v}function ki(v,T,k,A){if(v!=null){if(Array.isArray(v))v=$a(v,T,k,A!==void 0);else if(Mo(v)){var U={},H;for(H in v)U[H]=ki(v[H],T,k,A);v=U}else v=T(v,A);return v}}function $a(v,T,k,A){var U=Lt(v);A=A?!!(U&16):void 0,v=Array.prototype.slice.call(v);for(var H=0;H<v.length;H++)v[H]=ki(v[H],T,k,A);return k(U,v),v}function rr(v){return v.ja===$i?v.toJSON():Gf(v)}function ns(v,T){v&128&&Ni(T)}function ml(v,T,k){if(k=k===void 0?nr:k,v!=null){if(ke&&v instanceof Uint8Array)return v.length?new er(new Uint8Array(v),rn):Cn();if(Array.isArray(v)){var A=Lt(v);return A&2?v:T&&!(A&32)&&(A&16||A===0)?(an(v,A|2),v):(v=$a(v,ml,A&4?nr:k,!0),T=Lt(v),T&4&&T&2&&Object.freeze(v),v)}return v.ja===$i?Ri(v):v}}function fd(v,T,k,A,U,H,V){if(v=v.h&&v.h[k]){if(A=Lt(v),A&2?A=v:(H=ge(v,Ri),nr(A,H),Object.freeze(H),A=H),Fr(T),V=A==null?Ti:Jt([]),A!=null){for(H=!!A.length,v=0;v<A.length;v++){var Y=A[v];H=H&&!(Lt(Y.o)&2),V[v]=Y.o}H=(H?8:0)|1,v=Lt(V),(v&H)!==H&&(Object.isFrozen(V)&&(V=Array.prototype.slice.call(V)),an(V,v|H)),T.h||(T.h={}),T.h[k]=A}else T.h&&(T.h[k]=void 0);_s(T,k,V,U)}else Fn(T,k,ml(A,H,V),U)}function Ri(v){return Lt(v.o)&2||(v=gl(v,!0),xr(v.o,2)),v}function gl(v,T){var k=v.o,A=[];xr(A,16);var U=v.constructor.h;if(U&&A.push(U),U=v.B,U){A.length=k.length,A.fill(void 0,A.length,k.length);var H={};A[A.length-1]=H}(Lt(k)&128)!==0&&Ni(A),T=T||v.C()?nr:Pn,H=v.constructor,Ei=A,A=new H(A),Ei=void 0,v.R&&(A.R=v.R.slice()),H=!!(Lt(k)&16);for(var V=U?k.length-1:k.length,Y=0;Y<V;Y++)fd(v,A,Y-v.G,k[Y],!1,H,T);if(U)for(var ie in U)fd(v,A,+ie,U[ie],!0,H,T);return A}function on(v,T,k){v==null&&(v=Ei),Ei=void 0;var A=this.constructor.i||0,U=0<A,H=this.constructor.h,V=!1;if(v==null){v=H?[H]:[];var Y=48,ie=!0;U&&(A=0,Y|=128),an(v,Y)}else{if(!Array.isArray(v)||H&&H!==v[0])throw Error();var ye=Y=xr(v,0);if((ie=(16&ye)!==0)&&((V=(32&ye)!==0)||(ye|=32)),U){if(128&ye)A=0;else if(0<v.length){var Ne=v[v.length-1];if(Mo(Ne)&&"g"in Ne){A=0,ye|=128,delete Ne.g;var Ue=!0,Fe;for(Fe in Ne){Ue=!1;break}Ue&&v.pop()}}}else if(128&ye)throw Error();Y!==ye&&an(v,ye)}this.G=(H?0:-1)-A,this.h=void 0,this.o=v;e:{if(H=this.o.length,A=H-1,H&&(H=this.o[A],Mo(H))){this.B=H,this.i=A-this.G;break e}T!==void 0&&-1<T?(this.i=Math.max(T,A+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!U&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(k){T=ie&&!V&&!0,U=this.i;var Ie;for(ie=0;ie<k.length;ie++)V=k[ie],V<U?(V+=this.G,(A=v[V])?pd(A,T):v[V]=Ti):(Ie||(Ie=br(this)),(A=Ie[V])?pd(A,T):Ie[V]=Ti)}}on.prototype.toJSON=function(){return $a(this.o,rr,ns)},on.prototype.C=function(){return!!(Lt(this.o)&2)};function pd(v,T){if(Array.isArray(v)){var k=Lt(v),A=1;!T||k&2||(A|=16),(k&A)!==A&&an(v,k|A)}}on.prototype.ja=$i,on.prototype.toString=function(){return this.o.toString()};function jn(v,T,k){if(k){var A={},U;for(U in k){var H=k[U],V=H.ra;V||(A.J=H.xa||H.oa.W,H.ia?(A.aa=bl(H.ia),V=function(Y){return function(ie,ye,Ne){return Y.J(ie,ye,Ne,Y.aa)}}(A)):H.ka?(A.Z=vl(H.da.P,H.ka),V=function(Y){return function(ie,ye,Ne){return Y.J(ie,ye,Ne,Y.Z)}}(A)):V=A.J,H.ra=V),V(T,v,H.da),A={J:A.J,aa:A.aa,Z:A.Z}}}hd(T,v)}var Ta=Symbol();function yl(v,T,k){return v[Ta]||(v[Ta]=function(A,U){return T(A,U,k)})}function Wo(v){var T=v[Ta];if(!T){var k=Br(v);T=function(A,U){return jo(A,U,k)},v[Ta]=T}return T}function Na(v){var T=v.ia;if(T)return Wo(T);if(T=v.wa)return yl(v.da.P,T,v.ka)}function md(v){var T=Na(v),k=v.da,A=v.oa.U;return T?function(U,H){return A(U,H,k,T)}:function(U,H){return A(U,H,k)}}function xl(v,T){var k=v[T];return typeof k=="function"&&k.length===0&&(k=k(),v[T]=k),Array.isArray(k)&&(Ds in k||zr in k||0<k.length&&typeof k[0]=="function")?k:void 0}function Lr(v,T,k,A,U,H){T.P=v[0];var V=1;if(v.length>V&&typeof v[V]!="number"){var Y=v[V++];k(T,Y)}for(;V<v.length;){k=v[V++];for(var ie=V+1;ie<v.length&&typeof v[ie]!="number";)ie++;switch(Y=v[V++],ie-=V,ie){case 0:A(T,k,Y);break;case 1:(ie=xl(v,V))?(V++,U(T,k,Y,ie)):A(T,k,Y,v[V++]);break;case 2:ie=V++,ie=xl(v,ie),U(T,k,Y,ie,v[V++]);break;case 3:H(T,k,Y,v[V++],v[V++],v[V++]);break;case 4:H(T,k,Y,v[V++],v[V++],v[V++],v[V++]);break;default:throw Error("unexpected number of binary field arguments: "+ie)}}return T}var Go=Symbol();function bl(v){var T=v[Go];if(!T){var k=Ii(v);T=function(A,U){return ka(A,U,k)},v[Go]=T}return T}function vl(v,T){var k=v[Go];return k||(k=function(A,U){return jn(A,U,T)},v[Go]=k),k}var zr=Symbol();function Hf(v,T){v.push(T)}function jf(v,T,k){v.push(T,k.W)}function Ho(v,T,k,A){var U=bl(A),H=Ii(A).P,V=k.W;v.push(T,function(Y,ie,ye){return V(Y,ie,ye,H,U)})}function wl(v,T,k,A,U,H){var V=vl(A,H),Y=k.W;v.push(T,function(ie,ye,Ne){return Y(ie,ye,Ne,A,V)})}function Ii(v){var T=v[zr];return T||(T=Lr(v,v[zr]=[],Hf,jf,Ho,wl),Ds in v&&zr in v&&(v.length=0),T)}var Ds=Symbol();function Ea(v,T){v[0]=T}function gd(v,T,k,A){var U=k.U;v[T]=A?function(H,V,Y){return U(H,V,Y,A)}:U}function Sl(v,T,k,A,U){var H=k.U,V=Wo(A),Y=Br(A).P;v[T]=function(ie,ye,Ne){return H(ie,ye,Ne,Y,V,U)}}function yd(v,T,k,A,U,H,V){var Y=k.U,ie=yl(A,U,H);v[T]=function(ye,Ne,Ue){return Y(ye,Ne,Ue,A,ie,V)}}function Br(v){var T=v[Ds];return T||(T=Lr(v,v[Ds]={},Ea,gd,Sl,yd),Ds in v&&zr in v&&(v.length=0),T)}function jo(v,T,k){for(;dl(T)&&T.i!=4;){var A=T.l,U=k[A];if(!U){var H=k[0];H&&(H=H[A])&&(U=k[A]=md(H))}if(!U||!U(T,v,A)){U=T,A=v,H=U.j,Si(U);var V=U;if(!V.ca){if(U=V.h.h-H,V.h.h=H,V=V.h,U==0)U=Cn();else{if(H=bi(V,U),V.S&&V.m)U=V.i.subarray(H,H+U);else{V=V.i;var Y=H;U=H+U,U=Y===U?mt():pi?V.slice(Y,U):new Uint8Array(V.subarray(Y,U))}U=U.length==0?Cn():new er(U,rn)}(H=A.R)?H.push(U):A.R=[U]}}}return v}function ka(v,T,k){for(var A=k.length,U=A%2==1,H=U?1:0;H<A;H+=2)(0,k[H+1])(T,v,k[H]);jn(v,T,U?k[0]:void 0)}function ss(v,T){return{U:v,W:T}}var qn=ss(function(v,T,k){if(v.i!==5)return!1;v=v.h;var A=v.i,U=v.h,H=A[U],V=A[U+1],Y=A[U+2];return A=A[U+3],Pr(v,v.h+4),V=(H<<0|V<<8|Y<<16|A<<24)>>>0,v=2*(V>>31)+1,H=V>>>23&255,V&=8388607,Fn(T,k,H==255?V?NaN:1/0*v:H==0?v*Math.pow(2,-149)*V:v*Math.pow(2,H-150)*(V+Math.pow(2,23))),!0},function(v,T,k){if(T=Uo(T,k),T!=null){ms(v.h,8*k+5),v=v.h;var A=+T;A===0?0<1/A?Ct=Zt=0:(Zt=0,Ct=2147483648):isNaN(A)?(Zt=0,Ct=2147483647):(A=(k=0>A?-2147483648:0)?-A:A,34028234663852886e22<A?(Zt=0,Ct=(k|2139095040)>>>0):11754943508222875e-54>A?(A=Math.round(A/Math.pow(2,-149)),Zt=0,Ct=(k|A)>>>0):(T=Math.floor(Math.log(A)/Math.LN2),A*=Math.pow(2,-T),A=Math.round(8388608*A),16777216<=A&&++T,Zt=0,Ct=(k|T+127<<23|A&8388607)>>>0)),k=Ct,v.h.push(k>>>0&255),v.h.push(k>>>8&255),v.h.push(k>>>16&255),v.h.push(k>>>24&255)}}),qo=ss(function(v,T,k){if(v.i!==0)return!1;var A=v.h,U=0,H=v=0,V=A.i,Y=A.h;do{var ie=V[Y++];U|=(ie&127)<<H,H+=7}while(32>H&&ie&128);for(32<H&&(v|=(ie&127)>>4),H=3;32>H&&ie&128;H+=7)ie=V[Y++],v|=(ie&127)<<H;if(Pr(A,Y),128>ie)A=U>>>0,ie=v>>>0,(v=ie&2147483648)&&(A=~A+1>>>0,ie=~ie>>>0,A==0&&(ie=ie+1>>>0)),A=4294967296*ie+(A>>>0);else throw ul();return Fn(T,k,v?-A:A),!0},function(v,T,k){T=pn(T,k),T!=null&&(typeof T=="string"&&Po(T),T!=null&&(ms(v.h,8*k),typeof T=="number"?(v=v.h,mi(T),wi(v,Ct,Zt)):(k=Po(T),wi(v.h,k.i,k.h))))}),xd=ss(function(v,T,k){return v.i!==0?!1:(Fn(T,k,xi(v.h)),!0)},function(v,T,k){if(T=pn(T,k),T!=null&&T!=null)if(ms(v.h,8*k),v=v.h,k=T,0<=k)ms(v,k);else{for(T=0;9>T;T++)v.h.push(k&127|128),k>>=7;v.h.push(1)}}),_i=ss(function(v,T,k){if(v.i!==2)return!1;var A=xi(v.h)>>>0;v=v.h;var U=bi(v,A);if(v=v.i,Bo){var H=v,V;(V=zo)||(V=zo=new TextDecoder("utf-8",{fatal:!0})),v=U+A,H=U===0&&v===H.length?H:H.subarray(U,v);try{var Y=V.decode(H)}catch(Ue){if(yi===void 0){try{V.decode(new Uint8Array([128]))}catch{}try{V.decode(new Uint8Array([97])),yi=!0}catch{yi=!1}}throw!yi&&(zo=void 0),Ue}}else{Y=U,A=Y+A,U=[];for(var ie=null,ye,Ne;Y<A;)ye=v[Y++],128>ye?U.push(ye):224>ye?Y>=A?fn():(Ne=v[Y++],194>ye||(Ne&192)!==128?(Y--,fn()):U.push((ye&31)<<6|Ne&63)):240>ye?Y>=A-1?fn():(Ne=v[Y++],(Ne&192)!==128||ye===224&&160>Ne||ye===237&&160<=Ne||((H=v[Y++])&192)!==128?(Y--,fn()):U.push((ye&15)<<12|(Ne&63)<<6|H&63)):244>=ye?Y>=A-2?fn():(Ne=v[Y++],(Ne&192)!==128||(ye<<28)+(Ne-144)>>30!==0||((H=v[Y++])&192)!==128||((V=v[Y++])&192)!==128?(Y--,fn()):(ye=(ye&7)<<18|(Ne&63)<<12|(H&63)<<6|V&63,ye-=65536,U.push((ye>>10&1023)+55296,(ye&1023)+56320))):fn(),8192<=U.length&&(ie=id(ie,U),U.length=0);Y=id(ie,U)}return Fn(T,k,Y),!0},function(v,T,k){if(T=pn(T,k),T!=null){var A=!1;if(A=A===void 0?!1:A,ud){if(A&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(T))throw Error("Found an unpaired surrogate");T=(od||(od=new TextEncoder)).encode(T)}else{for(var U=0,H=new Uint8Array(3*T.length),V=0;V<T.length;V++){var Y=T.charCodeAt(V);if(128>Y)H[U++]=Y;else{if(2048>Y)H[U++]=Y>>6|192;else{if(55296<=Y&&57343>=Y){if(56319>=Y&&V<T.length){var ie=T.charCodeAt(++V);if(56320<=ie&&57343>=ie){Y=1024*(Y-55296)+ie-56320+65536,H[U++]=Y>>18|240,H[U++]=Y>>12&63|128,H[U++]=Y>>6&63|128,H[U++]=Y&63|128;continue}else V--}if(A)throw Error("Found an unpaired surrogate");Y=65533}H[U++]=Y>>12|224,H[U++]=Y>>6&63|128}H[U++]=Y&63|128}}T=U===H.length?H:H.subarray(0,U)}ms(v.h,8*k+2),ms(v.h,T.length),Ca(v,v.h.end()),Ca(v,T)}}),Ai=ss(function(v,T,k,A,U){if(v.i!==2)return!1;T=As(T,k,A),k=v.h.j,A=xi(v.h)>>>0;var H=v.h.h+A,V=H-k;if(0>=V&&(v.h.j=H,U(T,v,void 0,void 0,void 0),V=H-v.h.h),V)throw Error("Message parsing ended unexpectedly. Expected to read "+(A+" bytes, instead read "+(A-V)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return v.h.h=H,v.h.j=k,!0},function(v,T,k,A,U){if(T=sr(T,A,k),T!=null)for(A=0;A<T.length;A++){var H=v;ms(H.h,8*k+2);var V=H.h.end();Ca(H,V),V.push(H.i),H=V,U(T[A],v),V=v;var Y=H.pop();for(Y=V.i+V.h.length()-Y;127<Y;)H.push(Y&127|128),Y>>>=7,V.i++;H.push(Y),V.i++}});function Xo(v){return function(T,k){e:{if(Sa.length){var A=Sa.pop();A.setOptions(k),ll(A.h,T,k),T=A}else T=new cl(T,k);try{var U=Br(v),H=jo(new U.P,T,U);break e}finally{U=T.h,U.i=null,U.m=!1,U.l=0,U.j=0,U.h=0,U.S=!1,T.l=-1,T.i=-1,100>Sa.length&&Sa.push(T)}H=void 0}return H}}function mn(v){return function(){var T=new Ci;ka(this,T,Ii(v)),Ca(T,T.h.end());for(var k=new Uint8Array(T.i),A=T.j,U=A.length,H=0,V=0;V<U;V++){var Y=A[V];k.set(Y,H),H+=Y.length}return T.j=[k],k}}function rs(v){on.call(this,v)}S(rs,on);var Di=[rs,1,xd,2,qn,3,_i,4,_i];rs.prototype.l=mn(Di);function Mr(v){on.call(this,v,-1,qf)}S(Mr,on),Mr.prototype.addClassification=function(v,T){return As(this,1,rs,v,T),this};var qf=[1],Cl=Xo([Mr,1,Ai,Di]);function Ur(v){on.call(this,v)}S(Ur,on);var Ra=[Ur,1,qn,2,qn,3,qn,4,qn,5,qn];Ur.prototype.l=mn(Ra);function Oi(v){on.call(this,v,-1,bd)}S(Oi,on);var bd=[1],Xf=Xo([Oi,1,Ai,Ra]);function Ko(v){on.call(this,v)}S(Ko,on);var vd=[Ko,1,qn,2,qn,3,qn,4,qn,5,qn,6,qo],$l=Xo(vd);Ko.prototype.l=mn(vd);function wd(v,T,k){if(k=v.createShader(k===0?v.VERTEX_SHADER:v.FRAGMENT_SHADER),v.shaderSource(k,T),v.compileShader(k),!v.getShaderParameter(k,v.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+v.getShaderInfoLog(k));return k}function Kf(v){return sr(v,rs,1).map(function(T){var k=pn(T,1);return{index:k??0,qa:gs(T,2),label:pn(T,3)!=null?Vo(pn(T,3),""):void 0,displayName:pn(T,4)!=null?Vo(pn(T,4),""):void 0}})}function Yf(v){return{x:gs(v,1),y:gs(v,2),z:gs(v,3),visibility:Uo(v,4)!=null?gs(v,4):void 0}}function Tl(v){return sr(Xf(v),Ur,1).map(Yf)}function Nl(v,T){this.i=v,this.h=T,this.m=0}function El(v,T,k){return Qf(v,T),typeof v.h.canvas.transferToImageBitmap=="function"?Promise.resolve(v.h.canvas.transferToImageBitmap()):k?Promise.resolve(v.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(v.h.canvas):(v.j===void 0&&(v.j=document.createElement("canvas")),new Promise(function(A){v.j.height=v.h.canvas.height,v.j.width=v.h.canvas.width,v.j.getContext("2d",{}).drawImage(v.h.canvas,0,0,v.h.canvas.width,v.h.canvas.height),A(v.j)}))}function Qf(v,T){var k=v.h;if(v.s===void 0){var A=wd(k,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),U=wd(k,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),H=k.createProgram();if(k.attachShader(H,A),k.attachShader(H,U),k.linkProgram(H),!k.getProgramParameter(H,k.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+k.getProgramInfoLog(H));A=v.s=H,k.useProgram(A),U=k.getUniformLocation(A,"sampler0"),v.l={O:k.getAttribLocation(A,"aVertex"),N:k.getAttribLocation(A,"aTex"),ya:U},v.v=k.createBuffer(),k.bindBuffer(k.ARRAY_BUFFER,v.v),k.enableVertexAttribArray(v.l.O),k.vertexAttribPointer(v.l.O,2,k.FLOAT,!1,0,0),k.bufferData(k.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),k.STATIC_DRAW),k.bindBuffer(k.ARRAY_BUFFER,null),v.u=k.createBuffer(),k.bindBuffer(k.ARRAY_BUFFER,v.u),k.enableVertexAttribArray(v.l.N),k.vertexAttribPointer(v.l.N,2,k.FLOAT,!1,0,0),k.bufferData(k.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),k.STATIC_DRAW),k.bindBuffer(k.ARRAY_BUFFER,null),k.uniform1i(U,0)}A=v.l,k.useProgram(v.s),k.canvas.width=T.width,k.canvas.height=T.height,k.viewport(0,0,T.width,T.height),k.activeTexture(k.TEXTURE0),v.i.bindTexture2d(T.glName),k.enableVertexAttribArray(A.O),k.bindBuffer(k.ARRAY_BUFFER,v.v),k.vertexAttribPointer(A.O,2,k.FLOAT,!1,0,0),k.enableVertexAttribArray(A.N),k.bindBuffer(k.ARRAY_BUFFER,v.u),k.vertexAttribPointer(A.N,2,k.FLOAT,!1,0,0),k.bindFramebuffer(k.DRAW_FRAMEBUFFER?k.DRAW_FRAMEBUFFER:k.FRAMEBUFFER,null),k.clearColor(0,0,0,0),k.clear(k.COLOR_BUFFER_BIT),k.colorMask(!0,!0,!0,!0),k.drawArrays(k.TRIANGLE_FAN,0,4),k.disableVertexAttribArray(A.O),k.disableVertexAttribArray(A.N),k.bindBuffer(k.ARRAY_BUFFER,null),v.i.bindTexture2d(0)}function Zf(v){this.h=v}var Jf=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function ep(v,T){return T+v}function Yo(v,T){window[v]=T}function tp(v){var T=document.createElement("script");return T.setAttribute("src",v),T.setAttribute("crossorigin","anonymous"),new Promise(function(k){T.addEventListener("load",function(){k()},!1),T.addEventListener("error",function(){k()},!1),document.body.appendChild(T)})}function np(){return D(function(v){switch(v.h){case 1:return v.s=2,_(v,WebAssembly.instantiate(Jf),4);case 4:v.h=3,v.s=0;break;case 2:return v.s=0,v.l=null,v.return(!1);case 3:return v.return(!0)}})}function kl(v){if(this.h=v,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=v&&v.locateFile||ep,typeof window=="object")var T=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")T=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=T,v.options){T=l(Object.keys(v.options));for(var k=T.next();!k.done;k=T.next()){k=k.value;var A=v.options[k].default;A!==void 0&&(this.l[k]=typeof A=="function"?A():A)}}}n=kl.prototype,n.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function Sd(v){var T,k,A,U,H,V,Y,ie,ye,Ne,Ue;return D(function(Fe){switch(Fe.h){case 1:return v.ga?(T=v.h.files===void 0?[]:typeof v.h.files=="function"?v.h.files(v.l):v.h.files,_(Fe,np(),2)):Fe.return();case 2:if(k=Fe.i,typeof window=="object")return Yo("createMediapipeSolutionsWasm",{locateFile:v.locateFile}),Yo("createMediapipeSolutionsPackedAssets",{locateFile:v.locateFile}),V=T.filter(function(Ie){return Ie.data!==void 0}),Y=T.filter(function(Ie){return Ie.data===void 0}),ie=Promise.all(V.map(function(Ie){var Me=Qo(v,Ie.url);if(Ie.path!==void 0){var He=Ie.path;Me=Me.then(function(pt){return v.overrideFile(He,pt),Promise.resolve(pt)})}return Me})),ye=Promise.all(Y.map(function(Ie){return Ie.simd===void 0||Ie.simd&&k||!Ie.simd&&!k?tp(v.locateFile(Ie.url,v.ha)):Promise.resolve()})).then(function(){var Ie,Me,He;return D(function(pt){if(pt.h==1)return Ie=window.createMediapipeSolutionsWasm,Me=window.createMediapipeSolutionsPackedAssets,He=v,_(pt,Ie(Me),2);He.i=pt.i,pt.h=0})}),Ne=function(){return D(function(Ie){return v.h.graph&&v.h.graph.url?Ie=_(Ie,Qo(v,v.h.graph.url),0):(Ie.h=0,Ie=void 0),Ie})}(),_(Fe,Promise.all([ye,ie,Ne]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return A=T.filter(function(Ie){return Ie.simd===void 0||Ie.simd&&k||!Ie.simd&&!k}).map(function(Ie){return v.locateFile(Ie.url,v.ha)}),importScripts.apply(null,c(A)),U=v,_(Fe,createMediapipeSolutionsWasm(Module),6);case 6:U.i=Fe.i,v.m=new OffscreenCanvas(1,1),v.i.canvas=v.m,H=v.i.GL.createContext(v.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),v.i.GL.makeContextCurrent(H),Fe.h=4;break;case 7:if(v.m=document.createElement("canvas"),Ue=v.m.getContext("webgl2",{}),!Ue&&(Ue=v.m.getContext("webgl",{}),!Ue))return alert("Failed to create WebGL canvas context when passing video frame."),Fe.return();v.K=Ue,v.i.canvas=v.m,v.i.createContext(v.m,!0,!0,{});case 4:v.j=new v.i.SolutionWasm,v.ga=!1,Fe.h=0}})}function sp(v){var T,k,A,U,H,V,Y,ie;return D(function(ye){if(ye.h==1){if(v.h.graph&&v.h.graph.url&&v.fa===v.h.graph.url)return ye.return();if(v.u=!0,!v.h.graph||!v.h.graph.url){ye.h=2;return}return v.fa=v.h.graph.url,_(ye,Qo(v,v.h.graph.url),3)}for(ye.h!=2&&(T=ye.i,v.j.loadGraph(T)),k=l(Object.keys(v.D)),A=k.next();!A.done;A=k.next())U=A.value,v.j.overrideFile(U,v.D[U]);if(v.D={},v.h.listeners)for(H=l(v.h.listeners),V=H.next();!V.done;V=H.next())Y=V.value,op(v,Y);ie=v.l,v.l={},v.setOptions(ie),ye.h=0})}n.reset=function(){var v=this;return D(function(T){v.j&&(v.j.reset(),v.s={},v.v={}),T.h=0})},n.setOptions=function(v,T){var k=this;if(T=T||this.h.options){for(var A=[],U=[],H={},V=l(Object.keys(v)),Y=V.next();!Y.done;H={X:H.X,Y:H.Y},Y=V.next())if(Y=Y.value,!(Y in this.l&&this.l[Y]===v[Y])){this.l[Y]=v[Y];var ie=T[Y];ie!==void 0&&(ie.onChange&&(H.X=ie.onChange,H.Y=v[Y],A.push(function(ye){return function(){var Ne;return D(function(Ue){if(Ue.h==1)return _(Ue,ye.X(ye.Y),2);Ne=Ue.i,Ne===!0&&(k.u=!0),Ue.h=0})}}(H))),ie.graphOptionXref&&(Y=Object.assign({},{calculatorName:"",calculatorIndex:0},ie.graphOptionXref,{valueNumber:ie.type===1?v[Y]:0,valueBoolean:ie.type===0?v[Y]:!1,valueString:ie.type===2?v[Y]:""}),U.push(Y)))}(A.length!==0||U.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(U),this.F=(this.F===void 0?[]:this.F).concat(A))}};function rp(v){var T,k,A,U,H,V,Y;return D(function(ie){switch(ie.h){case 1:if(!v.u)return ie.return();if(!v.F){ie.h=2;break}T=l(v.F),k=T.next();case 3:if(k.done){ie.h=5;break}return A=k.value,_(ie,A(),4);case 4:k=T.next(),ie.h=3;break;case 5:v.F=void 0;case 2:if(v.H){for(U=new v.i.GraphOptionChangeRequestList,H=l(v.H),V=H.next();!V.done;V=H.next())Y=V.value,U.push_back(Y);v.j.changeOptions(U),U.delete(),v.H=void 0}v.u=!1,ie.h=0}})}n.initialize=function(){var v=this;return D(function(T){return T.h==1?_(T,Sd(v),2):T.h!=3?_(T,sp(v),3):_(T,rp(v),0)})};function Qo(v,T){var k,A;return D(function(U){return T in v.L?U.return(v.L[T]):(k=v.locateFile(T,""),A=fetch(k).then(function(H){return H.arrayBuffer()}),v.L[T]=A,U.return(A))})}n.overrideFile=function(v,T){this.j?this.j.overrideFile(v,T):this.D[v]=T},n.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},n.send=function(v,T){var k=this,A,U,H,V,Y,ie,ye,Ne,Ue;return D(function(Fe){switch(Fe.h){case 1:return k.h.inputs?(A=1e3*(T??performance.now()),_(Fe,k.I,2)):Fe.return();case 2:return _(Fe,k.initialize(),3);case 3:for(U=new k.i.PacketDataList,H=l(Object.keys(v)),V=H.next();!V.done;V=H.next())if(Y=V.value,ie=k.h.inputs[Y]){e:{var Ie=v[Y];switch(ie.type){case"video":var Me=k.s[ie.stream];if(Me||(Me=new Nl(k.i,k.K),k.s[ie.stream]=Me),Me.m===0&&(Me.m=Me.i.createTexture()),typeof HTMLVideoElement<"u"&&Ie instanceof HTMLVideoElement)var He=Ie.videoWidth,pt=Ie.videoHeight;else typeof HTMLImageElement<"u"&&Ie instanceof HTMLImageElement?(He=Ie.naturalWidth,pt=Ie.naturalHeight):(He=Ie.width,pt=Ie.height);pt={glName:Me.m,width:He,height:pt},He=Me.h,He.canvas.width=pt.width,He.canvas.height=pt.height,He.activeTexture(He.TEXTURE0),Me.i.bindTexture2d(Me.m),He.texImage2D(He.TEXTURE_2D,0,He.RGBA,He.RGBA,He.UNSIGNED_BYTE,Ie),Me.i.bindTexture2d(0),Me=pt;break e;case"detections":for(Me=k.s[ie.stream],Me||(Me=new Zf(k.i),k.s[ie.stream]=Me),Me.data||(Me.data=new Me.h.DetectionListData),Me.data.reset(Ie.length),pt=0;pt<Ie.length;++pt){He=Ie[pt];var $t=Me.data,Gt=$t.setBoundingBox,Xn=pt,Tn=He.la,at=new Ko;if($n(at,1,Tn.sa),$n(at,2,Tn.ta),$n(at,3,Tn.height),$n(at,4,Tn.width),$n(at,5,Tn.rotation),Fn(at,6,Tn.pa),Tn=at.l(),Gt.call($t,Xn,Tn),He.ea)for($t=0;$t<He.ea.length;++$t){at=He.ea[$t],Gt=Me.data,Xn=Gt.addNormalizedLandmark,Tn=pt,at=Object.assign({},at,{visibility:at.visibility?at.visibility:0});var Kt=new Ur;$n(Kt,1,at.x),$n(Kt,2,at.y),$n(Kt,3,at.z),at.visibility&&$n(Kt,4,at.visibility),at=Kt.l(),Xn.call(Gt,Tn,at)}if(He.ba)for($t=0;$t<He.ba.length;++$t)Gt=Me.data,Xn=Gt.addClassification,Tn=pt,at=He.ba[$t],Kt=new rs,$n(Kt,2,at.qa),at.index&&Fn(Kt,1,at.index),at.label&&Fn(Kt,3,at.label),at.displayName&&Fn(Kt,4,at.displayName),at=Kt.l(),Xn.call(Gt,Tn,at)}Me=Me.data;break e;default:Me={}}}switch(ye=Me,Ne=ie.stream,ie.type){case"video":U.pushTexture2d(Object.assign({},ye,{stream:Ne,timestamp:A}));break;case"detections":Ue=ye,Ue.stream=Ne,Ue.timestamp=A,U.pushDetectionList(Ue);break;default:throw Error("Unknown input config type: '"+ie.type+"'")}}return k.j.send(U),_(Fe,k.I,4);case 4:U.delete(),Fe.h=0}})};function ap(v,T,k){var A,U,H,V,Y,ie,ye,Ne,Ue,Fe,Ie,Me,He,pt;return D(function($t){switch($t.h){case 1:if(!k)return $t.return(T);for(A={},U=0,H=l(Object.keys(k)),V=H.next();!V.done;V=H.next())Y=V.value,ie=k[Y],typeof ie!="string"&&ie.type==="texture"&&T[ie.stream]!==void 0&&++U;1<U&&(v.M=!1),ye=l(Object.keys(k)),V=ye.next();case 2:if(V.done){$t.h=4;break}if(Ne=V.value,Ue=k[Ne],typeof Ue=="string")return He=A,pt=Ne,_($t,ip(v,Ne,T[Ue]),14);if(Fe=T[Ue.stream],Ue.type==="detection_list"){if(Fe){for(var Gt=Fe.getRectList(),Xn=Fe.getLandmarksList(),Tn=Fe.getClassificationsList(),at=[],Kt=0;Kt<Gt.size();++Kt){var ar=$l(Gt.get(Kt)),Td=gs(ar,1),Nd=gs(ar,2),up=gs(ar,3),lp=gs(ar,4),cp=gs(ar,5,0),Zo=void 0;Zo=Zo===void 0?0:Zo,ar={la:{sa:Td,ta:Nd,height:up,width:lp,rotation:cp,pa:Vo(pn(ar,6),Zo)},ea:Tl(Xn.get(Kt)),ba:Kf(Cl(Tn.get(Kt)))},at.push(ar)}Gt=at}else Gt=[];A[Ne]=Gt,$t.h=7;break}if(Ue.type==="proto_list"){if(Fe){for(Gt=Array(Fe.size()),Xn=0;Xn<Fe.size();Xn++)Gt[Xn]=Fe.get(Xn);Fe.delete()}else Gt=[];A[Ne]=Gt,$t.h=7;break}if(Fe===void 0){$t.h=3;break}if(Ue.type==="float_list"){A[Ne]=Fe,$t.h=7;break}if(Ue.type==="proto"){A[Ne]=Fe,$t.h=7;break}if(Ue.type!=="texture")throw Error("Unknown output config type: '"+Ue.type+"'");return Ie=v.v[Ne],Ie||(Ie=new Nl(v.i,v.K),v.v[Ne]=Ie),_($t,El(Ie,Fe,v.M),13);case 13:Me=$t.i,A[Ne]=Me;case 7:Ue.transform&&A[Ne]&&(A[Ne]=Ue.transform(A[Ne])),$t.h=3;break;case 14:He[pt]=$t.i;case 3:V=ye.next(),$t.h=2;break;case 4:return $t.return(A)}})}function ip(v,T,k){var A;return D(function(U){return typeof k=="number"||k instanceof Uint8Array||k instanceof v.i.Uint8BlobList?U.return(k):k instanceof v.i.Texture2dDataOut?(A=v.v[T],A||(A=new Nl(v.i,v.K),v.v[T]=A),U.return(El(A,k,v.M))):U.return(void 0)})}function op(v,T){for(var k=T.name||"$",A=[].concat(c(T.wants)),U=new v.i.StringList,H=l(T.wants),V=H.next();!V.done;V=H.next())U.push_back(V.value);H=v.i.PacketListener.implement({onResults:function(Y){for(var ie={},ye=0;ye<T.wants.length;++ye)ie[A[ye]]=Y.get(ye);var Ne=v.listeners[k];Ne&&(v.I=ap(v,ie,T.outs).then(function(Ue){Ue=Ne(Ue);for(var Fe=0;Fe<T.wants.length;++Fe){var Ie=ie[A[Fe]];typeof Ie=="object"&&Ie.hasOwnProperty&&Ie.hasOwnProperty("delete")&&Ie.delete()}Ue&&(v.I=Ue)}))}}),v.j.attachMultiListener(U,H),U.delete()}n.onResults=function(v,T){this.listeners[T||"$"]=v},le("Solution",kl),le("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function Cd(v){switch(v===void 0&&(v=0),v){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function $d(v){var T=this;v=v||{},this.h=new kl({locateFile:v.locateFile,files:function(k){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:Cd(k.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:Tl},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:Tl},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(k){var A,U,H;return D(function(V){return V.h==1?(A=Cd(k),U="third_party/mediapipe/modules/pose_landmark/"+A,_(V,Qo(T.h,A),2)):(H=V.i,T.h.overrideFile(U,H),V.return(!0))})}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}n=$d.prototype,n.reset=function(){this.h.reset()},n.close=function(){return this.h.close(),Promise.resolve()},n.onResults=function(v){this.h.onResults(v)},n.initialize=function(){var v=this;return D(function(T){return _(T,v.h.initialize(),0)})},n.send=function(v,T){var k=this;return D(function(A){return _(A,k.h.send(v,T),0)})},n.setOptions=function(v){this.h.setOptions(v)},le("Pose",$d),le("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),le("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),le("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),le("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),le("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),le("VERSION","0.5.1675469404")}).call(bg)),bg}var zq=Lq();/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bq=ee();Bq.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var os;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(os||(os={}));var kS;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(kS||(kS={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mq={};function ZN(n){return Mq[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E(n,e,t,s,r){const a=e.inputParams[n];if(a&&a.inputIndexStart!==void 0){const l=a.inputIndexStart,c=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?l+1:a.inputIndexEnd,d=l<0?e.inputNames.length+l:l;if(a.type==="tensor")return vn(e.inputNames[d],t,s,r);if(a.type==="tensors"){const g=e.inputs.slice(l,c);return e.inputNames.slice(l,c).filter((x,w)=>{var S;return((S=g[w])===null||S===void 0?void 0:S.op)!=="NoOp"}).map(x=>vn(x,t,s,r))}const f=vn(e.inputNames[d],t,s,r),p=f.dataSync();return a.type==="number"?p[0]:Og(f.shape,p)}const o=e.attrParams[n];return o&&o.value}function vn(n,e,t,s){const[r,a]=us(n,t);if(s!=null){const l=s.getHashTableHandleByName(r);if(l!=null)return l}const o=t.currentContextIds.find(l=>!!e[df(r,l)]);return o!==void 0?e[df(r,o)][a]:void 0}function RS(n,e,t){return e[df(n,t.currentContextId)]}function sa(n,e){const[t,s,r]=us(n,e);return[df(t,e&&e.currentContextId),s,r]}function df(n,e){return e?`${n}-${e}`:n}function us(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const a=e.parseNodeNameCache.get(n);if(a!=null)return a}const s=n.split(":");let r;if(s.length===1)r=[n,0,void 0];else{const a=s[0],o=s.length===3?s[1]:void 0,l=Number(s[s.length-1]);r=[a,l,o]}return t&&e.parseNodeNameCache.set(n,r),r}function Gh(n,e,t){let s=E("pad",n,e,t);if(s==="explicit"){s=E("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function ra(n){return n.kept?n:ni(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uq=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Vq=Object.freeze(Object.defineProperty({__proto__:null,json:Uq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wq=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Gq=Object.freeze(Object.defineProperty({__proto__:null,json:Wq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hq=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],jq=Object.freeze(Object.defineProperty({__proto__:null,json:Hq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qq=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Xq=Object.freeze(Object.defineProperty({__proto__:null,json:qq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kq=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Yq=Object.freeze(Object.defineProperty({__proto__:null,json:Kq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qq=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Zq=Object.freeze(Object.defineProperty({__proto__:null,json:Qq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jq=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],eX=Object.freeze(Object.defineProperty({__proto__:null,json:Jq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tX=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],nX=Object.freeze(Object.defineProperty({__proto__:null,json:tX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sX=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],rX=Object.freeze(Object.defineProperty({__proto__:null,json:sX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aX=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],iX=Object.freeze(Object.defineProperty({__proto__:null,json:aX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oX=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],uX=Object.freeze(Object.defineProperty({__proto__:null,json:oX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lX=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],cX=Object.freeze(Object.defineProperty({__proto__:null,json:lX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dX=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],hX=Object.freeze(Object.defineProperty({__proto__:null,json:dX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fX=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],pX=Object.freeze(Object.defineProperty({__proto__:null,json:fX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mX=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],gX=Object.freeze(Object.defineProperty({__proto__:null,json:mX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yX=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],xX=Object.freeze(Object.defineProperty({__proto__:null,json:yX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bX=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],vX=Object.freeze(Object.defineProperty({__proto__:null,json:bX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wX=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],SX=Object.freeze(Object.defineProperty({__proto__:null,json:wX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CX=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],$X=Object.freeze(Object.defineProperty({__proto__:null,json:CX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IS{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[Vq,Gq,jq,Xq,Yq,Zq,eX,nX,rX,iX,uX,cX,hX,pX,gX,xX,vX,SX,$X],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,t={}){const s=e.node,r=[],a=[],o=[],l=s.reduce((w,S)=>(w[S.name]=this.mapNode(S),S.op.startsWith("Placeholder")?r.push(w[S.name]):S.op==="Const"?a.push(w[S.name]):(S.input==null||S.input.length===0)&&o.push(w[S.name]),w),{});let c=[];const d=[];let f={},p={};t!=null&&(f=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));const g=Object.keys(l);g.forEach(w=>{const S=l[w];S.inputNames.forEach(($,N)=>{const[I,,_]=sa($),O=l[I];if(O.outputs!=null){const M=O.outputs.indexOf(_);if(M!==-1){const W=`${I}:${M}`;S.inputNames[N]=W}}S.inputs.push(O),O.children.push(S)})}),Object.keys(p).length===0?g.forEach(w=>{const S=l[w];S.children.length===0&&d.push(S)}):Object.keys(p).forEach(w=>{const[S]=sa(w),$=l[S];$!=null&&($.signatureKey=p[w],d.push($))}),Object.keys(f).length>0?Object.keys(f).forEach(w=>{const[S]=sa(w),$=l[S];$&&($.signatureKey=f[w],c.push($))}):c=r;let y={};e.library!=null&&e.library.function!=null&&(y=e.library.function.reduce((w,S)=>(w[S.signature.name]=this.mapFunction(S),w),{}));const x={nodes:l,inputs:c,outputs:d,weights:a,placeholders:r,signature:t,functions:y};return o.length>0&&(x.initNodes=o),x}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=ZN(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((r,a)=>(r[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},r),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((r,a)=>{const o=a.type;let l;switch(a.type){case"string":l=sy(e.attr,a.tfName,a.defaultValue),l===void 0&&a.tfDeprecatedName&&(l=sy(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":l=cy(e.attr,a.tfName,a.defaultValue),l===void 0&&a.tfDeprecatedName&&(l=cy(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":l=ay(e.attr,a.tfName,a.defaultValue||0),l===void 0&&a.tfDeprecatedName&&(l=ay(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":l=ly(e.attr,a.tfName,a.defaultValue),l===void 0&&a.tfDeprecatedName&&(l=ly(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":l=ry(e.attr,a.tfName,a.defaultValue),l===void 0&&a.tfDeprecatedName&&(l=ry(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":l=hy(e.attr,a.tfName,a.defaultValue),l===void 0&&a.tfDeprecatedName&&(l=hy(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":l=uy(e.attr,a.tfName,a.defaultValue),l===void 0&&a.tfDeprecatedName&&(l=uy(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":l=dy(e.attr,a.tfName,a.defaultValue),l===void 0&&a.tfDeprecatedName&&(l=dy(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":l=iy(e.attr,a.tfName,a.defaultValue),l===void 0&&a.tfDeprecatedName&&(l=iy(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":l=oy(e.attr,a.tfName,a.defaultValue),l===void 0&&a.tfDeprecatedName&&(l=oy(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":l=_S(e.attr,a.tfName,a.defaultValue),l===void 0&&a.tfDeprecatedName&&(l=_S(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${e.op}`)}return r[a.name]={value:l,type:o},r},{})),s}mapFunction(e){const t=e.nodeDef,s=[],r=[];let a={};t!=null&&(a=t.reduce((p,g)=>(p[g.name]=this.mapNode(g),g.op==="Const"&&r.push(p[g.name]),p),{}));const o=[],l=[];e.signature.inputArg.forEach(p=>{const[g]=sa(p.name),y={name:g,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ob(p.type),type:"dtype"}},children:[]};y.signatureKey=p.name,o.push(y),a[g]=y}),Object.keys(a).forEach(p=>{const g=a[p];g.inputNames.forEach((y,x)=>{const[w,,S]=sa(y),$=a[w];if($.outputs!=null){const N=$.outputs.indexOf(S);if(N!==-1){const I=`${w}:${N}`;g.inputNames[x]=I}}g.inputs.push($),$.children.push(g)})});const d=e.ret;e.signature.outputArg.forEach(p=>{const[g,y]=sa(d[p.name]),x=a[g];x!=null&&(x.defaultOutput=y,l.push(x))});const f=this.mapArgsToSignature(e);return{nodes:a,inputs:o,outputs:l,weights:r,placeholders:s,signature:f}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function TX(n){const e=ee().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function JN(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):TX(n);return e?t:t.toLowerCase()}function sy(n,e,t,s=!1){const r=n[e];return r!=null?JN(r.s,s):t}function ry(n,e,t){const s=n[e];return s?s.b:t}function ay(n,e,t){const s=n[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:t;return typeof r=="number"?r:parseInt(r,10)}function ob(n){switch(typeof n=="string"&&(n=os[n]),n){case os.DT_FLOAT:case os.DT_HALF:return"float32";case os.DT_INT32:case os.DT_INT64:case os.DT_INT8:case os.DT_UINT8:return"int32";case os.DT_BOOL:return"bool";case os.DT_DOUBLE:return"float32";case os.DT_STRING:return"string";case os.DT_COMPLEX64:case os.DT_COMPLEX128:return"complex64";default:return null}}function _S(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function iy(n,e,t){const s=n[e];return s&&s.type?ob(s.type):t}function oy(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>ob(r)):t}function eE(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function uy(n,e,t){const s=n[e];return s&&s.shape?eE(s.shape):t}function ly(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):t}function cy(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(a=>JN(a,s)):t}function dy(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>eE(r)):t}function hy(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NX{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,a)=>(r[a]=this.getAttr(a),r),{}))}getInput(e){return vn(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return vn(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return ay(this.node.rawAttrs,e,t);if(s.s!=null)return sy(this.node.rawAttrs,e,t);if(s.b!=null)return ry(this.node.rawAttrs,e,t);if(s.shape!=null)return uy(this.node.rawAttrs,e,t);if(s.type!=null)return iy(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return ly(this.node.rawAttrs,e,t);if(s.list.s!=null)return cy(this.node.rawAttrs,e,t);if(s.list.shape!=null)return dy(this.node.rawAttrs,e,t);if(s.list.b!=null)return hy(this.node.rawAttrs,e,t);if(s.list.type!=null)return oy(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sn=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:S$,abs:Cs,acos:a3,acosh:o3,add:Pe,addN:l3,all:d3,any:f3,argMax:z$,argMin:g3,asin:x3,asinh:v3,atan:S3,atan2:$3,atanh:N3,avgPool:B$,avgPool3d:O3,basicLSTMCell:U3,batchNorm:$f,batchNorm2d:j3,batchNorm3d:X3,batchNorm4d:Y3,batchToSpaceND:M$,bincount:U$,bitwiseAnd:J3,booleanMaskAsync:zP,broadcastArgs:t_,broadcastTo:Tc,buffer:xt,cast:kt,ceil:r_,clipByValue:V$,clone:ni,complex:ri,concat:dn,concat1d:o_,concat2d:l_,concat3d:d_,concat4d:f_,conv1d:g_,conv2d:Tf,conv2dTranspose:b_,conv3d:w_,conv3dTranspose:T_,cos:E_,cosh:R_,cosineWindow:y1,cumprod:__,cumsum:D_,denseBincount:P_,depthToSpace:L_,depthwiseConv2d:o1,diag:M_,dilation2d:V_,div:et,divNoNan:q_,dot:K_,dropout:QP,einsum:_u,elu:j$,enclosingPowerOfTwo:wT,ensureShape:J_,equal:H$,erf:tA,euclideanNorm:cA,exp:ha,expandDims:$s,expm1:pA,eye:K$,fft:p1,fill:Xc,floor:Y$,floorDiv:L$,fused:hF,gather:Q$,gatherND:XP,greater:Ef,greaterEqual:Z$,ifft:rf,imag:kf,image:ho,inTopKAsync:JP,irfft:pT,isFinite:CA,isInf:TA,isNaN:EA,leakyRelu:J$,less:Xg,lessEqual:l1,linalg:HL,linspace:_A,localResponseNormalization:DA,log:Ac,log1p:eT,logSigmoid:MA,logSoftmax:WA,logSumExp:nT,logicalAnd:nf,logicalNot:sT,logicalOr:rT,logicalXor:KA,losses:jL,lowerBound:QA,matMul:vt,max:Pu,maxPool:aT,maxPool3d:eD,maxPoolWithArgmax:nD,maximum:iT,mean:sf,meshgrid:aD,min:qg,minimum:Dc,mirrorPad:oT,mod:lD,moments:dD,movingAverage:UP,mul:be,multiRNNCell:fD,multinomial:mD,neg:Ir,norm:Nf,notEqual:uT,oneHot:xD,ones:lo,onesLike:vD,op:X,outerProduct:SD,pad:ii,pad1d:TD,pad2d:ED,pad3d:RD,pad4d:_D,pool:FD,pow:_c,prelu:cT,print:F$,prod:BD,raggedGather:UD,raggedRange:WD,raggedTensorToTensor:HD,rand:qD,randomGamma:mO,randomNormal:dT,randomStandardNormal:xO,randomUniform:f1,randomUniformInt:wO,range:Oc,real:Pc,reciprocal:$O,relu:Rf,relu6:hT,reshape:de,reverse:vo,reverse1d:RO,reverse2d:_O,reverse3d:DO,reverse4d:PO,rfft:m1,round:fT,rsqrt:zO,scalar:Je,scatterND:WP,searchSorted:c1,selu:MO,separableConv2d:VO,setdiff1dAsync:GO,sigmoid:ia,sign:jO,signal:GL,sin:XO,sinh:YO,slice:Ze,slice1d:ZO,slice2d:eP,slice3d:nP,slice4d:rP,softmax:iP,softplus:tT,spaceToBatchND:lT,sparse:qL,sparseToDense:jP,spectral:WL,split:Fc,sqrt:da,square:qs,squaredDifference:mT,squeeze:bt,stack:ma,step:gT,stridedSlice:yP,string:XL,sub:je,sum:Ot,tan:bP,tanh:jg,tensor:Rr,tensor1d:In,tensor2d:Xs,tensor3d:yT,tensor4d:vP,tensor5d:wP,tensor6d:SP,tensorScatterUpdate:$P,tile:Nc,topk:NP,transpose:Kg,truncatedNormal:kP,unique:IP,unsortedSegmentSum:AP,unstack:To,upperBound:OP,variable:PP,where:si,whereAsync:vT,zeros:pa,zerosLike:Ns},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EX=(n,e,t,s=Sn)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(E("a",n,e,t),E("b",n,e,t))];case"AddN":return[s.addN(E("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(E("a",n,e,t),E("b",n,e,t))];case"Mul":return[s.mul(E("a",n,e,t),E("b",n,e,t))];case"RealDiv":case"Div":return[s.div(E("a",n,e,t),E("b",n,e,t))];case"DivNoNan":return[s.divNoNan(E("a",n,e,t),E("b",n,e,t))];case"FloorDiv":return[s.floorDiv(E("a",n,e,t),E("b",n,e,t))];case"Sub":return[s.sub(E("a",n,e,t),E("b",n,e,t))];case"Minimum":return[s.minimum(E("a",n,e,t),E("b",n,e,t))];case"Maximum":return[s.maximum(E("a",n,e,t),E("b",n,e,t))];case"Pow":return[s.pow(E("a",n,e,t),E("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(E("a",n,e,t),E("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kX=(n,e,t,s=Sn)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(E("x",n,e,t))];case"Acos":return[s.acos(E("x",n,e,t))];case"Acosh":return[s.acosh(E("x",n,e,t))];case"Asin":return[s.asin(E("x",n,e,t))];case"Asinh":return[s.asinh(E("x",n,e,t))];case"Atan":return[s.atan(E("x",n,e,t))];case"Atan2":return[s.atan2(E("x",n,e,t),E("y",n,e,t))];case"Atanh":return[s.atanh(E("x",n,e,t))];case"Ceil":return[s.ceil(E("x",n,e,t))];case"Complex":return[s.complex(E("real",n,e,t),E("imag",n,e,t))];case"Cos":return[s.cos(E("x",n,e,t))];case"Cosh":return[s.cosh(E("x",n,e,t))];case"Elu":return[s.elu(E("x",n,e,t))];case"Erf":return[s.erf(E("x",n,e,t))];case"Exp":return[s.exp(E("x",n,e,t))];case"Expm1":return[s.expm1(E("x",n,e,t))];case"Floor":return[s.floor(E("x",n,e,t))];case"Log":return[s.log(E("x",n,e,t))];case"Log1p":return[s.log1p(E("x",n,e,t))];case"Imag":return[s.imag(E("x",n,e,t))];case"Neg":return[s.neg(E("x",n,e,t))];case"Reciprocal":return[s.reciprocal(E("x",n,e,t))];case"Real":return[s.real(E("x",n,e,t))];case"Relu":return[s.relu(E("x",n,e,t))];case"Round":return[s.round(E("x",n,e,t))];case"Selu":return[s.selu(E("x",n,e,t))];case"Sigmoid":return[s.sigmoid(E("x",n,e,t))];case"Sin":return[s.sin(E("x",n,e,t))];case"Sign":return[s.sign(E("x",n,e,t))];case"Sinh":return[s.sinh(E("x",n,e,t))];case"Softplus":return[s.softplus(E("x",n,e,t))];case"Sqrt":return[s.sqrt(E("x",n,e,t))];case"Square":return[s.square(E("x",n,e,t))];case"Tanh":return[s.tanh(E("x",n,e,t))];case"Tan":return[s.tan(E("x",n,e,t))];case"ClipByValue":return[s.clipByValue(E("x",n,e,t),E("clipValueMin",n,e,t),E("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(E("x",n,e,t))];case"Rsqrt":return[s.rsqrt(vn(n.inputNames[0],e,t))];case"LeakyRelu":return[s.leakyRelu(E("x",n,e,t),E("alpha",n,e,t))];case"Prelu":return[s.prelu(E("x",n,e,t),E("alpha",n,e,t))];case"IsNan":return[s.isNaN(vn(n.inputNames[0],e,t))];case"IsInf":return[s.isInf(vn(n.inputNames[0],e,t))];case"IsFinite":return[s.isFinite(vn(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hs(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){z(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const r=n[s],a=e[s];z(r<0||a<0||r===a,()=>t+` Shapes ${n} and ${e} must match`)}}}function AS(n){return!(typeof n=="number"||n.some(e=>e<0))}function yc(n,e,t){let s=fy(n,t);const r=!AS(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(a=>{s=fy(a.shape,s)}),!AS(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function fy(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const r=n[s],a=e[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=r>=0?r:a}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RX{constructor(e,t,s,r,a,o,l){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=o,this.clearAfterRead=l,this.tensors=[],this.closed_=!1,this.idTensor=Je(0),Er(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Hs(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,Er(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return Rr([],[0].concat(this.elementShape));const s=this.readMany(e);return Hs(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),ma(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Rr([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return Hs(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),dn(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,To(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(c=>(s+=c,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=s===0?0:t.size/s,o=[];Ge(()=>{t=de(t,[1,s,a]);for(let c=0;c<e.length;++c){const f=[0,c===0?0:r[c-1],0],p=[1,e[c],a];o[c]=de(Ze(t,f,p),this.elementShape)}return o});const l=[];for(let c=0;c<e.length;c++)l[c]=c;this.writeMany(l,o)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Co{get id(){return this.idTensor.id}constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e!=null&&e.forEach(a=>{if(s!==a.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${a.dtype}`);Hs(t,a.shape,"TensorList shape mismatch: "),Er(a)}),this.idTensor=Je(0),this.maxNumElements=r,Er(this.idTensor)}copy(){return new Co([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);Hs(e,this.elementShape,"TensorList shape mismatch: ");const r=yc(this.elementShape,this.tensors,e);return Ge(()=>{const a=this.tensors.map(o=>de(o,r));return ma(a,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=yc(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,Hs(r.shape,e,"TensorList shape mismatch: "),de(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Hs(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Er(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Co([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Hs(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=yc(this.elementShape,this.tensors,t);return de(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Hs(this.elementShape,t.shape,"TensorList shape mismatch: "),Er(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Hs(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=yc(this.elementShape,this.tensors,s);return e.length===0?Rr([],[0].concat(r)):Ge(()=>{const a=e.map(o=>de(this.tensors[o],r));return ma(a,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Hs(this.elementShape,t,"TensorList shape mismatch: ");const s=yc(this.elementShape,this.tensors,t);return this.size()===0?Rr([],[0].concat(s)):Ge(()=>{const r=this.tensors.map(a=>de(a,s));return dn(r,0)})}}function IX(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const r=n.shape.slice(1);Hs(r,e,"TensorList shape mismatch: ");const a=To(n);return new Co(a,e,s)}function _X(n,e,t,s){return new Co([],n,e,s)}function AX(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const a=new Co([],t,n.dtype,s),o=To(n,0);return e.forEach((l,c)=>{a.setItem(l,o[c])}),a}function DX(n,e,t){let s=0;const r=e.map(f=>(s+=f,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const a=n.shape.slice(1),o=fy(a,t),l=s===0?0:n.size/s,c=Ge(()=>{const f=[];n=de(n,[1,s,l]);for(let p=0;p<e.length;++p){const y=[0,p===0?0:r[p-1],0],x=[1,e[p],l];f[p]=de(Ze(n,y,x),o)}return n.dispose(),f}),d=new Co([],t,n.dtype,e.length);for(let f=0;f<c.length;f++)d.setItem(f,c[f]);return d}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OX=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=E("thenBranch",n,e,t),r=E("elseBranch",n,e,t),a=E("cond",n,e,t),o=E("args",n,e,t);return(await a.data())[0]?t.functionMap[s].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap):t.functionMap[r].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=E("body",n,e,t),r=E("cond",n,e,t),a=E("args",n,e,t),o=await t.functionMap[r].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap),l=a.map(f=>f.id);let c=await o[0].data();o.forEach(f=>{!f.kept&&l.indexOf(f.id)===-1&&f.dispose()});let d=a;for(;c[0];){const f=d;d=await t.functionMap[s].executeFunctionAsync(d,t.tensorArrayMap,t.tensorListMap);const p=d.map(y=>y.id);f.forEach(y=>{!y.kept&&l.indexOf(y.id)===-1&&p.indexOf(y.id)===-1&&y.dispose()});const g=await t.functionMap[r].executeFunctionAsync(d,t.tensorArrayMap,t.tensorListMap);c=await g[0].data(),g.forEach(y=>{!y.kept&&l.indexOf(y.id)===-1&&p.indexOf(y.id)===-1&&y.dispose()})}return d}case"LoopCond":{const s=E("pred",n,e,t);return[ra(s)]}case"Switch":{const s=E("pred",n,e,t);let r=E("data",n,e,t);return r.kept||(r=ra(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>vn(r,e,t)!==void 0);if(s){const r=vn(s,e,t);return[ra(r)]}return}case"Enter":{const s=E("frameName",n,e,t),r=E("tensor",n,e,t);return t.enterFrame(s),[ra(r)]}case"Exit":{const s=E("tensor",n,e,t);return t.exitFrame(),[ra(s)]}case"NextIteration":{const s=E("tensor",n,e,t);return t.nextIteration(),[ra(s)]}case"TensorArrayV3":{const s=E("size",n,e,t),r=E("dtype",n,e,t),a=E("elementShape",n,e,t),o=E("dynamicSize",n,e,t),l=E("clearAfterRead",n,e,t),c=E("identicalElementShapes",n,e,t),d=E("name",n,e,t),f=new RX(d,r,s,a,c,o,l);return t.addTensorArray(f),[f.idTensor,Je(1)]}case"TensorArrayWriteV3":{const s=E("tensorArrayId",n,e,t),r=E("index",n,e,t),a=E("tensor",n,e,t),o=t.getTensorArray(s.id);return o.write(r,a),[o.idTensor]}case"TensorArrayReadV3":{const s=E("tensorArrayId",n,e,t),r=E("index",n,e,t);return[t.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=E("tensorArrayId",n,e,t),r=E("indices",n,e,t),a=E("dtype",n,e,t);return[t.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{const s=E("tensorArrayId",n,e,t),r=E("indices",n,e,t),a=E("tensor",n,e,t),o=t.getTensorArray(s.id);return o.scatter(r,a),[o.idTensor]}case"TensorArrayConcatV3":{const s=E("tensorArrayId",n,e,t),r=t.getTensorArray(s.id),a=E("dtype",n,e,t);return[r.concat(a)]}case"TensorArraySplitV3":{const s=E("tensorArrayId",n,e,t),r=E("tensor",n,e,t),a=E("lengths",n,e,t),o=t.getTensorArray(s.id);return o.split(a,r),[o.idTensor]}case"TensorArraySizeV3":{const s=E("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return[Je(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=E("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=E("tensorListId",n,e,t),r=E("index",n,e,t),a=E("tensor",n,e,t),o=t.getTensorList(s.id);return o.setItem(r,a),[o.idTensor]}case"TensorListGetItem":{const s=E("tensorListId",n,e,t),r=E("index",n,e,t),a=E("elementShape",n,e,t),o=E("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(r,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{const s=E("indices",n,e,t),r=E("tensor",n,e,t),a=E("elementShape",n,e,t),o=E("numElements",n,e,t),l=AX(r,s,a,o);return t.addTensorList(l),[l.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=E("elementShape",n,e,t),r=E("elementDType",n,e,t);let a;n.op==="TensorListReserve"?a="numElements":a="maxNumElements";const o=E(a,n,e,t),l=n.op==="TensorListReserve"?-1:o,c=_X(s,r,o,l);return t.addTensorList(c),[c.idTensor]}case"TensorListGather":{const s=E("tensorListId",n,e,t),r=E("indices",n,e,t),a=E("elementShape",n,e,t),o=E("elementDType",n,e,t);return[t.getTensorList(s.id).gather(r,o,a)]}case"TensorListStack":{const s=E("tensorListId",n,e,t),r=E("elementShape",n,e,t),a=E("elementDType",n,e,t),o=E("numElements",n,e,t);return[t.getTensorList(s.id).stack(r,a,o)]}case"TensorListFromTensor":{const s=E("tensor",n,e,t),r=E("elementShape",n,e,t),a=E("elementDType",n,e,t),o=IX(s,r,a);return t.addTensorList(o),[o.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=E("tensorListId",n,e,t),r=t.getTensorList(s.id),a=E("dtype",n,e,t),o=E("elementShape",n,e,t);return[r.concat(a,o)]}case"TensorListPushBack":{const s=E("tensorListId",n,e,t),r=E("tensor",n,e,t),a=t.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{const s=E("tensorListId",n,e,t),r=E("elementShape",n,e,t),a=E("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{const s=E("tensor",n,e,t),r=E("elementShape",n,e,t),a=E("lengths",n,e,t),o=DX(s,a,r);return t.addTensorList(o),[o.idTensor]}case"TensorListLength":{const s=E("tensorListId",n,e,t),r=t.getTensorList(s.id);return[Je(r.size(),"int32")]}case"TensorListResize":{const s=E("tensorListId",n,e,t),r=E("size",n,e,t),o=t.getTensorList(s.id).resize(r);return t.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DS(n,e,t){const[s,r]=E("fusedOps",n,e,t),a=s==="biasadd",o=!a,l=r==="prelu",c=s==="fusedbatchnorm",d=E("numArgs",n,e,t);if(a){if(l&&d!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&a&&d!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const f=E("strides",n,e,t),p=Gh(n,e,t),g=E("dataFormat",n,e,t).toUpperCase(),y=E("dilations",n,e,t);let[x,w]=E("args",n,e,t);o&&(w=x,x=void 0);const S=E("leakyreluAlpha",n,e,t);return{stride:f,pad:p,dataFormat:g,dilations:y,biasArg:x,preluArg:w,activationFunc:r,leakyreluAlpha:S}}const PX=(n,e,t,s=Sn)=>{switch(n.op){case"Conv1D":{const r=E("stride",n,e,t),a=E("pad",n,e,t),o=E("dataFormat",n,e,t).toUpperCase(),l=E("dilation",n,e,t);return[s.conv1d(E("x",n,e,t),E("filter",n,e,t),r,a,o,l)]}case"Conv2D":{const r=E("strides",n,e,t),a=Gh(n,e,t),o=E("dataFormat",n,e,t).toUpperCase(),l=E("dilations",n,e,t);return[s.conv2d(E("x",n,e,t),E("filter",n,e,t),[r[1],r[2]],a,o,[l[1],l[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:o,dilations:l,biasArg:c,preluArg:d,activationFunc:f,leakyreluAlpha:p}=DS(n,e,t);return[s.fused.conv2d({x:E("x",n,e,t),filter:E("filter",n,e,t),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[l[1],l[2]],bias:c,activation:f,preluActivationWeights:d,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:o,dilations:l,biasArg:c,preluArg:d,activationFunc:f,leakyreluAlpha:p}=DS(n,e,t);return[s.fused.depthwiseConv2d({x:E("x",n,e,t),filter:E("filter",n,e,t),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[l[1],l[2]],bias:c,activation:f,preluActivationWeights:d,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=E("outputShape",n,e,t),a=E("strides",n,e,t),o=Gh(n,e,t);return[s.conv2dTranspose(E("x",n,e,t),E("filter",n,e,t),r,[a[1],a[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=E("strides",n,e,t),a=Gh(n,e,t),o=E("dilations",n,e,t),l=E("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(E("input",n,e,t),E("filter",n,e,t),[r[1],r[2]],a,l,[o[1],o[2]])]}case"Conv3D":{const r=E("strides",n,e,t),a=E("pad",n,e,t),o=E("dataFormat",n,e,t).toUpperCase(),l=E("dilations",n,e,t);return[s.conv3d(E("x",n,e,t),E("filter",n,e,t),[r[1],r[2],r[3]],a,o,[l[1],l[2],l[3]])]}case"AvgPool":{const r=E("strides",n,e,t),a=E("pad",n,e,t),o=E("kernelSize",n,e,t);return[s.avgPool(E("x",n,e,t),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=E("strides",n,e,t),a=E("pad",n,e,t),o=E("kernelSize",n,e,t);return[s.maxPool(E("x",n,e,t),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=E("strides",n,e,t),a=E("pad",n,e,t),o=E("kernelSize",n,e,t),l=E("includeBatchInIndex",n,e,t),{result:c,indexes:d}=s.maxPoolWithArgmax(E("x",n,e,t),[o[1],o[2]],[r[1],r[2]],a,l);return[c,d]}case"AvgPool3D":{const r=E("strides",n,e,t),a=E("pad",n,e,t),o=E("kernelSize",n,e,t);return[s.avgPool3d(E("x",n,e,t),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=E("strides",n,e,t),a=E("pad",n,e,t),o=E("kernelSize",n,e,t);return[s.maxPool3d(E("x",n,e,t),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=E("strides",n,e,t),a=E("pad",n,e,t),o=E("dilations",n,e,t),l=r[1],c=r[2],d=o[1],f=o[2];return[s.dilation2d(E("x",n,e,t),E("filter",n,e,t),[l,c],a,[d,f],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FX=(n,e,t,s=Sn)=>{switch(n.op){case"Fill":{const r=E("shape",n,e,t),a=E("dtype",n,e,t),o=E("value",n,e,t);return[s.fill(r,o,a)]}case"LinSpace":{const r=E("start",n,e,t),a=E("stop",n,e,t),o=E("num",n,e,t);return[s.linspace(r,a,o)]}case"Multinomial":{const r=E("logits",n,e,t),a=E("numSamples",n,e,t),o=E("seed",n,e,t);return[s.multinomial(r,a,o)]}case"OneHot":{const r=E("indices",n,e,t),a=E("depth",n,e,t),o=E("onValue",n,e,t),l=E("offValue",n,e,t),c=E("dtype",n,e,t);return[s.oneHot(r,a,o,l,c)]}case"Ones":return[s.ones(E("shape",n,e,t),E("dtype",n,e,t))];case"OnesLike":return[s.onesLike(E("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(E("shape",n,e,t),E("dtype",n,e,t),E("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(E("shape",n,e,t),E("minval",n,e,t),E("maxval",n,e,t),E("dtype",n,e,t))];case"RandomUniformInt":return[s.randomUniformInt(E("shape",n,e,t),E("minval",n,e,t),E("maxval",n,e,t),E("seed",n,e,t))];case"Range":{const r=E("start",n,e,t),a=E("stop",n,e,t),o=E("step",n,e,t);return[s.range(r,a,o,E("dtype",n,e,t))]}case"TruncatedNormal":{const r=E("shape",n,e,t),a=E("mean",n,e,t),o=E("stdDev",n,e,t),l=E("seed",n,e,t);return[s.truncatedNormal(r,a,o,E("dtype",n,e,t),l)]}case"Zeros":return[s.zeros(E("shape",n,e,t),E("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(E("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vg(n,e,t){const s=E("boxes",n,e,t),r=E("scores",n,e,t),a=E("maxOutputSize",n,e,t),o=E("iouThreshold",n,e,t),l=E("scoreThreshold",n,e,t),c=E("softNmsSigma",n,e,t);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:c}}const LX=async(n,e,t,s,r=Sn)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:o,maxOutputSize:l,iouThreshold:c,scoreThreshold:d,softNmsSigma:f}=vg(n,e,t),p=await r.image.nonMaxSuppressionWithScoreAsync(a,o,l,c,d,f);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:o,maxOutputSize:l,iouThreshold:c,scoreThreshold:d}=vg(n,e,t),f=E("padToMaxOutputSize",n,e,t),p=await r.image.nonMaxSuppressionPaddedAsync(a,o,l,c,d,f);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:o,maxOutputSize:l,iouThreshold:c,scoreThreshold:d}=vg(n,e,t);return[await r.image.nonMaxSuppressionAsync(a,o,l,c,d)]}case"Where":{const a=r.cast(E("condition",n,e,t),"bool"),o=[await r.whereAsync(a)];return a.dispose(),o}case"ListDiff":return r.setdiff1dAsync(E("x",n,e,t),E("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zX=(n,e,t,s=Sn)=>{switch(n.op){case"LowerBound":{const r=E("sortedSequence",n,e,t),a=E("values",n,e,t);return[s.lowerBound(r,a)]}case"TopKV2":{const r=E("x",n,e,t),a=E("k",n,e,t),o=E("sorted",n,e,t),l=s.topk(r,a,o);return[l.values,l.indices]}case"UpperBound":{const r=E("sortedSequence",n,e,t),a=E("values",n,e,t);return[s.upperBound(r,a)]}case"Unique":{const r=E("x",n,e,t),a=s.unique(r);return[a.values,a.indices]}case"UniqueV2":{const r=E("x",n,e,t),a=E("axis",n,e,t),o=s.unique(r,a);return[o.values,o.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BX=(n,e,t,s=Sn)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const r=E("default",n,e,t);return[vn(n.name,e,t)||r];case"Placeholder":return[vn(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const f=E("x",n,e,t);return[ra(f)]}case"IdentityN":return E("x",n,e,t).map(f=>ra(f));case"Snapshot":const a=E("x",n,e,t);return[ra(a)];case"Shape":return[s.tensor1d(E("x",n,e,t).shape,"int32")];case"ShapeN":return E("x",n,e,t).map(f=>s.tensor1d(f.shape));case"Size":return[s.scalar(E("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(E("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const o=E("x",n,e,t),l=E("data",n,e,t),c=E("message",n,e,t),d=E("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(c);for(let f=0;f<l.length;f++)console.log(Array.prototype.slice.call(l[f].dataSync()).slice(0,d));return[o];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MX{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Je(0),this.tensorMap=new Map,Er(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Je(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),Ge(()=>{const r=To(t),a=s.length,o=r.length;z(a===o,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${o} elements.`);for(let l=0;l<a;l++){const c=s[l],d=r[l];Er(d),this.tensorMap.set(c,d)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return Ge(()=>{const r=[];for(let a=0;a<s.length;a++){const o=s[a],l=this.findWithDefault(o,t);r.push(l)}return ma(r)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UX=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(n.name);if(r!=null)return[r];{const a=E("keyDType",n,e,t),o=E("valueDType",n,e,t),l=new MX(a,o);return s.addHashTable(n.name,l),[l.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=E("tableHandle",n,e,t,s),a=E("keys",n,e,t),o=E("values",n,e,t);return[await s.getHashTableById(r.id).import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=E("tableHandle",n,e,t,s),a=E("keys",n,e,t),o=E("defaultValue",n,e,t);return[await s.getHashTableById(r.id).find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=E("tableHandle",n,e,t,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VX=(n,e,t,s=Sn)=>{switch(n.op){case"ResizeBilinear":{const r=E("images",n,e,t),a=E("size",n,e,t),o=E("alignCorners",n,e,t),l=E("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(r,[a[0],a[1]],o,l)]}case"ResizeNearestNeighbor":{const r=E("images",n,e,t),a=E("size",n,e,t),o=E("alignCorners",n,e,t),l=E("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(r,[a[0],a[1]],o,l)]}case"CropAndResize":{const r=E("image",n,e,t),a=E("boxes",n,e,t),o=E("boxInd",n,e,t),l=E("cropSize",n,e,t),c=E("method",n,e,t),d=E("extrapolationValue",n,e,t);return[s.image.cropAndResize(r,a,o,l,c,d)]}case"ImageProjectiveTransformV3":{const r=E("images",n,e,t),a=E("transforms",n,e,t),o=E("outputShape",n,e,t),l=E("fillValue",n,e,t),c=E("interpolation",n,e,t),d=E("fillMode",n,e,t);return[s.image.transform(r,a,c.toLowerCase(),d.toLowerCase(),l,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WX=(n,e,t,s=Sn)=>{switch(n.op){case"Equal":return[s.equal(E("a",n,e,t),E("b",n,e,t))];case"NotEqual":return[s.notEqual(E("a",n,e,t),E("b",n,e,t))];case"Greater":return[s.greater(E("a",n,e,t),E("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(E("a",n,e,t),E("b",n,e,t))];case"Less":return[s.less(E("a",n,e,t),E("b",n,e,t))];case"LessEqual":return[s.lessEqual(E("a",n,e,t),E("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(E("a",n,e,t),E("b",n,e,t))];case"LogicalNot":return[s.logicalNot(E("a",n,e,t))];case"LogicalOr":return[s.logicalOr(E("a",n,e,t),E("b",n,e,t))];case"Select":case"SelectV2":return[s.where(E("condition",n,e,t),E("a",n,e,t),E("b",n,e,t))];case"BitwiseAnd":return[s.bitwiseAnd(E("a",n,e,t),E("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GX=(n,e,t,s=Sn)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(E("a",n,e,t),E("b",n,e,t),E("transposeA",n,e,t),E("transposeB",n,e,t))];case"Einsum":return[s.einsum(E("equation",n,e,t),...E("tensors",n,e,t))];case"Transpose":return[s.transpose(E("x",n,e,t),E("perm",n,e,t))];case"_FusedMatMul":const[r,a]=E("fusedOps",n,e,t),o=r==="biasadd",l=a==="prelu",c=E("numArgs",n,e,t),d=E("leakyreluAlpha",n,e,t);if(o){if(l&&c!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&c!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[f,p]=E("args",n,e,t);return[s.fused.matMul({a:E("a",n,e,t),b:E("b",n,e,t),transposeA:E("transposeA",n,e,t),transposeB:E("transposeB",n,e,t),bias:f,activation:a,preluActivationWeights:p,leakyreluAlpha:d})];case"MatrixBandPart":return[s.linalg.bandPart(E("a",n,e,t),E("numLower",n,e,t),E("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HX=(n,e,t,s=Sn)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(E("x",n,e,t),E("axis",n,e,t),E("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(E("x",n,e,t),E("mean",n,e,t),E("variance",n,e,t),E("offset",n,e,t),E("scale",n,e,t),E("epsilon",n,e,t))];case"FusedBatchNormV3":return[s.batchNorm(E("x",n,e,t),E("mean",n,e,t),E("variance",n,e,t),E("offset",n,e,t),E("scale",n,e,t),E("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(E("x",n,e,t),E("radius",n,e,t),E("bias",n,e,t),E("alpha",n,e,t),E("beta",n,e,t))];case"Softmax":return[s.softmax(E("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(E("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jX=(n,e,t,s=Sn)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:a}=s.raggedGather(E("paramsNestedSplits",n,e,t),E("paramsDenseValues",n,e,t),E("indices",n,e,t),E("outputRaggedRank",n,e,t));return r.concat(a)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:a}=s.raggedRange(E("starts",n,e,t),E("limits",n,e,t),E("splits",n,e,t));return[r,a]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(E("shape",n,e,t),E("values",n,e,t),E("defaultValue",n,e,t),E("rowPartitionTensors",n,e,t),E("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qX=(n,e,t,s=Sn)=>{switch(n.op){case"Max":{const l=E("axis",n,e,t),c=E("keepDims",n,e,t);return[s.max(E("x",n,e,t),l,c)]}case"Mean":{const l=E("axis",n,e,t),c=E("keepDims",n,e,t);return[s.mean(E("x",n,e,t),l,c)]}case"Min":{const l=E("axis",n,e,t),c=E("keepDims",n,e,t);return[s.min(E("x",n,e,t),l,c)]}case"Sum":{const l=E("axis",n,e,t),c=E("keepDims",n,e,t);return[s.sum(E("x",n,e,t),l,c)]}case"All":{const l=E("axis",n,e,t),c=E("keepDims",n,e,t);return[s.all(E("x",n,e,t),l,c)]}case"Any":{const l=E("axis",n,e,t),c=E("keepDims",n,e,t);return[s.any(E("x",n,e,t),l,c)]}case"ArgMax":{const l=E("axis",n,e,t);return[s.argMax(E("x",n,e,t),l)]}case"ArgMin":{const l=E("axis",n,e,t);return[s.argMin(E("x",n,e,t),l)]}case"Prod":{const l=E("axis",n,e,t),c=E("keepDims",n,e,t);return[s.prod(E("x",n,e,t),l,c)]}case"Cumprod":{const l=E("axis",n,e,t),c=E("exclusive",n,e,t),d=E("reverse",n,e,t);return[s.cumprod(E("x",n,e,t),l,c,d)]}case"Cumsum":{const l=E("axis",n,e,t),c=E("exclusive",n,e,t),d=E("reverse",n,e,t);return[s.cumsum(E("x",n,e,t),l,c,d)]}case"Bincount":const r=E("x",n,e,t),a=E("weights",n,e,t),o=E("size",n,e,t);return[s.bincount(r,a,o)];case"DenseBincount":{const l=E("x",n,e,t),c=E("weights",n,e,t),d=E("size",n,e,t),f=E("binaryOutput",n,e,t);return[s.denseBincount(l,c,d,f)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XX=(n,e,t,s=Sn)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=E("n",n,e,t),a=E("axis",n,e,t);let o=E("tensors",n,e,t);return o=o.slice(0,r),[s.concat(o,a)]}case"Gather":{const r=E("x",n,e,t),a=E("indices",n,e,t);return[s.gather(r,s.cast(a,"int32"),0)]}case"GatherV2":{const r=E("axis",n,e,t),a=E("batchDims",n,e,t),o=E("x",n,e,t),l=E("indices",n,e,t);return[s.gather(o,s.cast(l,"int32"),r,a)]}case"Reverse":{const r=E("dims",n,e,t),a=[];for(let l=0;l<r.length;l++)r[l]&&a.push(l);const o=E("x",n,e,t);return[s.reverse(o,a)]}case"ReverseV2":{const r=E("axis",n,e,t),a=E("x",n,e,t);return[s.reverse(a,r)]}case"Slice":{const r=E("begin",n,e,t),a=E("size",n,e,t);return[s.slice(E("x",n,e,t),r,a)]}case"StridedSlice":{const r=E("begin",n,e,t),a=E("end",n,e,t),o=E("strides",n,e,t),l=E("beginMask",n,e,t),c=E("endMask",n,e,t),d=E("ellipsisMask",n,e,t),f=E("newAxisMask",n,e,t),p=E("shrinkAxisMask",n,e,t),g=E("x",n,e,t);return[s.stridedSlice(g,r,a,o,l,c,d,f,p)]}case"Pack":return Ge(()=>{const r=E("axis",n,e,t),a=E("tensors",n,e,t),o=a[0].shape,l=s.squeeze(a[0]).shape,c=a.map(d=>{const f=yt(d.shape,o);if(!f&&!yt(s.squeeze(d).shape,l))throw new Error("the input tensors shape does not match");return f?d:s.reshape(d,o)});return[s.stack(c,r)]});case"Unpack":{const r=E("axis",n,e,t),a=E("tensor",n,e,t);return s.unstack(a,r)}case"Tile":{const r=E("reps",n,e,t);return[s.tile(E("x",n,e,t),r)]}case"Split":case"SplitV":{const r=E("axis",n,e,t),a=E("numOrSizeSplits",n,e,t),o=E("x",n,e,t);return s.split(o,a,r)}case"ScatterNd":{const r=E("indices",n,e,t),a=E("values",n,e,t),o=E("shape",n,e,t);return[s.scatterND(r,a,o)]}case"GatherNd":{const r=E("x",n,e,t),a=E("indices",n,e,t);return[s.gatherND(r,a)]}case"SparseToDense":{const r=E("sparseIndices",n,e,t),a=E("outputShape",n,e,t),o=E("sparseValues",n,e,t),l=E("defaultValue",n,e,t);return[s.sparseToDense(r,o,a,o.dtype===l.dtype?l:s.cast(l,o.dtype))]}case"TensorScatterUpdate":{const r=E("indices",n,e,t),a=E("values",n,e,t),o=E("tensor",n,e,t);return[s.tensorScatterUpdate(o,r,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KX=(n,e,t,s=Sn)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:o,reverseIndexMap:l}=s.sparse.sparseFillEmptyRows(E("indices",n,e,t),E("values",n,e,t),E("denseShape",n,e,t),E("defaultValue",n,e,t));return[r,a,o,l]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=s.sparse.sparseReshape(E("inputIndices",n,e,t),E("inputShape",n,e,t),E("newShape",n,e,t));return[r,a]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(E("data",n,e,t),E("indices",n,e,t),E("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(E("data",n,e,t),E("indices",n,e,t),E("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YX=(n,e,t,s=Sn)=>{switch(n.op){case"FFT":return[s.fft(E("x",n,e,t))];case"IFFT":return[s.ifft(E("x",n,e,t))];case"RFFT":return[s.rfft(E("x",n,e,t))];case"IRFFT":return[s.irfft(E("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QX=(n,e,t,s=Sn)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(E("input",n,e,t),E("pattern",n,e,t),E("rewrite",n,e,t),E("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=s.string.stringNGrams(E("data",n,e,t),E("dataSplits",n,e,t),E("separator",n,e,t),E("nGramWidths",n,e,t),E("leftPad",n,e,t),E("rightPad",n,e,t),E("padWidth",n,e,t),E("preserveShortSequences",n,e,t));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:o}=s.string.stringSplit(E("input",n,e,t),E("delimiter",n,e,t),E("skipEmpty",n,e,t));return[r,a,o]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(E("input",n,e,t),E("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZX=(n,e,t,s=Sn)=>{switch(n.op){case"Cast":return[s.cast(E("x",n,e,t),E("dtype",n,e,t))];case"ExpandDims":{const r=E("axis",n,e,t);return[s.expandDims(E("x",n,e,t),r)]}case"Squeeze":{const r=E("axis",n,e,t);return[s.squeeze(E("x",n,e,t),r)]}case"Reshape":return[s.reshape(E("x",n,e,t),E("shape",n,e,t))];case"EnsureShape":return[s.ensureShape(E("x",n,e,t),E("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(E("x",n,e,t),E("padding",n,e,t),E("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(E("x",n,e,t),E("padding",n,e,t),E("constantValue",n,e,t))];case"SpaceToBatchND":{const r=E("blockShape",n,e,t),a=E("paddings",n,e,t);return[s.spaceToBatchND(E("x",n,e,t),r,a)]}case"BatchToSpaceND":{const r=E("blockShape",n,e,t),a=E("crops",n,e,t);return[s.batchToSpaceND(E("x",n,e,t),r,a)]}case"DepthToSpace":{const r=E("blockSize",n,e,t),a=E("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(E("x",n,e,t),r,a)]}case"BroadcastTo":return[s.broadcastTo(E("x",n,e,t),E("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(E("s0",n,e,t),E("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OS(n,e,t,s,r=Ge){const a=((o,l,c)=>{switch(o.category){case"arithmetic":return r(()=>EX(o,l,c));case"basic_math":return r(()=>kX(o,l,c));case"control":return OX(o,l,c);case"convolution":return r(()=>PX(o,l,c));case"creation":return r(()=>FX(o,l,c));case"dynamic":return LX(o,l,c);case"evaluation":return r(()=>zX(o,l,c));case"image":return r(()=>VX(o,l,c));case"graph":return r(()=>BX(o,l,c));case"logical":return r(()=>WX(o,l,c));case"matrices":return r(()=>GX(o,l,c));case"normalization":return r(()=>HX(o,l,c));case"ragged":return r(()=>jX(o,l,c));case"reduction":return r(()=>qX(o,l,c));case"slice_join":return r(()=>XX(o,l,c));case"sparse":return r(()=>KX(o,l,c));case"spectral":return r(()=>YX(o,l,c));case"string":return r(()=>QX(o,l,c));case"transformation":return r(()=>ZX(o,l,c));case"hash_table":return UX(o,l,c,s);case"custom":const d=ZN(o.op);if(d&&d.customExecutor)return d.customExecutor(new NX(o,l,c));throw TypeError(`Custom op ${o.op} is not registered.`);default:throw TypeError(`Unknown op '${o.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return mo(a)?a.then(o=>[].concat(o)):[].concat(a)}class PS{constructor(e={},t={},s={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FS(n,e,t,s){const r=new Set,a=[];let o=null,l=null;const c=new Set,d=new Set(Object.keys(n).map(g=>us(g)[0]));s=s||[];const f=new Set(s.map(g=>us(g.name)[0])),p=[...e];for(;p.length>0;){const g=p.pop();if((io(g)||iK(g)||oK(g))&&o==null&&(o=g,l=o.children.map(y=>y.name).filter(y=>r.has(y))),r.add(g.name),t[g.name]==null&&!d.has(g.name)&&!f.has(g.name)){if(g.inputs.length===0){a.push(g.name);continue}g.inputs.forEach(y=>{c.has(y.name)||(c.add(y.name),p.push(y))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:a,dynamicNode:o,syncInputs:l}}function JX(n,e){const{usedNodes:t,inputs:s}=e,r=Object.keys(s).map(S=>us(S)[0]).map(S=>n.nodes[S]),a=n.initNodes||[],o=S=>t.has(typeof S=="string"?S:S.name);function l(S){return[...new Map(S.map($=>[$.name,$])).values()]}const c=l([...r,...n.weights,...a]).filter(o),d=l([...c,...Object.values(n.nodes)]).filter(o),f=new Map(d.map(S=>[S.name,S])),p={};for(const S of d){p[S.name]=p[S.name]||0;for(const $ of S.children)o($)||(p[$.name]=Number.POSITIVE_INFINITY),p[$.name]=(p[$.name]||0)+1}const g=Object.entries(p).filter(([,S])=>S===0).map(([S])=>S),y=[...g];for(;g.length>0;){const S=g.pop(),$=f.get(S);for(const N of $.children.filter(o))--p[N.name]===0&&(y.push(N.name),g.push(N.name))}const x=y.map(S=>f.get(S)),w=eK(x,c);return tK(w,c),w}function eK(n,e){const t=new Map(n.map(o=>[o.name,o])),s=e.map(o=>o.name),r=new Set(s);for(;s.length>0;){const o=s.pop(),l=t.get(o);for(const c of l.children)!t.has(c.name)||r.has(c.name)||(r.add(c.name),s.push(c.name))}return n.filter(o=>r.has(o.name))}class Dh extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function tK(n,e){const t=new Map(n.map((l,c)=>[l.name,c])),s=new Set(e.map(l=>l.name)),r=l=>s.has(typeof l=="string"?l:l.name),a=new Set(n.map(l=>l.name)),o=l=>a.has(typeof l=="string"?l:l.name);for(const l of n){for(const c of l.children.filter(o)){if(!t.has(c.name))throw new Dh(`Child ${c.name} of node ${l.name} is unreachable.`);if(t.get(l.name)>t.get(c.name))throw new Dh(`Node ${l.name} is scheduled to run after its child ${c.name}.`)}if(!r(l))for(const c of l.inputs){if(!t.has(c.name))throw new Dh(`Input ${c.name} of node ${l.name} is unreachable.`);if(t.get(c.name)>t.get(l.name))throw new Dh(`Node ${l.name} is scheduled to run before its input ${c.name}.`)}}}function nK(n){const e=new Map(n.map((l,c)=>[l.name,c])),t=Number.MAX_SAFE_INTEGER,s=n.map((l,c)=>io(l)?t:c),r=l=>{const c=s[e.get(l.name)];return c??-1},a=n.map((l,c)=>l.children.map(r).reduce((d,f)=>Math.max(d,f),s[c])),o=new Map;for(let l=0;l<n.length;++l){const c=a[l];if(c===t)continue;const d=n[l],f=n[c];o.has(f.name)||o.set(f.name,[]),o.get(f.name).push(d)}return o}const sK=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),rK=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),aK=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function io(n){return sK.has(n.op)}function iK(n){return rK.has(n.op)}function oK(n){return aK.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hf{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new hf(e.functions[s],this)})}getCompilationKey(e,t){const s=e.map(a=>a.name).sort(),r=t.map(a=>a.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const s=FS(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:o}=s;if(a!=null)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${o}]`);if(r.length>0){const d=t.map(p=>p.name),f=Object.keys(e);throw new Error(`Cannot compute the outputs [${d}] from the provided inputs [${f}]. Missing the following inputs: [${r}]`)}const l=JX(this.graph,s),c=nK(l);return{orderedNodes:l,nodeLiveUntilMap:c}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return Er(t),t}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(g=>this.graph.nodes[us(g)[0]]),a=t.map(g=>us(g)[0]),o=new Set(a);let l=a.map(g=>this.graph.nodes[g]);l.length===0&&(l=this._outputs);const c=this.getCompilationKey(r,l);let d=this.compiledMap.get(c);d==null&&(d=this.compile(e,l),this.compiledMap.set(c,d));try{this.keepIntermediateTensors=ee().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(g){this.keepIntermediateTensors=!1,console.warn(g.message)}const f={},p={};return Ge(()=>{const g=new PS(this.weightMap,f,p,this.functionExecutorMap,this.parseNodeNameCache),y=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach($=>{const[N,I]=us($,g),_=[];_[I]=e[$],y[N]=_,this.keepIntermediateTensors&&(this.clonedTensorsMap[N]=this.cloneTensorList(_))});const x=this.getFrozenTensorIds(y),{orderedNodes:w,nodeLiveUntilMap:S}=d;for(const $ of w){if(y[$.name])continue;const N=OS($,y,g,this._resourceManager);if(mo(N))throw new Error(`The execution of the op '${$.op}' returned a promise. Please use model.executeAsync() instead.`);y[$.name]=N,this.keepIntermediateTensors&&(this.clonedTensorsMap[$.name]=this.cloneTensorList(N)),this.checkTensorForDisposalWithNodeLiveUntilInfo($,y,g,x,o,S.get($.name))}return this.parent==null&&g.dispose(x),t.map($=>vn($,y,g))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,a,o,l){if(!(io(t)||o.has(e))){for(const c of s[e])c!=null&&(l[c.id]=(l[c.id]||0)+t.children.length);for(const c of t.inputs){if(io(c))continue;const d=RS(c.name,s,r);if(d!=null)for(const f of d){if(!f||f.kept||a.has(f.id))continue;const p=l[f.id];p===1?(f.dispose(),delete l[f.id]):p!=null&&l[f.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,s,r,a,o){function l(c){return io(c)||a.has(c.name)}if(!(io(e)||o==null))for(const c of o){if(l(c))continue;const d=RS(c.name,t,s);for(const f of d)!f||f.kept||r.has(f.id)||f.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,s=!1,r={},a={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=ee().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(g){this.keepIntermediateTensors=!1,console.warn(g.message)}const o=new PS(this.weightMap,r,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const l=await this.executeWithControlFlow(e,o,t,s),c=t.map(g=>vn(g,l,o)),d=c.map(g=>g.id),f=Object.keys(e).map(g=>e[g].id),p=new Set([...d,...f,...this.weightIds]);return Object.values(l).forEach(g=>{g.forEach(y=>{y&&!y.isDisposed&&!p.has(y.id)&&y.dispose()})}),this.parent==null&&o.dispose(p),c}async executeFunctionAsync(e,t,s){const r=e.reduce((a,o,l)=>(a[this.inputs[l].name]=o,a),{});return this._executeAsync(r,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,r){const a=Object.keys(e),o=a.map(_=>this.graph.nodes[us(_)[0]]),l=s.map(_=>us(_)[0]),c=new Set(l);let d=l.map(_=>this.graph.nodes[_]);d.length===0&&(d=this._outputs);const{usedNodes:f,missingInputs:p,dynamicNode:g,syncInputs:y}=FS(e,d,this.weightMap,this._initNodes),x=[...o,...this.graph.weights,...this._initNodes||[]].map(_=>({node:_,contexts:t.currentContext})),w=Object.assign({},this.weightMap);Object.keys(e).forEach(_=>{const[O,M]=us(_),W=[];W[M]=e[_],w[O]=W});const S={},$=this.getFrozenTensorIds(w),N={};for(;x.length>0;){const _=this.processStack(o,x,t,w,N,$,c,S,f);await Promise.all(_)}g==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const I=d.filter(_=>!io(_)&&!vn(_.name,w,t)).map(_=>_.name);if(I.length>0){let _="";throw g!=null&&(_=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${y}]`),new Error(`Cannot compute the outputs [${I}] from the provided inputs [${a}]. Consider providing the following inputs: [${p}]. ${_}`)}return w}processStack(e,t,s,r,a,o,l,c,d){const f=[];for(;t.length>0;){const p=t.pop();s.currentContext=p.contexts;let g="";if(p.node.op==="Enter"&&E("isConstant",p.node,r,s)&&([g]=sa(p.node.name,s)),r[p.node.name]==null){const y=OS(p.node,r,s,this._resourceManager);g||([g]=sa(p.node.name,s));const x=s.currentContext;mo(y)?f.push(y.then(w=>(r[g]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[g]=this.cloneTensorList(w)),s.currentContext=x,this.checkTensorForDisposal(g,p.node,r,s,o,l,c),this.processChildNodes(p.node,t,s,r,a,d),w))):(r[g]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[g]=this.cloneTensorList(y)),this.checkTensorForDisposal(g,p.node,r,s,o,l,c),this.processChildNodes(p.node,t,s,r,a,d))}else this.processChildNodes(p.node,t,s,r,a,d)}return f}processChildNodes(e,t,s,r,a,o){e.children.forEach(l=>{const[c]=sa(l.name,s);a[c]||!o.has(l.name)||(l.op==="Merge"?l.inputNames.some(d=>!!vn(d,r,s))&&(a[c]=!0,t.push({contexts:s.currentContext,node:l})):l.inputNames.every(d=>!!vn(d,r,s))&&(a[c]=!0,t.push({contexts:s.currentContext,node:l})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=us(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const o=a.attrParams.shape.value,l=o.length===s.shape.length&&s.shape.every((c,d)=>o[d]===-1||o[d]===c);z(l,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${o}], but was [${s.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&z(s.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const r={};for(const a in e){const o=(s=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||s===void 0?void 0:s[a];o!=null?r[o.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=us(s);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,r;const a=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[t];return a!=null?a.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=us(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class uK{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lK="?tfjs-format=file",cK="model.json";class dK{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},s=_T){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,t==null&&(this.loadOptions={}),this.resourceManager=new uK}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return mo(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await N$(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const s=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const a=this.artifacts.userDefinedMetadata;a.signature!=null&&(r=a.signature),a.structuredOutputKeys!=null&&(this.structuredOutputKeys=a.structuredOutputKeys)}if(this.signature=r,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new hf(IS.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const a=IS.Instance.transformGraph(e.modelInitializer);this.initializer=new hf(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Mt?[e]:e,s={};return t.forEach((r,a)=>s[this.structuredOutputKeys[a]]=r),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,t){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var t;if(!(e instanceof Mt)&&!Array.isArray(e)){const a=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(a!=null)for(const o in a){const l=a[o];l.resourceId!=null&&(e[o]=this.resourceIdToCapturedInput[l.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((a,o)=>{var l,c,d;const f=(d=(c=(l=this.signature)===null||l===void 0?void 0:l.inputs)===null||c===void 0?void 0:c[o])===null||d===void 0?void 0:d.resourceId;return f!=null?a[o]=this.resourceIdToCapturedInput[f]:a[o]=e[r++],a},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let r=0;r<s.length;r++){const a=s[r],o=t[a];this.resourceIdToCapturedInput[o.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&gt(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Gu(n,e={},t=_T){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=hK(n));const s=new dK(n,e,t);return await s.load(),s}function hK(n){return n.endsWith("/")||(n=n+"/"),`${n}${cK}${lK}`}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rs=ee();Rs.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Rs.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Rs.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);Rs.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);Rs.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Rs.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Rs.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Rs.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);Rs.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);Rs.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);Rs.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Rs.registerFlag("WEBGPU_PRINT_SHADER",()=>"");Rs.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fK{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pK{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t,s=!1,r=!0){let a;const o=LS(e,t);return r?(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).length>0?(a=this.freeBuffers.get(o).pop(),this.numFreeBuffers--):(a=this.device.createBuffer({size:e,usage:t,mappedAtCreation:s}),this.numBytesAllocated+=e)):(a=this.device.createBuffer({size:e,usage:t,mappedAtCreation:s}),this.numBytesAllocated+=e),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.usedBuffers.get(o).push(a),this.numUsedBuffers++,this.numBytesUsed+=e,a}releaseBuffer(e,t=!0){if(this.freeBuffers.size===0)return;const s=e.size,r=e.usage,a=LS(s,r),o=this.usedBuffers.get(a),l=o.indexOf(e);if(l<0)throw new Error("Cannot find the buffer in buffer manager");o[l]=o[o.length-1],o.pop(),this.numUsedBuffers--,this.numBytesUsed-=s,t?(this.freeBuffers.get(a).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=s)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function LS(n,e){return`${n}_${e}`}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mK{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,s,r){const a=BS(s),o=e*t*a,l=zS(e,t,s,r);if(this.freeTextures.has(l)||this.freeTextures.set(l,[]),this.usedTextures.has(l)||this.usedTextures.set(l,[]),this.numBytesUsed+=o,this.numUsedTextures++,this.freeTextures.get(l).length>0){this.numFreeTextures--;const d=this.freeTextures.get(l).shift();return this.usedTextures.get(l).push(d),d}this.numBytesAllocated+=o;const c=this.device.createTexture({size:[e,t],format:s,usage:r});return this.usedTextures.get(l).push(c),c}releaseTexture(e){if(this.freeTextures.size===0)return;const t=e.width,s=e.height,r=e.format,a=e.usage,o=zS(t,s,r,a);this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.freeTextures.get(o).push(e),this.numFreeTextures++,this.numUsedTextures--;const l=this.usedTextures.get(o),c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1);const d=BS(r),f=t*s*d;this.numBytesUsed-=f}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function zS(n,e,t,s){return`${n}_${e}_${t}_${s}`}function BS(n){if(n==="rgba8unorm")return 16;throw new Error(`${n} is not supported!`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gK(n,e){if(Math.max(...n)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const t=n.length,s="xyzwuv",r=n.map(o=>`${e}.${s[o]}`),a=new Array(t-1);a[t-2]=r[t-1];for(let o=t-3;o>=0;--o)a[o]=`(${a[o+1]} * ${r[o+1]})`;return a}const fi=(n,e,t)=>t==="int32"?`atomicAdd(${n}, bitcast<i32>(${e}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${e});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${n}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Hu;(function(n){n[n.FROM_PIXELS=0]="FROM_PIXELS",n[n.DRAW=1]="DRAW"})(Hu||(Hu={}));const yK=(n,e,t,s,r)=>{const a={dtype:s.dtype,shape:s.shape},o=bK(t,a,e),l=n.createShaderModule({code:o,label:e.constructor.name});let c=ee().get("WEBGPU_PRINT_SHADER");if(c!==""){c=c.toLowerCase();const d=c.split(",");(c==="all"||d.some(f=>e.shaderKey.toLowerCase().includes(f)))&&(console.group(e.shaderKey),console.debug(o),console.groupEnd())}return r?n.createComputePipelineAsync({compute:{module:l,entryPoint:"_start"},label:e.constructor.name,layout:"auto"}):n.createComputePipeline({compute:{module:l,entryPoint:"_start"},label:e.constructor.name,layout:"auto"})},Ke=(n,e="f32")=>{switch(n){case 1:return`${e}`;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${n}-component ${e} is not supported.`)}};function Xt(n){if(n<=1)return"i32";if(n===2)return"vec2<i32>";if(n===3)return"vec3<i32>";if(n===4)return"vec4<i32>";if(n===5)return"vec5";if(n===6)return"vec6";throw Error(`GPU for rank ${n} is not yet supported`)}function oa(n){if(n===0)return"x";if(n===1)return"y";if(n===2)return"z";if(n===3)return"w";if(n===4)return"u";if(n===5)return"v";throw Error(`Index ${n} is not yet supported`)}function Ce(...n){let e;switch(n.length){case 0:e=`
        fn main()
      `;break;case 1:e=`
        fn main(${n[0]} : i32)
      `;break;default:throw Error("Unreachable")}return e}function MS(n,e){let t;return t=`
     ${xK(e)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${n?"main(getGlobalIndex());":"main();"};
      }
    `,t}function xK(n){return`
  @compute @workgroup_size(${n.workgroupSize[0]}, ${n.workgroupSize[1]}, ${n.workgroupSize[2]})
`}function bK(n,e,t){const s=[],r=t.workgroupSize[0]*t.workgroupSize[1]*t.workgroupSize[2];if(t.outputComponent=t.outputComponent?t.outputComponent:1,s.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${tE(t)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${r}u +
                localIndex);
        `}
      }
    `),t.pixelsOpType!=null){const x=t.pixelsOpType===Hu.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${oo(e.dtype,t.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${oo(n[0].dtype,t.outputComponent)}>;`,w=e.shape.length===3?"vec2<i32>":"i32";s.push(`
        struct Uniform {
          outShapeStrides : ${w},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${x}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);const S=VS(t);return[US,s.join(`
`),Hh(e.shape),t.getUserCode(),MS(S,t)].join(`
`)}let a,o,l="struct Uniforms { NAN : f32, INFINITY : f32, ";t.variableNames.forEach((x,w)=>{const S=Xt(n[w].shape.length);l+=`${x.charAt(0).toLowerCase()+x.slice(1)}Shape : ${S}, `,a=n[w].shape.length-1,o=Xt(a),l+=`${x.charAt(0).toLowerCase()+x.slice(1)}ShapeStrides: ${o}, `});const c=Xt(e.shape.length);l+=`outShape : ${c}, `,a=e.shape.length-1,o=Xt(a),l+=`
         outShapeStrides: ${o}, `,t.size&&(l+="size : i32, "),t.uniforms&&(l+=t.uniforms),l+="};",l=kK(l),s.push(l),t.atomic?s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${oo(e.dtype,t.outputComponent)}>;
    `),t.variableNames.forEach((x,w)=>{s.push(`
      @group(0) @binding(${1+w}) var<storage, read> ${x}: array<${t.variableComponents?oo(n[w].dtype,t.variableComponents[w]):oo(n[w].dtype,t.outputComponent)}>;
        `)}),l!==""&&s.push(`
      @group(0) @binding(${1+t.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);const d=TK(e.shape,t.dispatchLayout),f=[US,s.join(`
`)+wK,Hh(e.shape),d,NK(e.shape.length)];t.atomic||f.push(EK(e.shape,e.dtype,t.outputComponent)),t.variableNames.forEach((x,w)=>{f.push(`${Hh(n[w].shape,x)}`)});const p=n.map((x,w)=>$K(x,e.shape,t.variableComponents?t.variableComponents[w]:t.outputComponent,t.dispatchLayout.x.length===e.shape.length)).join(`
`);f.push(p),f.push(t.getUserCode());const g=VS(t);return f.push(MS(g,t)),f.join(`
`)}function vK(n,e,t){let s=n.shaderKey;if(n.pixelsOpType!=null)return s;const r=[],a=[];e.forEach(f=>{r.push(f.shape),a.push(f.dtype)}),r.push(t.shape),a.push(t.dtype);const o=e.map(f=>Uu(f.shape,t.shape)),l=e.map(f=>yt(f.shape,t.shape)).join("_"),c=o.map(f=>f.join("_")).join(";"),d=tE(n)?"flatDispatch":"";return s+="_"+(n.workgroupSize?n.workgroupSize.join(","):"")+r.map(f=>f.length).join(",")+a.join(",")+n.variableNames.join(",")+c+l+d,s}const US=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,wK=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function Hh(n,e=""){const t=n.length,s=e!==""?`get${e.charAt(0).toUpperCase()+e.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",r=e!==""?`${e.charAt(0).toLowerCase()+e.slice(1)}ShapeStrides`:"outShapeStrides";if(t<=1)return`fn ${s}(index : i32) -> i32 { return index; }`;const a=Ut(n),o=Xt(t),l=[];for(let d=0;d<t;d++)l.push(`d${d}`);if(a.length===1)return`    fn ${s}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${r}; let d1 = index - d0 * uniforms.${r};
      return vec2<i32>(d0, d1);
    }`;let c;return c="var index2 = index;"+a.map((d,f)=>{const p=`let ${l[f]} = index2 / uniforms.${r}.${oa(f)}`,g=f===a.length-1?`let ${l[f+1]} = index2 - ${l[f]} * uniforms.${r}.${oa(f)}`:`index2 = index2 - ${l[f]} * uniforms.${r}.${oa(f)}`;return`${p}; ${g};`}).join(""),`
    fn ${s}(index : i32) -> ${o} {
      ${c}
      return ${o}(${l.join(",")});
    }
  `}function SK(n,e){const t=n.name,s=n.shape.length,r=Xt(s),a="get"+t.charAt(0).toUpperCase()+t.slice(1),o=["d0","d1","d2","d3","d4","d5"].slice(0,s),l=o.map(f=>`${f} : i32`).join(", ");if(s<1)return`
      fn ${a}() -> ${Ke(e)} {
        return ${Ke(e)}(${t}[0]);
      }
    `;const c=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`;let d=`${s}D`;return s===0&&(d="1D"),`
    fn ${a}(${l}) -> ${Ke(e)} {
      return ${Ke(e)}(${t}[getIndexFromCoords${d}(${r}(${o.join(",")}),
        ${c})${e===1?"":` / ${e}`}]);
    }
   `}function CK(n,e,t,s){const r=n.name,a=r.charAt(0).toUpperCase()+r.slice(1),o="get"+a+"ByOutput",l=n.shape.length,c=e.length,d=Xt(c);if(yt(n.shape,e)&&s)return`
    fn ${o}Index(globalIndex : i32) -> ${Ke(t)} {
      return ${Ke(t)}(${r}[globalIndex]);
    }

    fn ${o}Coords(coords : ${d}) -> ${Ke(t)} {
      return ${Ke(t)}(${r}[${c>1?"getOutputIndexFromCoords(coords)":"coords"}${t===1?"":` / ${t}`}]);
    }
    `;const f=Uu(n.shape,e),p=c-l;let g="";if(l===0)return`
    fn ${o}Index(globalIndex : i32) -> ${Ke(t)}{
      return get${a}();
    }

    fn ${o}Coords(coords : ${d}) -> ${Ke(t)}{
      return get${a}();
    }
  `;c<2&&f.length>=1?g="coords = 0;":g=f.map(S=>`coords.${oa(S+p)} = 0;`).join(`
`);let y="";if(c<2&&l>0)y="coords";else if(c>1){const S=Xt(l),$=n.shape.map((N,I)=>`coords.${oa(I+p)}`).join(", ");y=`${S}(${$})`}else y="coords";const x=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,w=`${l}D`;return`
  fn ${o}Index(globalIndex : i32) -> ${Ke(t)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${g}
    return ${Ke(t)}(${r}[getIndexFromCoords${w}(${y}, ${x})${t===1?"":` / ${t}`}]);
  }

  fn ${o}Coords(coordsIn : ${d}) -> ${Ke(t)} {
    var coords = coordsIn;
    ${g}
    return ${Ke(t)}(${r}[getIndexFromCoords${w}(${y}, ${x})${t===1?"":` / ${t}`}]);
  }
`}function $K(n,e,t,s){let r=SK(n,t);return n.shape.length<=e.length&&(r+=CK(n,e,t,s)),r}function TK(n,e){const{x:t,y:s=[],z:r=[]}=e,a=n.length,o=t.length+s.length+r.length;if(o!==a)return"";if(t.length===a)return`fn getOutputCoords() -> ${Xt(a)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let l="";const c=[t,s,r];for(let g=0;g<c.length;g++){const y=c[g];if(y.length!==0)if(y.length===1)l+=`let d${y[0]} = i32(globalId[${g}]);`;else{const x=gK(y,"uniforms.outShape");l+=`var index${g} = i32(globalId[${g}]);`;for(let w=0;w<x.length;w++)l+=`let d${y[w]} = index${g} / ${x[w]};`,w===x.length-1?l+=`let d${y[w+1]} = index${g} - d${y[w]} * ${x[w]};`:l+=`index${g} = index${g} - d${y[w]} * ${x[w]};`}}const d=[];for(let g=0;g<o;g++)d.push(`d${g}`);const f=Xt(o);let p=`fn getOutputCoords() -> ${f} {
  ${l}
`;return d.length===0?p+=`return ${f}(0); }`:p+=`return ${f}(${d.join(",")}); }`,p}function NK(n){let e="";switch(n){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:z(!1,()=>`Unsupported ${n}D shape`);break}return e}function tE(n){return n.dispatch[1]===1&&n.dispatch[2]===1}function oo(n,e=1){if(n==="float32")return Ke(e,"f32");if(n==="int32"||n==="bool")return Ke(e,"i32");throw new Error(`type ${n} is not supported.`)}function EK(n,e,t){const s=n.length,r=oo(e,t);let a=`fn setOutputAtIndex(flatIndex : i32, value : ${Ke(t)}) {
      result[flatIndex] = ${r}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${Ke(t,"i32")}) {
      result[flatIndex] = ${r}(value);
    }
    `;if(s>=2){const o=["d0","d1","d2","d3","d4","d5"].slice(0,s),l=Xt(s);a+=`
      fn setOutputAtCoords(${o.map(c=>`${c} : i32`).join(", ")}, value : ${Ke(t)}) {
        let flatIndex = getOutputIndexFromCoords(${l}(${o.join(", ")}));
        setOutputAtIndex(flatIndex${t===1?"":` / ${t}`}, value);
      }
      fn setOutputAtCoordsI32(${o.map(c=>`${c} : i32`).join(", ")}, value : ${Ke(t,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${l}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex${t===1?"":` / ${t}`}, value);
      }
    `}return a}function kK(n){const e=/(\w+)\s*:\s*vec(5|6)/g;n=n.replace(e,s=>"@align(16) "+s);const t=/vec(5|6)\s*,\s*(\w+)/g;return n=n.replace(t,(s,r,a)=>`vec${r}, @align(16) ${a}`),n}function VS(n){return!(n.dispatchLayout.hasOwnProperty("y")&&n.dispatchLayout.y.length!==0||n.dispatchLayout.hasOwnProperty("z")&&n.dispatchLayout.z.length!==0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fo=n=>{let e=1;for(let t=0;t<n.length;t++)e*=n[t];return e};function $e(n,e,t=[1,1,1],s=[1,1,1]){const[r,a,o]=[Math.ceil(fo(n.x.map(l=>e[l]))/(t[0]*s[0])),n.y?Math.ceil(fo(n.y.map(l=>e[l]))/(t[1]*s[1])):1,n.z?Math.ceil(fo(n.z.map(l=>e[l]))/(t[2]*s[2])):1];return[r,a,o]}function RK(n,e,t,s=!1){const r=[8,8,1],a=[4,4,1];return s||(n<=8&&(a[1]=1),e<=16&&t<=16&&(r[0]=4)),{workgroupSize:r,elementsPerThread:a}}function nE(n,e,t=!1){if(t)return[8,8,1];const s=fo(n.x.map(a=>e[a])),r=fo(n.y.map(a=>e[a]));return s<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function sE(n,e,t=!1){if(t)return[4,4,1];const s=fo(n.x.map(a=>e[a])),r=fo(n.y.map(a=>e[a]));return s<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function Re(n){return{x:n.map((e,t)=>t)}}function WS(n){if(n==="float32"||n==="int32"||n==="bool"||n==="string")return 4;if(n==="complex64")return 8;throw new Error(`Unknown dtype ${n}`)}function rE(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function aE(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&z(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGPU backend.`)})}var Nr;(function(n){n[n.MatMulReduceProgram=0]="MatMulReduceProgram",n[n.MatMulSplitKProgram=1]="MatMulSplitKProgram",n[n.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",n[n.MatMulPackedProgram=3]="MatMulPackedProgram",n[n.MatMulMax=4]="MatMulMax"})(Nr||(Nr={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IK=ee().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),_K=(n,e)=>{const t=n.limits.maxComputeWorkgroupsPerDimension,s=e.dispatchLayout,r=e.dispatch;if(r.every(o=>o<=t))return r;z(r[0]>t&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let a=Math.ceil(Math.sqrt(r[0]));return a>t?(a=Math.ceil(Math.cbrt(r[0])),z(a<=t,()=>"Total dispatch size exceeds WebGPU maximum."),[a,a,a]):[a,a,1]};class al extends Sy{nextDataId(){return al.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!rE())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new fK(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new pK(this.device),this.textureManager=new mK(this.device),this.tensorMap=new RC(this,ls()),ee().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,t=!1){if(!this.tensorMap.has(e))return!0;const s=this.tensorMap.get(e);return t?s.refCount=0:s.refCount--,s.refCount>0?!1:(s.complexTensorInfos!=null&&(this.disposeData(s.complexTensorInfos.real.dataId),this.disposeData(s.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);if(!(!t||!t.resource)){if(t.external){t.resource=null;return}t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource),t.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){const t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){const t=this.tensorMap.get(e);t.refCount--}}write(e,t,s){if(s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.tensorMap.set(r,{dtype:s,shape:t,values:e,refCount:1}),r}move(e,t,s,r,a){if(r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:r,shape:s,values:t,refCount:a})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(t){throw new Error(t.message)}Object.keys(this.pipelineCache).map((t,s)=>{this.pipelineCache[t]=e[s]})}async getBufferData(e){if(ee().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;const t=e.size,s=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,s,0,t),this.submitQueue(),await s.mapAsync(GPUMapMode.READ);const r=s.getMappedRange().slice(0);return s.unmap(),s!=null&&this.bufferManager.releaseBuffer(s),ee().getBool("WEBGPU_USE_PROFILE_TOOL")&&(z(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),r}convertAndCacheOnCPU(e,t){const s=this.tensorMap.get(e);return s.values=t,s.values}readSync(e){const t=this.tensorMap.get(e),{values:s,complexTensorInfos:r}=t;if(s!=null||t.dtype==="string")return s;if(t.dtype==="complex64"){const w=this.readSync(r.real.dataId),S=this.readSync(r.imag.dataId),$=rg(Lc(w,S).buffer,"float32");return this.convertAndCacheOnCPU(e,$),$}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));const a=["opaque","premultiplied"],o=t.resource,l=o.size;z(l%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");const c=l/4,d=new ArrayBuffer(l),f=256,p=256,g=a.map(w=>new OffscreenCanvas(f,p)),y=new OffscreenCanvas(f,p);this.endComputePassEncoder(),g.map((w,S)=>{const $=w.getContext("webgpu");return $.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:a[S]}),$.getCurrentTexture()}).map((w,S)=>{const $=f*4,N=(G,F,B)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:o,bytesPerRow:$,offset:B},{texture:w},{width:G,height:F}),this.submitQueue();const D=y.getContext("2d",{willReadFrequently:!0});D.clearRect(0,0,G,F),D.drawImage(g[S],0,0);const Q=D.getImageData(0,0,G,F).data,re=a[S],he=new Uint8ClampedArray(d,B,G*F*4);for(let le=0;le<he.length;le+=4)if(re==="premultiplied")he[le+3]=Q[le+3];else{const ne=Q[le];he[le]=Q[le+2],he[le+1]=Q[le+1],he[le+2]=ne}},I=Math.floor(c/(f*p));let _=f,O=p,M=0;for(let G=0;G<I;G++)N(_,O,M),M+=f*p*4;const W=c%(f*p);O=Math.floor(W/f),O>0&&(N(_,O,M),M+=O*(f*4)),_=W%f,_>0&&N(_,1,M)});const x=rg(d,t.dtype);return this.convertAndCacheOnCPU(e,x),x}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const t=this.tensorMap.get(e),{values:s}=t;if(s!=null)return s;let r;if(t.dtype==="complex64"){const a=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),o=a[0],l=a[1];r=Lc(o,l)}else{const a=await this.getBufferData(t.resource);r=rg(a,t.dtype)}return this.convertAndCacheOnCPU(e,r),r}copyBuffer(e){const t=e.size,s=e.usage,r=this.bufferManager.acquireBuffer(t,s);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,r,0,t),this.submitQueue(),r}createTensorFromGPUData(e,t,s){let r=e.buffer;if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. ");const a={id:this.nextDataId()};this.tensorMap.set(a,{dtype:s,shape:t,values:null,refCount:1,external:e.zeroCopy});const o=this.tensorMap.get(a),l=WS(o.dtype)*oe(o.shape);if(e.buffer.size<l)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${l})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(r=this.copyBuffer(r)),o.resource=r,ls().makeTensorFromDataId(a,t,s,this)}readToGPU(e){const t=this.tensorMap.get(e),{values:s,dtype:r,shape:a,resource:o}=t;if(r==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(o==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=o,c=l.size,d=l.usage,f=this.bufferManager.acquireBuffer(c,d);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(o,0,f,0,c),this.submitQueue();const p=this.makeTensorInfo(a,r),g=ls().makeTensorFromTensorInfo(p),y=this.tensorMap.get(p.dataId);return y.resource=f,{tensorRef:g,buffer:f}}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>la(r));return xt(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return xt(e.shape,e.dtype,t)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const a=ca(this.activeTimers.map(d=>d.query)).filter(d=>d!=null),o=ca(this.activeTimers.map(d=>d.name)).filter(d=>d!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},c=await Promise.all(a);return l.kernelMs=IC(c),l.getExtraProfileInfo=()=>c.map((d,f)=>({name:o[f],ms:d})).map(d=>`${d.name}: ${d.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,l}makeTensorInfo(e,t,s){return t==="string"&&s!=null&&s.length>0&&Hc(s[0])&&(s=s.map(a=>ti(a))),{dataId:this.write(s,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const s=this.tensorMap.get(e.dataId).resource;return s instanceof GPUBuffer?{buffer:s}:s instanceof GPUTexture?s.createView():s}uploadToGPU(e){const t=this.tensorMap.get(e);if(t.resource!=null)return;const s=WS(t.dtype)*oe(t.shape);let r;const a=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(r=this.bufferManager.acquireBuffer(s,a,!0),r.mapState==="unmapped"){const o=this.bufferManager.acquireBuffer(s,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),l=o.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(l).set(t.values):new Float32Array(l).set(t.values),o.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(o,0,r,0,s),this.stagingPendingDisposal.push(o)}else{const o=r.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(o).set(t.values):new Float32Array(o).set(t.values),r.unmap()}t.values=null}else r=this.bufferManager.acquireBuffer(s,a);t.resource=r}makeUniforms(e){let t=0,s=0;const r=[];let a=1;e.forEach(c=>{c.data.length===0&&(c.data=[1]);let d;switch(c.data.length){case 1:d=4;break;case 2:d=8;break;case 3:d=16;break;case 4:d=16;break;case 5:d=16;break;case 6:d=16;break;default:z(!1,()=>`Unsupported ${c.data.length}D shape`)}(s===5||s===6)&&(d=16),d>a&&(a=d),t=Math.ceil(t/d)*d,s=c.data.length,r.push(t),t+=c.data.length*4}),t=Math.ceil(t/a)*a;const o=new ArrayBuffer(t);e.forEach((c,d)=>{const f=r[d];c.type==="int32"?new Int32Array(o,f,c.data.length).set(c.data):c.type==="uint32"?new Uint32Array(o,f,c.data.length).set(c.data):new Float32Array(o,f,c.data.length).set(c.data)});const l=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(l,0,o,0,t),this.uniformPendingDisposal.push(l),{offset:0,size:t,buffer:l}}runWebGPUProgram(e,t,s,r,a){if(a||(a=this.makeTensorInfo(e.outputShape,s)),oe(a.shape)===0)return this.tensorMap.get(a.dataId).values=Ar(a.dtype,0),a;this.uploadToGPU(a.dataId),e.dispatch=_K(this.device,e);const o=t.map((c,d)=>{if(c.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(c.dataId),{dtype:this.tensorMap.get(c.dataId).dtype,shape:c.shape,name:e.variableNames[d]}});e.shaderKey=vK(e,o,a);const l=ee().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=yK(this.device,e,o,a,l)),e.pipeline=this.pipelineCache[e.shaderKey],l||this.recordAndSubmit(e,a,t,r),a}recordAndSubmit(e,t,s,r){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let a=[],o=[];const l="int32";if(e.pixelsOpType==null){a.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),o=s.concat(t).map(y=>y.shape);const g="int32";o.map(y=>{a.push({type:g,data:y});const x=Ut(y);a.push({type:g,data:x})})}else{const g=Ut(t.shape);a.push({type:l,data:g})}if(e.size){const g=oe(e.outputShape);a.push({type:l,data:[e.outputComponent?g/e.outputComponent:g]})}r&&(a=[...a,...r]);const c=[this.tensorToBinding(t),...s.map(g=>this.tensorToBinding(g)),this.makeUniforms(a)];s.forEach(g=>{this.commandQueueOwnedIds.add(g.dataId)}),this.commandQueueOwnedIds.add(t.dataId);const d=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:c.map((g,y)=>({binding:y,resource:g}))}),f=this.activeTimers!=null;this.ensureCommandEncoderReady();const p={};f&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),p.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(p)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(p)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,d),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(f||ee().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===Hu.DRAW)&&(this.endComputePassEncoder(),f?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const t=new BigUint64Array(e.getMappedRange()),s=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),s}shouldExecuteOnCPU(e,t=IK){return ee().getBool("WEBGPU_CPU_FORWARD")&&e.every(s=>this.tensorMap.get(s.dataId).resource==null&&oe(s.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}al.nextDataId=0;/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rE()&&C$("webgpu",async()=>{const n={powerPreference:ee().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(n),t={},s=[];e.features.has("timestamp-query")&&s.push("timestamp-query"),e.features.has("bgra8unorm-storage")&&s.push(["bgra8unorm-storage"]),t.requiredFeatures=s;const r=e.limits;t.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize,maxBufferSize:r.maxBufferSize,maxComputeWorkgroupSizeX:r.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:r.maxComputeInvocationsPerWorkgroup};const a=await e.requestDevice(t),o="info"in e?e.info:"requestAdapterInfo"in e?await e.requestAdapterInfo():void 0;return new al(a,o)},3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var We;(function(n){n[n.ADD=0]="ADD",n[n.ATAN2=1]="ATAN2",n[n.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",n[n.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",n[n.DIV=4]="DIV",n[n.ELU_DER=5]="ELU_DER",n[n.EQUAL=6]="EQUAL",n[n.FLOOR_DIV=7]="FLOOR_DIV",n[n.GREATER=8]="GREATER",n[n.GREATER_EQUAL=9]="GREATER_EQUAL",n[n.LESS=10]="LESS",n[n.LESS_EQUAL=11]="LESS_EQUAL",n[n.LOGICAL_AND=12]="LOGICAL_AND",n[n.LOGICAL_OR=13]="LOGICAL_OR",n[n.MAX=14]="MAX",n[n.MIN=15]="MIN",n[n.MOD=16]="MOD",n[n.MUL=17]="MUL",n[n.NOT_EQUAL=18]="NOT_EQUAL",n[n.POW=19]="POW",n[n.PRELU=20]="PRELU",n[n.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",n[n.SUB=22]="SUB"})(We||(We={}));const AK="let resultTemp = a + b;",DK="let resultTemp = atan2(a, b);",OK="let resultTemp = areal * breal - aimag * bimag;",PK="let resultTemp = areal * bimag + aimag * breal;",FK="let resultTemp = a / b;",LK="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",zK=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,BK=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,MK=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,UK=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,VK=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,WK=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,GK="return f32(a >= 1.0 && b >= 1.0);",HK=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,jK="return f32(a >= 1.0 || b >= 1.0);",qK=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,XK="let resultTemp = max(a, b);",KK="let resultTemp = min(a, b);",YK=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,QK=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,ZK="let resultTemp = a * b;",JK=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,e7=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,t7=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,n7=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,s7="if (a < 0.0) { return b * a; }  return a;",r7=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,a7="let resultTemp = (a - b) * (a - b);",i7="let resultTemp = a - b;";function ub(n,e){let t;do{switch(n){case We.ATAN2:t=DK;break;case We.MAX:t=XK;break;case We.MIN:t=KK;break;case We.MOD:t=e?QK:YK;break;case We.NOT_EQUAL:t=e?e7:JK;break;case We.POW:t=e?n7:t7;break;default:continue}let s,r,a;return e?(s="isnanVec4",r="vec4<f32>",a="vec4<bool>"):(s="isnan",r="f32",a="bool"),`
      let aIsNaN = ${s}(a);
      let aPostLegalization = select(a, ${r}(42), aIsNaN);
      let bIsNaN = ${s}(b);
      let bPostLegalization = select(b, ${r}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${t}
        return select(
            resultTemp, ${r}(valueForNaN),
            ${a}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(n){case We.ADD:t=AK;break;case We.COMPLEX_MULTIPLY_IMAG:t=PK;break;case We.COMPLEX_MULTIPLY_REAL:t=OK;break;case We.DIV:t=FK;break;case We.ELU_DER:t=LK;break;case We.EQUAL:t=zK;break;case We.FLOOR_DIV:t=BK;break;case We.GREATER:t=MK;break;case We.GREATER_EQUAL:t=UK;break;case We.LESS:t=VK;break;case We.LESS_EQUAL:t=WK;break;case We.LOGICAL_AND:return e?HK:GK;case We.LOGICAL_OR:return e?qK:jK;case We.MUL:t=ZK;break;case We.PRELU:return e?r7:s7;case We.SQUARED_DIFFERENCE:t=a7;break;case We.SUB:t=i7;break}return`
    ${t}
    return resultTemp;
  `}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var we;(function(n){n[n.ABS=0]="ABS",n[n.ACOS=1]="ACOS",n[n.ACOSH=2]="ACOSH",n[n.ASIN=3]="ASIN",n[n.ASINH=4]="ASINH",n[n.ATAN=5]="ATAN",n[n.ATANH=6]="ATANH",n[n.CEIL=7]="CEIL",n[n.COS=8]="COS",n[n.COSH=9]="COSH",n[n.ELU=10]="ELU",n[n.ERF=11]="ERF",n[n.EXP=12]="EXP",n[n.EXPM1=13]="EXPM1",n[n.FLOOR=14]="FLOOR",n[n.IS_FINITE=15]="IS_FINITE",n[n.IS_INF=16]="IS_INF",n[n.IS_NAN=17]="IS_NAN",n[n.LINEAR=18]="LINEAR",n[n.LOG=19]="LOG",n[n.LOG1P=20]="LOG1P",n[n.LOGICAL_NOT=21]="LOGICAL_NOT",n[n.NEG=22]="NEG",n[n.RELU=23]="RELU",n[n.RELU6=24]="RELU6",n[n.LEAKYRELU=25]="LEAKYRELU",n[n.RECIPROCAL=26]="RECIPROCAL",n[n.ROUND=27]="ROUND",n[n.RSQRT=28]="RSQRT",n[n.SELU=29]="SELU",n[n.SIGMOID=30]="SIGMOID",n[n.SIGN=31]="SIGN",n[n.SIN=32]="SIN",n[n.SINH=33]="SINH",n[n.SOFTPLUS=34]="SOFTPLUS",n[n.SQRT=35]="SQRT",n[n.SQUARE=36]="SQUARE",n[n.STEP=37]="STEP",n[n.TAN=38]="TAN",n[n.TANH=39]="TANH",n[n.TO_INT=40]="TO_INT"})(we||(we={}));const o7="return abs(a);",u7=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,l7=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,c7=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,d7="return asinh(a);",h7=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,f7=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,p7="return ceil(a);",m7="return cos(a);",g7=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,y7="return exp(a) - 1.0;",x7="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",b7=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,v7=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${z1};
  let a1 = ${B1};
  let a2 = ${M1};
  let a3 = ${U1};
  let a4 = ${V1};
  let a5 = ${W1};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,w7="return exp(a);",S7="return floor(a);",C7="return f32(!isnan(a) && !isinf(a));",$7="return f32(isinf(a));",T7="return f32(isnan(a));",N7="return a;",E7=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,k7=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,R7="return f32(!(a >= 1.0));",I7="return -a;",_7="if (a < 0.0) { return uniforms.alpha * a; } return a;",A7=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,D7="return 1.0 / a;",O7="return select(a, 0.0, a < 0.0);",P7="return clamp(a, 0.0, 6.0);",F7="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",L7=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,z7="return round(a);",B7="return inverseSqrt(a);",M7=`
  if (a >= 0.0) {
    return ${L1} * a;
  } else {
    return ${F1} * (exp(a) - 1.0);
  }
`,U7="return 1.0 / (1.0 + exp(-1.0 * a));",V7="return sign(a);",W7="return sin(a);",G7=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,H7=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,j7="return sqrt(a);",q7="return a * a;",X7=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,K7="return tan(a);",Y7=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Q7="return f32(i32((a)));";function no(n,e){switch(n){case we.ABS:return o7;case we.ACOS:return u7;case we.ACOSH:return l7;case we.ASIN:return c7;case we.ASINH:return d7;case we.ATAN:return h7;case we.ATANH:return f7;case we.COS:return m7;case we.COSH:return g7;case we.CEIL:return p7;case we.ELU:return e?b7:x7;case we.ERF:return v7;case we.EXP:return w7;case we.EXPM1:return y7;case we.FLOOR:return S7;case we.IS_FINITE:return C7;case we.IS_INF:return $7;case we.IS_NAN:return T7;case we.LINEAR:return N7;case we.LOG:return E7;case we.LOG1P:return k7;case we.LOGICAL_NOT:return R7;case we.NEG:return I7;case we.LEAKYRELU:return e?A7:_7;case we.RECIPROCAL:return D7;case we.RELU:return e?L7:O7;case we.RELU6:return e?F7:P7;case we.ROUND:return z7;case we.RSQRT:return B7;case we.SELU:return M7;case we.SIGMOID:return U7;case we.SIGN:return V7;case we.SIN:return W7;case we.SINH:return G7;case we.SOFTPLUS:return H7;case we.SQRT:return j7;case we.SQUARE:return q7;case we.STEP:return X7;case we.TAN:return K7;case we.TANH:return Y7;case we.TO_INT:return Q7;default:throw new Error(`BinaryType ${n} is not implemented!`)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function va(n,e=!1,t=!1,s=3){if(n===null)return"";let r="";if(n==="linear")r=no(we.LINEAR);else if(n==="relu")r=no(we.RELU,t);else if(n==="elu")r=no(we.ELU,t);else if(n==="relu6")r=no(we.RELU6,t);else if(n==="prelu")r=ub(We.PRELU,t);else if(n==="sigmoid")r=no(we.SIGMOID,t);else if(n==="leakyrelu")r=no(we.LEAKYRELU,t);else throw new Error(`Activation ${n} has not been implemented for the WebGPU backend.`);const o=Ke(t?4:1);let l="";return e?l=`
      fn activation(a : ${o}, coords : vec${s}<i32>) -> ${o} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${r}
      }`:l=`
      fn activation(a : ${o}, coords : vec${s}<i32>) -> ${o} {
        ${r}
      }`,l}function _o(n,e){return`
      ${n?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iE(n,e,t=!1,s=!1,r=!1,a=1){z(n&&a===1||!n,()=>`transposeA ${n} is not compatible with component size ${a}`);const o=`
      ${n?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,l=e?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${Ke(a)} {
    var value = ${Ke(a)}(0.0);
    ${t&&r?o:`
    ${n?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${o}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${Ke(a)} {
    var value = ${Ke(a)}(0.0);
    ${l}
    return value;
  }
  `}function lb(n,e,t,s,r=!1,a=!1,o=!1,l=1){return`
  ${iE(t,s,r,a,o,l)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${Ke(l)}) {
    ${r&&a?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${_o(n,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}const Z7=(n,e)=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${e});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${e});
        `,J7=(n,e,t,s)=>{if(n)return`
      for (var k = 0; k < ${s}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${t}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let r="",a="";for(let o=0;o<e;o++)r+=`let BCached${o} = mm_Bsub[k * ${e} + ${o}][tileCol];`,a+=`acc[i] = fma(BCached${o}, vec4<f32>(ACached[${o}]), acc[i]);`;return`
      for (var k = 0; k < ${s/e}; k++) {
        ${r}
        for (var i = 0; i < ${t}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${a}
        }
      }`}};function Mf(n,e,t=!1,s=32,r=!1,a=32,o=!1){const l=e[1]*n[1],c=e[0]*n[0],d=t?l:s,f=t?s:l,p=d/e[0],g=s/e[1],y=n[1],x=n[0];return z((t&&p===4&&n[1]===4||!t&&(p===3||p===4))&&d%e[0]===0&&s%e[1]===0&&n[0]===4,()=>`If transposeA ${t} is true, innerElementSize ${p} and workPerThread[1] ${n[1]} must be 4.
          Otherwise, innerElementSize ${p} must be 3 or 4.
      tileAWidth ${d} must be divisible by workgroupSize[0]${e[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${n[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${p}<f32>, ${d/p}>, ${f}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${c/n[0]}>, ${s}>;

  ${Ce()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${y};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${y};
    let globalCol = i32(globalId.x) * ${x};
    let batch = ${r?"0":"i32(globalId.z)"};
    let batchA = ${r||!o?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${r||!o?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${l};

    let numTiles = ${r?`${Math.ceil(a/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
    var kStart = ${r?`i32(globalId.z) * ${a}`:"0"};

    var acc: array<vec4<f32>, ${y}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${g};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${y}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${Z7(t,p)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${g}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${J7(t,p,y,s)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${y}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}const GS=n=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,eY=n=>n?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function Uf(n,e,t=!1,s=32,r=!1,a=32,o=!1,l=!1){const c=n[1]*e[1],d=n[0]*e[0],f=t?c:s,p=t?s:c;z(p%e[1]===0&&f%e[0]===0&&s%e[1]===0,()=>`tileAHight ${p} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${f} must be divisible by workgroupSize[0]${e[0]}, tileInner ${s} must be divisible by workgroupSize[1]${e[1]}`);const g=p/e[1],y=f/e[0],x=s/e[1],w=n[1],S=n[0],$=o?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${c};
      let globalColStart = i32(workgroupId.x) * ${d};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${e[1]}) {
          for (var inputCol = localCol; inputCol < ${f}; inputCol = inputCol + ${e[0]}) {
            ${GS(t)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${e[1]}) {
              for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${e[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${S}>;
        for (var k = 0; k < ${s}; k++) {
          for (var inner = 0; inner < ${S}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
          }
          for (var innerRow = 0; innerRow < ${w}; innerRow++) {
            let ACached = ${t?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
            for (var innerCol = 0; innerCol < ${S}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${w}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${e[1]};
        for (var innerCol = 0; innerCol < ${S}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${e[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${w};
  let tileCol = i32(localId.x) * ${S};

  let globalRow = i32(globalId.y) * ${w};
  let globalCol = i32(globalId.x) * ${S};
  let globalRowStart = i32(workgroupId.y) * ${c};

  let tileRowA = i32(localId.y) * ${g};
  let tileColA = i32(localId.x) * ${y};
  let tileRowB = i32(localId.y) * ${x};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${g}; innerRow++) {
      for (var innerCol = 0; innerCol < ${y}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${GS(t)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${x}; innerRow++) {
      for (var innerCol = 0; innerCol < ${S}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${s};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${S}>;
    for (var k = 0; k < ${s}; k++) {
      for (var inner = 0; inner < ${S}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${w}; innerRow++) {
        ${eY(t)}
        for (var innerCol = 0; innerCol < ${S}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${w}; innerRow++) {
    for (var innerCol = 0; innerCol < ${S}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${f}>, ${p}>;
    var<workgroup> mm_Bsub : array<array<f32, ${d}>, ${s}>;

    ${Ce()} {
      let batch = ${r?"0":"i32(globalId.z)"};
      let batchA = ${r||!l?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${r||!l?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${r?`${Math.ceil(a/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
      var kStart = ${r?`i32(globalId.z) * ${a}`:"0"};

      var acc : array<array<f32, ${S}>, ${w}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${w}; innerRow++) {
        for (var innerCol = 0; innerCol < ${S}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${$}
    }
  `}const tY=n=>n?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function nY(n,e=!1){z(n[1]===1&&n[2]===1,()=>`A linear work group size is required. But got ${n}.`);const t=n[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${n[0]}>;

    ${Ce()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${t} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${t} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${tY(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${t/4}; k++) {
          let rowB = t * ${t} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}class sY{constructor(e,t,s=!1,r=!1,a=null,o=null,l=null,c=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const d=s?e[1]:e[2];if(this.isVec4=(d%4===0&&!s||t[1]%4===0&&s)&&t[2]%4===0&&!r,this.outputComponent=this.isVec4?4:1,this.isVectorA=t[1]===1&&!s,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const g=RK(t[1],d,t[2],s);this.workgroupSize=g.workgroupSize,this.elementsPerThread=g.elementsPerThread}this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const f=a!=null,p=l!=null;f&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=c,this.transposeA=s,this.transposeB=r,this.addBias=f,this.activation=o,this.hasPreluActivationWeights=p,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],d),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${s}_${r}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,s){const r=this.workgroupSize[1]*this.elementsPerThread[1],a=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=a;const o=e%r===0,l=t%a===0,c=s%this.tileInner===0;return[o,l,c]}getUserCode(){return`
      ${va(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${lb(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?Mf(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?nY(this.workgroupSize,this.transposeA):Uf(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rY(n){return`
    var<workgroup> sumValues : array<f32, ${n}>;
    ${Ce()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${n}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${n/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}class aY{constructor(e,t=!1,s=!1,r=null,a=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize);const l=r!=null,c=o!=null;l&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=s,this.addBias=l,this.activation=a,this.hasPreluActivationWeights=c,this.shaderKey=`matMulReduce_${this.activation}_${t}_${s}`}getUserCode(){return`
      ${va(this.activation,this.hasPreluActivationWeights)}
      ${lb(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${rY(this.workgroupSize[0])}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(n){const e=n[1],t=n[0],s=e>t?e:t;return`
  var<workgroup> mm_Asub : array<array<f32, ${s}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${Ce()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${s};
    globalRowB = globalRowB + ${s};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${s};
      globalRowB = globalRowB + ${s};

      for (var k = 0; k < ${s}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}class oY{constructor(e,t,s,r=!1,a=!1,o=null,l=null,c=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=s,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(s[2]/this.workgroupSize[0]),Math.ceil(s[1]/this.workgroupSize[1]),s[0]];const d=o!=null;d&&this.variableNames.push("bias");const f=c!=null;f&&this.variableNames.push("preluActivationWeights"),this.transposeA=r,this.transposeB=a,this.addBias=d,this.activation=l,this.hasPreluActivationWeights=f,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${r}_${a}`}getUserCode(){return`
      ${va(this.activation,this.hasPreluActivationWeights)}
      ${lb(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${iY(this.workgroupSize)}
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uY{constructor(e,t,s=!1,r=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,z(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const a=(s&&this.outputShape[1]%4===0||!s&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=a?4:1,a||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=$e(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=r,this.shaderKey=`matMulSplitK_${s}_${r}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){const e=this.outputComponent;return`
      ${iE(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${Ke(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${fi("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?Mf(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):Uf(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}}class lY{constructor(e,t=null,s=null,r=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=r!=null,this.activation=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${s}`}getUserCode(){return`
    ${va(this.activation,this.hasPreluActivationWeights)}
    ${Ce("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${_o(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cY{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Ce("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zn(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:a}=t;if(a=a||Xu(r),a==="string"){const o=sn(a,oe(s));return o.fill(r),e.makeTensorInfo(s,a,o)}else{const o=new cY(s),l=[{type:"float32",data:[r]}];return e.runWebGPUProgram(o,[],a,l)}}const dY={kernelName:Sx,backendName:"webgpu",kernelFunc:Zn};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ae(n){const{inputs:e,attrs:t}=n,{x:s}=e,{shape:r}=t,a=oe(s.shape),o=_C(r,a),l=oe(o);return z(a===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),n.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}const hY={kernelName:b0,backendName:"webgpu",kernelFunc:Ae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vf({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:c=null}){const d=n.shape.length,f=e.shape.length,p=t?n.shape[d-2]:n.shape[d-1],g=s?e.shape[f-1]:e.shape[f-2],y=t?n.shape[d-1]:n.shape[d-2],x=s?e.shape[f-2]:e.shape[f-1],w=n.shape.slice(0,-2),S=e.shape.slice(0,-2),$=oe(w),N=oe(S),_=Ye(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([y,x]);z(p===g,()=>`Error in matMul: inner shapes (${p}) and (${g}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const O=t?[$,p,y]:[$,y,p],M=s?[N,x,g]:[N,g,x],W=Ae({inputs:{x:n},backend:r,attrs:{shape:O}}),G=Ae({inputs:{x:e},backend:r,attrs:{shape:M}}),F=[W,G],B=Math.max($,N),D=[W,G],Q=[{type:"int32",data:[y]},{type:"int32",data:[x]},{type:"int32",data:[p]}];let re,he;const le=[B,y,x];let ne=ee().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(ne<0){const pe=ee().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),Se=pe>0?pe:r.thresholdToIncreaseWorkgroups,q=B*Math.ceil(y/32)*Math.ceil(x/32);q<=Se||y<=8&&q<=Se*2?B*y*x<=128?ne=Nr.MatMulReduceProgram:B===1&&g>=2e3?ne=Nr.MatMulSplitKProgram:ne=Nr.MatMulSmallOutputSizeProgram:ne=Nr.MatMulPackedProgram}switch(ne){case Nr.MatMulReduceProgram:re=new aY(le,t,s,a,c,o);break;case Nr.MatMulSplitKProgram:{if(he=Zn({backend:r,attrs:{shape:le,value:0,dtype:n.dtype}}),re=new uY(le,g,t,s),a||c){he=r.runWebGPUProgram(re,D,n.dtype,Q,he);const Se=new lY(he.shape,a,c,o);let q=null;const ue=[he];a&&ue.push(a),o&&ue.push(o),c==="leakyrelu"&&(q=[{type:"float32",data:[l]}],Se.uniforms+=" alpha : f32,");const Te=r.runWebGPUProgram(Se,ue,he.dtype,q);F.push(he);const ke=Ae({inputs:{x:Te},backend:r,attrs:{shape:_}});F.push(Te);for(const ve of F)r.disposeData(ve.dataId);return ke}break}case Nr.MatMulSmallOutputSizeProgram:re=new oY(O,M,le,t,s,a,c,o);break;case Nr.MatMulPackedProgram:const pe=r.adapterInfo.isIntel();re=new sY(O,le,t,s,a,c,o,pe);break;default:throw new Error(`Unsupported MatMulProgramType ${ne}.`)}a&&D.push(a),o&&D.push(o),c==="leakyrelu"&&(Q.push({type:"float32",data:[l]}),re.uniforms+=" alpha : f32,"),he=r.runWebGPUProgram(re,D,n.dtype,Q,he);const ge=Ae({inputs:{x:he},backend:r,attrs:{shape:_}});F.push(he);for(const pe of F)r.disposeData(pe.dataId);return ge}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fY(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:a,bias:o,preluActivationWeights:l}=e,{transposeA:c,transposeB:d,activation:f,leakyreluAlpha:p}=s;return Vf({a:r,b:a,transposeA:c,transposeB:d,backend:t,bias:o,preluActivationWeights:l,leakyreluAlpha:p,activation:f})}const pY={kernelName:Kh,backendName:"webgpu",kernelFunc:fY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HS{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=Ye(t,s),this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${ub(this.op,!1)}
      }

      ${Ce("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ff{constructor(e,t,s){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=Ye(t,s),this.dispatchLayout=Re(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&s.length>1&&t[0]<128,this.useSharedMemoryWithB=s.length<=1&&t.length>1&&s[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?s[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{const r=t.length>0&&t[t.length-1]%4===0,a=s.length>0&&s[s.length-1]%4===0;r&&a?(this.outputComponent=4,this.variableComponents=[4,4]):r&&(vw(s)||s[s.length-1]===1)||a&&(vw(t)||t[t.length-1]===1)?(this.outputComponent=4,this.variableComponents=r?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const t=this.outputComponent===4?"vec4<f32>":"f32",s=`
    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
      ${ub(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){const r=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",a=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${r}];`:`let a = sharedBuf[${r}];
          let b = getBByOutputIndex(index);`;e=`
        ${s}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Ce("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${a}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${s}
       ${Ce("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${t}(getAByOutputCoords(coords));
           let b = ${t}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ds(n){const{inputs:e}=n,{x:t}=e;return n.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}const mY={kernelName:bf,backendName:"webgpu",kernelFunc:ds};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ao(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,a=t.makeTensorInfo(s.shape,"complex64"),o=t.tensorMap.get(a.dataId),l=ds({inputs:{x:s},backend:t}),c=ds({inputs:{x:r},backend:t});return o.complexTensorInfos={real:l,imag:c},a}const gY={kernelName:qy,backendName:"webgpu",kernelFunc:Ao};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class il{constructor(e,t,s=""){this.variableNames=["A"],this.size=!0;const r=128;this.workgroupSize=[r,1,1],this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,s!==""&&(this.uniforms=s),this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${no(this.op,!1)}
      }
      ${Ce("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ct({opType:n,cpuKernelImpl:e,dtype:t}){return({inputs:s,backend:r})=>{const{x:a}=s,o=r,l=t||a.dtype;if(o.shouldExecuteOnCPU([a])&&e!=null){const d=o.tensorMap.get(a.dataId),f=e(d.values,l);return o.makeTensorInfo(a.shape,l,f)}const c=new il(a.shape,n);return o.runWebGPUProgram(c,[a],l)}}function hn({opType:n,cpuKernelImpl:e,supportsComplex:t=!1,dtype:s}){return({inputs:r,backend:a})=>{const{a:o,b:l}=r,c=a;if(t&&o.dtype==="complex64"){const p=c.tensorMap.get(o.dataId),g=c.tensorMap.get(l.dataId);let y,x;if(n!==We.MUL)[y,x]=[[p.complexTensorInfos.real,g.complexTensorInfos.real],[p.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(S=>{const[$,N]=S,I={dataId:$.dataId,dtype:$.dtype,shape:o.shape},_={dataId:N.dataId,dtype:N.dtype,shape:l.shape},O=new ff(n,o.shape,l.shape);return c.runWebGPUProgram(O,[I,_],Jn($.dtype,N.dtype))});else{const S=new HS(We.COMPLEX_MULTIPLY_REAL,o.shape,l.shape),$=new HS(We.COMPLEX_MULTIPLY_IMAG,o.shape,l.shape),N=[{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:o.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:g.complexTensorInfos.real.dataId,dtype:g.complexTensorInfos.real.dtype,shape:l.shape},{dataId:g.complexTensorInfos.imag.dataId,dtype:g.complexTensorInfos.imag.dtype,shape:l.shape}];y=c.runWebGPUProgram(S,N,"float32"),x=c.runWebGPUProgram($,N,"float32")}const w=Ao({inputs:{real:y,imag:x},backend:c});return c.disposeData(y.dataId),c.disposeData(x.dataId),w}const d=s||Jn(o.dtype,l.dtype);if((o.dtype==="string"||l.dtype==="string"||c.shouldExecuteOnCPU([o,l]))&&e!=null){const p=c.tensorMap.get(o.dataId).values,g=c.tensorMap.get(l.dataId).values,y=o.dtype==="string"?oi(p):p,x=o.dtype==="string"?oi(g):g,[w,S]=e(o.shape,l.shape,y,x,d);return c.makeTensorInfo(S,d,w)}const f=new ff(n,o.shape,l.shape);return c.runWebGPUProgram(f,[o,l],d)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:yY,castImpl:xY,ceilImpl:bY,concatImpl:vY,equalImpl:wY,expImpl:SY,expm1Impl:CY,floorImpl:$Y,floorDivImpl:TY,gatherNdImpl:NY,gatherV2Impl:EY,greaterEqualImpl:kY,greaterImpl:RY,lessEqualImpl:IY,lessImpl:_Y,logImpl:AY,maxImpl:DY,maximumImpl:OY,minimumImpl:PY,multiplyImpl:FY,negImpl:LY,notEqualImpl:zY,prodImpl:BY,rangeImpl:MY,rsqrtImpl:UY,scatterImpl:VY,simpleAbsImpl:WY,sliceImpl:GY,stridedSliceImpl:HY,stringNGramsImpl:jY,subImpl:qY,tileImpl:XY,topKImpl:KY,transposeImpl:YY}=yN;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QY=ct({opType:we.ABS,cpuKernelImpl:WY}),ZY={kernelName:Ny,backendName:"webgpu",kernelFunc:QY};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JY=ct({opType:we.ACOS}),e9={kernelName:Ey,backendName:"webgpu",kernelFunc:JY};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t9=ct({opType:we.ACOSH}),n9={kernelName:ky,backendName:"webgpu",kernelFunc:t9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s9=hn({opType:We.ADD,cpuKernelImpl:yY,supportsComplex:!0}),r9={kernelName:yf,backendName:"webgpu",kernelFunc:s9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a9{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,s)=>`T${s}`),this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach(r=>{e.push(`let v${r} = get${r}ByOutputCoords(coords);`)});const t=this.variableNames.map(r=>`v${r}`).join(" + ");return`
      ${Ce("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i9(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return ds({inputs:{x:s[0]},backend:t});const r=s.map(l=>l.dtype).reduce((l,c)=>Jn(l,c)),a=s.map(l=>l.shape),o=new a9(a);return t.runWebGPUProgram(o,s,r)}const o9={kernelName:Ry,backendName:"webgpu",kernelFunc:i9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u9{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[t[r]];this.outputShape=s,this.dispatchLayout={x:[0],y:[1]},this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){z(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);const e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${Ce()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l9{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[t[r]];this.outputShape=s,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){const e=Xt(this.outputShape.length),t=oE(this.newDim);return`
      ${Ce("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}}function oE(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=new Array(e);for(let s=0;s<n.length;s++)t[n[s]]=`coords.${oa(s)}`;return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:a}=s,o=t,l=r.shape.length,c=new Array(l);for(let f=0;f<c.length;f++)c[f]=r.shape[a[f]];if(t.shouldExecuteOnCPU([r])){const p=o.tensorMap.get(r.dataId).values,g=YY(p,r.shape,r.dtype,a,c);return t.makeTensorInfo(c,r.dtype,g)}if(r.shape.length===2&&yt(a,[1,0])){const f=new u9(r.shape,a);return o.runWebGPUProgram(f,[r],r.dtype)}const d=new l9(r.shape,a);return o.runWebGPUProgram(d,[r],r.dtype)}const c9={kernelName:$c,backendName:"webgpu",kernelFunc:Dr};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d9{constructor(e,t,s){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[r]=ks(this.inputShape,[1]);this.outputShape=r.length===0?[1]:r,e.inSize>=32768&&s>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";const s=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",t="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");const r=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${s}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Ce("index")} {
         let outputIndex = index / ${s};
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${s}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${s}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${s}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${r}
        }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h9={mean:"float32",all:"bool",any:"bool"};function Do(n,e,t,s,r){const a=n.shape.length,o=[],l=Pt(e,n.shape);let c=l;const d=_n(c,a);let f=n;d!=null&&(f=Dr({inputs:{x:n},attrs:{perm:d},backend:r}),c=An(c.length,a),o.push(f)),ps(s,c,a);const[p,g]=ks(f.shape,c);let y=p;t&&(y=fs(p,l));let x;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([f])){const w=r.tensorMap.get(f.dataId).values;switch(s){case"max":const S=DY(w,oe(g),y,n.dtype);x=r.makeTensorInfo(y,n.dtype,S);break;case"prod":const{outVals:$,outShape:N,outDtype:I}=BY(f.shape,f.dtype,w,c);x=r.makeTensorInfo(N,I,$);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{const w=oe(g),$=oe(f.shape)/w,N={windowSize:w,inSize:w,batchSize:$,outSize:1},I=h9[s]||Cf(n.dtype),_=[{type:"int32",data:[w]}],O=new d9(N,s,r.device.limits.maxComputeWorkgroupSizeX),M=r.runWebGPUProgram(O,[f],I,_);o.push(M),x=Ae({inputs:{x:M},attrs:{shape:y},backend:r})}return o.forEach(w=>r.disposeData(w.dataId)),x}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:a,axis:o}=s;return Do(r,o,a,"all",t)}const p9={kernelName:Iy,backendName:"webgpu",kernelFunc:f9};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:a,axis:o}=s;return Do(r,o,a,"any",t)}const g9={kernelName:_y,backendName:"webgpu",kernelFunc:m9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uE{constructor(e,t,s){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const r=[t];this.op=s==="min"?"<":">";const[a,o]=ks(e,r);this.outputShape=a.length===0?[1]:a,this.dispatchLayout=Re(this.outputShape),oe(o)<32?(this.type="plain",this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=$e(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${oa(this.inputShape.length-1)}`,s=()=>{let r="";if(this.outputShape.length===1)this.inputShape.length!==1&&(r+="outputCoords,");else for(let a=0;a<this.outputShape.length;a++)r+=`outputCoords.${oa(a)},`;return r};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${Ce("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${s()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${Ce("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${s()} 0);
          let reduceLength = ${t()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${s()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a}=s;let o=Pt(a,r.shape);const l=_n(o,r.shape.length);let c=r;const d=[];l!=null&&(c=Dr({inputs:{x:r},backend:t,attrs:{perm:l}}),d.push(c),o=An(o.length,c.shape.length)),ps("argMax",[o[0]],c.shape.length);const f=new uE(c.shape,o[0],"max"),p=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],g=t.runWebGPUProgram(f,[c],"int32",p);return d.forEach(y=>t.disposeData(y.dataId)),g}const x9={kernelName:Ay,backendName:"webgpu",kernelFunc:y9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a}=s;let o=Pt(a,r.shape);const l=_n(o,r.shape.length);let c=r;const d=[];l!=null&&(c=Dr({inputs:{x:r},backend:t,attrs:{perm:l}}),d.push(c),o=An(o.length,c.shape.length)),ps("argMin",[o[0]],c.shape.length);const f=new uE(c.shape,o[0],"min"),p=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],g=t.runWebGPUProgram(f,[c],"int32",p);return d.forEach(y=>t.disposeData(y.dataId)),g}const v9={kernelName:Dy,backendName:"webgpu",kernelFunc:b9};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w9=ct({opType:we.ASIN}),S9={kernelName:Oy,backendName:"webgpu",kernelFunc:w9};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C9=ct({opType:we.ASINH}),$9={kernelName:Py,backendName:"webgpu",kernelFunc:C9};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T9=ct({opType:we.ATAN}),N9={kernelName:Fy,backendName:"webgpu",kernelFunc:T9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E9=hn({opType:We.ATAN2}),k9={kernelName:zy,backendName:"webgpu",kernelFunc:E9};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R9=ct({opType:we.ATANH}),I9={kernelName:Ly,backendName:"webgpu",kernelFunc:R9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _9{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Ce("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vc{constructor(e,t,s=!1,r=!1,a=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=a,this.shaderKey=`pool2D_${t}_${s}_${r}_${a}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${Ce("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}}class cb{constructor(e,t,s=!1,r=!1,a=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=a,this.shaderKey=`pool3D_${t}_${s}_${r}_${a}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${Ce("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lE(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:a,keepDims:o}=s;return Do(r,a,o,"max",t)}const A9={kernelName:jx,backendName:"webgpu",kernelFunc:lE};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cE(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:a,axis:o}=s;return Do(r,o,a,"mean",t)}const D9={kernelName:Qx,backendName:"webgpu",kernelFunc:cE};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dE(n,e,t,s){if(e.filterWidth===1&&e.filterHeight===1&&yt(e.inShape,e.outShape))return ds({inputs:{x:n},backend:s});if(e.filterWidth===e.inWidth&&e.filterHeight===e.inHeight&&e.batchSize===1&&e.padInfo.type==="VALID"){const o=n.shape.length,l=Ae({inputs:{x:n},backend:s,attrs:{shape:[n.shape[o-3]*n.shape[o-2],n.shape[o-1]]}});let c;t==="avg"?c=cE({inputs:{x:l},backend:s,attrs:{axis:0,keepDims:!1}}):(z(t==="max",()=>`Invalid pool type ${t}`),c=lE({inputs:{x:l},backend:s,attrs:{reductionIndices:0,keepDims:!1}}));const d=Ae({inputs:{x:c},backend:s,attrs:{shape:e.outShape}});return s.disposeData(l.dataId),s.disposeData(c.dataId),d}let r;const a=[{type:"int32",data:[e.strideHeight,e.strideWidth]}];return e.filterHeight===1&&e.filterWidth===1?r=new _9(e):(t==="avg"?r=new Vc(e,"avg"):(z(t==="max",()=>`Invalid pool type ${t}`),r=new Vc(e,"max")),a.push({type:"int32",data:[e.padInfo.top,e.padInfo.left]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[e.inHeight,e.inWidth]},{type:"int32",data:[e.effectiveFilterHeight,e.effectiveFilterWidth]})),s.runWebGPUProgram(r,[n],n.dtype,a)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:c}=s,f=Qs(r.shape,a,o,1,l,c);return dE(r,f,"avg",t)}const P9={kernelName:By,backendName:"webgpu",kernelFunc:O9};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:a,strides:o,pad:l,dataFormat:c,dimRoundingMode:d}=s,f=[1,1,1],p=ga(r.shape,a,o,f,l,d,c),g=new cb(p,"avg"),y=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];return t.runWebGPUProgram(g,[r],r.dtype,y)}const L9={kernelName:My,backendName:"webgpu",kernelFunc:F9};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z9{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${Ce("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class B9{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${Ce("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M9(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,o=a,{filterSize:l,strides:c,pad:d,dimRoundingMode:f}=s,p=ga(o.shape,l,c,1,d,f),g=new B9(p),y=1/(p.filterDepth*p.filterHeight*p.filterWidth),x=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterDepth-1-p.padInfo.front,p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outDepth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"float32",data:[y]}];return t.runWebGPUProgram(g,[r],o.dtype,x)}const U9={kernelName:zC,backendName:"webgpu",kernelFunc:M9};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V9(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,o=a;aE([r,a],"avgPoolGrad");const{filterSize:l,strides:c,pad:d}=s,f=Qs(o.shape,l,c,1,d),p=new z9(f),g=1/(f.filterHeight*f.filterWidth),y=[{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.effectiveFilterHeight-1-f.padInfo.top,f.effectiveFilterWidth-1-f.padInfo.left]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[f.effectiveFilterHeight,f.effectiveFilterWidth]},{type:"int32",data:[f.outHeight]},{type:"int32",data:[f.outWidth]},{type:"float32",data:[g]}];return t.runWebGPUProgram(p,[r],o.dtype,y)}const W9={kernelName:LC,backendName:"webgpu",kernelFunc:V9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G9(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:a}=e,{transposeA:o,transposeB:l}=s;return Vf({a:r,b:a,transposeA:o,transposeB:l,backend:t})}const H9={kernelName:Uy,backendName:"webgpu",kernelFunc:G9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j9{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Xt(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=Xt(this.rank),t=q9(this.rank);let s;return this.start.length===1?s=this.outputShape.map((a,o)=>"sourceLoc = uniforms.start + coords;"):s=this.outputShape.map((a,o)=>`sourceLoc.${py[o]} = uniforms.start.${oa(o)} + coords.${py[o]};`),`
      ${Ce("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${s.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}}const py=["x","y","z","w","u","v"];function q9(n){if(n===1)return"sourceLoc";if(n<=6)return py.slice(0,n).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ol(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:a,size:o}=s,[l,c]=R1(r,a,o);if(T1(r,l,c),t.shouldExecuteOnCPU([r])||r.dtype==="string"){const p=t.tensorMap.get(r.dataId),g=GY(p.values,l,c,r.shape,r.dtype);return t.makeTensorInfo(c,r.dtype,g)}if(oe(c)===0)return t.makeTensorInfo(c,r.dtype,[]);const d=new j9(l,c),f=[{type:"int32",data:l}];return t.runWebGPUProgram(d,[r],r.dtype,f)}const X9={kernelName:_0,backendName:"webgpu",kernelFunc:ol};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K9=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:a,crops:o}=s;z(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");const l=a.reduce((N,I)=>N*I),c=Yc(r.shape,a,l),d=Qc(c.length,a.length),f=Zc(r.shape,a,l),p=O1(o,a.length),g=P1(f,o,a.length),y=[],x=Ae({inputs:{x:r},backend:t,attrs:{shape:c}}),w=Dr({inputs:{x},backend:t,attrs:{perm:d}}),S=Ae({inputs:{x:w},backend:t,attrs:{shape:f}}),$=ol({inputs:{x:S},backend:t,attrs:{begin:p,size:g}});return y.push(x),y.push(w),y.push(S),y.forEach(N=>t.disposeData(N.dataId)),$},Y9={kernelName:Vy,backendName:"webgpu",kernelFunc:K9};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q9=`
  fn bincount_write(index: i32, value: f32) {
    ${fi("&result[index]","value","float32")}
  }
`,Z9=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`;class hE{constructor(e,t,s=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=s,s&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?Z9:Q9}
  ${Ce("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:a}=e,{size:o}=s,l=oe(r.shape),d=oe(a.shape)>0,f=[o],p=a.dtype,g=Zn({backend:t,attrs:{shape:f,value:0,dtype:p}}),y=new hE([l],d),x=[{type:"int32",data:[o]}],w=d?[r,a]:[r];return t.runWebGPUProgram(y,w,p,x,g)}const eQ={kernelName:Wy,backendName:"webgpu",kernelFunc:J9};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tQ{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${Ce("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nQ(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e;if(t.shouldExecuteOnCPU([s,r])){const f=t.tensorMap.get(s.dataId),p=t.tensorMap.get(r.dataId),g=f.values,y=p.values,x=Ye(Array.from(g),Array.from(y));return t.makeTensorInfo([x.length],"int32",Int32Array.from(x))}const a=oe(s.shape),o=oe(r.shape),l=Math.max(a,o),c=new tQ(l),d=[{type:"int32",data:[a]},{type:"int32",data:[o]}];return t.runWebGPUProgram(c,[s,r],"int32",d)}const sQ={kernelName:Gy,backendName:"webgpu",kernelFunc:nQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fE=hn({opType:We.NOT_EQUAL,dtype:"bool",cpuKernelImpl:zY}),rQ={kernelName:a0,backendName:"webgpu",kernelFunc:fE};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rd(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.tensorMap.get(s.dataId);return ds({inputs:{x:r.complexTensorInfos.real},backend:t})}const aQ={kernelName:g0,backendName:"webgpu",kernelFunc:rd};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iQ(n,e){const t=new il(n.shape,we.TO_INT),s=e.runWebGPUProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function my(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return ds({inputs:{x:r},backend:t});const o=pa(r.shape),l=my({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),c=Ao({inputs:{real:l,imag:o},backend:t});return o.dispose(),t.disposeData(l.dataId),c}if(r.dtype==="complex64"){const o=rd({inputs:{input:r},backend:t}),l=my({inputs:{x:o},backend:t,attrs:{dtype:a}});return t.disposeData(o.dataId),l}if(!AC(r.dtype,a)){const o=ds({inputs:{x:r},backend:t});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(t.shouldExecuteOnCPU([r])){const o=t.tensorMap.get(r.dataId).values,[l,c,d]=xY(o,r.shape,r.dtype,a);return t.makeTensorInfo(l,c,d)}if(a==="int32")return iQ(r,t);if(a==="bool"){const o=t.makeTensorInfo([],"bool",Ar("bool",1)),c=fE({inputs:{a:r,b:o},backend:t});return t.disposeData(o.dataId),c}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}const oQ={kernelName:xf,backendName:"webgpu",kernelFunc:my};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uQ=ct({opType:we.CEIL,cpuKernelImpl:bY}),lQ={kernelName:Hy,backendName:"webgpu",kernelFunc:uQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cQ{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Ce("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dQ{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Ce("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:a,clipValueMax:o}=s;let l;const c=[{type:"float32",data:[a]},{type:"float32",data:[o]}];return oe(r.shape)%4===0?l=new cQ(r.shape):l=new dQ(r.shape),t.runWebGPUProgram(l,[r],r.dtype,c)}const fQ={kernelName:jy,backendName:"webgpu",kernelFunc:hQ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pQ{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${Ce("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jS(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function mQ(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.tensorMap.get(s.dataId),a=new pQ(s.shape),o=[jS(s,r.complexTensorInfos.real),jS(s,r.complexTensorInfos.imag)];return t.runWebGPUProgram(a,o,o[0].dtype)}const gQ={kernelName:Xy,backendName:"webgpu",kernelFunc:mQ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yQ{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=Ys(e,1),this.variableNames=e.map((t,s)=>`T${s}`),this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let a=1;a<this.offsetLength;a++)e.push(`else if (yC < uniforms.offset${[a]}){ setOutputAtCoords(coords.x, coords.y, getT${a}(yR, yC - uniforms.offset${a-1})); }`);const s=this.offsetLength,r=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${r})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Ce("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wf(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.tensorMap.get(s.dataId);return ds({inputs:{x:r.complexTensorInfos.imag},backend:t})}const xQ={kernelName:Ax,backendName:"webgpu",kernelFunc:Wf};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cc(n,e,t){const s=n[0].dtype;if(s==="complex64"){const x=n.map(I=>rd({inputs:{input:I},backend:t})),w=n.map(I=>Wf({inputs:{input:I},backend:t})),S=Cc(x,e,t),$=Cc(w,e,t),N=Ao({inputs:{real:S,imag:$},backend:t});return x.forEach(I=>t.disposeData(I.dataId)),w.forEach(I=>t.disposeData(I.dataId)),t.disposeData(S.dataId),t.disposeData($.dataId),N}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const x=n.map(O=>{const W=[-1,oe(O.shape.slice(e))];return Ae({inputs:{x:O},backend:t,attrs:{shape:W}})}),w=x.map(O=>({vals:t.readSync(O.dataId),shape:O.shape})),S=Ys(x.map(O=>O.shape),1),$=x[0].shape[0]===1,N=vY(w,S,s,$),I=Ys(n.map(O=>O.shape),e),_=t.makeTensorInfo(I,s,N);return x.forEach(O=>t.disposeData(O.dataId)),_}const a=t.device.limits.maxStorageBuffersPerShaderStage-1;if(n.length>a){const x=[];for(let S=0;S<n.length;S+=a){const $=n.slice(S,S+a);x.push(Cc($,e,t))}const w=Cc(x,e,t);for(const S of x)t.disposeData(S.dataId);return w}const{tensors2D:o,outShape:l}=bQ(n,e,t),c=o.map(x=>x.shape),d=new yQ(c),f=[],p=new Array(c.length-1);if(p.length>0){p[0]=c[0][1],f.push({type:"int32",data:[p[0]]});for(let x=1;x<p.length;x++)p[x]=p[x-1]+c[x][1],f.push({type:"int32",data:[p[x]]})}const g=t.runWebGPUProgram(d,o,o[0].dtype,f);o.forEach(x=>t.disposeData(x.dataId));const y=Ae({inputs:{x:g},backend:t,attrs:{shape:l}});return t.disposeData(g.dataId),y}function bQ(n,e,t){const s=Ys(n.map(a=>a.shape),e);return{tensors2D:n.map(a=>Ae({inputs:{x:a},backend:t,attrs:{shape:[oe(a.shape.slice(0,e)),oe(a.shape.slice(e))]}})),outShape:s}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pE(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,a=Pt(r,e[0].shape)[0],o=e.map(d=>d.shape);_1(o,a);const l=Ys(e.map(d=>d.shape),a);if(oe(l)===0)return t.makeTensorInfo(l,e[0].dtype,[]);const c=e.filter(d=>oe(d.shape)>0);return c.length===1?ds({inputs:{x:c[0]},backend:t}):Cc(c,a,t)}const vQ={kernelName:Ky,backendName:"webgpu",kernelFunc:pE};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wQ(n,e,t,s,r=!1,a=null,o=!1,l=4,c=4,d=4){const f=F=>{switch(F){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${F} is not supported.`)}},p=F=>{switch(F){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${F} is not supported.`)}},g=n?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,y=n?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,x=n?"uniforms.xShape[1]":"uniforms.xShape[2]",w=n?"uniforms.xShape[2]":"uniforms.xShape[3]",S=n?"row":"col",$=n?"col":"row",N=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${S} / outWidth;
      let outCol = ${S} % outWidth;

      let WRow = ${$} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${$} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${$} % inChannels;
      var resData = ${Ke(l)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${x} && xCol >= 0 && xCol < ${w}) {
        ${g}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${f(l)}
      }
      return resData;`,I=n?e&&s?`
      ${N}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${N}
      }
      return ${Ke(l)}(0.0);`:s&&t?`
      ${N}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${N}
      }
      return ${Ke(l)}(0.0);`,_=`${p(c)}`,O=Ke(d),M=Ke(n?l:c),W=Ke(n?c:l);return`
      ${va(a,o,d===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${M} {
        ${n?I:_}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${W} {
        ${n?_:I}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${O}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${y}
        ${_o(r,a)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}class SQ{constructor(e,t,s,r,a=!1,o=null,l=!1,c=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=nE(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=sE(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),a&&(this.variableNames.push("bias"),this.variableComponents.push(4)),l&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=c,this.addBias=a,this.activation=o,this.hasPreluActivationWeights=l,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=s%this.tileBOuter===0,this.fitInner=r%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?Mf(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):Uf(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${wQ(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CQ{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=s,this.hasPreluActivationWeights=r,t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${va(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${_o(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${Ce("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $Q{constructor(e,t){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,s=this.isChannelsLast?"coords[1]":"coords[2]",r=this.isChannelsLast?"coords[2]":"coords[1]",a=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${Ce("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${s};
        let col = ${r};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {
            value = ${a};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pf(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function TQ({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const c=t.dataFormat==="channelsLast",d=!c,f=!1,p=c&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",g=[];let y,x;if(p){const $=t.inHeight*t.inWidth*t.inChannels;y=Ae({inputs:{x:n},backend:s,attrs:{shape:[1,t.batchSize,$]}}),x=Ae({inputs:{x:e},backend:s,attrs:{shape:[1,$,t.outChannels]}})}else y=Ae({inputs:{x:n},backend:s,attrs:{shape:c?[t.batchSize,t.inHeight*t.inWidth,t.inChannels]:[t.batchSize,t.inChannels,t.inHeight*t.inWidth]}}),x=Ae({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});if(g.push(y),g.push(x),a!=null){const $=pf(a.shape,c);$!=null&&(a=Ae({inputs:{x:a},backend:s,attrs:{shape:$}}),g.push(a))}if(r!=null){const $=pf(r.shape,c);$!=null&&(r=Ae({inputs:{x:r},backend:s,attrs:{shape:$}}),g.push(r))}const w=Vf({a:c?y:x,b:c?x:y,transposeA:d,transposeB:f,backend:s,bias:r,activation:l,preluActivationWeights:a,leakyreluAlpha:o}),S=Ae({inputs:{x:w},backend:s,attrs:{shape:t.outShape}});g.push(w);for(const $ of g)s.disposeData($.dataId);return S}function NQ({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const{filterWidth:c,filterHeight:d,inChannels:f,strideWidth:p,strideHeight:g,padInfo:y,outWidth:x,outHeight:w,dilationWidth:S,dilationHeight:$,dataFormat:N}=t,I=N==="channelsLast",_=c*d*f,O=w*x,M=I?[t.batchSize,O,_]:[t.batchSize,_,O],W=new $Q(M,I),G=[{type:"int32",data:[y.top,y.left]},{type:"int32",data:[g,p]},{type:"int32",data:[$,S]},{type:"int32",data:[x]},{type:"int32",data:[f*c]},{type:"int32",data:[f]}],F=s.runWebGPUProgram(W,[n],n.dtype,G),B=[];B.push(F);const D=Ae({inputs:{x:e},backend:s,attrs:{shape:[1,_,-1]}});if(B.push(D),a!=null){const ne=pf(a.shape,I);ne!=null&&(a=Ae({inputs:{x:a},backend:s,attrs:{shape:ne}}),B.push(a))}if(r!=null){const ne=pf(r.shape,I);ne!=null&&(r=Ae({inputs:{x:r},backend:s,attrs:{shape:ne}}),B.push(r))}const he=Vf({a:I?F:D,b:I?D:F,transposeA:!I,transposeB:!1,backend:s,bias:r,activation:l,preluActivationWeights:a,leakyreluAlpha:o}),le=Ae({inputs:{x:he},backend:s,attrs:{shape:t.outShape}});B.push(he);for(const ne of B)s.disposeData(ne.dataId);return le}function mE({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const c=r!=null,d=a!=null,f=t.dataFormat==="channelsLast",p=f&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",g=ee().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!g&&(p||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID")))return TQ({x:n,filter:e,convInfo:t,backend:s,bias:r,activation:l,preluActivationWeights:a,leakyreluAlpha:o});const y=ee().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),x=y>-1?y:s.thresholdToIncreaseWorkgroups,w=t.batchSize*Math.ceil(t.outHeight*t.outWidth/32)*Math.ceil(t.outChannels/32);if(ee().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||w<=x)return NQ({x:n,filter:e,convInfo:t,backend:s,bias:r,preluActivationWeights:a,leakyreluAlpha:o,activation:l});let S;const $=[t.padInfo.top,t.padInfo.left],N=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...$]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]}];if(g)S=new CQ(t,c,l,d);else{const M=f?t.outHeight*t.outWidth:t.outChannels,W=f?t.outChannels:t.outHeight*t.outWidth,G=t.filterHeight*t.filterWidth*t.inChannels;N.push({type:"int32",data:[M]},{type:"int32",data:[W]},{type:"int32",data:[G]});const F=s.adapterInfo.isIntel();S=new SQ(t,M,W,G,c,l,d,F)}const I=[],_=[n,e];c&&(!f&&r.shape.length===1&&(r=Ae({inputs:{x:r},backend:s,attrs:{shape:[r.shape[0],1,1]}}),I.push(r)),_.push(r)),d&&(!f&&a.shape.length===1&&(a=Ae({inputs:{x:a},backend:s,attrs:{shape:[a.shape[0],1,1]}}),I.push(a)),_.push(a)),l==="leakyrelu"&&(N.push({type:"float32",data:[o]}),S.uniforms+=" alpha : f32,");const O=s.runWebGPUProgram(S,_,n.dtype,N);for(const M of I)s.disposeData(M.dataId);return O}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EQ(n){const{inputs:e,attrs:t,backend:s}=n,{x:r,filter:a}=e,{strides:o,pad:l,dataFormat:c,dilations:d,dimRoundingMode:f}=t,p=gr(c),g=Qt(r.shape,a.shape,o,d,l,f,!1,p);return mE({x:r,filter:a,convInfo:g,backend:s})}const kQ={kernelName:Yy,backendName:"webgpu",kernelFunc:EQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RQ{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,s=this.isChannelsLast?3:1,r=`
    ${Ce()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${r}
    `:`
    ${Ce("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${s}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class IQ{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${Ce("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class _Q{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${Ce("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class AQ{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${Ce("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:a}=e,{strides:o,pad:l,dataFormat:c,dimRoundingMode:d,filterShape:f}=s,p=gr(c),g=Qt(r.shape,f,o,1,l,d,!1,p),y=new IQ(g),x=[{type:"int32",data:[g.padInfo.top,g.padInfo.left]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.batchSize]},{type:"int32",data:[g.outHeight]},{type:"int32",data:[g.outWidth]},{type:"int32",data:[g.inHeight]},{type:"int32",data:[g.inWidth]}];return t.runWebGPUProgram(y,[r,a],r.dtype,x)}const OQ={kernelName:Qy,backendName:"webgpu",kernelFunc:DQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PQ(n=4){const e=a=>{switch(a){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${a} is not supported.`)}},s=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${Ke(n)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${Ke(n)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${n}];`}
      }
      return ${Ke(n)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${Ke(n)} {
    ${s}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${Ke(n)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(n)}
    }
    return ${Ke(n)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${Ke(n)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${n}] = value;
    }
  }`}class FQ{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,z(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=nE(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=sE(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?Mf(this.elementsPerThread,this.workgroupSize):Uf(this.elementsPerThread,this.workgroupSize);return`
    ${PQ(this.isVec4?4:1)}
    ${e}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LQ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:a}=e,{inputShape:o,strides:l,pad:c,dataFormat:d,dimRoundingMode:f}=s,p=gr(d),g=Qt(o,a.shape,l,1,c,f,!1,p),y=[{type:"int32",data:[g.filterHeight,g.filterWidth]},{type:"int32",data:[g.filterHeight-1-g.padInfo.top,g.filterWidth-1-g.padInfo.left]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.batchSize,g.outHeight,g.outWidth,g.outChannels]}];let x;if(ee().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||g.dataFormat!=="channelsLast")x=new RQ(g);else{x=new FQ(g);const w=g.inHeight*g.inWidth,S=g.inChannels,$=g.filterHeight*g.filterWidth*g.outChannels;y.push({type:"uint32",data:[w]},{type:"uint32",data:[S]},{type:"uint32",data:[$]})}return t.runWebGPUProgram(x,[r,a],"float32",y)}const zQ={kernelName:Zy,backendName:"webgpu",kernelFunc:LQ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BQ{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${Ce("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:l,dilations:c}=s,d=di(r.shape,a.shape,o,c,l),f=[d.padInfo.front,d.padInfo.top,d.padInfo.left],p=[{type:"int32",data:[d.filterDepth,d.filterHeight,d.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationDepth,d.dilationHeight,d.dilationWidth]}],g=new BQ(d),y=Jn(r.dtype,a.dtype);return t.runWebGPUProgram(g,[r,a],y,p)}const UQ={kernelName:Jy,backendName:"webgpu",kernelFunc:MQ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:a}=e,{strides:o,pad:l,filterShape:c}=s,d=di(r.shape,c,o,1,l),f=new _Q(d),p=[{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inDepth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return t.runWebGPUProgram(f,[r,a],a.dtype,p)}const WQ={kernelName:MC,backendName:"webgpu",kernelFunc:VQ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GQ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:a}=e,{strides:o,pad:l,inputShape:c}=s,d=di(c,a.shape,o,1,l),f=new AQ(d),p=[{type:"int32",data:[d.filterDepth,d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterDepth-1-d.padInfo.front,d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.outChannels]}];return t.runWebGPUProgram(f,[r,a],r.dtype,p)}const HQ={kernelName:ex,backendName:"webgpu",kernelFunc:GQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jQ=ct({opType:we.COS}),qQ={kernelName:tx,backendName:"webgpu",kernelFunc:jQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XQ=ct({opType:we.COSH}),KQ={kernelName:nx,backendName:"webgpu",kernelFunc:XQ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YQ{constructor(e,t,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[a]=t;this.outputShape=[a,s[0],s[1],e],this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=r==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[s,r,a]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[o,l,c]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
    ${Ce("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${s});
        let width_ratio = f32(${o});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${r};
        let width_scale = ${l};
        let in_y = ${a};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${c};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QQ=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:a,boxInd:o}=e,{cropSize:l,method:c,extrapolationValue:d}=s,f=new YQ(r.shape[3],a.shape,l,c),p=[{type:"float32",data:[d]}];return t.runWebGPUProgram(f,[r,a,o],"float32",p)},ZQ={kernelName:ax,backendName:"webgpu",kernelFunc:QQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Wc;(function(n){n.Prod="*",n.Sum="+"})(Wc||(Wc={}));class qS{constructor(e,t,s,r){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=s,this.reverse=r,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,t=this.op===Wc.Prod?"1.0":"0.0",s=this.exclusive?t:`getX(${XS(e,"coords",this.op)})`,r=this.outputShape[this.outputShape.length-1];let a="",o="";return this.exclusive?(a=this.reverse?`end != ${r-1}`:"end != 0",o=this.reverse?"end + 1":"end - 1"):(a=this.reverse?`end + pow2 < ${r}`:"end >= pow2",o=this.reverse?"end + pow2":"end - pow2"),`
      ${Ce("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${KS(e,"coords",this.op)};
         var val = ${s};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${a}) {
           let idx = ${o};
           ${KS(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${XS(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}}function XS(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function KS(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gE(n,e,t,s,r,a){const o=e.shape.length,l=_n([s],o);let c=e;l!=null&&(c=Dr({inputs:{x:e},backend:t,attrs:{perm:l}}));const d=An(1,o)[0];if(d!==o-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const f=c.shape[d];let p=ds({inputs:{x:c},backend:t});for(let g=0;g<=Math.ceil(Math.log2(f))-1;g++){const y=new qS(n,c.shape,!1,a),x=p,w=[{type:"float32",data:[g]}];p=t.runWebGPUProgram(y,[p],p.dtype,w),t.disposeData(x.dataId)}if(r){const g=new qS(n,c.shape,r,a),y=p,x=[{type:"float32",data:[0]}];p=t.runWebGPUProgram(g,[p],p.dtype,x),t.disposeData(y.dataId)}if(l!=null){const g=Kc(l),y=Dr({inputs:{x:p},backend:t,attrs:{perm:g}});return t.disposeData(p.dataId),t.disposeData(c.dataId),y}return p}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,exclusive:o,reverse:l}=s;return gE(Wc.Prod,r,t,a,o,l)}const eZ={kernelName:sx,backendName:"webgpu",kernelFunc:JQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,exclusive:o,reverse:l}=s;return gE(Wc.Sum,r,t,a,o,l)}const nZ={kernelName:rx,backendName:"webgpu",kernelFunc:tZ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:a}=e,{size:o,binaryOutput:l}=s,c=r.shape.length===1,f=oe(a.shape)>0,p=a.dtype,g=c?[r.shape[0]]:[r.shape[0],r.shape[1]],y=c?[o]:[r.shape[0],o],x=Zn({backend:t,attrs:{shape:y,value:0,dtype:p}}),w=new hE(g,f,l),S=[{type:"int32",data:[o]}],$=f?[r,a]:[r];return t.runWebGPUProgram(w,$,p,S,x)}const rZ={kernelName:ix,backendName:"webgpu",kernelFunc:sZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aZ{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Ce("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:a,dataFormat:o}=s,l=r.shape[0],c=o==="NHWC"?r.shape[1]:r.shape[2],d=o==="NHWC"?r.shape[2]:r.shape[3],f=o==="NHWC"?r.shape[3]:r.shape[1],p=c*a,g=d*a,y=f/(a*a),x=o==="NHWC"?[l,p,g,y]:[l,y,p,g],w=[{type:"int32",data:[a]}],S=new aZ(x,o);return t.runWebGPUProgram(S,[r],r.dtype,w)}const oZ={kernelName:ox,backendName:"webgpu",kernelFunc:iZ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uZ{constructor(e,t,s,r=!1,a=null,o=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),r&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.addBias=r,this.activation=a,this.hasPreluActivation=o,this.filterHeight=t,this.filterWidth=s,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],s=this.workgroupSize[1]+this.filterHeight-1,r=this.workgroupSize[0]+this.filterWidth-1;return`
      ${va(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${r}>, ${s}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${Ce()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${r}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${_o(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yE{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const a=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=Re(a),this.dispatch=$e(this.dispatchLayout,a,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),z(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwiseVec4_${s}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,s=this.convInfo.strideWidth;return`
      ${va(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${Ce("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${s}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${s} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${_o(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xE{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${va(this.activation,this.hasPreluActivation,!1,4)}

      ${Ce("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${_o(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:l,dataFormat:c,dilations:d,dimRoundingMode:f}=s,p=gr(c);let g=d;g==null&&(g=[1,1]);const y=Qt(r.shape,a.shape,o,g,l,f,!0,p),x=[{type:"int32",data:[y.padInfo.top,y.padInfo.left]},{type:"int32",data:[y.inHeight,y.inWidth]}],w=y.dataFormat==="channelsLast";let S;return!w&&y.inHeight>16&&y.inWidth>16&&y.strideHeight===1&&y.strideWidth===1&&y.dilationWidth===1&&y.dilationHeight===1&&y.inChannels===y.outChannels?S=new uZ(y.outShape,y.filterHeight,y.filterWidth):w&&y.outHeight>4&&y.outWidth>4&&y.strideWidth<=2&&y.inChannels===y.outChannels&&y.dilationHeight===1&&y.dilationWidth===1&&y.inChannels%4===0?(S=new yE(y),x.push({type:"int32",data:[S.virtualWidth]})):(S=new xE(y),x.push({type:"int32",data:[y.filterHeight]},{type:"int32",data:[y.filterWidth]},{type:"int32",data:[y.strideHeight,y.strideWidth]},{type:"int32",data:[y.dilationHeight,y.dilationWidth]})),t.runWebGPUProgram(S,[r,a],r.dtype,x)}const cZ={kernelName:ux,backendName:"webgpu",kernelFunc:lZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dZ{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${Ce("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class hZ{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${Ce("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:a}=e,{strides:o,dilations:l,pad:c,dimRoundingMode:d,filterShape:f}=s,p=Qt(r.shape,f,o,l,c,d,!0),g=new dZ(p),y=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outChannels/p.inChannels]}];return t.runWebGPUProgram(g,[r,a],"float32",y)}const pZ={kernelName:lx,backendName:"webgpu",kernelFunc:fZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mZ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:a}=e,{strides:o,dilations:l,pad:c,dimRoundingMode:d,inputShape:f}=s,p=Qt(f,a.shape,o,l,c,d,!0),g=new hZ(p),y=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.outChannels/p.inChannels]}];return t.runWebGPUProgram(g,[r,a],r.dtype,y)}const gZ={kernelName:cx,backendName:"webgpu",kernelFunc:mZ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yZ{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${Ce("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xZ(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],a=oe(s.shape),o=Ae({inputs:{x:s},backend:t,attrs:{shape:[a]}}),l=new yZ(a),c=t.runWebGPUProgram(l,[o],o.dtype),d=Ae({inputs:{x:c},backend:t,attrs:{shape:r}});return t.disposeData(o.dataId),t.disposeData(c.dataId),d}const bZ={kernelName:dx,backendName:"webgpu",kernelFunc:xZ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vZ{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${Ce("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a}=e,{strides:o,pad:l,dilations:c}=s,d=qc(r.shape,a.shape,o,l,"NHWC",c),f=[d.padInfo.top,d.padInfo.left],p=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]}],g=new vZ(d);return t.runWebGPUProgram(g,[r,a],r.dtype,p)}const SZ={kernelName:hx,backendName:"webgpu",kernelFunc:wZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CZ{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=Re(e.outShape),this.dispatch=$e(this.dispatchLayout,e.outShape,this.workgroupSize),t!=="float32"&&t!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${Ce("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${fi("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}class $Z{constructor(e,t,s){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=Re(e.outShape),this.dispatch=$e(this.dispatchLayout,e.outShape,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${s} type.`);this.type=s,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${Ce("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${fi("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a,dy:o}=e,{strides:l,pad:c,dilations:d}=s,f=qc(r.shape,a.shape,l,c,"NHWC",d),p=a.dtype,g=new $Z(f,a.shape,p),y=[{type:"int32",data:[f.filterHeight,f.filterWidth]},{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[oe(f.outShape)]}],x=Zn({backend:t,attrs:{shape:a.shape,value:0,dtype:p}});return t.runWebGPUProgram(g,[r,a,o],p,y,x)}const NZ={kernelName:UR,backendName:"webgpu",kernelFunc:TZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a,dy:o}=e,{strides:l,pad:c,dilations:d}=s,f=qc(r.shape,a.shape,l,c,"NHWC",d),p=r.dtype,g=new CZ(f,p),y=[{type:"int32",data:[f.filterHeight,f.filterWidth]},{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[oe(f.outShape)]}],x=Zn({backend:t,attrs:{shape:f.inShape,value:0,dtype:p}});return t.runWebGPUProgram(g,[r,a,o],p,y,x)}const kZ={kernelName:MR,backendName:"webgpu",kernelFunc:EZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RZ{constructor(e,t,s){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=Hu.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=s,this.shaderKey=`draw_${t}_${s}`}getUserCode(){let e;const t=this.type==="float32"?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${t};
        rgba[1] = ${t};
        rgba[2] = ${t};
      } else {
        rgba[d] = ${t};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${Ce("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IZ(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:a,options:o}=s,[l,c]=r.shape.slice(0,2),{imageOptions:d}=o||{},f=(d==null?void 0:d.alpha)||1,p=t.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",g=[l,c],y=new RZ(g,r.dtype,p);a.width=c,a.height=l;const x="webgpu";let w=a.getContext(x),S;w||(S=new OffscreenCanvas(c,l),w=S.getContext(x));const $=r.shape.length===3?r.shape[2]:1;w.configure({device:t.device,format:p,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const N="int32",I=t.makeTensorInfo(g,N),_=t.tensorMap.get(I.dataId);_.resource=w.getCurrentTexture(),_.external=!0;const O=[{type:"uint32",data:[$]},{type:"float32",data:[f]}];if(t.runWebGPUProgram(y,[r],N,O,I),S){const M=a.getContext("2d");if(!M)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");M.drawImage(S,0,0)}return t.disposeData(I.dataId),r}const _Z={kernelName:UC,backendName:"webgpu",kernelFunc:IZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bE=hn({opType:We.MUL,cpuKernelImpl:FY,supportsComplex:!0}),AZ={kernelName:s0,backendName:"webgpu",kernelFunc:bE};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vE(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s;return Do(r,a,o,"sum",t)}const DZ={kernelName:z0,backendName:"webgpu",kernelFunc:vE};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OZ(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,a=e,{allDims:o,summedDims:l,idDims:c}=G1(r,a.length);j1(o.length,c,a);const{path:d,steps:f}=q1(l,c),p=f.length;let g=null,y=o.length;const x=[];for(let w=0;w<p;++w){for(const S of f[w]){const{permutationIndices:$,expandDims:N}=H1(y,c[S]);let I;X1($)?I=a[S]:(I=Dr({inputs:{x:a[S]},backend:t,attrs:{perm:$}}),x.push(I));const _=I.shape.slice();for(let O=0;O<N.length;++O)_.splice(N[O],0,1);yt(I.shape,_)||(I=Ae({inputs:{x:I},backend:t,attrs:{shape:_}}),x.push(I)),g===null?g=I:(g=bE({inputs:{a:I,b:g},backend:t}),x.push(g))}w<p-1&&(d[w]>=0&&(g=vE({inputs:{x:g},backend:t,attrs:{axis:d[w]-(o.length-y),keepDims:!1}}),x.push(g)),y--)}for(const w of x)w!==g&&t.disposeData(w.dataId);return g}const PZ={kernelName:px,backendName:"webgpu",kernelFunc:OZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FZ=ct({opType:we.ELU}),LZ={kernelName:mx,backendName:"webgpu",kernelFunc:FZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zZ=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,a=new ff(We.ELU_DER,s.shape,r.shape);return t.runWebGPUProgram(a,[s,r],s.dtype)},BZ={kernelName:VC,backendName:"webgpu",kernelFunc:zZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MZ=hn({opType:We.EQUAL,dtype:"bool",cpuKernelImpl:wY}),UZ={kernelName:yx,backendName:"webgpu",kernelFunc:MZ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VZ=ct({opType:we.ERF}),WZ={kernelName:gx,backendName:"webgpu",kernelFunc:VZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GZ=ct({opType:we.EXP,cpuKernelImpl:SY,dtype:"float32"}),HZ={kernelName:xx,backendName:"webgpu",kernelFunc:GZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gy(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:a}=e,o=a.shape.length,l=a.shape.slice();let c=r;return r<0&&(z(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),c=o+r+1),l.splice(c,0,1),Ae({inputs:{x:a},backend:s,attrs:{shape:l}})}const jZ={kernelName:bx,backendName:"webgpu",kernelFunc:gy};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qZ=ct({opType:we.EXPM1,cpuKernelImpl:CY}),XZ={kernelName:vx,backendName:"webgpu",kernelFunc:qZ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YS{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${Ce("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wE(n,e,t){const s=t.tensorMap.get(n.dataId),r=oe(n.shape),a=n.shape[n.shape.length-1],o=r/a,l=[],c=Ae({inputs:{x:n},backend:t,attrs:{shape:[o,a]}});l.push(c);const d=c.shape,f=new YS("real",d),p=new YS("imag",d),g=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:d},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:d}],y=e?2*Math.PI:-2*Math.PI,x=e?d[1]:1,w=[{type:"float32",data:[y]},{type:"float32",data:[x]}],S=t.runWebGPUProgram(f,g,"float32",w);l.push(S);const $=t.runWebGPUProgram(p,g,"float32",w);l.push($);const N=Ao({inputs:{real:S,imag:$},backend:t});l.push(N);const I=Ae({inputs:{x:N},backend:t,attrs:{shape:n.shape}});return l.forEach(_=>t.disposeData(_.dataId)),I}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KZ(n){const{inputs:e,backend:t}=n,{input:s}=e;return wE(s,!1,t)}const YZ={kernelName:wx,backendName:"webgpu",kernelFunc:KZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QZ{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Ce("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZZ={kernelName:Cx,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new QZ(t.shape);return s.runWebGPUProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JZ=ct({opType:we.FLOOR,cpuKernelImpl:$Y}),eJ={kernelName:$x,backendName:"webgpu",kernelFunc:JZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tJ=hn({opType:We.FLOOR_DIV,cpuKernelImpl:TY,dtype:"int32"}),nJ={kernelName:Tx,backendName:"webgpu",kernelFunc:tJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sJ{constructor(e,t,s=!1){this.pixelsOpType=Hu.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=s,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${Ce("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rJ={kernelName:Xh,backendName:"webgpu",kernelFunc:aJ};let Nu,wg=ee().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function aJ(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const o=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,l=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,c=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas,d=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,[f,p]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],g=[p,f,a],y=ee().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&o,x=o||l;if(d||c||x){let N;if(y)N=t.device.importExternalTexture({source:r});else{if(x){const re=ee().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Nu==null||re!==wg)&&(wg=re,Nu=document.createElement("canvas").getContext("2d",{willReadFrequently:wg})),Nu.canvas.width=f,Nu.canvas.height=p,Nu.drawImage(r,0,0,f,p),r=Nu.canvas}const B=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,Q=t.textureManager.acquireTexture(g[1],g[0],"rgba8unorm",B);t.queue.copyExternalImageToTexture({source:r},{texture:Q},[g[1],g[0]]),N=Q}const I=oe(g),_=Ut(g),O=new sJ(g,a,y),M=[{type:"uint32",data:[I]},{type:"uint32",data:[a]},{type:"uint32",data:[..._]}],W=t.makeTensorInfo([p,f],"int32"),G=t.tensorMap.get(W.dataId);G.resource=N;const F=t.runWebGPUProgram(O,[W],"int32",M);return t.disposeData(W.dataId),F}const w=r.data;let S=w;if(a!=null&&a!==4){S=new Uint8Array(r.width*r.height*a);const N=w.length;let I=0;for(let _=0;_<N;_++)_%4<a&&(S[I++]=w[_])}const $=t.makeTensorInfo(g,"int32",new Int32Array(S));return t.uploadToGPU($.dataId),$}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iJ{constructor(e,t,s,r,a){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],Ye(e,t),Ye(e,s),this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),r!=null&&(Ye(e,r),this.variableNames.push("offset")),a!=null&&(Ye(e,a),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=a,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${Ce("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oJ={kernelName:Nx,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s,scale:r,offset:a,mean:o,variance:l}=n,{varianceEpsilon:c}=e,d=t,f=[s,o,l];let p=null;a!=null&&(p=a.shape,f.push(a));let g=null;r!=null&&(g=r.shape,f.push(r));const y=new iJ(s.shape,o.shape,l.shape,p,g),x=[{type:"float32",data:[c]}];return d.runWebGPUProgram(y,f,s.dtype,x)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:l}=e,{strides:c,pad:d,dataFormat:f,dilations:p,dimRoundingMode:g,activation:y,leakyreluAlpha:x}=s,w=gr(f),S=Qt(r.shape,a.shape,c,p,d,g,!1,w);return mE({x:r,filter:a,convInfo:S,backend:t,bias:o,preluActivationWeights:l,leakyreluAlpha:x,activation:y})}const lJ={kernelName:Yh,backendName:"webgpu",kernelFunc:uJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:a,bias:o,preluActivationWeights:l}=e,{strides:c,pad:d,dilations:f,dimRoundingMode:p,activation:g,leakyreluAlpha:y}=s;let x=f;x==null&&(x=[1,1]),z(Gn(c,x),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${x}'`);const w=Qt(r.shape,a.shape,c,x,d,p,!0),S=[r,a],$=o!=null,N=l!=null;$&&S.push(o),N&&S.push(l);const I=[{type:"int32",data:[w.padInfo.top,w.padInfo.left]},{type:"int32",data:[w.inHeight,w.inWidth]}];let _;return w.outHeight>4&&w.outWidth>4&&w.strideWidth<=2&&w.inChannels===w.outChannels&&w.dilationHeight===1&&w.dilationWidth===1&&w.inChannels%4===0?(_=new yE(w,$,g,N),I.push({type:"int32",data:[_.virtualWidth]})):(_=new xE(w,$,g,N),I.push({type:"int32",data:[w.filterHeight]},{type:"int32",data:[w.filterWidth]},{type:"int32",data:[w.strideHeight,w.strideWidth]},{type:"int32",data:[w.dilationHeight,w.dilationWidth]})),g==="leakyrelu"&&(I.push({type:"float32",data:[y]}),_.uniforms+=" alpha : f32,"),t.runWebGPUProgram(_,S,"float32",I)}const dJ={kernelName:Qh,backendName:"webgpu",kernelFunc:cJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hJ{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Xt(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${Ce("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fJ(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,a=r.shape,o=a[a.length-1],l=oe(s.shape),[c,d,f,p]=$1(s,r),g=Ae({inputs:{x:r},backend:t,attrs:{shape:[d,o]}}),y=Ae({inputs:{x:s},backend:t,attrs:{shape:[oe(s.shape)/f,f]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const N=t.readSync(r.dataId),I=t.bufferSync(s),_=NY(N,I,s.dtype,d,o,f,p,s.shape,l);return t.makeTensorInfo(c,s.dtype,_.values)}const x=new hJ(o,[d,f]),w=[{type:"int32",data:[o]},{type:"int32",data:p}],S=t.runWebGPUProgram(x,[y,g],y.dtype,w),$=Ae({inputs:{x:S},backend:t,attrs:{shape:c}});return t.disposeData(g.dataId),t.disposeData(y.dataId),t.disposeData(S.dataId),$}const pJ={kernelName:kx,backendName:"webgpu",kernelFunc:fJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mJ{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=gJ(this.aShape);return`
      ${Ce("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}}function gJ(n){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],t=[];for(let s=0;s<n.length;s++)s===2?t.push("indexZ"):t.push(`${e[s]}`);return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SE(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:a}=e,{axis:o,batchDims:l}=s,c=Pt(o,r.shape)[0],d=Q1(r,a,c,l),f=oe(a.shape),p=[],g=Ae({inputs:{x:r},backend:t,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),y=Ae({inputs:{x:a},backend:t,attrs:{shape:[d.batchSize,f/d.batchSize]}});p.push(g),p.push(y);const x=[d.batchSize,d.outerSize,f/d.batchSize,d.sliceSize];if(t.shouldExecuteOnCPU([r,a])){const I=t.tensorMap.get(y.dataId).values,_=xt(y.shape,y.dtype,I),M=t.tensorMap.get(g.dataId).values,W=xt(g.shape,g.dtype,M),G=EY(W,_,x);return p.forEach(F=>t.disposeData(F.dataId)),t.makeTensorInfo(d.outputShape,G.dtype,G.values)}const w=new mJ(g.shape,x),S=t.runWebGPUProgram(w,[g,y],g.dtype);p.push(S);const $=Ae({inputs:{x:S},backend:t,attrs:{shape:d.outputShape}});return p.forEach(N=>t.disposeData(N.dataId)),$}const yJ={kernelName:Ex,backendName:"webgpu",kernelFunc:SE};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xJ=hn({opType:We.GREATER,cpuKernelImpl:RY,dtype:"bool"}),bJ={kernelName:Rx,backendName:"webgpu",kernelFunc:xJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vJ=hn({opType:We.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:kY}),wJ={kernelName:Ix,backendName:"webgpu",kernelFunc:vJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SJ(n){const{inputs:e,backend:t}=n,{input:s}=e;return wE(s,!0,t)}const CJ={kernelName:_x,backendName:"webgpu",kernelFunc:SJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $J=ct({opType:we.IS_FINITE,dtype:"bool"}),TJ={kernelName:Dx,backendName:"webgpu",kernelFunc:$J};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NJ=ct({opType:we.IS_INF,dtype:"bool"}),EJ={kernelName:Ox,backendName:"webgpu",kernelFunc:NJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kJ=ct({opType:we.IS_NAN,dtype:"bool"}),RJ={kernelName:Px,backendName:"webgpu",kernelFunc:kJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:a}=s,o=[{type:"float32",data:[a]}],l=new il(r.shape,we.LEAKYRELU,"alpha : f32,");return t.runWebGPUProgram(l,[r],"float32",o)}const _J={kernelName:Fx,backendName:"webgpu",kernelFunc:IJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AJ=hn({opType:We.LESS,dtype:"bool",cpuKernelImpl:_Y}),DJ={kernelName:Lx,backendName:"webgpu",kernelFunc:AJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OJ=hn({opType:We.LESS_EQUAL,dtype:"bool",cpuKernelImpl:IY}),PJ={kernelName:zx,backendName:"webgpu",kernelFunc:OJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FJ{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${Ce("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LJ(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:a}=t,o=(r-s)/(a-1),l=new FJ(a),c=[{type:"float32",data:[s]},{type:"float32",data:[o]}];return e.runWebGPUProgram(l,[],"float32",c)}const zJ={kernelName:Bx,backendName:"webgpu",kernelFunc:LJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BJ=ct({opType:we.LOG,cpuKernelImpl:AY}),MJ={kernelName:Mx,backendName:"webgpu",kernelFunc:BJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UJ=ct({opType:we.LOG1P}),VJ={kernelName:Ux,backendName:"webgpu",kernelFunc:UJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WJ=hn({opType:We.LOGICAL_AND,dtype:"bool"}),GJ={kernelName:Vx,backendName:"webgpu",kernelFunc:WJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HJ=ct({opType:we.LOGICAL_NOT}),jJ={kernelName:Wx,backendName:"webgpu",kernelFunc:HJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qJ=hn({opType:We.LOGICAL_OR}),XJ={kernelName:Gx,backendName:"webgpu",kernelFunc:qJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CE=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`;class KJ{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${Ce("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${CE}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}}class YJ{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,z(t<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=$e(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${Ce()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${CE}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:a,bias:o,alpha:l,beta:c}=s;let d;a>16?d=new KJ(r.shape):d=new YJ(r.shape,a);const f=[{type:"int32",data:[a]},{type:"float32",data:[o]},{type:"float32",data:[l]},{type:"float32",data:[c]}];return t.runWebGPUProgram(d,[r],r.dtype,f)}const ZJ={kernelName:Hx,backendName:"webgpu",kernelFunc:QJ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JJ{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${Ce("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:a,dy:o}=e,{depthRadius:l,bias:c,alpha:d,beta:f}=s,p=new JJ(r.shape),g=[{type:"int32",data:[l]},{type:"float32",data:[c]},{type:"float32",data:[d]},{type:"float32",data:[f]}];return t.runWebGPUProgram(p,[r,a,o],r.dtype,g)}const tee={kernelName:WC,backendName:"webgpu",kernelFunc:eee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nee=hn({opType:We.MAX,cpuKernelImpl:OY}),see={kernelName:qx,backendName:"webgpu",kernelFunc:nee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ree(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:c}=s,f=Qs(r.shape,a,o,1,l,c);return dE(r,f,"max",t)}const aee={kernelName:Xx,backendName:"webgpu",kernelFunc:ree};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:a,strides:o,pad:l,dataFormat:c,dimRoundingMode:d}=s,f=[1,1,1],p=ga(r.shape,a,o,f,l,d,c),g=new cb(p,"max"),y=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];return t.runWebGPUProgram(g,[r],r.dtype,y)}const oee={kernelName:Kx,backendName:"webgpu",kernelFunc:iee};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uee{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${Ce("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class lee{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${Ce("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cee(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a}=e,o=a,{filterSize:l,strides:c,pad:d,dimRoundingMode:f}=s,p=[1,1,1],g=ga(o.shape,l,c,p,d,f),y=new cb(g,"max",!0);let x=[{type:"int32",data:[g.strideDepth,g.strideHeight,g.strideWidth]},{type:"int32",data:[g.padInfo.front,g.padInfo.top,g.padInfo.left]},{type:"int32",data:[g.inDepth,g.inHeight,g.inWidth]},{type:"int32",data:[g.effectiveFilterDepth,g.effectiveFilterHeight,g.effectiveFilterWidth]}];const w=t.runWebGPUProgram(y,[o],"int32",x),S=new lee(g);x=[{type:"int32",data:[g.strideDepth,g.strideHeight,g.strideWidth]},{type:"int32",data:[g.effectiveFilterDepth-1-g.padInfo.front,g.effectiveFilterHeight-1-g.padInfo.top,g.effectiveFilterWidth-1-g.padInfo.left]},{type:"int32",data:[g.effectiveFilterDepth,g.effectiveFilterHeight,g.effectiveFilterWidth]},{type:"int32",data:[g.outDepth]},{type:"int32",data:[g.outHeight]},{type:"int32",data:[g.outWidth]}];const $=t.runWebGPUProgram(S,[r,w],o.dtype,x);return t.disposeData(w.dataId),$}const dee={kernelName:HC,backendName:"webgpu",kernelFunc:cee};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hee(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:a,output:o}=e,l=a;aE([a,o],"maxPoolGrad");const{filterSize:c,strides:d,pad:f,dimRoundingMode:p}=s,g=Qs(l.shape,c,d,1,f,p),y=new Vc(g,"max",!0);let x=[{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.padInfo.top,g.padInfo.left]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]},{type:"int32",data:[g.inHeight,g.inWidth]},{type:"int32",data:[g.effectiveFilterHeight,g.effectiveFilterWidth]}];const w=t.runWebGPUProgram(y,[l],"int32",x),S=new uee(g);x=[{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.effectiveFilterHeight-1-g.padInfo.top,g.effectiveFilterWidth-1-g.padInfo.left]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]},{type:"int32",data:[g.effectiveFilterHeight,g.effectiveFilterWidth]},{type:"int32",data:[g.outHeight]},{type:"int32",data:[g.outWidth]}];const $=t.runWebGPUProgram(S,[r,w],l.dtype,x);return t.disposeData(w.dataId),$}const fee={kernelName:GC,backendName:"webgpu",kernelFunc:hee};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pee(n){const{inputs:e,backend:t,attrs:s}=n,{filterSize:r,strides:a,pad:o,includeBatchInIndex:l}=s,{x:c}=e;z(c.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${c.shape.length}.`);const d=[1,1];z(Gn(a,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const f=Qs(c.shape,r,a,d,o),p=[{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[f.inHeight,f.inWidth]},{type:"int32",data:[f.effectiveFilterHeight,f.effectiveFilterWidth]}];let g=new Vc(f,"max",!1);const y=t.runWebGPUProgram(g,[c],c.dtype,p);g=new Vc(f,"max",!0,!0,l);const x=t.runWebGPUProgram(g,[c],"int32",p);return[y,x]}const mee={kernelName:Yx,backendName:"webgpu",kernelFunc:pee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s;return Do(r,a,o,"min",t)}const yee={kernelName:Zx,backendName:"webgpu",kernelFunc:gee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xee=hn({opType:We.MIN,cpuKernelImpl:PY}),bee={kernelName:Jx,backendName:"webgpu",kernelFunc:xee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vee{constructor(e,t,s){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((r,a)=>r[0]+e[a]+r[1]),this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map((r,a)=>{this.uniforms+=` pad${a} : vec2<i32>,`}),this.offset=s==="reflect"?0:1,this.shaderKey=`mirrorPad_${s}`}getUserCode(){const e=this.xShape.length,t=this.xShape.map((d,f)=>`uniforms.pad${f}[0]`).join(","),s=this.xShape.map((d,f)=>`uniforms.pad${f}[0] + uniforms.xShape${e>1?`[${f}]`:""}`).join(","),r=e===1?"start":"start[i]",a=e===1?"end":"end[i]",o=e===1?"outC":"outC[i]",l=Xt(e),c=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ce("index")} {
        if (index < uniforms.size) {
          let start = ${l}(${t});
          let end = ${l}(${s});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${o} < ${r}) {
              ${o} = ${r} * 2 - ${o} - ${this.offset};
            } else if(${o} >= ${a}) {
              ${o} = (${a} - 1) * 2 - ${o} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${c}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wee={kernelName:e0,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{paddings:r,mode:a}=e,o=t,l=r.map(f=>({type:"int32",data:[f[0],f[1]]})),c=new vee(s.shape,r,a);return o.runWebGPUProgram(c,[s],s.dtype,l)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const See=hn({opType:We.MOD}),Cee={kernelName:t0,backendName:"webgpu",kernelFunc:See};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $ee{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Ce("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tee{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${Ce("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $E(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:a}=s,o=Ae({inputs:{x:r},backend:t,attrs:{shape:[oe(r.shape)/r.shape[a],r.shape[a]]}}),l=new Tee(o.shape),c=t.runWebGPUProgram(l,[o],r.dtype),d=Ae({inputs:{x:c},backend:t,attrs:{shape:r.shape}});return t.disposeData(o.dataId),t.disposeData(c.dataId),d}const Nee={kernelName:U0,backendName:"webgpu",kernelFunc:$E};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eee(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:a,seed:o,normalized:l}=s,c=l?r:$E({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),d=c.shape[0],f=c.shape[1],p=new $ee(d,a),g=[{type:"float32",data:[o]},{type:"int32",data:[f]}],y=t.runWebGPUProgram(p,[c],"int32",g);return l||t.disposeData(c.dataId),y}const kee={kernelName:n0,backendName:"webgpu",kernelFunc:Eee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ree(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const a=t.tensorMap.get(s.dataId),[o,l]=LY(a.values,s.shape,s.dtype);return t.makeTensorInfo(l,s.dtype,o)}const r=new il(s.shape,we.NEG);return t.runWebGPUProgram(r,[s],s.dtype)}const Iee={kernelName:r0,backendName:"webgpu",kernelFunc:Ree};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _ee(n){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:l,scoreThreshold:c}=s,d=t.readSync(r.dataId),f=t.readSync(a.dataId),{selectedIndices:p}=x1(d,f,o,l,c);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}const Aee={kernelName:i0,backendName:"webgpu",kernelFunc:_ee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dee(n){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:l,scoreThreshold:c,softNmsSigma:d}=s,f=t.readSync(r.dataId),p=t.readSync(a.dataId),g=o,y=l,x=c,w=d,{selectedIndices:S,selectedScores:$}=b1(f,p,g,y,x,w);return[t.makeTensorInfo([S.length],"int32",new Int32Array(S)),t.makeTensorInfo([$.length],"float32",new Float32Array($))]}const Oee={kernelName:o0,backendName:"webgpu",kernelFunc:Dee};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pee{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${Ce("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fee(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:a,depth:o,onValue:l,offValue:c}=s,d=oe(r.shape),f=new Pee(d,o),p=Ae({inputs:{x:r},backend:t,attrs:{shape:[d]}}),g=[{type:"float32",data:[l]},{type:"float32",data:[c]}],y=t.runWebGPUProgram(f,[p],a,g);t.disposeData(p.dataId);const x=[...r.shape,o],w=Ae({inputs:{x:y},backend:t,attrs:{shape:x}});return t.disposeData(y.dataId),w}const Lee={kernelName:l0,backendName:"webgpu",kernelFunc:Fee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mf(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=rd({inputs:{input:s},backend:t}),a=mf({inputs:{x:r},backend:t}),o=Wf({inputs:{input:s},backend:t}),l=mf({inputs:{x:o},backend:t}),c=Ao({inputs:{real:a,imag:l},backend:t});return t.disposeData(r.dataId),t.disposeData(a.dataId),t.disposeData(o.dataId),t.disposeData(l.dataId),c}else return Zn({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const zee={kernelName:t1,backendName:"webgpu",kernelFunc:mf};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TE(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=rd({inputs:{input:s},backend:t}),a=TE({inputs:{x:r},backend:t}),o=Wf({inputs:{input:s},backend:t}),l=mf({inputs:{x:o},backend:t}),c=Ao({inputs:{real:a,imag:l},backend:t});return t.disposeData(r.dataId),t.disposeData(a.dataId),t.disposeData(o.dataId),t.disposeData(l.dataId),c}else return Zn({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const Bee={kernelName:u0,backendName:"webgpu",kernelFunc:TE};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mee(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return gy({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const a=e[0].shape,o=e[0].dtype;e.forEach(f=>{hs(a,f.shape,"All tensors passed to stack must have matching shapes"),z(o===f.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],c=e.map(f=>{const p=gy({inputs:{input:f},backend:t,attrs:{dim:r}});return l.push(p),p}),d=pE({inputs:c,backend:t,attrs:{axis:r}});return l.forEach(f=>t.disposeData(f.dataId)),d}const Uee={kernelName:c0,backendName:"webgpu",kernelFunc:Mee};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NE(n,e=!1){const t=n.length,s=Xt(t),r=n.map((p,g)=>`uniforms.pad${g}[0]`).join(","),a=n.map((p,g)=>`uniforms.pad${g}[0] + uniforms.xShape${t>1?`[${g}]`:""}`).join(","),o=t>1?`${s}(${r})`:`${r}`,l=t>1?`${s}(${a})`:`${a}`,c=t>1?"any(paddedCoords < start)":"paddedCoords < start",d=t>1?"any(paddedCoords >= end)":"paddedCoords >= end",f=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
        let start = ${o};
        let end = ${l};
        if (${c} || ${d}) {
          setOutputAtIndex(index, ${e?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${f}));
        }
  `}class Vee{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${Ce("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${NE(this.xShape)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wee=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:a,constantValue:o}=s;if(a.every(d=>yt(d,[0,0])))return ds({inputs:{x:r},backend:t});if(oe(r.shape)===0){const d=a.map((f,p)=>f[0]+r.shape[p]+f[1]);return Zn({backend:t,attrs:{shape:d,value:o,dtype:r.dtype}})}const l=[{type:"float32",data:[o]}];a.map(d=>l.push({type:"int32",data:[d[0],d[1]]}));const c=new Vee(r.shape,a);return t.runWebGPUProgram(c,[r],r.dtype,l)},Gee={kernelName:d0,backendName:"webgpu",kernelFunc:Wee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hee=hn({opType:We.POW}),jee={kernelName:h0,backendName:"webgpu",kernelFunc:Hee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qee(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,a=new ff(We.PRELU,s.shape,r.shape);return t.runWebGPUProgram(a,[s,r],"float32")}const Xee={kernelName:f0,backendName:"webgpu",kernelFunc:qee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:a,keepDims:o}=s;return Do(r,a,o,"prod",t)}const Yee={kernelName:p0,backendName:"webgpu",kernelFunc:Kee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qee=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:a,dtype:o}=t,l=MY(s,r,a,o);return e.makeTensorInfo([l.length],o,l)},Zee={kernelName:m0,backendName:"webgpu",kernelFunc:Qee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jee=hn({opType:We.DIV}),ete={kernelName:fx,backendName:"webgpu",kernelFunc:Jee};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tte=ct({opType:we.RECIPROCAL}),nte={kernelName:y0,backendName:"webgpu",kernelFunc:tte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ste=ct({opType:we.RELU}),rte={kernelName:x0,backendName:"webgpu",kernelFunc:ste};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ate=ct({opType:we.RELU6}),ite={kernelName:S0,backendName:"webgpu",kernelFunc:ate};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ote{constructor(e,t,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,s,e[3]],this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Ce("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ute(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:a,size:o,halfPixelCenters:l}=s,[c,d]=o,f=a&&c>1?1:0,p=a&&d>1?1:0,y=[{type:"float32",data:[f,p]},{type:"float32",data:[l?.5:0]}],x=new ote(r.shape,c,d);return t.runWebGPUProgram(x,[r],"float32",y)}const lte={kernelName:w0,backendName:"webgpu",kernelFunc:ute};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cte{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`
      ${Ce("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dte(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:a}=e,{alignCorners:o}=s,[,l,c]=r.shape,[,d,f]=a.shape,p=[o&&d>1?l-1:l,o&&f>1?c-1:c],g=[o&&d>1?d-1:d,o&&f>1?f-1:f],y=p[0]/g[0],x=p[1]/g[1],w=1/y,S=1/x,$=Math.ceil(w)*2+2,N=Math.ceil(S)*2+2,I=new cte(r.shape,o),_=[{type:"int32",data:p},{type:"int32",data:g},{type:"float32",data:[y]},{type:"float32",data:[x]},{type:"float32",data:[w]},{type:"float32",data:[S]},{type:"int32",data:[$]},{type:"int32",data:[N]}];return t.runWebGPUProgram(I,[a],a.dtype,_)}const hte={kernelName:QC,backendName:"webgpu",kernelFunc:dte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fte{constructor(e,t,s,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,s,e[3]],this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Ce("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pte(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:a,halfPixelCenters:o,size:l}=s,[c,d]=l,f=a&&c>1?1:0,p=a&&d>1?1:0,y=[{type:"float32",data:[f,p]},{type:"float32",data:[a?.5:0]}],x=new fte(r.shape,c,d,o);return t.runWebGPUProgram(x,[r],r.dtype,y)}const mte={kernelName:v0,backendName:"webgpu",kernelFunc:pte};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gte{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`
      ${Ce("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yte(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:a}=e,{alignCorners:o}=s,[,l,c]=r.shape,[,d,f]=a.shape,p=[o&&d>1?l-1:l,o&&f>1?c-1:c],g=[o&&d>1?d-1:d,o&&f>1?f-1:f],y=p[0]/g[0],x=p[1]/g[1],w=1/y,S=1/x,$=Math.ceil(w)*2+2,N=Math.ceil(S)*2+2,I=new gte(r.shape,o),_=[{type:"int32",data:p},{type:"int32",data:g},{type:"float32",data:[w]},{type:"float32",data:[S]},{type:"int32",data:[$]},{type:"int32",data:[N]}];return t.runWebGPUProgram(I,[a],a.dtype,_)}const xte={kernelName:YC,backendName:"webgpu",kernelFunc:yte};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bte{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${Ce("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:a}=s,o=r.shape.length;if(o===0)return ds({inputs:{x:r},backend:t});const l=r.shape,c=[1,1,1,1];l.forEach((S,$)=>{const N=$+4-o;c[N]=S});const d=Pt(a,r.shape),f=[0,0,0,0];d.forEach(S=>{const $=S+4-o;f[$]=1});const p=[{type:"int32",data:f}],g=Ae({inputs:{x:r},backend:t,attrs:{shape:c}}),y=new bte(c),x=t.runWebGPUProgram(y,[g],g.dtype,p);t.disposeData(g.dataId);const w=Ae({inputs:{x},backend:t,attrs:{shape:l}});return t.disposeData(x.dataId),w}const wte={kernelName:C0,backendName:"webgpu",kernelFunc:vte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ste{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Ce("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cte={kernelName:s1,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:a,center:o}=e,l=t,c=new Ste(s.shape,a),[d,f]=D1(o,s.shape[1],s.shape[2]),p=[{type:"float32",data:[d]},{type:"float32",data:[f]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?p.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):p.push({type:"float32",data:a}),l.runWebGPUProgram(c,[s],s.dtype,p)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $te=ct({opType:we.ROUND}),Tte={kernelName:$0,backendName:"webgpu",kernelFunc:$te};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nte=ct({opType:we.RSQRT,cpuKernelImpl:UY}),Ete={kernelName:T0,backendName:"webgpu",kernelFunc:Nte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ec{constructor(e,t,s,r,a,o,l,c=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=o,this.type=l,this.sumDupeIndices=c,this.dispatchLayout=Re(e),this.dispatch=$e(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${s}_${r}_${this.sliceDimGreaterThanOne}_${l}_${c}_${a.length}`;const d=Xt(a.length);this.uniforms=`sliceDim : i32, strides: ${d}, updatesSize: i32,`,this.updatesRank=r,this.indicesRank=s}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");const t=`getIndices(${e})`,s=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let r="",a="";this.dispatchLayout.x.length===1?(r="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(r="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);const l=`getUpdates(${Array.from({length:this.updatesRank},(d,f)=>`coords[${f}]`).join(", ")})`;return`
    ${a}
      ${Ce("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${s};
          }
          let updateValue =
              ${oo(this.type)}(${l});
          let flatIndex = getOutputIndexFromCoords(${r});

          ${this.sumDupeIndices?fi("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kte(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:a}=e,{shape:o}=s,{sliceRank:l,numUpdates:c,sliceSize:d,strides:f,outputSize:p}=$o(a,r,o),g=[p/d,d];if(p===0)return t.makeTensorInfo(o,r.dtype);const y=Ae({inputs:{x:r},backend:t,attrs:{shape:[c,l]}}),x=Ae({inputs:{x:a},backend:t,attrs:{shape:[c,d]}}),w=x.dtype,S=Zn({backend:t,attrs:{shape:g,value:0,dtype:w}}),$=oe(x.shape),N=[{type:"int32",data:[l]},{type:"int32",data:f},{type:"int32",data:[$]}],I=new Ec(x.shape,l,y.shape.length,x.shape.length,f,g,w),_=t.runWebGPUProgram(I,[x,y],w,N,S),O=Ae({inputs:{x:_},backend:t,attrs:{shape:o}});return t.disposeData(y.dataId),t.disposeData(x.dataId),t.disposeData(_.dataId),O}const Rte={kernelName:N0,backendName:"webgpu",kernelFunc:kte};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ite{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${Ce("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _te(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:a}=e,{side:o}=s,l=new Ite([a.shape[0],a.shape[1]],o),c=[{type:"int32",data:[r.shape[1]]}];return t.runWebGPUProgram(l,[r,a],"int32",c)}const Ate={kernelName:k0,backendName:"webgpu",kernelFunc:_te};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dte{constructor(e,t,s){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=s,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{const r=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],o=[];for(let l=0;l<this.outputShape.length;l++)o.push(`${r[l]}`),l<this.cRank&&a.push(`${r[l]}`);e=a.join(),t=o.join()}return`
      ${Ce("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ote(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:a}=e,o=new Dte(s.shape.length,r.shape,r.shape.length);return t.runWebGPUProgram(o,[s,r,a],Jn(r.dtype,a.dtype))}const Pte={kernelName:R0,backendName:"webgpu",kernelFunc:Ote};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fte=ct({opType:we.SELU}),Lte={kernelName:I0,backendName:"webgpu",kernelFunc:Fte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zte=ct({opType:we.SIGMOID}),Bte={kernelName:P0,backendName:"webgpu",kernelFunc:zte};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mte=ct({opType:we.SIGN}),Ute={kernelName:O0,backendName:"webgpu",kernelFunc:Mte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vte=ct({opType:we.SIN}),Wte={kernelName:A0,backendName:"webgpu",kernelFunc:Vte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gte=ct({opType:we.SINH}),Hte={kernelName:D0,backendName:"webgpu",kernelFunc:Gte};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jte=ct({opType:we.SOFTPLUS}),qte={kernelName:F0,backendName:"webgpu",kernelFunc:jte};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xte{constructor(e,t,s,r,a,o){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const l=new Array(r.length);for(let c=0;c<l.length;c++)l[c]=r[a[c]];this.outputShape=l,this.newDim=a,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${Xt(r.length)}, paddedXShapeStrides : ${Xt(o)}, `,s.map((c,d)=>{this.uniforms+=` pad${d} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${a}`}getUserCode(){const e=Xt(this.outputShape.length),t=oE(this.newDim);return`
      ${Hh(this.paddedXShape,"PaddedX")}
      ${Ce("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${NE(this.xShape,!0)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kte=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:a,paddings:o}=s;z(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");const l=a.reduce((N,I)=>N*I),c=[[0,0]];c.push(...o);for(let N=1+a.length;N<r.shape.length;++N)c.push([0,0]);const d=c.map((N,I)=>N[0]+r.shape[I]+N[1]),f=Yc(d,a,l,!1),p=Qc(f.length,a.length,!1),g=Zc(d,a,l,!1),y=Ut(d),x=new Xte(r.shape,d,c,f,p,y.length),w=[{type:"int32",data:f},{type:"int32",data:y}];c.map(N=>w.push({type:"int32",data:[N[0],N[1]]}));const S=t.runWebGPUProgram(x,[r],r.dtype,w),$=Ae({inputs:{x:S},backend:t,attrs:{shape:g}});return t.disposeData(S.dataId),$},Yte={kernelName:B0,backendName:"webgpu",kernelFunc:Kte};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qte{constructor(e,t,s){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=s,this.dispatchLayout=Re([t]),this.dispatch=$e(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${Ce("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${fi("&result[outIndex]","value",this.type)}
      }
    }
  `}}class Zte{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=Re(t),this.dispatch=$e(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${Ce("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${fi("&result[segmentId]","1","int32")}
      }
    }
  `}}class Jte{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=Re(e),this.dispatch=$e(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${Ce("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EE(n,e,t,s=!1,r){const o=oe(n.shape)/n.shape[0],l=n.dtype,c=oe(e.shape),d=r.readSync(t.dataId),p=c>0?d[c-1]+1:0;let g;const y=n.shape.slice();y[0]=p;const x=c*o,w=Zn({backend:r,attrs:{shape:y,value:0,dtype:l}});g=new Qte(y,x,l);let S=[{type:"int32",data:[o]},{type:"int32",data:[x]}];const $=r.runWebGPUProgram(g,[n,e,t],l,S,w);if(s)return $;const N=Zn({backend:r,attrs:{shape:[p],value:0,dtype:"int32"}});g=new Zte(p,t.shape);const I=r.runWebGPUProgram(g,[t],"int32",null,N),_=Zn({backend:r,attrs:{shape:y,value:0,dtype:l}});g=new Jte(y,l),S=[{type:"int32",data:[o]}];const O=r.runWebGPUProgram(g,[$,I],l,S,_);return r.disposeData($.dataId),r.disposeData(I.dataId),O}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ene(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:a}=e;return EE(s,r,a,!1,t)}const tne={kernelName:V0,backendName:"webgpu",kernelFunc:ene};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nne(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:a}=e;return EE(s,r,a,!0,t)}const sne={kernelName:W0,backendName:"webgpu",kernelFunc:nne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rne{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[r]*t[r];this.outputShape=s,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=ane(this.rank,"uniforms.");return`
      ${Ce("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}}function ane(n,e=""){if(n>=5)throw Error(`Tile for rank ${n} is not yet supported`);if(n===1)return`(resRC % ${e}aShape)`;const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n;r++)s.push(`(${t[r]} % ${e}aShape[${r}])`);return s.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function db(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:a}=s;if(t.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){const c=t.readSync(r.dataId),d=r.dtype==="string"?c.map(g=>la(g)):c,f=xt(r.shape,r.dtype,d),p=XY(f,a);return t.makeTensorInfo(p.shape,p.dtype,p.values)}const o=new rne(r.shape,a);return t.runWebGPUProgram(o,[r],r.dtype)}const ine={kernelName:vf,backendName:"webgpu",kernelFunc:db};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function one(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:a,defaultValue:o}=e,{outputShape:l}=s,{sliceRank:c,numUpdates:d,sliceSize:f,strides:p,outputSize:g}=$o(a,r,l),y=!1;if(a.dtype==="string"){const G=t.bufferSync(r),F=t.bufferSync(a),B=la(t.readSync(o.dataId)[0]),D=VY(G,F,l,g,f,d,c,p,B,y);return t.makeTensorInfo(l,D.dtype,D.values)}const x=[g/f,f],w=Ae({inputs:{x:r},backend:t,attrs:{shape:[d,c]}}),S=a.shape.length?Ae({inputs:{x:a},backend:t,attrs:{shape:[d,f]}}):ds({inputs:{x:a},backend:t}),$=S.dtype,N=t.makeTensorInfo([],$,ua(1,$)),I=Ae({inputs:{x:o},backend:t,attrs:{shape:Array(x.length).fill(1)}}),_=db({inputs:{x:I},backend:t,attrs:{reps:x}}),O=oe([d,f]),M=[{type:"int32",data:[c]},{type:"int32",data:p},{type:"int32",data:[O]}];switch(d){case 0:break;case 1:{const G=new Ec([d,f],c,w.shape.length,S.shape.length,p,x,$,y);t.runWebGPUProgram(G,[S,w],$,M,_)}break;default:{const G=new Ec([d,f],c,w.shape.length,N.shape.length,p,x,$,y);t.runWebGPUProgram(G,[N,w],$,M,_)}{const G=new Ec([d,f],c,w.shape.length,S.shape.length,p,x,$);t.runWebGPUProgram(G,[S,w],$,M,_)}}const W=Ae({inputs:{x:_},backend:t,attrs:{shape:l}});return t.disposeData(w.dataId),t.disposeData(S.dataId),t.disposeData(I.dataId),t.disposeData(N.dataId),t.disposeData(_.dataId),W}const une={kernelName:G0,backendName:"webgpu",kernelFunc:one};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:a,axis:o}=s,l=Pt(o,r.shape)[0],c=K1(r,a,l),d=r.shape.length,f=new Array(d).fill(0),p=r.shape.slice();return c.map(g=>{const y=[...p];y[l]=g;const x=ol({inputs:{x:r},backend:t,attrs:{begin:f,size:y}});return f[l]+=g,x})}const cne={kernelName:M0,backendName:"webgpu",kernelFunc:lne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dne=ct({opType:we.SQRT}),hne={kernelName:L0,backendName:"webgpu",kernelFunc:dne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fne={kernelName:e$,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e,r=new il(t.shape,we.SQUARE);return s.runWebGPUProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pne=hn({opType:We.SQUARED_DIFFERENCE}),mne={kernelName:H0,backendName:"webgpu",kernelFunc:pne};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gne({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=new il(s.shape,we.STEP,"stepAlpha : f32,"),a=[{type:"float32",data:[e.alpha]}];return t.runWebGPUProgram(r,[s],s.dtype,a)}const yne={kernelName:n1,backendName:"webgpu",kernelFunc:gne};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xne{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const t=Xt(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){const e=this.outputShape.length;let t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let r=0;t=this.outputShape.map((a,o)=>(r++,this.outputShape.length===1?`coords * uniforms.strides[${o}] + uniforms.begin[${o}]`:`coords[${r-1}] * uniforms.strides[${o}] + uniforms.begin[${o}]`)).join(",")}return`
       ${Ce("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:a,end:o,strides:l,beginMask:c,endMask:d,ellipsisMask:f,newAxisMask:p,shrinkAxisMask:g}=s,{finalShapeSparse:y,finalShape:x,isIdentity:w,sliceDim0:S,isSimpleSlice:$,begin:N,end:I,strides:_}=I1(r.shape,a,o,l,c,d,f,p,g);let O;if(w)O=Ae({inputs:{x:r},backend:t,attrs:{shape:x}});else if(S||$){z(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const M=N1(N,I,_),W=ol({inputs:{x:r},backend:t,attrs:{begin:N,size:M}});O=Ae({inputs:{x:W},backend:t,attrs:{shape:x}}),t.disposeData(W.dataId)}else if(t.shouldExecuteOnCPU([r])){const W=t.readSync(r.dataId),G=xt(r.shape,r.dtype,W),F=HY(y,G,_,N);O=t.makeTensorInfo(x,r.dtype,F.values)}else{const W=new xne(y),G=[{type:"int32",data:N},{type:"int32",data:_}],F=t.runWebGPUProgram(W,[r],r.dtype,G);O=Ae({inputs:{x:F},backend:t,attrs:{shape:x}}),t.disposeData(F.dataId)}return O}const vne={kernelName:j0,backendName:"webgpu",kernelFunc:bne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wne(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:a,leftPad:o,rightPad:l,padWidth:c,preserveShortSequences:d}=s,{data:f,dataSplits:p}=e,g=t.readSync(f.dataId),y=t.readSync(p.dataId),[x,w]=jY(g,y,r,a,o,l,c,d);return[t.makeTensorInfo([x.length],"string",x),t.makeTensorInfo(p.shape,"int32",w)]}const Sne={kernelName:q0,backendName:"webgpu",kernelFunc:wne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cne=hn({opType:We.SUB,cpuKernelImpl:qY,supportsComplex:!0}),$ne={kernelName:X0,backendName:"webgpu",kernelFunc:Cne};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tne=ct({opType:we.TAN}),Nne={kernelName:K0,backendName:"webgpu",kernelFunc:Tne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ene=ct({opType:we.TANH}),kne={kernelName:Y0,backendName:"webgpu",kernelFunc:Ene};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rne(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:a,updates:o}=e,{sliceRank:l,numUpdates:c,sliceSize:d,strides:f,outputSize:p}=$o(o,a,r.shape),g=[p/d,d];if(p===0)return t.makeTensorInfo(r.shape,a.dtype);const y=[],x=Ae({inputs:{x:a},backend:t,attrs:{shape:[c,l]}});y.push(x);const w=Ae({inputs:{x:o},backend:t,attrs:{shape:[c,d]}});y.push(w);const S=Ae({inputs:{x:r},backend:t,attrs:{shape:g}});y.push(S);const $=db({inputs:{x:S},backend:t,attrs:{reps:Array(g.length).fill(1)}}),N=new Ec([c,d],l,x.shape.length,w.shape.length,f,g,r.dtype,!1),I=oe([c,d]),_=[{type:"int32",data:[l]},{type:"int32",data:f},{type:"int32",data:[I]}],O=t.runWebGPUProgram(N,[w,x],S.dtype,_,$);y.push(O);const M=Ae({inputs:{x:O},backend:t,attrs:{shape:r.shape}});return y.forEach(W=>t.disposeData(W.dataId)),M}const Ine={kernelName:E0,backendName:"webgpu",kernelFunc:Rne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _ne{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${Ce("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}class Ane{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${Ce("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eu(n,e){e!==null&&n.disposeData(e.dataId)}function QS(n){let e=1;for(;e<n;)e*=2;return e}function Dne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:a,sorted:o}=s,l=r.shape,c=l[l.length-1];if(t.shouldExecuteOnCPU([r])){const O=t.readSync(r.dataId),[M,W]=KY(O,l,r.dtype,a,o);return[t.makeTensorInfo(M.shape,M.dtype,M.values),t.makeTensorInfo(W.shape,W.dtype,W.values)]}if(a===0)return l[l.length-1]=0,[t.makeTensorInfo(l,r.dtype,[]),t.makeTensorInfo(l,"int32",[])];if(c===1)return[r,Zn({attrs:{shape:l,dtype:"int32",value:0},backend:t})];const f=oe(l)/c,p=Ae({inputs:{x:r},attrs:{shape:[f,c]},backend:t}),g=QS(a),y=QS(c);let x=null;const w=()=>x===null?[p,p]:[p,x],S=(O,M,W)=>{const G=w(),F=new _ne(W),D=[{type:"int32",data:[c]},{type:"int32",data:[x===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[O]},{type:"int32",data:[M]}],Q=x;x=t.runWebGPUProgram(F,G,"int32",D),Eu(t,Q)};for(let O=1;O<g;O*=2){const M=O*2;for(let W=O;W>=1;W/=2)S(M,W,[f,y])}for(let O=y;O>g;O/=2){const M=w(),W=new Ane([f,O/2]),F=[{type:"int32",data:[c]},{type:"int32",data:[x===null?1:0]},{type:"int32",data:[g]}],B=x;x=t.runWebGPUProgram(W,M,"int32",F),Eu(t,B);const D=g/2,Q=D*2;for(let re=D;re>=1;re/=2)S(Q,re,x.shape)}let $=x;x=ol({inputs:{x},backend:t,attrs:{begin:0,size:[f,a]}}),Eu(t,$);let N=SE({inputs:{x:p,indices:x},backend:t,attrs:{axis:1,batchDims:1}});Eu(t,p);const I=l.slice(0,-1);I.push(a),$=x,x=Ae({inputs:{x},attrs:{shape:I},backend:t}),Eu(t,$);const _=N;return N=Ae({inputs:{x:N},attrs:{shape:I},backend:t}),Eu(t,_),[N,x]}const One={kernelName:Q0,backendName:"webgpu",kernelFunc:Dne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pne{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Ce("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fne(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:a}=e,{interpolation:o,fillMode:l,fillValue:c,outputShape:d}=s,[f,p,g,y]=r.shape,[x,w]=d??[p,g],S=[f,x,w,y],$=new Pne(S),N=o==="nearest"?1:2;let I;switch(l){case"constant":I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4;break;default:I=1;break}const _=[{type:"int32",data:[N]},{type:"int32",data:[I]},{type:"float32",data:[c]}];return t.runWebGPUProgram($,[r,a],"float32",_)}const Lne={kernelName:Z0,backendName:"webgpu",kernelFunc:Fne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zne(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:a}=s;a<0&&(a+=r.shape.length);const o=r,l=o.shape.length,c=r.shape[a],d=new Array(l-1);let f=0;for(let w=0;w<l;w++)w!==a&&(d[f++]=o.shape[w]);const p=[],g=new Array(l).fill(0),y=o.shape.slice();y[a]=1;const x=new Array(c);for(let w=0;w<x.length;w++){g[a]=w;const S=ol({inputs:{x:o},backend:t,attrs:{begin:g,size:y}}),$=Ae({inputs:{x:S},backend:t,attrs:{shape:d}});x[w]=$,p.push(S)}return p.forEach(w=>t.disposeData(w.dataId)),x}const Bne={kernelName:J0,backendName:"webgpu",kernelFunc:zne};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mne{constructor(e,t,s){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=Re(e),this.dispatch=$e(this.dispatchLayout,e,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${s} type.`);this.type=s,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${Ce("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${fi("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Une(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:a}=e,{numSegments:o}=s,l=r.shape.length,c=[];let d=0;const f=_n([d],l);let p=r;f!=null&&(p=Dr({inputs:{x:r},backend:t,attrs:{perm:f}}),c.push(p),d=An(1,l)[0]);const g=Y1(p.shape,d,o),y=oe([p.shape[d]]),x=Ae({inputs:{x:p},backend:t,attrs:{shape:[-1,y]}});c.push(x);const w=r.dtype,S=[x.shape[0],o],$=Zn({backend:t,attrs:{shape:S,value:0,dtype:w}}),N=new Mne(x.shape,S,w),I=[{type:"int32",data:[o]},{type:"int32",data:[oe(x.shape)]}],_=t.runWebGPUProgram(N,[x,a],w,I,$),O=Ae({inputs:{x:_},backend:t,attrs:{shape:g}});c.push(_);let M=O;if(f!=null){c.push(O);const W=Kc(f);M=Dr({inputs:{x:M},backend:t,attrs:{perm:W}})}return c.forEach(W=>t.disposeData(W.dataId)),M}const Vne={kernelName:e1,backendName:"webgpu",kernelFunc:Une};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wne=[pY,ZY,e9,n9,r9,o9,p9,g9,x9,v9,S9,$9,N9,k9,I9,P9,L9,U9,W9,H9,Y9,eQ,sQ,oQ,lQ,fQ,gY,gQ,vQ,kQ,OQ,zQ,UQ,WQ,HQ,qQ,KQ,ZQ,eZ,nZ,rZ,oZ,pZ,gZ,cZ,bZ,SZ,NZ,kZ,_Z,PZ,LZ,BZ,UZ,WZ,HZ,jZ,XZ,YZ,dY,ZZ,rJ,eJ,nJ,oJ,lJ,dJ,pJ,yJ,bJ,wJ,mY,CJ,xQ,TJ,EJ,RJ,_J,DJ,PJ,zJ,VJ,MJ,GJ,jJ,XJ,ZJ,tee,A9,see,aee,fee,oee,dee,mee,D9,yee,bee,wee,Cee,kee,AZ,Iee,Aee,Oee,rQ,Lee,Bee,Uee,Gee,jee,Xee,Yee,Zee,aQ,ete,nte,rte,ite,hY,lte,hte,mte,xte,wte,Cte,Tte,Ete,Rte,Ate,Pte,Lte,Bte,Ute,Wte,Hte,X9,yne,vne,Sne,Nee,qte,Yte,tne,sne,une,cne,hne,fne,mne,$ne,DZ,Nne,kne,Ine,ine,One,Lne,c9,Bne,Vne,zee];for(const n of Wne)a$(n);/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var kE=function(n,e){return(kE=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,s){t.__proto__=s}||function(t,s){for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(t[r]=s[r])})(n,e)};function RE(n,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function t(){this.constructor=n}kE(n,e),n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}var Et=function(){return(Et=Object.assign||function(n){for(var e,t=1,s=arguments.length;t<s;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}).apply(this,arguments)};function it(n,e,t,s){return new(t||(t=Promise))(function(r,a){function o(d){try{c(s.next(d))}catch(f){a(f)}}function l(d){try{c(s.throw(d))}catch(f){a(f)}}function c(d){var f;d.done?r(d.value):(f=d.value,f instanceof t?f:new t(function(p){p(f)})).then(o,l)}c((s=s.apply(n,[])).next())})}function ot(n,e){var t,s,r,a,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:l(0),throw:l(1),return:l(2)},typeof Symbol=="function"&&(a[Symbol.iterator]=function(){return this}),a;function l(c){return function(d){return function(f){if(t)throw new TypeError("Generator is already executing.");for(;o;)try{if(t=1,s&&(r=2&f[0]?s.return:f[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,f[1])).done)return r;switch(s=0,r&&(f=[2&f[0],r.value]),f[0]){case 0:case 1:r=f;break;case 4:return o.label++,{value:f[1],done:!1};case 5:o.label++,s=f[1],f=[0];continue;case 7:f=o.ops.pop(),o.trys.pop();continue;default:if(r=o.trys,!((r=r.length>0&&r[r.length-1])||f[0]!==6&&f[0]!==2)){o=0;continue}if(f[0]===3&&(!r||f[1]>r[0]&&f[1]<r[3])){o.label=f[1];break}if(f[0]===6&&o.label<r[1]){o.label=r[1],r=f;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(f);break}r[2]&&o.ops.pop(),o.trys.pop();continue}f=e.call(n,o)}catch(p){f=[6,p],s=0}finally{t=r=0}if(5&f[0])throw f[1];return{value:f[0]?f[1]:void 0,done:!0}}([c,d])}}}function co(n,e,t){if(t||arguments.length===2)for(var s,r=0,a=e.length;r<a;r++)!s&&r in e||(s||(s=Array.prototype.slice.call(e,0,r)),s[r]=e[r]);return n.concat(s||Array.prototype.slice.call(e))}var Or=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],Gc=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"];function gf(n){return n instanceof SVGAnimatedLength?n.baseVal.value:n}function IE(n){return it(this,void 0,void 0,function(){var e,t;return ot(this,function(s){switch(s.label){case 0:return e=document.createElement("canvas"),n instanceof Mt?[4,C1(n,e)]:[3,2];case 1:return s.sent(),[3,3];case 2:e.width=gf(n.width),e.height=gf(n.height),t=e.getContext("2d"),n instanceof ImageData?t.putImageData(n,0,0):t.drawImage(n,0,0),s.label=3;case 3:return[2,e]}})})}function _E(n){return it(this,void 0,void 0,function(){var e,t,s,r,a,o;return ot(this,function(l){switch(l.label){case 0:return n instanceof Mt?(e=n.shape.slice(0,2),t=e[0],s=e[1],r=ImageData.bind,[4,C1(n)]):[3,2];case 1:return[2,new(r.apply(ImageData,[void 0,l.sent(),s,t]))];case 2:return a=document.createElement("canvas"),o=a.getContext("2d"),a.width=gf(n.width),a.height=gf(n.height),o.drawImage(n,0,0),[2,o.getImageData(0,0,a.width,a.height)]}})})}function Gne(n){return it(this,void 0,void 0,function(){var e,t;return ot(this,function(s){switch(s.label){case 0:return n instanceof SVGImageElement||n instanceof OffscreenCanvas?[4,IE(n)]:[3,2];case 1:return t=s.sent(),[3,3];case 2:t=n,s.label=3;case 3:return e=t,[2,AT(e,4)]}})})}function AE(n){if(n<0||n>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(n));if(!Number.isInteger(n))throw new Error("Mask value must be an integer but got ".concat(n))}var xc={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},Hne=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return it(this,void 0,void 0,function(){return ot(this,function(e){return[2,this.mask]})})},n.prototype.toImageData=function(){return it(this,void 0,void 0,function(){return ot(this,function(e){return[2,_E(this.mask)]})})},n.prototype.toTensor=function(){return it(this,void 0,void 0,function(){return ot(this,function(e){return[2,Gne(this.mask)]})})},n.prototype.getUnderlyingType=function(){return"canvasimagesource"},n}();function jne(n){return AE(n),"person"}var qne=function(){function n(e){var t,s=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new zq.Pose({locateFile:function(r,a){if(e.solutionPath){var o=e.solutionPath.replace(/\/+$/,"");return"".concat(o,"/").concat(r)}return"".concat(a,"/").concat(r)}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;case"full":default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults(function(r){if(s.height=r.image.height,s.width=r.image.width,r.poseLandmarks==null)s.poses=[];else{var a=s.translateOutput(r.poseLandmarks,r.poseWorldLandmarks);r.segmentationMask&&(a.segmentation={maskValueToLabel:jne,mask:new Hne(r.segmentationMask)}),s.poses=[a]}})}return n.prototype.translateOutput=function(e,t){var s=this,r={keypoints:e.map(function(a,o){return{x:a.x*s.width,y:a.y*s.height,z:a.z,score:a.visibility,name:Gc[o]}})};return t!=null&&(r.keypoints3D=t.map(function(a,o){return{x:a.x,y:a.y,z:a.z,score:a.visibility,name:Gc[o]}})),r},n.prototype.estimatePoses=function(e,t,s){return it(this,void 0,void 0,function(){var r,a;return ot(this,function(o){switch(o.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Mt?(a=ImageData.bind,[4,C1(e)]):[3,2];case 1:return r=new(a.apply(ImageData,[void 0,o.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,o.label=3;case 3:return e=r,[4,this.poseSolution.send({image:e},s)];case 4:return o.sent(),[2,this.poses]}})})},n.prototype.dispose=function(){this.poseSolution.close()},n.prototype.reset=function(){this.poseSolution.reset()},n.prototype.initialize=function(){return this.poseSolution.initialize()},n}();function Xne(n){return it(this,void 0,void 0,function(){var e,t;return ot(this,function(s){switch(s.label){case 0:return e=function(r){if(r==null)return Et({},xc);var a=Et({},r);return a.runtime="mediapipe",a.enableSegmentation==null&&(a.enableSegmentation=xc.enableSegmentation),a.enableSmoothing==null&&(a.enableSmoothing=xc.enableSmoothing),a.smoothSegmentation==null&&(a.smoothSegmentation=xc.smoothSegmentation),a.modelType==null&&(a.modelType=xc.modelType),a}(n),[4,(t=new qne(e)).initialize()];case 1:return s.sent(),[2,t]}})})}function ju(n){return n instanceof Mt?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function DE(n){return n-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}function hb(n){return n instanceof Mt?n:AT(n)}function OE(n,e,t){return yy(t,"inputResolution"),[1/t.width*n[0][0]*e.width,1/t.height*n[0][1]*e.width,n[0][3]*e.width,1/t.width*n[1][0]*e.height,1/t.height*n[1][1]*e.height,n[1][3]*e.height,0,0]}function yy(n,e){z(n.width!==0,function(){return"".concat(e," width cannot be 0.")}),z(n.height!==0,function(){return"".concat(e," height cannot be 0.")})}function Sg(n,e,t){var s=t.rotationVectorStartKeypointIndex,r=t.rotationVectorEndKeypointIndex,a=n.locationData,o=a.relativeKeypoints[s].x*e.width,l=a.relativeKeypoints[s].y*e.height,c=a.relativeKeypoints[r].x*e.width,d=a.relativeKeypoints[r].y*e.height,f=2*Math.sqrt((c-o)*(c-o)+(d-l)*(d-l)),p=function(g,y,x){var w,S=g.locationData,$=x.rotationVectorStartKeypointIndex,N=x.rotationVectorEndKeypointIndex;w=x.rotationVectorTargetAngle?x.rotationVectorTargetAngle:Math.PI*x.rotationVectorTargetAngleDegree/180;var I=S.relativeKeypoints[$].x*y.width,_=S.relativeKeypoints[$].y*y.height,O=S.relativeKeypoints[N].x*y.width,M=S.relativeKeypoints[N].y*y.height;return DE(w-Math.atan2(-(M-_),O-I))}(n,e,t);return{xCenter:o/e.width,yCenter:l/e.height,width:f/e.width,height:f/e.height,rotation:p}}function PE(n){if(n.length!==16)throw new Error("Array length must be 16 but got ".concat(n.length));return[[n[0],n[1],n[2],n[3]],[n[4],n[5],n[6],n[7]],[n[8],n[9],n[10],n[11]],[n[12],n[13],n[14],n[15]]]}function Cg(n,e,t,s,r,a,o){return n[e][r]*(n[t][a]*n[s][o]-n[t][o]*n[s][a])}function Bn(n,e,t){var s=(e+1)%4,r=(e+2)%4,a=(e+3)%4,o=(t+1)%4,l=(t+2)%4,c=(t+3)%4;return Cg(n,s,r,a,o,l,c)+Cg(n,r,a,s,o,l,c)+Cg(n,a,s,r,o,l,c)}function ZS(n,e,t){t===void 0&&(t={ignoreRotation:!1});for(var s=[],r=0,a=n;r<a.length;r++){var o=a[r],l=o.x-.5,c=o.y-.5,d=t.ignoreRotation?0:e.rotation,f=Math.cos(d)*l-Math.sin(d)*c,p=Math.sin(d)*l+Math.cos(d)*c;f=f*e.width+e.xCenter,p=p*e.height+e.yCenter;var g=o.z*e.width,y=Et({},o);y.x=f,y.y=p,y.z=g,s.push(y)}return s}function FE(n,e){var t=function(s,r,a,o){var l=r-s,c=o-a,d=c/l;return{scale:d,offset:a-s*d}}(0,255,e[0],e[1]);return Ge(function(){return Pe(be(n,t.scale),t.offset)})}function xy(n,e,t){var s,r,a,o,l,c,d,f,p,g,y,x,w,S,$=e.outputTensorSize,N=e.keepAspectRatio,I=e.borderMode,_=e.outputTensorFloatRange,O=ju(n),M=function(F,B){return B?{xCenter:B.xCenter*F.width,yCenter:B.yCenter*F.height,width:B.width*F.width,height:B.height*F.height,rotation:B.rotation}:{xCenter:.5*F.width,yCenter:.5*F.height,width:F.width,height:F.height,rotation:0}}(O,t),W=function(F,B,D){if(D===void 0&&(D=!1),!D)return{top:0,left:0,right:0,bottom:0};var Q=B.height,re=B.width;yy(B,"targetSize"),yy(F,"roi");var he,le,ne=Q/re,ge=F.height/F.width,pe=0,Se=0;return ne>ge?(he=F.width,le=F.width*ne,Se=(1-ge/ne)/2):(he=F.height/ne,le=F.height,pe=(1-ne/ge)/2),F.width=he,F.height=le,{top:Se,left:pe,right:pe,bottom:Se}}(M,$,N),G=(s=M,r=O.width,a=O.height,o=!1,l=s.width,c=s.height,d=o?-1:1,f=Math.cos(s.rotation),p=Math.sin(s.rotation),g=s.xCenter,y=s.yCenter,x=1/r,w=1/a,(S=new Array(16))[0]=l*f*d*x,S[1]=-c*p*x,S[2]=0,S[3]=(-.5*l*f*d+.5*c*p+g)*x,S[4]=l*p*d*w,S[5]=c*f*w,S[6]=0,S[7]=(-.5*c*f-.5*l*p*d+y)*w,S[8]=0,S[9]=0,S[10]=l*x,S[11]=0,S[12]=0,S[13]=0,S[14]=0,S[15]=1,PE(S));return{imageTensor:Ge(function(){var F=hb(n),B=Xs(OE(G,O,$),[1,8]),D=I==="zero"?"constant":"nearest",Q=ho.transform($s(kt(F,"float32")),B,"bilinear",D,0,[$.height,$.width]);return _!=null?FE(Q,_):Q}),padding:W,transformationMatrix:G}}function JS(n,e,t,s){return s===1?.5*(n+e):n+(e-n)*t/(s-1)}function Kne(n){return Ge(function(){var e=function(r){return Ge(function(){return[Ze(r,[0,0,0],[1,-1,1]),Ze(r,[0,0,1],[1,-1,-1])]})}(n),t=e[0],s=e[1];return{boxes:bt(s),logits:bt(t)}})}function LE(n){return n!=null&&n.currentTime!=null}function eC(n){for(var e={locationData:{relativeKeypoints:[]}},t=Number.MAX_SAFE_INTEGER,s=Number.MIN_SAFE_INTEGER,r=Number.MAX_SAFE_INTEGER,a=Number.MIN_SAFE_INTEGER,o=0;o<n.length;++o){var l=n[o];t=Math.min(t,l.x),s=Math.max(s,l.x),r=Math.min(r,l.y),a=Math.max(a,l.y),e.locationData.relativeKeypoints.push({x:l.x,y:l.y})}return e.locationData.relativeBoundingBox={xMin:t,yMin:r,xMax:s,yMax:a,width:s-t,height:a-r},e}function Yne(n,e,t,s){return it(this,void 0,void 0,function(){var r,a,o,l,c;return ot(this,function(d){switch(d.label){case 0:return n.sort(function(f,p){return Math.max.apply(Math,p.score)-Math.max.apply(Math,f.score)}),r=Xs(n.map(function(f){return[f.locationData.relativeBoundingBox.yMin,f.locationData.relativeBoundingBox.xMin,f.locationData.relativeBoundingBox.yMax,f.locationData.relativeBoundingBox.xMax]})),a=In(n.map(function(f){return f.score[0]})),[4,ho.nonMaxSuppressionAsync(r,a,e,t)];case 1:return[4,(o=d.sent()).array()];case 2:return l=d.sent(),c=n.filter(function(f,p){return l.indexOf(p)>-1}),gt([r,a,o]),[2,c]}})})}function zE(n,e){return n.map(function(t){var s=Et(Et({},t),{x:t.x*e.width,y:t.y*e.height});return t.z!=null&&(s.z=t.z*e.width),s})}function Qne(n,e,t){return it(this,void 0,void 0,function(){var s,r,a,o,l,c,d,f,p,g,y,x,w,S,$,N,I,_,O,M,W,G,F,B;return ot(this,function(D){switch(D.label){case 0:if(s=bt(e,[0]),r=s.shape,a=r[0],o=r[1],l=r[2],n.length!==l)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(n.length,", heatmap length: ").concat(l));return c=[],[4,s.buffer()];case 1:for(d=D.sent(),f=0;f<n.length;f++)if(p=n[f],g=Et({},p),c.push(g),y=Math.trunc(g.x*o),x=Math.trunc(g.y*a),!(y<0||y>=o||x<0||y>=a)){for(w=Math.trunc((t.kernelSize-1)/2),S=Math.max(0,y-w),$=Math.min(o,y+w+1),N=Math.max(0,x-w),I=Math.min(a,x+w+1),_=0,O=0,M=0,W=0,G=N;G<I;++G)for(F=S;F<$;++F)B=d.get(G,F,f),_+=B,W=Math.max(W,B),O+=F*B,M+=G*B;W>=t.minConfidenceToRefine&&_>0&&(g.x=O/o/_,g.y=M/a/_)}return s.dispose(),[2,c]}})})}function tC(n,e){var t=e.left,s=e.top,r=e.left+e.right,a=e.top+e.bottom;return n.map(function(o){return Et(Et({},o),{x:(o.x-t)/(1-r),y:(o.y-s)/(1-a),z:o.z/(1-r)})})}function Zne(n,e,t){return Bu()==="webgl"?function(s,r,a){var o=a.combineWithPreviousRatio.toFixed(2),l={variableNames:["prevMask","newMask"],outputShape:s.shape,userCode:`
  void main() {
      ivec2 coords = getOutputCoords();
      int height = coords[0];
      int width = coords[1];

      float prevMaskValue = getPrevMask(height, width);
      float newMaskValue = getNewMask(height, width);

      /*
      * Assume p := newMaskValue
      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)
      * uncertainty alpha(p) =
      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the
      * uncertainty]
      *
      * The following polynomial approximates uncertainty alpha as a
      * function of (p + 0.5):
      */
      const float c1 = 5.68842;
      const float c2 = -0.748699;
      const float c3 = -57.8051;
      const float c4 = 291.309;
      const float c5 = -624.717;
      float t = newMaskValue - 0.5;
      float x = t * t;

      float uncertainty =
        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));

      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *
                             (uncertainty * `.concat(o,`);

      setOutput(outputValue);
    }
`)},c=Mu();return Ge(function(){var d=c.compileAndRun(l,[s,r]);return ls().makeTensorFromDataId(d.dataId,d.shape,d.dtype)})}(n,e,t):Ge(function(){var s=je(e,.5),r=qs(s),a=je(1,Dc(1,be(r,Pe(5.68842,be(r,Pe(-.748699,be(r,Pe(-57.8051,be(r,Pe(291.309,be(r,-624.717)))))))))));return Pe(e,be(je(n,e),be(a,t.combineWithPreviousRatio)))})}function Jne(n,e,t){return it(this,void 0,void 0,function(){var s,r,a,o,l;return ot(this,function(c){switch(c.label){case 0:return s=n[0],r=n[1],a=function(d,f,p){return Ge(function(){var g,y,x,w;p.reverseOutputOrder?(y=bt(Ze(d,[0,p.boxCoordOffset+0],[-1,1])),g=bt(Ze(d,[0,p.boxCoordOffset+1],[-1,1])),w=bt(Ze(d,[0,p.boxCoordOffset+2],[-1,1])),x=bt(Ze(d,[0,p.boxCoordOffset+3],[-1,1]))):(g=bt(Ze(d,[0,p.boxCoordOffset+0],[-1,1])),y=bt(Ze(d,[0,p.boxCoordOffset+1],[-1,1])),x=bt(Ze(d,[0,p.boxCoordOffset+2],[-1,1])),w=bt(Ze(d,[0,p.boxCoordOffset+3],[-1,1]))),y=Pe(be(et(y,p.xScale),f.w),f.x),g=Pe(be(et(g,p.yScale),f.h),f.y),p.applyExponentialOnBoxSize?(x=be(ha(et(x,p.hScale)),f.h),w=be(ha(et(w,p.wScale)),f.w)):(x=be(et(x,p.hScale),f.h),w=be(et(w,p.wScale),f.h));var S=je(g,et(x,2)),$=je(y,et(w,2)),N=Pe(g,et(x,2)),I=Pe(y,et(w,2)),_=dn([de(S,[p.numBoxes,1]),de($,[p.numBoxes,1]),de(N,[p.numBoxes,1]),de(I,[p.numBoxes,1])],1);if(p.numKeypoints)for(var O=0;O<p.numKeypoints;++O){var M=p.keypointCoordOffset+O*p.numValuesPerKeypoint,W=void 0,G=void 0;p.reverseOutputOrder?(W=bt(Ze(d,[0,M],[-1,1])),G=bt(Ze(d,[0,M+1],[-1,1]))):(G=bt(Ze(d,[0,M],[-1,1])),W=bt(Ze(d,[0,M+1],[-1,1])));var F=Pe(be(et(W,p.xScale),f.w),f.x),B=Pe(be(et(G,p.yScale),f.h),f.y);_=dn([_,de(F,[p.numBoxes,1]),de(B,[p.numBoxes,1])],1)}return _})}(r,e,t),o=Ge(function(){var d=s;return t.sigmoidScore?(t.scoreClippingThresh!=null&&(d=V$(s,-t.scoreClippingThresh,t.scoreClippingThresh)),d=ia(d)):d}),[4,ese(a,o,t)];case 1:return l=c.sent(),gt([a,o]),[2,l]}})})}function ese(n,e,t){return it(this,void 0,void 0,function(){var s,r,a,o,l,c,d,f,p,g,y,x;return ot(this,function(w){switch(w.label){case 0:return s=[],[4,n.data()];case 1:return r=w.sent(),[4,e.data()];case 2:for(a=w.sent(),o=0;o<t.numBoxes;++o)if(!(t.minScoreThresh!=null&&a[o]<t.minScoreThresh||(l=o*t.numCoords,c=tse(r[l+0],r[l+1],r[l+2],r[l+3],a[o],t.flipVertically,o),(d=c.locationData.relativeBoundingBox).width<0||d.height<0))){if(t.numKeypoints>0)for((f=c.locationData).relativeKeypoints=[],p=t.numKeypoints*t.numValuesPerKeypoint,g=0;g<p;g+=t.numValuesPerKeypoint)y=l+t.keypointCoordOffset+g,x={x:r[y+0],y:t.flipVertically?1-r[y+1]:r[y+1]},f.relativeKeypoints.push(x);s.push(c)}return[2,s]}})})}function tse(n,e,t,s,r,a,o){return{score:[r],ind:o,locationData:{relativeBoundingBox:{xMin:e,yMin:a?1-t:n,xMax:s,yMax:a?1-n:t,width:s-e,height:t-n}}}}function nse(n,e){return n==="none"?e:function(t){return 1/(1+Math.exp(-t))}(e)}function nC(n,e,t,s){return it(this,void 0,void 0,function(){var r,a,o,l,c,d,f,p;return ot(this,function(g){switch(g.label){case 0:return t=t||e.flipHorizontally||!1,s=s||e.flipVertically||!1,r=n.size,a=r/e.numLandmarks,[4,n.data()];case 1:for(o=g.sent(),l=[],c=0;c<e.numLandmarks;++c)d=c*a,(p={x:0,y:0}).x=t?e.inputImageWidth-o[d]:o[d],a>1&&(p.y=s?e.inputImageHeight-o[d+1]:o[d+1]),a>2&&(p.z=o[d+2]),a>3&&(p.score=nse(e.visibilityActivation,o[d+3])),l.push(p);for(f=0;f<l.length;++f)(p=l[f]).x=p.x/e.inputImageWidth,p.y=p.y/e.inputImageHeight,p.z=p.z/e.inputImageWidth/(e.normalizeZ||1);return[2,l]}})})}function sC(n,e,t){var s=n.width,r=n.height,a=n.rotation;if(t.rotation==null&&t.rotationDegree==null||(a=function(d,f){return f.rotation!=null?d+=f.rotation:f.rotationDegree!=null&&(d+=Math.PI*f.rotationDegree/180),DE(d)}(a,t)),a===0)n.xCenter=n.xCenter+s*t.shiftX,n.yCenter=n.yCenter+r*t.shiftY;else{var o=(e.width*s*t.shiftX*Math.cos(a)-e.height*r*t.shiftY*Math.sin(a))/e.width,l=(e.width*s*t.shiftX*Math.sin(a)+e.height*r*t.shiftY*Math.cos(a))/e.height;n.xCenter=n.xCenter+o,n.yCenter=n.yCenter+l}{var c=Math.max(s*e.width,r*e.height);s=c/e.width,r=c/e.height}return n.width=s*t.scaleX,n.height=r*t.scaleY,n}function sse(n,e){return n.map(function(t){var s=Et(Et({},t),{x:t.x/e.width,y:t.y/e.height});return t.z!=null&&(t.z=t.z/e.width),s})}var Ja=function(){function n(e){this.alpha=e,this.initialized=!1}return n.prototype.apply=function(e,t){var s;return this.initialized?s=t==null?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(s=e,this.initialized=!0),this.rawValue=e,this.storedValue=s,s},n.prototype.applyWithAlpha=function(e,t,s){return this.alpha=t,this.apply(e,s)},n.prototype.hasLastRawValue=function(){return this.initialized},n.prototype.lastRawValue=function(){return this.rawValue},n.prototype.reset=function(){this.initialized=!1},n}(),$g=function(){function n(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new Ja(this.getAlpha(this.minCutOff)),this.dx=new Ja(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return n.prototype.apply=function(e,t,s){if(e==null)return e;var r=Math.trunc(t);if(this.lastTimestamp>=r)return e;this.lastTimestamp!==0&&r!==0&&(this.frequency=1/(1e-6*(r-this.lastTimestamp))),this.lastTimestamp=r;var a=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*s*this.frequency:0,o=this.dx.applyWithAlpha(a,this.getAlpha(this.derivateCutOff)),l=this.minCutOff+this.beta*Math.abs(o),c=this.thresholdCutOff!=null?this.thresholdCutOff+this.thresholdBeta*Math.abs(o):null;return this.x.applyWithAlpha(e,this.getAlpha(l),c)},n.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},n}(),by=function(){function n(e){this.config=e}return n.prototype.apply=function(e,t,s){var r=this;if(e==null)return this.reset(),null;this.initializeFiltersIfEmpty(e);var a=1;if(!this.config.disableValueScaling){if(s<this.config.minAllowedObjectScale)return co([],e,!0);a=1/s}return e.map(function(o,l){var c=Et(Et({},o),{x:r.xFilters[l].apply(o.x,t,a),y:r.yFilters[l].apply(o.y,t,a)});return o.z!=null&&(c.z=r.zFilters[l].apply(o.z,t,a)),c})},n.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},n.prototype.initializeFiltersIfEmpty=function(e){var t=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(s){return new $g(t.config)}),this.yFilters=e.map(function(s){return new $g(t.config)}),this.zFilters=e.map(function(s){return new $g(t.config)}))},n}(),Tg=function(){function n(e){this.config=e,this.window=[],this.lowPassFilter=new Ja(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return n.prototype.apply=function(e,t,s){if(e==null)return e;var r,a=Math.trunc(t);if(this.lastTimestamp>=a)return e;if(this.lastTimestamp===-1)r=1;else{for(var o=e*s-this.lastValue*this.lastValueScale,l=a-this.lastTimestamp,c=o,d=l,f=(1+this.window.length)*(1e6/30),p=0,g=this.window;p<g.length;p++){var y=g[p];if(d+y.duration>f)break;c+=y.distance,d+=y.duration}var x=c/(1e-6*d);r=1-1/(1+this.config.velocityScale*Math.abs(x)),this.window.unshift({distance:o,duration:l}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=s,this.lastTimestamp=a,this.lowPassFilter.applyWithAlpha(e,r)},n}(),rse=function(){function n(e){this.config=e}return n.prototype.apply=function(e,t,s){var r=this;if(e==null)return this.reset(),null;var a=1;if(!this.config.disableValueScaling){if(s<this.config.minAllowedObjectScale)return co([],e,!0);a=1/s}return this.initializeFiltersIfEmpty(e),e.map(function(o,l){var c=Et(Et({},o),{x:r.xFilters[l].apply(o.x,t,a),y:r.yFilters[l].apply(o.y,t,a)});return o.z!=null&&(c.z=r.zFilters[l].apply(o.z,t,a)),c})},n.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},n.prototype.initializeFiltersIfEmpty=function(e){var t=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(s){return new Tg(t.config)}),this.yFilters=e.map(function(s){return new Tg(t.config)}),this.zFilters=e.map(function(s){return new Tg(t.config)}))},n}(),Ng=function(){function n(e){if(e.velocityFilter!=null)this.keypointsFilter=new rse(e.velocityFilter);else{if(e.oneEuroFilter==null)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new by(e.oneEuroFilter)}}return n.prototype.apply=function(e,t,s,r,a){if(r===void 0&&(r=!1),e==null)return this.keypointsFilter.reset(),null;var o=a!=null?function(d,f){return(d.width*f.width+d.height*f.height)/2}(a,s):1,l=r?zE(e,s):e,c=this.keypointsFilter.apply(l,t,o);return r?sse(c,s):c},n}(),rC=function(){function n(e){this.alpha=e.alpha}return n.prototype.apply=function(e){var t=this;if(e==null)return this.visibilityFilters=null,null;this.visibilityFilters!=null&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map(function(l){return new Ja(t.alpha)}));for(var s=[],r=0;r<e.length;++r){var a=e[r],o=Et({},a);o.score=this.visibilityFilters[r].apply(a.score),s.push(o)}return s},n}(),ase={interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},ku={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},ise={maxPoses:1,flipHorizontal:!1},ose={applyExponentialOnBoxSize:!1,flipVertically:!1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},use=.3,aC={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25},lse={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},cse={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},dse={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},hse={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},fse={kernelSize:7,minConfidenceToRefine:.5},iC={alpha:.1},pse={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},mse={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},gse={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},yse={activation:"none"},xse={combineWithPreviousRatio:.7},bse=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return it(this,void 0,void 0,function(){return ot(this,function(e){return[2,IE(this.mask)]})})},n.prototype.toImageData=function(){return it(this,void 0,void 0,function(){return ot(this,function(e){return[2,_E(this.mask)]})})},n.prototype.toTensor=function(){return it(this,void 0,void 0,function(){return ot(this,function(e){return[2,this.mask]})})},n.prototype.getUnderlyingType=function(){return"tensor"},n}();function vse(n){return AE(n),"person"}var wse=function(){function n(e,t,s,r,a,o){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=s,this.enableSegmentation=r,this.smoothSegmentation=a,this.modelType=o,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(p){p.reduceBoxesInLowestLayer==null&&(p.reduceBoxesInLowestLayer=!1),p.interpolatedScaleAspectRatio==null&&(p.interpolatedScaleAspectRatio=1),p.fixedAnchorSize==null&&(p.fixedAnchorSize=!1);for(var g=[],y=0;y<p.numLayers;){for(var x=[],w=[],S=[],$=[],N=y;N<p.strides.length&&p.strides[N]===p.strides[y];){var I=JS(p.minScale,p.maxScale,N,p.strides.length);if(N===0&&p.reduceBoxesInLowestLayer)S.push(1),S.push(2),S.push(.5),$.push(.1),$.push(I),$.push(I);else{for(var _=0;_<p.aspectRatios.length;++_)S.push(p.aspectRatios[_]),$.push(I);if(p.interpolatedScaleAspectRatio>0){var O=N===p.strides.length-1?1:JS(p.minScale,p.maxScale,N+1,p.strides.length);$.push(Math.sqrt(I*O)),S.push(p.interpolatedScaleAspectRatio)}}N++}for(var M=0;M<S.length;++M){var W=Math.sqrt(S[M]);x.push($[M]/W),w.push($[M]*W)}var G=0,F=0;if(p.featureMapHeight.length>0)G=p.featureMapHeight[y],F=p.featureMapWidth[y];else{var B=p.strides[y];G=Math.ceil(p.inputSizeHeight/B),F=Math.ceil(p.inputSizeWidth/B)}for(var D=0;D<G;++D)for(var Q=0;Q<F;++Q)for(var re=0;re<x.length;++re){var he={xCenter:(Q+p.anchorOffsetX)/F,yCenter:(D+p.anchorOffsetY)/G,width:0,height:0};p.fixedAnchorSize?(he.width=1,he.height=1):(he.width=w[re],he.height=x[re]),g.push(he)}y=N}return g}(ase);var l=In(this.anchors.map(function(p){return p.width})),c=In(this.anchors.map(function(p){return p.height})),d=In(this.anchors.map(function(p){return p.xCenter})),f=In(this.anchors.map(function(p){return p.yCenter}));this.anchorTensor={x:d,y:f,w:l,h:c},this.prevFilteredSegmentationMask=this.enableSegmentation?Xs([],[0,0]):null}return n.prototype.estimatePoses=function(e,t,s){return it(this,void 0,void 0,function(){var r,a,o,l,c,d,f,p,g,y,x,w,S,$,N,I,_,O,M,W,G,F,B;return ot(this,function(D){switch(D.label){case 0:return r=function(Q){var re;if((re=Q==null?ise:Et({},Q)).maxPoses==null&&(re.maxPoses=1),re.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(re.maxPoses,". Should be > 0."));if(re.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return re}(t),e==null?(this.reset(),[2,[]]):(this.maxPoses=r.maxPoses,this.timestamp=s!=null?1e3*s:LE(e)?1e6*e.currentTime:null,a=ju(e),o=Ge(function(){return kt(hb(e),"float32")}),(l=this.regionOfInterest)!=null?[3,2]:[4,this.detectPose(o)]);case 1:if((c=D.sent()).length===0)return this.reset(),o.dispose(),[2,[]];d=c[0],l=this.poseDetectionToRoi(d,a),D.label=2;case 2:return[4,this.poseLandmarksByRoi(l,o)];case 3:return f=D.sent(),o.dispose(),f==null?(this.reset(),[2,[]]):(p=f.landmarks,g=f.auxiliaryLandmarks,y=f.poseScore,x=f.worldLandmarks,w=f.segmentationMask,S=this.poseLandmarkFiltering(p,g,x,a),$=S.actualLandmarksFiltered,N=S.auxiliaryLandmarksFiltered,I=S.actualWorldLandmarksFiltered,_=this.poseLandmarksToRoi(N,a),this.regionOfInterest=_,O=this.smoothSegmentation&&w!=null?this.poseSegmentationFiltering(w):w,(M=$!=null?zE($,a):null)!=null&&M.forEach(function(Q,re){Q.name=Gc[re]}),(W=I)!=null&&W.forEach(function(Q,re){Q.name=Gc[re]}),G={score:y,keypoints:M,keypoints3D:W},O!==null&&(F=Ge(function(){var Q=$s(O,2),re=ii(Q,[[0,0],[0,0],[0,1]]);return oT(re,[[0,0],[0,0],[0,2]],"symmetric")}),this.smoothSegmentation||gt(O),B={maskValueToLabel:vse,mask:new bse(F)},G.segmentation=B),[2,[G]])}})})},n.prototype.poseSegmentationFiltering=function(e){var t=this.prevFilteredSegmentationMask;return t.size===0?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=Zne(t,e,xse),gt(e)),gt(t),this.prevFilteredSegmentationMask},n.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),gt([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},n.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(gt(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=Xs([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},n.prototype.detectPose=function(e){return it(this,void 0,void 0,function(){var t,s,r,a,o,l,c,d,f,p;return ot(this,function(g){switch(g.label){case 0:return t=xy(e,lse),s=t.imageTensor,r=t.padding,a=this.detectorModel.predict(s),o=Kne(a),l=o.boxes,[4,Jne([c=o.logits,l],this.anchorTensor,ose)];case 1:return(d=g.sent()).length===0?(gt([s,a,c,l]),[2,d]):[4,Yne(d,this.maxPoses,use)];case 2:return f=g.sent(),p=function(y,x){y===void 0&&(y=[]);for(var w=x.left,S=x.top,$=x.left+x.right,N=x.top+x.bottom,I=0;I<y.length;I++){var _=y[I],O=_.locationData.relativeBoundingBox,M=(O.xMin-w)/(1-$),W=(O.yMin-S)/(1-N),G=O.width/(1-$),F=O.height/(1-N);O.xMin=M,O.yMin=W,O.width=G,O.height=F,O.xMax=M+G,O.yMax=W+F;var B=_.locationData.relativeKeypoints;B&&B.forEach(function(D){var Q=(D.x-w)/(1-$),re=(D.y-S)/(1-N);D.x=Q,D.y=re})}return y}(f,r),gt([s,a,c,l]),[2,p]}})})},n.prototype.poseDetectionToRoi=function(e,t){return sC(Sg(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,aC)},n.prototype.poseLandmarksByRoi=function(e,t){return it(this,void 0,void 0,function(){var s,r,a,o,l,c,d,f,p,g,y,x,w,S;return ot(this,function($){switch($.label){case 0:if(s=ju(t),r=xy(t,cse,e),a=r.imageTensor,o=r.padding,l=r.transformationMatrix,this.modelType!=="lite"&&this.modelType!=="full"&&this.modelType!=="heavy")throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return c=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&c.push("activation_segmentation"),d=this.landmarkModel.execute(a,c),[4,this.tensorsToPoseLandmarksAndSegmentation(d)];case 1:return(f=$.sent())==null?(gt(d),gt(a),[2,null]):(p=f.landmarks,g=f.auxiliaryLandmarks,y=f.poseScore,x=f.worldLandmarks,w=f.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(s,e,o,l,p,g,x,w)]);case 2:return S=$.sent(),gt(d),gt(a),[2,Et({poseScore:y},S)]}})})},n.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,t,s,r,a,o,l,c){return it(this,void 0,void 0,function(){var d,f,p,g,y,x;return ot(this,function(w){return d=tC(a,s),f=tC(o,s),p=ZS(d,t),g=ZS(f,t),y=function(S,$){for(var N=[],I=0,_=S;I<_.length;I++){var O=_[I],M=O.x,W=O.y,G=$.rotation,F=Math.cos(G)*M-Math.sin(G)*W,B=Math.sin(G)*M+Math.cos(G)*W,D=Et({},O);D.x=F,D.y=B,N.push(D)}return N}(l,t),x=null,this.enableSegmentation&&(x=Ge(function(){var S=c.shape,$=S[0],N=S[1],I=function(M){var W=PE(new Array(16).fill(0));W[0][0]=Bn(M,0,0),W[1][0]=-Bn(M,0,1),W[2][0]=Bn(M,0,2),W[3][0]=-Bn(M,0,3),W[0][2]=Bn(M,2,0),W[1][2]=-Bn(M,2,1),W[2][2]=Bn(M,2,2),W[3][2]=-Bn(M,2,3),W[0][1]=-Bn(M,1,0),W[1][1]=Bn(M,1,1),W[2][1]=-Bn(M,1,2),W[3][1]=Bn(M,1,3),W[0][3]=-Bn(M,3,0),W[1][3]=Bn(M,3,1),W[2][3]=-Bn(M,3,2),W[3][3]=Bn(M,3,3);for(var G=M[0][0]*W[0][0]+M[1][0]*W[0][1]+M[2][0]*W[0][2]+M[3][0]*W[0][3],F=0;F<W.length;F++)for(var B=0;B<W.length;B++)W[F][B]/=G;return W}(r),_=Xs(OE(I,{width:N,height:$},e),[1,8]),O=[1,$,N,1];return bt(ho.transform(de(c,O),_,"bilinear","constant",0,[e.height,e.width]),[0,3])}),gt(c)),[2,{landmarks:p,auxiliaryLandmarks:g,worldLandmarks:y,segmentationMask:x}]})})},n.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return it(this,void 0,void 0,function(){var t,s,r,a,o,l,c,d,f,p,g,y,x;return ot(this,function(w){switch(w.label){case 0:return t=e[0],s=e[1],r=e[2],a=e[3],o=this.enableSegmentation?e[4]:null,[4,s.data()];case 1:return(l=w.sent()[0])<.5?[2,null]:[4,nC(t,dse)];case 2:return[4,Qne(w.sent(),r,fse)];case 3:return c=w.sent(),d=c.slice(0,33),f=c.slice(33,35),[4,nC(a,hse)];case 4:return p=w.sent(),g=p.slice(0,33),y=function(S,$,N){for(var I=[],_=0;_<S.length;_++){var O=Et({},$[_]);O.score=S[_].score,I.push(O)}return I}(d,g),x=this.enableSegmentation?function(S,$,N){return Ge(function(){var I=bt(S,[0]),_=I.shape[2];if(_===1){var O=I;switch($.activation){case"none":break;case"sigmoid":O=ia(O);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat($.activation,")"))}var M=O;return bt(M,[2])}throw new Error("Unsupported number of tensor channels ".concat(_))})}(o,yse):null,[2,{landmarks:d,auxiliaryLandmarks:f,poseScore:l,worldLandmarks:y,segmentationMask:x}]}})})},n.prototype.poseLandmarksToRoi=function(e,t){return sC(Sg(eC(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,aC)},n.prototype.poseLandmarkFiltering=function(e,t,s,r){var a,o,l;if(this.timestamp!=null&&this.enableSmoothing){var c=Sg(eC(t),r,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});this.visibilitySmoothingFilterActual==null&&(this.visibilitySmoothingFilterActual=new rC(iC)),a=this.visibilitySmoothingFilterActual.apply(e),this.visibilitySmoothingFilterAuxiliary==null&&(this.visibilitySmoothingFilterAuxiliary=new rC(iC)),o=this.visibilitySmoothingFilterAuxiliary.apply(t),l=this.visibilitySmoothingFilterActual.apply(s),this.landmarksSmoothingFilterActual==null&&(this.landmarksSmoothingFilterActual=new Ng(pse)),a=this.landmarksSmoothingFilterActual.apply(a,this.timestamp,r,!0,c),this.landmarksSmoothingFilterAuxiliary==null&&(this.landmarksSmoothingFilterAuxiliary=new Ng(mse)),o=this.landmarksSmoothingFilterAuxiliary.apply(o,this.timestamp,r,!0,c),this.worldLandmarksSmoothingFilterActual==null&&(this.worldLandmarksSmoothingFilterActual=new Ng(gse)),l=this.worldLandmarksSmoothingFilterActual.apply(s,this.timestamp)}else a=e,o=t,l=s;return{actualLandmarksFiltered:a,auxiliaryLandmarksFiltered:o,actualWorldLandmarksFiltered:l}},n}();function Sse(n){return it(this,void 0,void 0,function(){var e,t,s,r,a,o;return ot(this,function(l){switch(l.label){case 0:return e=function(c){var d=Et({},c??ku);if(d.enableSmoothing==null&&(d.enableSmoothing=ku.enableSmoothing),d.enableSegmentation==null&&(d.enableSegmentation=ku.enableSegmentation),d.smoothSegmentation==null&&(d.smoothSegmentation=ku.smoothSegmentation),d.modelType==null&&(d.modelType=ku.modelType),d.detectorModelUrl==null&&(d.detectorModelUrl=ku.detectorModelUrl),d.landmarkModelUrl==null)switch(d.modelType){case"lite":d.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":d.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;case"full":default:d.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return d}(n),t=typeof e.detectorModelUrl=="string"&&e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,s=typeof e.landmarkModelUrl=="string"&&e.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([Gu(e.detectorModelUrl,{fromTFHub:t}),Gu(e.landmarkModelUrl,{fromTFHub:s})])];case 1:return r=l.sent(),a=r[0],o=r[1],[2,new wse(a,o,e.enableSmoothing,e.enableSegmentation,e.smoothSegmentation,e.modelType)]}})})}var po,_r,BE=function(){function n(e){(function(t){if(t.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(t.maxTracks));if(t.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(t.maxAge));if(t.keypointTrackerParams!==void 0){if(t.keypointTrackerParams.keypointConfidenceThreshold<0||t.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(t.keypointTrackerParams.keypointConfidenceThreshold));if(t.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(t.keypointTrackerParams.minNumberOfKeypoints));for(var s=0,r=t.keypointTrackerParams.keypointFalloff;s<r.length;s++){var a=r[s];if(a<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(a))}}})(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return n.prototype.apply=function(e,t){this.filterOldTracks(t);var s=this.computeSimilarity(e);return this.assignTracks(e,s,t),this.updateTracks(t),e},n.prototype.getTracks=function(){return this.tracks.slice()},n.prototype.getTrackIDs=function(){return new Set(this.tracks.map(function(e){return e.id}))},n.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter(function(s){return e-s.lastTimestamp<=t.maxAge})},n.prototype.assignTracks=function(e,t,s){for(var r=Array.from(Array(t[0].length).keys()),a=[],o=0,l=Array.from(Array(e.length).keys());o<l.length;o++){var c=l[o];if(r.length!==0){for(var d=-1,f=-1,p=0,g=r;p<g.length;p++){var y=g[p],x=t[c][y];x>=this.minSimilarity&&x>f&&(d=y,f=x)}if(d>=0){var w=this.tracks[d];w=Object.assign(w,this.createTrack(e[c],s,w.id)),e[c].id=w.id;var S=r.indexOf(d);r.splice(S,1)}else a.push(c)}else a.push(c)}for(var $=0,N=a;$<N.length;$++){c=N[$];var I=this.createTrack(e[c],s);this.tracks.push(I),e[c].id=I.id}},n.prototype.updateTracks=function(e){this.tracks.sort(function(t,s){return s.lastTimestamp-t.lastTimestamp}),this.tracks=this.tracks.slice(0,this.maxTracks)},n.prototype.createTrack=function(e,t,s){var r={id:s||this.nextTrackID(),lastTimestamp:t,keypoints:co([],e.keypoints,!0).map(function(a){return Et({},a)})};return e.box!==void 0&&(r.box=Et({},e.box)),r},n.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},n.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter(function(s){return!e.includes(s.id)})},n.prototype.reset=function(){this.tracks=[]},n}(),Cse=function(n){function e(t){return n.call(this,t)||this}return RE(e,n),e.prototype.computeSimilarity=function(t){var s=this;return t.length===0||this.tracks.length===0?[[]]:t.map(function(r){return s.tracks.map(function(a){return s.iou(r,a)})})},e.prototype.iou=function(t,s){var r=Math.max(t.box.xMin,s.box.xMin),a=Math.max(t.box.yMin,s.box.yMin),o=Math.min(t.box.xMax,s.box.xMax),l=Math.min(t.box.yMax,s.box.yMax);if(r>=o||a>=l)return 0;var c=(o-r)*(l-a);return c/(t.box.width*t.box.height+s.box.width*s.box.height-c)},e}(BE),$se=function(n){function e(t){var s=n.call(this,t)||this;return s.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,s.keypointFalloff=t.keypointTrackerParams.keypointFalloff,s.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,s}return RE(e,n),e.prototype.computeSimilarity=function(t){if(t.length===0||this.tracks.length===0)return[[]];for(var s=[],r=0,a=t;r<a.length;r++){for(var o=a[r],l=[],c=0,d=this.tracks;c<d.length;c++){var f=d[c];l.push(this.oks(o,f))}s.push(l)}return s},e.prototype.oks=function(t,s){for(var r=this.area(s.keypoints)+1e-6,a=0,o=0,l=0;l<t.keypoints.length;++l){var c=t.keypoints[l],d=s.keypoints[l];if(!(c.score<this.keypointThreshold||d.score<this.keypointThreshold)){o+=1;var f=Math.pow(c.x-d.x,2)+Math.pow(c.y-d.y,2),p=2*this.keypointFalloff[l];a+=Math.exp(-1*f/(2*r*Math.pow(p,2)))}}return o<this.minNumKeyoints?0:a/o},e.prototype.area=function(t){var s=this,r=t.filter(function(c){return c.score>s.keypointThreshold}),a=Math.min.apply(Math,co([1],r.map(function(c){return c.x}),!1)),o=Math.max.apply(Math,co([0],r.map(function(c){return c.x}),!1)),l=Math.min.apply(Math,co([1],r.map(function(c){return c.y}),!1));return(o-a)*(Math.max.apply(Math,co([0],r.map(function(c){return c.y}),!1))-l)},e}(BE);function Tse(n){switch(n){case _r.BlazePose:return Gc.reduce(function(e,t,s){return e[t]=s,e},{});case _r.PoseNet:case _r.MoveNet:return Or.reduce(function(e,t,s){return e[t]=s,e},{});default:throw new Error("Model ".concat(n," is not supported."))}}(function(n){n.Keypoint="keypoint",n.BoundingBox="boundingBox"})(po||(po={})),function(n){n.MoveNet="MoveNet",n.BlazePose="BlazePose",n.PoseNet="PoseNet"}(_r||(_r={}));var oC=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],ME={modelType:"SinglePose.Lightning",enableSmoothing:!0},uC={},lC={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},Eg={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},cC={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function Nse(n,e,t,s){for(var r={},a=0,o=Or;a<o.length;a++){var l=o[a];r[l]=[e[t[l]].y*s.height,e[t[l]].x*s.width]}if(function(N,I){return(N[I.left_hip].score>.2||N[I.right_hip].score>.2)&&(N[I.left_shoulder].score>.2||N[I.right_shoulder].score>.2)}(e,t)){var c=(r.left_hip[0]+r.right_hip[0])/2,d=(r.left_hip[1]+r.right_hip[1])/2,f=function(N,I,_,O,M){for(var W=["left_shoulder","right_shoulder","left_hip","right_hip"],G=0,F=0,B=0;B<W.length;B++)(le=Math.abs(O-_[W[B]][0]))>G&&(G=le),(ne=Math.abs(M-_[W[B]][1]))>F&&(F=ne);for(var D=0,Q=0,re=0,he=Object.keys(_);re<he.length;re++){var le,ne,ge=he[re];N[I[ge]].score<.2||((le=Math.abs(O-_[ge][0]))>D&&(D=le),(ne=Math.abs(M-_[ge][1]))>Q&&(Q=ne))}return[G,F,D,Q]}(e,t,r,c,d),p=f[0],g=f[1],y=f[2],x=f[3],w=Math.max(1.9*g,1.9*p,1.2*y,1.2*x),S=[c-(w=Math.min(w,Math.max(d,s.width-d,c,s.height-c))),d-w];if(w>Math.max(s.width,s.height)/2)return vy(n==null,s);var $=2*w;return{yMin:S[0]/s.height,xMin:S[1]/s.width,yMax:(S[0]+$)/s.height,xMax:(S[1]+$)/s.width,height:(S[0]+$)/s.height-S[0]/s.height,width:(S[1]+$)/s.width-S[1]/s.width}}return vy(n==null,s)}function vy(n,e){var t,s,r,a;return n?e.width>e.height?(t=1,s=e.height/e.width,r=0,a=(e.width/2-e.height/2)/e.width):(t=e.width/e.height,s=1,r=(e.height/2-e.width/2)/e.height,a=0):e.width>e.height?(t=e.width/e.height,s=1,r=(e.height/2-e.width/2)/e.height,a=0):(t=1,s=e.height/e.width,r=0,a=(e.width/2-e.height/2)/e.width),{yMin:r,xMin:a,yMax:r+t,xMax:a+s,height:t,width:s}}function Ese(n){var e,t=n==null?ME:Et({},n);if(t.modelType==null)t.modelType="SinglePose.Lightning";else if(oC.indexOf(t.modelType)<0)throw new Error("Invalid architecture ".concat(t.modelType,". ")+"Should be one of ".concat(oC));if(t.enableSmoothing==null&&(t.enableSmoothing=!0),t.minPoseScore!=null&&(t.minPoseScore<0||t.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(t.multiPoseMaxDimension!=null&&(t.multiPoseMaxDimension%32!=0||t.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if(t.modelType==="MultiPose.Lightning"&&t.enableTracking==null&&(t.enableTracking=!0),t.modelType==="MultiPose.Lightning"&&t.enableTracking===!0)if(t.trackerType==null&&(t.trackerType=po.BoundingBox),t.trackerType===po.Keypoint)t.trackerConfig!=null?t.trackerConfig=function(s){var r=dC(Eg,s);return r.keypointTrackerParams=Et({},Eg.keypointTrackerParams),s.keypointTrackerParams!=null&&(s.keypointTrackerParams.keypointConfidenceThreshold!=null&&(r.keypointTrackerParams.keypointConfidenceThreshold=s.keypointTrackerParams.keypointConfidenceThreshold),s.keypointTrackerParams.keypointFalloff!=null&&(r.keypointTrackerParams.keypointFalloff=s.keypointTrackerParams.keypointFalloff),s.keypointTrackerParams.minNumberOfKeypoints!=null&&(r.keypointTrackerParams.minNumberOfKeypoints=s.keypointTrackerParams.minNumberOfKeypoints)),r}(t.trackerConfig):t.trackerConfig=Eg;else{if(t.trackerType!==po.BoundingBox)throw new Error("Tracker type not supported by MoveNet");t.trackerConfig!=null?t.trackerConfig=(e=t.trackerConfig,dC(cC,e)):t.trackerConfig=cC}return t}function dC(n,e){var t={maxTracks:n.maxTracks,maxAge:n.maxAge,minSimilarity:n.minSimilarity};return e.maxTracks!=null&&(t.maxTracks=e.maxTracks),e.maxAge!=null&&(t.maxAge=e.maxAge),e.minSimilarity!=null&&(t.minSimilarity=e.minSimilarity),t}var kse=function(){function n(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=Tse(_r.MoveNet),t.modelType==="SinglePose.Lightning"?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):t.modelType==="SinglePose.Thunder"&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel=t.modelType==="MultiPose.Lightning",this.multiPoseModel||(this.keypointFilter=new by(lC),this.cropRegionFilterYMin=new Ja(.9),this.cropRegionFilterXMin=new Ja(.9),this.cropRegionFilterYMax=new Ja(.9),this.cropRegionFilterXMax=new Ja(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===po.Keypoint?this.tracker=new $se(t.trackerConfig):t.trackerType===po.BoundingBox&&(this.tracker=new Cse(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return n.prototype.runSinglePersonPoseModel=function(e){return it(this,void 0,void 0,function(){var t,s,r,a,o;return ot(this,function(l){switch(l.label){case 0:if((t=this.moveNetModel.execute(e)).shape.length!==4||t.shape[0]!==1||t.shape[1]!==1||t.shape[2]!==17||t.shape[3]!==3)throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return Bu()==="webgpu"?[3,1]:(s=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:s=l.sent(),l.label=3;case 3:for(t.dispose(),r={keypoints:[],score:0},a=0,o=0;o<17;++o)r.keypoints[o]={y:s[3*o],x:s[3*o+1],score:s[3*o+2]},r.keypoints[o].score>.2&&(++a,r.score+=r.keypoints[o].score);return a>0&&(r.score/=a),[2,r]}})})},n.prototype.runMultiPersonPoseModel=function(e){return it(this,void 0,void 0,function(){var t,s,r,a,o,l,c,d;return ot(this,function(f){switch(f.label){case 0:if((t=this.moveNetModel.execute(e)).shape.length!==3||t.shape[0]!==1||t.shape[2]!==56)throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return Bu()==="webgpu"?[3,1]:(s=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:s=f.sent(),f.label=3;case 3:for(t.dispose(),r=[],a=s.length/56,o=0;o<a;++o)for(r[o]={keypoints:[]},l=56*o+51,r[o].box={yMin:s[l],xMin:s[l+1],yMax:s[l+2],xMax:s[l+3],width:s[l+3]-s[l+1],height:s[l+2]-s[l]},c=56*o+55,r[o].score=s[c],r[o].keypoints=[],d=0;d<17;++d)r[o].keypoints[d]={y:s[56*o+3*d],x:s[56*o+3*d+1],score:s[56*o+3*d+2]};return[2,r]}})})},n.prototype.estimatePoses=function(e,t,s){return t===void 0&&(t=uC),it(this,void 0,void 0,function(){var r,a,o,l,c,d;return ot(this,function(f){switch(f.label){case 0:return t=function(p){return p==null?uC:Et({},p)}(t),e==null?(this.reset(),[2,[]]):(s==null?LE(e)&&(s=1e6*e.currentTime):s*=1e3,r=hb(e),a=ju(r),o=$s(r,0),e instanceof Mt||r.dispose(),l=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(o,a,s)]);case 1:return l=f.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(o,a,s)];case 3:l=f.sent(),f.label=4;case 4:for(c=0;c<l.length;++c)for(d=0;d<l[c].keypoints.length;++d)l[c].keypoints[d].name=Or[d],l[c].keypoints[d].y*=a.height,l[c].keypoints[d].x*=a.width;return[2,l]}})})},n.prototype.estimateSinglePose=function(e,t,s){return it(this,void 0,void 0,function(){var r,a,o,l,c=this;return ot(this,function(d){switch(d.label){case 0:return this.cropRegion||(this.cropRegion=vy(this.cropRegion==null,t)),r=Ge(function(){var f=Xs([[c.cropRegion.yMin,c.cropRegion.xMin,c.cropRegion.yMax,c.cropRegion.xMax]]),p=pa([1],"int32"),g=[c.modelInputResolution.height,c.modelInputResolution.width];return kt(ho.cropAndResize(e,f,p,g,"bilinear",0),"int32")}),e.dispose(),[4,this.runSinglePersonPoseModel(r)];case 1:if(a=d.sent(),r.dispose(),a.score<this.minPoseScore)return this.reset(),[2,[]];for(o=0;o<a.keypoints.length;++o)a.keypoints[o].y=this.cropRegion.yMin+a.keypoints[o].y*this.cropRegion.height,a.keypoints[o].x=this.cropRegion.xMin+a.keypoints[o].x*this.cropRegion.width;return s!=null&&this.enableSmoothing&&(a.keypoints=this.keypointFilter.apply(a.keypoints,s,1)),l=Nse(this.cropRegion,a.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(l),[2,[a]]}})})},n.prototype.estimateMultiplePoses=function(e,t,s){return it(this,void 0,void 0,function(){var r,a,o,l,c,d,f,p,g,y,x,w=this;return ot(this,function(S){switch(S.label){case 0:return t.width>t.height?(a=this.multiPoseMaxDimension,o=Math.round(this.multiPoseMaxDimension*t.height/t.width),r=ho.resizeBilinear(e,[o,a]),c=a,d=32*Math.ceil(o/32),l=ii(r,[[0,0],[0,d-o],[0,0],[0,0]])):(a=Math.round(this.multiPoseMaxDimension*t.width/t.height),o=this.multiPoseMaxDimension,r=ho.resizeBilinear(e,[o,a]),c=32*Math.ceil(a/32),d=o,l=ii(r,[[0,0],[0,0],[0,c-a],[0,0]])),r.dispose(),e.dispose(),f=kt(l,"int32"),l.dispose(),[4,this.runMultiPersonPoseModel(f)];case 1:for(p=S.sent(),f.dispose(),p=p.filter(function($){return $.score>=w.minPoseScore}),y=0;y<p.length;++y)for(g=0;g<p[y].keypoints.length;++g)p[y].keypoints[g].y*=d/o,p[y].keypoints[g].x*=c/a;if(this.enableTracking&&(this.tracker.apply(p,s),this.enableSmoothing)){for(y=0;y<p.length;++y)this.keypointFilterMap.has(p[y].id)||this.keypointFilterMap.set(p[y].id,new by(lC)),p[y].keypoints=this.keypointFilterMap.get(p[y].id).apply(p[y].keypoints,s,1);x=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach(function($,N){x.has(N)||w.keypointFilterMap.delete(N)})}return[2,p]}})})},n.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),s=this.cropRegionFilterXMin.apply(e.xMin),r=this.cropRegionFilterYMax.apply(e.yMax),a=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:s,yMax:r,xMax:a,height:r-t,width:a-s}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},n.prototype.dispose=function(){this.moveNetModel.dispose()},n.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},n.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},n}();function Rse(n){return n===void 0&&(n=ME),it(this,void 0,void 0,function(){var e,t,s,r;return ot(this,function(a){switch(a.label){case 0:return e=Ese(n),s=!0,e.modelUrl?(s=typeof e.modelUrl=="string"&&e.modelUrl.indexOf("https://tfhub.dev")>-1,[4,Gu(e.modelUrl,{fromTFHub:s})]):[3,2];case 1:return t=a.sent(),[3,4];case 2:return r=void 0,e.modelType==="SinglePose.Lightning"?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":e.modelType==="SinglePose.Thunder"?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":e.modelType==="MultiPose.Lightning"&&(r="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,Gu(r,{fromTFHub:s})];case 3:t=a.sent(),a.label=4;case 4:return Bu()==="webgl"&&ee().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new kse(t,e)]}})})}var hC={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},fC=["MobileNetV1","ResNet50"],pC={MobileNetV1:[8,16],ResNet50:[16]},Ise=[8,16,32],mC={MobileNetV1:[.5,.75,1],ResNet50:[1]},gC=[1,2,4],yC={maxPoses:1,flipHorizontal:!1},_se={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},Ase=[-123.15,-115.9,-103.06];function kg(n){return Math.floor(n/2)}var Dse=function(){function n(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return n.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},n.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},n.prototype.empty=function(){return this.numberOfElements===-1},n.prototype.size=function(){return this.numberOfElements+1},n.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},n.prototype.max=function(){return this.priorityQueue[0]},n.prototype.swim=function(e){for(;e>0&&this.less(kg(e),e);)this.exchange(e,kg(e)),e=kg(e)},n.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},n.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},n.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},n.prototype.exchange=function(e,t){var s=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=s},n}();function Ose(n,e,t,s,r,a){for(var o=a.shape,l=o[0],c=o[1],d=!0,f=Math.max(t-r,0),p=Math.min(t+r+1,l),g=f;g<p;++g){for(var y=Math.max(s-r,0),x=Math.min(s+r+1,c),w=y;w<x;++w)if(a.get(g,w,n)>e){d=!1;break}if(!d)break}return d}function Pse(n){return it(this,void 0,void 0,function(){return ot(this,function(e){return[2,Promise.all(n.map(function(t){return t.buffer()}))]})})}function UE(n,e,t,s){return{y:s.get(n,e,t),x:s.get(n,e,t+17)}}function VE(n,e,t){var s=UE(n.heatmapY,n.heatmapX,n.id,t),r=s.y,a=s.x;return{x:n.heatmapX*e+a,y:n.heatmapY*e+r}}function WE(n,e,t,s){var r=t.x,a=t.y;return n.some(function(o){var l,c,d,f,p,g,y=o.keypoints;return l=a,c=r,d=y[s].y,f=y[s].x,(p=d-l)*p+(g=f-c)*g<=e})}var xC=Or.reduce(function(n,e,t){return n[e]=t,n},{}),GE=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map(function(n){var e=n[0],t=n[1];return[xC[e],xC[t]]}),Rg=GE.map(function(n){return n[1]}),bC=GE.map(function(n){return n[0]});function vC(n,e,t){return n<e?e:n>t?t:n}function Ig(n,e,t,s){return{y:vC(Math.round(n.y/e),0,t-1),x:vC(Math.round(n.x/e),0,s-1)}}function wC(n,e){return{x:n.x+e.x,y:n.y+e.y}}function SC(n,e,t,s,r,a,o,l){l===void 0&&(l=2);for(var c=s.shape,d=c[0],f=c[1],p={y:e.y,x:e.x},g=wC(p,function(N,I,_){var O=_.shape[2]/2;return{y:_.get(I.y,I.x,N),x:_.get(I.y,I.x,O+N)}}(n,Ig(p,a,d,f),o)),y=0;y<l;y++){var x=Ig(g,a,d,f),w=UE(x.y,x.x,t,r);g=wC({x:x.x*a,y:x.y*a},{x:w.x,y:w.y})}var S=Ig(g,a,d,f),$=s.get(S.y,S.x,t);return{y:g.y,x:g.x,name:Or[t],score:$}}function Fse(n,e,t,s,r,a){var o=e.shape[2],l=Rg.length,c=new Array(o),d=n.part,f=n.score,p=VE(d,s,t);c[d.id]={score:f,name:Or[d.id],y:p.y,x:p.x};for(var g=l-1;g>=0;--g){var y=Rg[g],x=bC[g];c[y]&&!c[x]&&(c[x]=SC(g,c[y],x,e,t,s,a))}for(g=0;g<l;++g)y=bC[g],x=Rg[g],c[y]&&!c[x]&&(c[x]=SC(g,c[y],x,e,t,s,r));return c}function Lse(n,e,t){return t.reduce(function(s,r,a){var o=r.y,l=r.x,c=r.score;return WE(n,e,{y:o,x:l},a)||(s+=c),s},0)/t.length}function zse(n,e,t,s,r,a,o,l){return o===void 0&&(o=.5),l===void 0&&(l=20),it(this,void 0,void 0,function(){var c,d,f,p,g,y,x,w,S,$,N,I;return ot(this,function(_){switch(_.label){case 0:return[4,Pse([n,e,t,s])];case 1:for(c=_.sent(),d=c[0],f=c[1],p=c[2],g=c[3],y=[],x=function(O,M,W){for(var G=W.shape,F=G[0],B=G[1],D=G[2],Q=new Dse(F*B*D,function(ge){return ge.score}),re=0;re<F;++re)for(var he=0;he<B;++he)for(var le=0;le<D;++le){var ne=W.get(re,he,le);ne<O||Ose(le,ne,re,he,M,W)&&Q.enqueue({score:ne,part:{heatmapY:re,heatmapX:he,id:le}})}return Q}(o,1,d),w=l*l;y.length<a&&!x.empty();)S=x.dequeue(),$=VE(S.part,r,f),WE(y,w,$,S.part.id)||(N=Fse(S,d,f,r,p,g),I=Lse(y,w,N),y.push({keypoints:N,score:I}));return[2,y]}})})}function HE(){for(var n,e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];switch(e.length){case 0:n="fn main() ";break;case 1:n="fn main(".concat(e[0]," : i32)");break;default:throw Error("Unreachable")}return n}var Bse=function(){function n(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=Re(this.outputShape),this.dispatch=$e(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return n.prototype.getUserCode=function(){return`
        `.concat(HE("index"),` {
          if (index < uniforms.size) {
            let y = B[index * 2];
            let x = B[index * 2 + 1];
            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;
            result[index] = A[outIndex];
          }
        }
        `)},n}();function Mse(n,e){if(Mu()instanceof al)return function(t,s){var r=Mu(),a=new Bse(s.shape),o=r.runWebGPUProgram(a,[t,s],"float32");return ls().makeTensorFromTensorInfo(o)}(n,e);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}var Use=function(){function n(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,e.length!==2||e[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var t=[e[0],1];this.dispatchLayout=Re(t),this.dispatch=$e(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return n.prototype.getUserCode=function(){return`
    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {
      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;
      let outIndexX = outIndexY + uniforms.bShape.z;
      let outY = i32(B[outIndexY]);
      let outX = i32(B[outIndexX]);
      return vec2<i32>(outY, outX);
    }

    `.concat(HE("index"),` {
      if (index < uniforms.size) {
        let indexY = index * `).concat(this.supportedLastDimension,`;
        let indexX = indexY + 1;
        let heatmapY = A[indexY];
        let heatmapX = A[indexX];
        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);
        result[indexY] = f32(out[0]);
        result[indexX] = f32(out[1]);
      }
    }
    `)},n}();function Vse(n,e){if(Mu()instanceof al)return function(t,s){var r=Mu(),a=new Use(t.shape),o=r.runWebGPUProgram(a,[t,s],"float32");return ls().makeTensorFromTensorInfo(o)}(n,e);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}function jE(n){var e=n.shape,t=e[0],s=e[1],r=e[2];return Ge(function(){var a,o,l=de(n,[t*s,r]),c=z$(l,0),d=$s(et(c,Je(s,"int32")),1),f=$s((a=c,o=s,Ge(function(){var p=et(a,Je(o,"int32"));return je(a,be(p,Je(o,"int32")))})),1);return dn([d,f],1)})}function Wse(n,e,t){return Ge(function(){var s=function(r,a){for(var o=[],l=0;l<Or.length;l++){var c=r.get(l,0).valueOf(),d=r.get(l,1).valueOf(),f=Gse(c,d,l,a),p=f.x,g=f.y;o.push(g),o.push(p)}return Xs(o,[Or.length,2])}(n,t);return Pe(kt(be(n.toTensor(),Je(e,"int32")),"float32"),s)})}function Gse(n,e,t,s){return{y:s.get(n,e,t),x:s.get(n,e,t+Or.length)}}function Hse(n,e,t){return it(this,void 0,void 0,function(){var s,r,a,o,l,c,d,f,p,g;return ot(this,function(y){switch(y.label){case 0:return s=0,r=jE(n),[4,Promise.all([n.buffer(),e.buffer(),r.buffer()])];case 1:return a=y.sent(),o=a[0],l=a[1],c=a[2],[4,(d=Wse(c,t,l)).buffer()];case 2:return f=y.sent(),p=Array.from(function(x,w){for(var S=w.shape[0],$=new Float32Array(S),N=0;N<S;N++){var I=w.get(N,0),_=w.get(N,1);$[N]=x.get(I,_,N)}return $}(o,c)),g=p.map(function(x,w){return s+=x,{y:f.get(w,0),x:f.get(w,1),score:x,name:Or[w]}}),r.dispose(),d.dispose(),[2,{keypoints:g,score:s/g.length}]}})})}function jse(n,e,t){return it(this,void 0,void 0,function(){var s,r,a;return ot(this,function(o){return s=jE(n),r=function(l,c,d){return Ge(function(){var f=Vse(l,d);return Pe(kt(be(l,Je(c,"int32")),"float32"),f)})}(s,t,e),a=Mse(n,s),[2,[r,a]]})})}function CC(n,e){return(n-1)%e==0}var $C="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",TC="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function NC(n,e){return function(t,s){return(t-1)%s==0}(n,e)?n:Math.floor(n/e)*e+1}var EC=function(){function n(e,t){this.posenetModel=e;var s=this.posenetModel.inputs[0].shape;z(s[1]===-1&&s[2]===-1,function(){return"Input shape [".concat(s[1],", ").concat(s[2],"] ")+"must both be equal to or -1"});var r,a,o=(r=t.inputResolution,a=t.outputStride,{height:NC(r.height,a),width:NC(r.width,a)});(function(l){z(Ise.indexOf(l)>=0,function(){return"outputStride of ".concat(l," is invalid. ")+"It must be either 8 or 16."})})(t.outputStride),function(l,c){z(CC(l.height,c),function(){return"height of ".concat(l.height," is invalid for output stride ")+"".concat(c,".")}),z(CC(l.width,c),function(){return"width of ".concat(l.width," is invalid for output stride ")+"".concat(c,".")})}(o,t.outputStride),this.inputResolution=o,this.outputStride=t.outputStride,this.architecture=t.architecture}return n.prototype.estimatePoses=function(e,t){return t===void 0&&(t=yC),it(this,void 0,void 0,function(){return ot(this,function(s){return[2,this.estimatePosesGPU(e,t,!1)]})})},n.prototype.estimatePosesGPU=function(e,t,s){return t===void 0&&(t=yC),s===void 0&&(s=!1),it(this,void 0,void 0,function(){var r,a,o,l,c,d,f,p,g,y,x,w,S,$,N,I,_,O;return ot(this,function(M){switch(M.label){case 0:return r=function(W){var G=W;if(G.maxPoses==null&&(G.maxPoses=1),G.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(G.maxPoses,". Should be > 0."));if(G.maxPoses>1){if((G=Et(Et({},_se),G)).scoreThreshold<0||G.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(G.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(G.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(G.nmsRadius,"."))}return G}(t),e==null?[2,s?[[],[]]:[]]:(this.maxPoses=r.maxPoses,a=xy(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),o=a.imageTensor,l=a.padding,c=this.architecture==="ResNet50"?Pe(o,Ase):FE(o,[-1,1]),d=this.posenetModel.predict(c),this.architecture==="ResNet50"?(f=bt(d[2],[0]),p=bt(d[3],[0]),g=bt(d[0],[0]),y=bt(d[1],[0])):(f=bt(d[0],[0]),p=bt(d[1],[0]),g=bt(d[2],[0]),y=bt(d[3],[0])),x=ia(p),this.maxPoses!==1?[3,5]:s?[4,jse(x,f,this.outputStride)]:[3,2]);case 1:return S=M.sent(),N=S[0],$=S[1],w=[N,$],[3,4];case 2:return[4,Hse(x,f,this.outputStride)];case 3:N=M.sent(),w=[N],M.label=4;case 4:return[3,7];case 5:if(s)throw new Error("GPU renderer only supports single pose!");return[4,zse(x,f,g,y,this.outputStride,this.maxPoses,r.scoreThreshold,r.nmsRadius)];case 6:w=M.sent(),M.label=7;case 7:if(s){if(r.flipHorizontal===!0)throw new Error("flipHorizontal is not supported!");I=this.getCanvasInfo(ju(e),this.inputResolution,l)}else O=ju(e),_=function(W,G,F,B){var D=G.height,Q=G.width,re=D/(F.height*(1-B.top-B.bottom)),he=Q/(F.width*(1-B.left-B.right)),le=-B.top*F.height,ne=-B.left*F.width;if(he===1&&re===1&&le===0&&ne===0)return W;for(var ge=0,pe=W;ge<pe.length;ge++)for(var Se=0,q=pe[ge].keypoints;Se<q.length;Se++){var ue=q[Se];ue.x=(ue.x+ne)*he,ue.y=(ue.y+le)*re}return W}(w,O,this.inputResolution,l),r.flipHorizontal&&(_=function(W,G){for(var F=0,B=W;F<B.length;F++)for(var D=0,Q=B[F].keypoints;D<Q.length;D++){var re=Q[D];re.x=G.width-1-re.x}return W}(_,O));return o.dispose(),c.dispose(),gt(d),f.dispose(),p.dispose(),g.dispose(),y.dispose(),x.dispose(),[2,s?[w,I]:_]}})})},n.prototype.getCanvasInfo=function(e,t,s){var r=e.height,a=e.width,o=r/(t.height*(1-s.top-s.bottom)),l=a/(t.width*(1-s.left-s.right)),c=-s.top*t.height;return[-s.left*t.width,c,l,o,e.width,e.height]},n.prototype.dispose=function(){this.posenetModel.dispose()},n.prototype.reset=function(){},n}();function qse(n){return n===void 0&&(n=hC),it(this,void 0,void 0,function(){var e,t,s,r,a;return ot(this,function(o){switch(o.label){case 0:return(e=function(f){var p=f||hC;if(p.architecture==null&&(p.architecture="MobileNetV1"),fC.indexOf(p.architecture)<0)throw new Error("Invalid architecture ".concat(p.architecture,". ")+"Should be one of ".concat(fC));if(p.inputResolution==null&&(p.inputResolution={height:257,width:257}),p.outputStride==null&&(p.outputStride=16),pC[p.architecture].indexOf(p.outputStride)<0)throw new Error("Invalid outputStride ".concat(p.outputStride,". ")+"Should be one of ".concat(pC[p.architecture]," ")+"for architecture ".concat(p.architecture,"."));if(p.multiplier==null&&(p.multiplier=1),mC[p.architecture].indexOf(p.multiplier)<0)throw new Error("Invalid multiplier ".concat(p.multiplier,". ")+"Should be one of ".concat(mC[p.architecture]," ")+"for architecture ".concat(p.architecture,"."));if(p.quantBytes==null&&(p.quantBytes=4),gC.indexOf(p.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(p.quantBytes,". ")+"Should be one of ".concat(gC," ")+"for architecture ".concat(p.architecture,"."));if(p.architecture==="MobileNetV1"&&p.outputStride===32&&p.multiplier!==1)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return p}(n)).architecture!=="ResNet50"?[3,2]:(l=e.outputStride,c=e.quantBytes,d="model-stride".concat(l,".json"),t=c===4?TC+"float/"+d:TC+"quant".concat(c,"/")+d,[4,Gu(e.modelUrl||t)]);case 1:return s=o.sent(),[2,new EC(s,e)];case 2:return r=function(f,p,g){var y={1:"100",.75:"075",.5:"050"},x="model-stride".concat(f,".json");return g===4?$C+"float/".concat(y[p],"/")+x:$C+"quant".concat(g,"/").concat(y[p],"/")+x}(e.outputStride,e.multiplier,e.quantBytes),[4,Gu(e.modelUrl||r)];case 3:return a=o.sent(),[2,new EC(a,e)]}var l,c,d})})}function Xse(n,e){return it(this,void 0,void 0,function(){var t,s;return ot(this,function(r){switch(n){case _r.PoseNet:return[2,qse(e)];case _r.BlazePose:if(s=void 0,(t=e)!=null){if(t.runtime==="tfjs")return[2,Sse(e)];if(t.runtime==="mediapipe")return[2,Xne(e)];s=t.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(s));case _r.MoveNet:return[2,Rse(e)];default:throw new Error("".concat(n," is not a supported model name."))}})})}var Kse={modelType:{MULTIPOSE_LIGHTNING:"MultiPose.Lightning"}};const Tr={info:(n,...e)=>{console.log(`%c[INFO] ${n}`,"color: #3b82f6",...e)},warn:(n,...e)=>{console.warn(`%c[WARN] ${n}`,"color: #f59e0b",...e)},error:(n,...e)=>{console.error(`%c[ERROR] ${n}`,"color: #ef4444",...e)},success:(n,...e)=>{console.log(`%c[SUCCESS] ${n}`,"color: #10b981",...e)}},kC={eyes:(n,e)=>{const t=e.find(r=>r.name==="left_eye"),s=e.find(r=>r.name==="right_eye");t&&s&&(n.beginPath(),n.arc(t.x,t.y,10,0,2*Math.PI),n.arc(s.x,s.y,10,0,2*Math.PI),n.fillStyle="white",n.fill(),n.beginPath(),n.arc(t.x,t.y,4,0,2*Math.PI),n.arc(s.x,s.y,4,0,2*Math.PI),n.fillStyle="black",n.fill())},limbs:(n,e)=>{n.lineWidth=8,n.lineCap="round",n.lineJoin="round";const t=e.find(d=>d.name==="left_shoulder"),s=e.find(d=>d.name==="right_shoulder"),r=document.querySelector('[data-debug="true"]')!==null;if(t&&s){const d=(t.x+s.x)/2,f=(t.y+s.y)/2+20,p=Math.abs(t.x-s.x)*.7,g=r?2:4,y=p/(g-1);n.lineWidth=3;for(let x=0;x<g;x++){const w=d-p/2+x*y,S=12+Math.sin(x*.8)*8;n.beginPath(),n.moveTo(w,f);const $=6,N=r?1:2;for(let I=0;I<=N;I++){const _=I/N,O=w+Math.sin(_*Math.PI*2)*$,M=f+_*S;I===0?n.lineTo(O,M):n.quadraticCurveTo(w+Math.sin((I-.5)/N*Math.PI*2)*$*1.5,f+(I-.5)/N*S,O,M)}n.stroke()}n.lineWidth=8}const o=["left_wrist","left_elbow","left_shoulder","left_hip","left_knee","left_ankle"].map(d=>e.find(f=>f.name===d)).filter(Boolean);if(o.length>=3){n.beginPath(),n.moveTo(o[0].x,o[0].y);for(let d=1;d<o.length-1;d++){const f=(o[d].x+o[d+1].x)/2,p=(o[d].y+o[d+1].y)/2;n.quadraticCurveTo(o[d].x,o[d].y,f,p)}n.quadraticCurveTo(o[o.length-1].x,o[o.length-1].y,o[o.length-1].x,o[o.length-1].y),n.stroke()}const c=["right_wrist","right_elbow","right_shoulder","right_hip","right_knee","right_ankle"].map(d=>e.find(f=>f.name===d)).filter(Boolean);if(c.length>=3){n.beginPath(),n.moveTo(c[0].x,c[0].y);for(let d=1;d<c.length-1;d++){const f=(c[d].x+c[d+1].x)/2,p=(c[d].y+c[d+1].y)/2;n.quadraticCurveTo(c[d].x,c[d].y,f,p)}n.quadraticCurveTo(c[c.length-1].x,c[c.length-1].y,c[c.length-1].x,c[c.length-1].y),n.stroke()}}},Yse=()=>{const n=Rn.useRef(null),e=Rn.useRef(null),t=Rn.useRef(null),[s,r]=Rn.useState(null),[a,o]=Rn.useState(!1),[l,c]=Rn.useState(!1),[d,f]=Rn.useState({width:640,height:480}),[p,g]=Rn.useState(!0),[y,x]=Rn.useState([]),[w,S]=Rn.useState(!1),$=Rn.useCallback(()=>{if(t.current){const F=t.current.clientWidth,B=window.innerHeight-100;f({width:F,height:B})}},[]);Rn.useEffect(()=>((async()=>{Tr.info("Setting up TensorFlow.js"),g(!0);try{await gI(),Tr.info("TensorFlow.js is ready"),await mI("webgl"),Tr.info("Using backend:",Bu());const D="/dancing-creatures/models/movenet/multipose/lightning/1/model.json";Tr.info("Loading model from:",D);const Q={modelType:Kse.modelType.MULTIPOSE_LIGHTNING,modelUrl:D,enableSmoothing:!0,multiPoseMaxDimension:256,minPoseScore:.2},re=await Xse(_r.MoveNet,Q);Tr.success("Model loaded successfully"),r(re)}catch(B){Tr.error("Error setting up TensorFlow:",B)}finally{g(!1)}})(),()=>{s&&s.dispose()}),[]),Rn.useEffect(()=>($(),window.addEventListener("resize",$),()=>window.removeEventListener("resize",$)),[$]),Rn.useEffect(()=>((async()=>{try{const B=await navigator.mediaDevices.getUserMedia({video:!0}),D=n.current;D&&(D.srcObject=B,D.onloadedmetadata=()=>{D.play(),o(!0)})}catch(B){Tr.error("Error setting up camera:",B),g(!1)}})(),()=>{const B=n.current;B&&B.srcObject&&B.srcObject.getTracks().forEach(Q=>Q.stop())}),[]),Rn.useEffect(()=>{let F,B=!1,D=0,Q=null;const re=document.createElement("canvas");l&&(re.width=d.width,re.height=d.height,Q=re.getContext("2d",{willReadFrequently:!0}));const he=(ne,ge)=>{const pe=ne.find(q=>q.name==="nose"),Se=ge.find(q=>q.name==="nose");return!pe||!Se?1/0:Math.sqrt(Math.pow(pe.x-Se.x,2)+Math.pow(pe.y-Se.y,2))},le=async()=>{if(!s||!n.current||!e.current||!a||B||p){F=requestAnimationFrame(le);return}B=!0,D++;const ne=n.current,ge=e.current,pe=ge.getContext("2d");if(!pe){Tr.warn("Could not get canvas context"),B=!1,F=requestAnimationFrame(le);return}pe.clearRect(0,0,ge.width,ge.height);try{if(D%5===0){const Te=(await s.estimatePoses(ne,{maxPoses:2,flipHorizontal:!1,scoreThreshold:.3})).map(Be=>({keypoints:Be.keypoints.filter(St=>St.score&&St.score>.3).map(St=>({name:St.name||"unknown",x:ge.width-St.x/ne.videoWidth*ge.width,y:St.y/ne.videoHeight*ge.height,score:St.score}))})),ke=Date.now(),ve=[...y];Te.forEach(Be=>{let St=100,nt=-1;if(ve.forEach((Rt,mt)=>{const rn=he(Be.keypoints,Rt.keypoints);rn<St&&(St=rn,nt=mt)}),nt!==-1)ve[nt]={...ve[nt],keypoints:Be.keypoints,lastSeen:ke};else{const Rt=Math.floor(Math.random()*360);ve.push({id:Math.random().toString(36).substring(2,9),keypoints:Be.keypoints,lastSeen:ke,hue:Rt})}});const Xe=ve.filter(Be=>ke-Be.lastSeen<3e3);x(Xe)}if(y.forEach(ue=>{pe.strokeStyle=`hsla(${ue.hue}, 100%, 50%, 0.7)`,kC.limbs(pe,ue.keypoints),kC.eyes(pe,ue.keypoints)}),l&&w&&Q&&D%3===0)try{Q.clearRect(0,0,ge.width,ge.height),Q.save(),Q.scale(-1,1),Q.drawImage(ne,-ge.width,0,ge.width,ge.height),Q.restore(),y.forEach(ue=>{const Te=["nose","left_eye","right_eye","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee"];ue.keypoints.filter(ve=>Te.includes(ve.name)).forEach(ve=>{Q.beginPath(),Q.arc(ve.x,ve.y,3,0,2*Math.PI),Q.fillStyle=`hsl(${ue.hue}, 100%, 50%)`,Q.fill(),["nose","left_shoulder","right_shoulder"].includes(ve.name)&&(Q.fillStyle="white",Q.font="10px Arial",Q.fillText(ve.name,ve.x+5,ve.y-5))})}),pe.drawImage(re,0,0)}catch(ue){Tr.error("Debug rendering error, disabling debug mode:",ue),S(!1),c(!1)}}catch(Se){Tr.error("Error in pose estimation:",Se)}B=!1,F=requestAnimationFrame(le)};return le(),()=>{F&&cancelAnimationFrame(F)}},[s,a,l,w,d,p,y]);const N=Rn.useCallback(()=>{l?(S(!1),c(!1)):(c(!0),setTimeout(()=>{S(!0)},300))},[l]),I={width:"100vw",height:"100vh",display:"flex",flexDirection:"column",overflow:"hidden",position:"relative",backgroundColor:"#000"},_={position:"absolute",top:0,left:0,width:"100%",height:"100%"},O={position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",backgroundColor:"rgba(0,0,0,0.7)",color:"white",padding:"20px",borderRadius:"10px",textAlign:"center"},M={position:"absolute",bottom:"20px",right:"20px",zIndex:10},W={padding:"8px 16px",backgroundColor:"rgba(59, 130, 246, 0.7)",color:"white",border:"none",borderRadius:"4px",cursor:"pointer",backdropFilter:"blur(4px)"},G={position:"absolute",top:"10px",left:"50%",transform:"translateX(-50%)",color:"white",textShadow:"0 0 5px rgba(0,0,0,0.7)",fontSize:"1.2rem",fontWeight:"bold",opacity:.7,zIndex:10};return Ss.jsxs("div",{ref:t,style:I,"data-debug":l?"true":"false",children:[Ss.jsx("video",{ref:n,style:{display:"none"},width:d.width,height:d.height}),Ss.jsx("canvas",{ref:e,width:d.width,height:d.height,style:_}),p&&Ss.jsxs("div",{style:O,children:[Ss.jsx("p",{children:"Loading model..."}),Ss.jsx("p",{children:"This may take a moment"})]}),Ss.jsx("div",{style:M,children:Ss.jsx("button",{onClick:N,style:W,children:l?"Hide Debug":"Debug"})}),Ss.jsx("div",{style:G,children:"Dancing Creatures"})]})};function Qse(){return Ss.jsx("div",{className:"App",children:Ss.jsx(Yse,{})})}TR.createRoot(document.getElementById("root")).render(Ss.jsx(Rn.StrictMode,{children:Ss.jsx(Qse,{})}));
