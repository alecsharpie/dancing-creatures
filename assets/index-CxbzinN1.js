function xL(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const i=Object.getOwnPropertyDescriptor(s,r);i&&Object.defineProperty(n,r,i.get?i:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(r){if(r.ep)return;r.ep=!0;const i=t(r);fetch(r.href,i)}})();var lN=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function bL(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function wL(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),t}var Cw={exports:{}},Ip={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var uN;function vL(){if(uN)return Ip;uN=1;var n=Symbol.for("react.transitional.element"),e=Symbol.for("react.fragment");function t(s,r,i){var a=null;if(i!==void 0&&(a=""+i),r.key!==void 0&&(a=""+r.key),"key"in r){i={};for(var o in r)o!=="key"&&(i[o]=r[o])}else i=r;return r=i.ref,{$$typeof:n,type:s,key:a,ref:r!==void 0?r:null,props:i}}return Ip.Fragment=e,Ip.jsx=t,Ip.jsxs=t,Ip}var cN;function SL(){return cN||(cN=1,Cw.exports=vL()),Cw.exports}var xs=SL(),$w={exports:{}},wt={};/**
 * @license React
 * react.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var hN;function CL(){if(hN)return wt;hN=1;var n=Symbol.for("react.transitional.element"),e=Symbol.for("react.portal"),t=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),i=Symbol.for("react.consumer"),a=Symbol.for("react.context"),o=Symbol.for("react.forward_ref"),l=Symbol.for("react.suspense"),c=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator;function m(W){return W===null||typeof W!="object"?null:(W=p&&W[p]||W["@@iterator"],typeof W=="function"?W:null)}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},x=Object.assign,b={};function w(W,ne,ge){this.props=W,this.context=ne,this.refs=b,this.updater=ge||g}w.prototype.isReactComponent={},w.prototype.setState=function(W,ne){if(typeof W!="object"&&typeof W!="function"&&W!=null)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,W,ne,"setState")},w.prototype.forceUpdate=function(W){this.updater.enqueueForceUpdate(this,W,"forceUpdate")};function v(){}v.prototype=w.prototype;function $(W,ne,ge){this.props=W,this.context=ne,this.refs=b,this.updater=ge||g}var I=$.prototype=new v;I.constructor=$,x(I,w.prototype),I.isPureReactComponent=!0;var N=Array.isArray,E={H:null,A:null,T:null,S:null},_=Object.prototype.hasOwnProperty;function z(W,ne,ge,me,xe,$e){return ge=$e.ref,{$$typeof:n,type:W,key:ne,ref:ge!==void 0?ge:null,props:$e}}function P(W,ne){return z(W.type,ne,void 0,void 0,void 0,W.props)}function O(W){return typeof W=="object"&&W!==null&&W.$$typeof===n}function L(W){var ne={"=":"=0",":":"=2"};return"$"+W.replace(/[=:]/g,function(ge){return ne[ge]})}var D=/\/+/g;function G(W,ne){return typeof W=="object"&&W!==null&&W.key!=null?L(""+W.key):ne.toString(36)}function q(){}function ee(W){switch(W.status){case"fulfilled":return W.value;case"rejected":throw W.reason;default:switch(typeof W.status=="string"?W.then(q,q):(W.status="pending",W.then(function(ne){W.status==="pending"&&(W.status="fulfilled",W.value=ne)},function(ne){W.status==="pending"&&(W.status="rejected",W.reason=ne)})),W.status){case"fulfilled":return W.value;case"rejected":throw W.reason}}throw W}function Z(W,ne,ge,me,xe){var $e=typeof W;($e==="undefined"||$e==="boolean")&&(W=null);var Ne=!1;if(W===null)Ne=!0;else switch($e){case"bigint":case"string":case"number":Ne=!0;break;case"object":switch(W.$$typeof){case n:case e:Ne=!0;break;case d:return Ne=W._init,Z(Ne(W._payload),ne,ge,me,xe)}}if(Ne)return xe=xe(W),Ne=me===""?"."+G(W,0):me,N(xe)?(ge="",Ne!=null&&(ge=Ne.replace(D,"$&/")+"/"),Z(xe,ne,ge,"",function(Pe){return Pe})):xe!=null&&(O(xe)&&(xe=P(xe,ge+(xe.key==null||W&&W.key===xe.key?"":(""+xe.key).replace(D,"$&/")+"/")+Ne)),ne.push(xe)),1;Ne=0;var Me=me===""?".":me+":";if(N(W))for(var Fe=0;Fe<W.length;Fe++)me=W[Fe],$e=Me+G(me,Fe),Ne+=Z(me,ne,ge,$e,xe);else if(Fe=m(W),typeof Fe=="function")for(W=Fe.call(W),Fe=0;!(me=W.next()).done;)me=me.value,$e=Me+G(me,Fe++),Ne+=Z(me,ne,ge,$e,xe);else if($e==="object"){if(typeof W.then=="function")return Z(ee(W),ne,ge,me,xe);throw ne=String(W),Error("Objects are not valid as a React child (found: "+(ne==="[object Object]"?"object with keys {"+Object.keys(W).join(", ")+"}":ne)+"). If you meant to render a collection of children, use an array instead.")}return Ne}function H(W,ne,ge){if(W==null)return W;var me=[],xe=0;return Z(W,me,"","",function($e){return ne.call(ge,$e,xe++)}),me}function oe(W){if(W._status===-1){var ne=W._result;ne=ne(),ne.then(function(ge){(W._status===0||W._status===-1)&&(W._status=1,W._result=ge)},function(ge){(W._status===0||W._status===-1)&&(W._status=2,W._result=ge)}),W._status===-1&&(W._status=0,W._result=ne)}if(W._status===1)return W._result.default;throw W._result}var se=typeof reportError=="function"?reportError:function(W){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var ne=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof W=="object"&&W!==null&&typeof W.message=="string"?String(W.message):String(W),error:W});if(!window.dispatchEvent(ne))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",W);return}console.error(W)};function de(){}return wt.Children={map:H,forEach:function(W,ne,ge){H(W,function(){ne.apply(this,arguments)},ge)},count:function(W){var ne=0;return H(W,function(){ne++}),ne},toArray:function(W){return H(W,function(ne){return ne})||[]},only:function(W){if(!O(W))throw Error("React.Children.only expected to receive a single React element child.");return W}},wt.Component=w,wt.Fragment=t,wt.Profiler=r,wt.PureComponent=$,wt.StrictMode=s,wt.Suspense=l,wt.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=E,wt.act=function(){throw Error("act(...) is not supported in production builds of React.")},wt.cache=function(W){return function(){return W.apply(null,arguments)}},wt.cloneElement=function(W,ne,ge){if(W==null)throw Error("The argument must be a React element, but you passed "+W+".");var me=x({},W.props),xe=W.key,$e=void 0;if(ne!=null)for(Ne in ne.ref!==void 0&&($e=void 0),ne.key!==void 0&&(xe=""+ne.key),ne)!_.call(ne,Ne)||Ne==="key"||Ne==="__self"||Ne==="__source"||Ne==="ref"&&ne.ref===void 0||(me[Ne]=ne[Ne]);var Ne=arguments.length-2;if(Ne===1)me.children=ge;else if(1<Ne){for(var Me=Array(Ne),Fe=0;Fe<Ne;Fe++)Me[Fe]=arguments[Fe+2];me.children=Me}return z(W.type,xe,void 0,void 0,$e,me)},wt.createContext=function(W){return W={$$typeof:a,_currentValue:W,_currentValue2:W,_threadCount:0,Provider:null,Consumer:null},W.Provider=W,W.Consumer={$$typeof:i,_context:W},W},wt.createElement=function(W,ne,ge){var me,xe={},$e=null;if(ne!=null)for(me in ne.key!==void 0&&($e=""+ne.key),ne)_.call(ne,me)&&me!=="key"&&me!=="__self"&&me!=="__source"&&(xe[me]=ne[me]);var Ne=arguments.length-2;if(Ne===1)xe.children=ge;else if(1<Ne){for(var Me=Array(Ne),Fe=0;Fe<Ne;Fe++)Me[Fe]=arguments[Fe+2];xe.children=Me}if(W&&W.defaultProps)for(me in Ne=W.defaultProps,Ne)xe[me]===void 0&&(xe[me]=Ne[me]);return z(W,$e,void 0,void 0,null,xe)},wt.createRef=function(){return{current:null}},wt.forwardRef=function(W){return{$$typeof:o,render:W}},wt.isValidElement=O,wt.lazy=function(W){return{$$typeof:d,_payload:{_status:-1,_result:W},_init:oe}},wt.memo=function(W,ne){return{$$typeof:c,type:W,compare:ne===void 0?null:ne}},wt.startTransition=function(W){var ne=E.T,ge={};E.T=ge;try{var me=W(),xe=E.S;xe!==null&&xe(ge,me),typeof me=="object"&&me!==null&&typeof me.then=="function"&&me.then(de,se)}catch($e){se($e)}finally{E.T=ne}},wt.unstable_useCacheRefresh=function(){return E.H.useCacheRefresh()},wt.use=function(W){return E.H.use(W)},wt.useActionState=function(W,ne,ge){return E.H.useActionState(W,ne,ge)},wt.useCallback=function(W,ne){return E.H.useCallback(W,ne)},wt.useContext=function(W){return E.H.useContext(W)},wt.useDebugValue=function(){},wt.useDeferredValue=function(W,ne){return E.H.useDeferredValue(W,ne)},wt.useEffect=function(W,ne){return E.H.useEffect(W,ne)},wt.useId=function(){return E.H.useId()},wt.useImperativeHandle=function(W,ne,ge){return E.H.useImperativeHandle(W,ne,ge)},wt.useInsertionEffect=function(W,ne){return E.H.useInsertionEffect(W,ne)},wt.useLayoutEffect=function(W,ne){return E.H.useLayoutEffect(W,ne)},wt.useMemo=function(W,ne){return E.H.useMemo(W,ne)},wt.useOptimistic=function(W,ne){return E.H.useOptimistic(W,ne)},wt.useReducer=function(W,ne,ge){return E.H.useReducer(W,ne,ge)},wt.useRef=function(W){return E.H.useRef(W)},wt.useState=function(W){return E.H.useState(W)},wt.useSyncExternalStore=function(W,ne,ge){return E.H.useSyncExternalStore(W,ne,ge)},wt.useTransition=function(){return E.H.useTransition()},wt.version="19.0.0",wt}var dN;function l2(){return dN||(dN=1,$w.exports=CL()),$w.exports}var as=l2(),kw={exports:{}},Tp={},Nw={exports:{}},Iw={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var pN;function $L(){return pN||(pN=1,function(n){function e(H,oe){var se=H.length;H.push(oe);e:for(;0<se;){var de=se-1>>>1,W=H[de];if(0<r(W,oe))H[de]=oe,H[se]=W,se=de;else break e}}function t(H){return H.length===0?null:H[0]}function s(H){if(H.length===0)return null;var oe=H[0],se=H.pop();if(se!==oe){H[0]=se;e:for(var de=0,W=H.length,ne=W>>>1;de<ne;){var ge=2*(de+1)-1,me=H[ge],xe=ge+1,$e=H[xe];if(0>r(me,se))xe<W&&0>r($e,me)?(H[de]=$e,H[xe]=se,de=xe):(H[de]=me,H[ge]=se,de=ge);else if(xe<W&&0>r($e,se))H[de]=$e,H[xe]=se,de=xe;else break e}}return oe}function r(H,oe){var se=H.sortIndex-oe.sortIndex;return se!==0?se:H.id-oe.id}if(n.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var i=performance;n.unstable_now=function(){return i.now()}}else{var a=Date,o=a.now();n.unstable_now=function(){return a.now()-o}}var l=[],c=[],d=1,p=null,m=3,g=!1,x=!1,b=!1,w=typeof setTimeout=="function"?setTimeout:null,v=typeof clearTimeout=="function"?clearTimeout:null,$=typeof setImmediate<"u"?setImmediate:null;function I(H){for(var oe=t(c);oe!==null;){if(oe.callback===null)s(c);else if(oe.startTime<=H)s(c),oe.sortIndex=oe.expirationTime,e(l,oe);else break;oe=t(c)}}function N(H){if(b=!1,I(H),!x)if(t(l)!==null)x=!0,ee();else{var oe=t(c);oe!==null&&Z(N,oe.startTime-H)}}var E=!1,_=-1,z=5,P=-1;function O(){return!(n.unstable_now()-P<z)}function L(){if(E){var H=n.unstable_now();P=H;var oe=!0;try{e:{x=!1,b&&(b=!1,v(_),_=-1),g=!0;var se=m;try{t:{for(I(H),p=t(l);p!==null&&!(p.expirationTime>H&&O());){var de=p.callback;if(typeof de=="function"){p.callback=null,m=p.priorityLevel;var W=de(p.expirationTime<=H);if(H=n.unstable_now(),typeof W=="function"){p.callback=W,I(H),oe=!0;break t}p===t(l)&&s(l),I(H)}else s(l);p=t(l)}if(p!==null)oe=!0;else{var ne=t(c);ne!==null&&Z(N,ne.startTime-H),oe=!1}}break e}finally{p=null,m=se,g=!1}oe=void 0}}finally{oe?D():E=!1}}}var D;if(typeof $=="function")D=function(){$(L)};else if(typeof MessageChannel<"u"){var G=new MessageChannel,q=G.port2;G.port1.onmessage=L,D=function(){q.postMessage(null)}}else D=function(){w(L,0)};function ee(){E||(E=!0,D())}function Z(H,oe){_=w(function(){H(n.unstable_now())},oe)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(H){H.callback=null},n.unstable_continueExecution=function(){x||g||(x=!0,ee())},n.unstable_forceFrameRate=function(H){0>H||125<H?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):z=0<H?Math.floor(1e3/H):5},n.unstable_getCurrentPriorityLevel=function(){return m},n.unstable_getFirstCallbackNode=function(){return t(l)},n.unstable_next=function(H){switch(m){case 1:case 2:case 3:var oe=3;break;default:oe=m}var se=m;m=oe;try{return H()}finally{m=se}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(H,oe){switch(H){case 1:case 2:case 3:case 4:case 5:break;default:H=3}var se=m;m=H;try{return oe()}finally{m=se}},n.unstable_scheduleCallback=function(H,oe,se){var de=n.unstable_now();switch(typeof se=="object"&&se!==null?(se=se.delay,se=typeof se=="number"&&0<se?de+se:de):se=de,H){case 1:var W=-1;break;case 2:W=250;break;case 5:W=1073741823;break;case 4:W=1e4;break;default:W=5e3}return W=se+W,H={id:d++,callback:oe,priorityLevel:H,startTime:se,expirationTime:W,sortIndex:-1},se>de?(H.sortIndex=se,e(c,H),t(l)===null&&H===t(c)&&(b?(v(_),_=-1):b=!0,Z(N,se-de))):(H.sortIndex=W,e(l,H),x||g||(x=!0,ee())),H},n.unstable_shouldYield=O,n.unstable_wrapCallback=function(H){var oe=m;return function(){var se=m;m=oe;try{return H.apply(this,arguments)}finally{m=se}}}}(Iw)),Iw}var fN;function kL(){return fN||(fN=1,Nw.exports=$L()),Nw.exports}var Tw={exports:{}},Vs={};/**
 * @license React
 * react-dom.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var mN;function NL(){if(mN)return Vs;mN=1;var n=l2();function e(l){var c="https://react.dev/errors/"+l;if(1<arguments.length){c+="?args[]="+encodeURIComponent(arguments[1]);for(var d=2;d<arguments.length;d++)c+="&args[]="+encodeURIComponent(arguments[d])}return"Minified React error #"+l+"; visit "+c+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function t(){}var s={d:{f:t,r:function(){throw Error(e(522))},D:t,C:t,L:t,m:t,X:t,S:t,M:t},p:0,findDOMNode:null},r=Symbol.for("react.portal");function i(l,c,d){var p=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:r,key:p==null?null:""+p,children:l,containerInfo:c,implementation:d}}var a=n.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function o(l,c){if(l==="font")return"";if(typeof c=="string")return c==="use-credentials"?c:""}return Vs.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=s,Vs.createPortal=function(l,c){var d=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!c||c.nodeType!==1&&c.nodeType!==9&&c.nodeType!==11)throw Error(e(299));return i(l,c,null,d)},Vs.flushSync=function(l){var c=a.T,d=s.p;try{if(a.T=null,s.p=2,l)return l()}finally{a.T=c,s.p=d,s.d.f()}},Vs.preconnect=function(l,c){typeof l=="string"&&(c?(c=c.crossOrigin,c=typeof c=="string"?c==="use-credentials"?c:"":void 0):c=null,s.d.C(l,c))},Vs.prefetchDNS=function(l){typeof l=="string"&&s.d.D(l)},Vs.preinit=function(l,c){if(typeof l=="string"&&c&&typeof c.as=="string"){var d=c.as,p=o(d,c.crossOrigin),m=typeof c.integrity=="string"?c.integrity:void 0,g=typeof c.fetchPriority=="string"?c.fetchPriority:void 0;d==="style"?s.d.S(l,typeof c.precedence=="string"?c.precedence:void 0,{crossOrigin:p,integrity:m,fetchPriority:g}):d==="script"&&s.d.X(l,{crossOrigin:p,integrity:m,fetchPriority:g,nonce:typeof c.nonce=="string"?c.nonce:void 0})}},Vs.preinitModule=function(l,c){if(typeof l=="string")if(typeof c=="object"&&c!==null){if(c.as==null||c.as==="script"){var d=o(c.as,c.crossOrigin);s.d.M(l,{crossOrigin:d,integrity:typeof c.integrity=="string"?c.integrity:void 0,nonce:typeof c.nonce=="string"?c.nonce:void 0})}}else c==null&&s.d.M(l)},Vs.preload=function(l,c){if(typeof l=="string"&&typeof c=="object"&&c!==null&&typeof c.as=="string"){var d=c.as,p=o(d,c.crossOrigin);s.d.L(l,d,{crossOrigin:p,integrity:typeof c.integrity=="string"?c.integrity:void 0,nonce:typeof c.nonce=="string"?c.nonce:void 0,type:typeof c.type=="string"?c.type:void 0,fetchPriority:typeof c.fetchPriority=="string"?c.fetchPriority:void 0,referrerPolicy:typeof c.referrerPolicy=="string"?c.referrerPolicy:void 0,imageSrcSet:typeof c.imageSrcSet=="string"?c.imageSrcSet:void 0,imageSizes:typeof c.imageSizes=="string"?c.imageSizes:void 0,media:typeof c.media=="string"?c.media:void 0})}},Vs.preloadModule=function(l,c){if(typeof l=="string")if(c){var d=o(c.as,c.crossOrigin);s.d.m(l,{as:typeof c.as=="string"&&c.as!=="script"?c.as:void 0,crossOrigin:d,integrity:typeof c.integrity=="string"?c.integrity:void 0})}else s.d.m(l)},Vs.requestFormReset=function(l){s.d.r(l)},Vs.unstable_batchedUpdates=function(l,c){return l(c)},Vs.useFormState=function(l,c,d){return a.H.useFormState(l,c,d)},Vs.useFormStatus=function(){return a.H.useHostTransitionStatus()},Vs.version="19.0.0",Vs}var gN;function IL(){if(gN)return Tw.exports;gN=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(e){console.error(e)}}return n(),Tw.exports=NL(),Tw.exports}/**
 * @license React
 * react-dom-client.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var yN;function TL(){if(yN)return Tp;yN=1;var n=kL(),e=l2(),t=IL();function s(u){var h="https://react.dev/errors/"+u;if(1<arguments.length){h+="?args[]="+encodeURIComponent(arguments[1]);for(var f=2;f<arguments.length;f++)h+="&args[]="+encodeURIComponent(arguments[f])}return"Minified React error #"+u+"; visit "+h+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function r(u){return!(!u||u.nodeType!==1&&u.nodeType!==9&&u.nodeType!==11)}var i=Symbol.for("react.element"),a=Symbol.for("react.transitional.element"),o=Symbol.for("react.portal"),l=Symbol.for("react.fragment"),c=Symbol.for("react.strict_mode"),d=Symbol.for("react.profiler"),p=Symbol.for("react.provider"),m=Symbol.for("react.consumer"),g=Symbol.for("react.context"),x=Symbol.for("react.forward_ref"),b=Symbol.for("react.suspense"),w=Symbol.for("react.suspense_list"),v=Symbol.for("react.memo"),$=Symbol.for("react.lazy"),I=Symbol.for("react.offscreen"),N=Symbol.for("react.memo_cache_sentinel"),E=Symbol.iterator;function _(u){return u===null||typeof u!="object"?null:(u=E&&u[E]||u["@@iterator"],typeof u=="function"?u:null)}var z=Symbol.for("react.client.reference");function P(u){if(u==null)return null;if(typeof u=="function")return u.$$typeof===z?null:u.displayName||u.name||null;if(typeof u=="string")return u;switch(u){case l:return"Fragment";case o:return"Portal";case d:return"Profiler";case c:return"StrictMode";case b:return"Suspense";case w:return"SuspenseList"}if(typeof u=="object")switch(u.$$typeof){case g:return(u.displayName||"Context")+".Provider";case m:return(u._context.displayName||"Context")+".Consumer";case x:var h=u.render;return u=u.displayName,u||(u=h.displayName||h.name||"",u=u!==""?"ForwardRef("+u+")":"ForwardRef"),u;case v:return h=u.displayName||null,h!==null?h:P(u.type)||"Memo";case $:h=u._payload,u=u._init;try{return P(u(h))}catch{}}return null}var O=e.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,L=Object.assign,D,G;function q(u){if(D===void 0)try{throw Error()}catch(f){var h=f.stack.trim().match(/\n( *(at )?)/);D=h&&h[1]||"",G=-1<f.stack.indexOf(`
    at`)?" (<anonymous>)":-1<f.stack.indexOf("@")?"@unknown:0:0":""}return`
`+D+u+G}var ee=!1;function Z(u,h){if(!u||ee)return"";ee=!0;var f=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var y={DetermineComponentFrameRoot:function(){try{if(h){var Re=function(){throw Error()};if(Object.defineProperty(Re.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(Re,[])}catch(Se){var be=Se}Reflect.construct(u,[],Re)}else{try{Re.call()}catch(Se){be=Se}u.call(Re.prototype)}}else{try{throw Error()}catch(Se){be=Se}(Re=u())&&typeof Re.catch=="function"&&Re.catch(function(){})}}catch(Se){if(Se&&be&&typeof Se.stack=="string")return[Se.stack,be.stack]}return[null,null]}};y.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var S=Object.getOwnPropertyDescriptor(y.DetermineComponentFrameRoot,"name");S&&S.configurable&&Object.defineProperty(y.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var k=y.DetermineComponentFrameRoot(),F=k[0],U=k[1];if(F&&U){var Y=F.split(`
`),he=U.split(`
`);for(S=y=0;y<Y.length&&!Y[y].includes("DetermineComponentFrameRoot");)y++;for(;S<he.length&&!he[S].includes("DetermineComponentFrameRoot");)S++;if(y===Y.length||S===he.length)for(y=Y.length-1,S=he.length-1;1<=y&&0<=S&&Y[y]!==he[S];)S--;for(;1<=y&&0<=S;y--,S--)if(Y[y]!==he[S]){if(y!==1||S!==1)do if(y--,S--,0>S||Y[y]!==he[S]){var ke=`
`+Y[y].replace(" at new "," at ");return u.displayName&&ke.includes("<anonymous>")&&(ke=ke.replace("<anonymous>",u.displayName)),ke}while(1<=y&&0<=S);break}}}finally{ee=!1,Error.prepareStackTrace=f}return(f=u?u.displayName||u.name:"")?q(f):""}function H(u){switch(u.tag){case 26:case 27:case 5:return q(u.type);case 16:return q("Lazy");case 13:return q("Suspense");case 19:return q("SuspenseList");case 0:case 15:return u=Z(u.type,!1),u;case 11:return u=Z(u.type.render,!1),u;case 1:return u=Z(u.type,!0),u;default:return""}}function oe(u){try{var h="";do h+=H(u),u=u.return;while(u);return h}catch(f){return`
Error generating stack: `+f.message+`
`+f.stack}}function se(u){var h=u,f=u;if(u.alternate)for(;h.return;)h=h.return;else{u=h;do h=u,(h.flags&4098)!==0&&(f=h.return),u=h.return;while(u)}return h.tag===3?f:null}function de(u){if(u.tag===13){var h=u.memoizedState;if(h===null&&(u=u.alternate,u!==null&&(h=u.memoizedState)),h!==null)return h.dehydrated}return null}function W(u){if(se(u)!==u)throw Error(s(188))}function ne(u){var h=u.alternate;if(!h){if(h=se(u),h===null)throw Error(s(188));return h!==u?null:u}for(var f=u,y=h;;){var S=f.return;if(S===null)break;var k=S.alternate;if(k===null){if(y=S.return,y!==null){f=y;continue}break}if(S.child===k.child){for(k=S.child;k;){if(k===f)return W(S),u;if(k===y)return W(S),h;k=k.sibling}throw Error(s(188))}if(f.return!==y.return)f=S,y=k;else{for(var F=!1,U=S.child;U;){if(U===f){F=!0,f=S,y=k;break}if(U===y){F=!0,y=S,f=k;break}U=U.sibling}if(!F){for(U=k.child;U;){if(U===f){F=!0,f=k,y=S;break}if(U===y){F=!0,y=k,f=S;break}U=U.sibling}if(!F)throw Error(s(189))}}if(f.alternate!==y)throw Error(s(190))}if(f.tag!==3)throw Error(s(188));return f.stateNode.current===f?u:h}function ge(u){var h=u.tag;if(h===5||h===26||h===27||h===6)return u;for(u=u.child;u!==null;){if(h=ge(u),h!==null)return h;u=u.sibling}return null}var me=Array.isArray,xe=t.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,$e={pending:!1,data:null,method:null,action:null},Ne=[],Me=-1;function Fe(u){return{current:u}}function Pe(u){0>Me||(u.current=Ne[Me],Ne[Me]=null,Me--)}function He(u,h){Me++,Ne[Me]=u.current,u.current=h}var tt=Fe(null),$t=Fe(null),nt=Fe(null),mt=Fe(null);function _t(u,h){switch(He(nt,h),He($t,u),He(tt,null),u=h.nodeType,u){case 9:case 11:h=(h=h.documentElement)&&(h=h.namespaceURI)?Lk(h):0;break;default:if(u=u===8?h.parentNode:h,h=u.tagName,u=u.namespaceURI)u=Lk(u),h=Pk(u,h);else switch(h){case"svg":h=1;break;case"math":h=2;break;default:h=0}}Pe(tt),He(tt,h)}function kt(){Pe(tt),Pe($t),Pe(nt)}function Wt(u){u.memoizedState!==null&&He(mt,u);var h=tt.current,f=Pk(h,u.type);h!==f&&(He($t,u),He(tt,f))}function Mt(u){$t.current===u&&(Pe(tt),Pe($t)),mt.current===u&&(Pe(mt),Sp._currentValue=$e)}var Os=Object.prototype.hasOwnProperty,dn=n.unstable_scheduleCallback,Qs=n.unstable_cancelCallback,es=n.unstable_shouldYield,Xr=n.unstable_requestPaint,jt=n.unstable_now,mr=n.unstable_getCurrentPriorityLevel,Fs=n.unstable_ImmediatePriority,Zs=n.unstable_UserBlockingPriority,Js=n.unstable_NormalPriority,Qi=n.unstable_LowPriority,oo=n.unstable_IdlePriority,lo=n.log,Hu=n.unstable_setDisableYieldValue,zs=null,ts=null;function ju(u){if(ts&&typeof ts.onCommitFiberRoot=="function")try{ts.onCommitFiberRoot(zs,u,void 0,(u.current.flags&128)===128)}catch{}}function Zi(u){if(typeof lo=="function"&&Hu(u),ts&&typeof ts.setStrictMode=="function")try{ts.setStrictMode(zs,u)}catch{}}var Ls=Math.clz32?Math.clz32:fl,Cd=Math.log,$a=Math.LN2;function fl(u){return u>>>=0,u===0?32:31-(Cd(u)/$a|0)|0}var ml=128,gl=4194304;function ki(u){var h=u&42;if(h!==0)return h;switch(u&-u){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return u&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return u&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return u}}function yl(u,h){var f=u.pendingLanes;if(f===0)return 0;var y=0,S=u.suspendedLanes,k=u.pingedLanes,F=u.warmLanes;u=u.finishedLanes!==0;var U=f&134217727;return U!==0?(f=U&~S,f!==0?y=ki(f):(k&=U,k!==0?y=ki(k):u||(F=U&~F,F!==0&&(y=ki(F))))):(U=f&~S,U!==0?y=ki(U):k!==0?y=ki(k):u||(F=f&~F,F!==0&&(y=ki(F)))),y===0?0:h!==0&&h!==y&&(h&S)===0&&(S=y&-y,F=h&-h,S>=F||S===32&&(F&4194176)!==0)?h:y}function Dr(u,h){return(u.pendingLanes&~(u.suspendedLanes&~u.pingedLanes)&h)===0}function $d(u,h){switch(u){case 1:case 2:case 4:case 8:return h+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return h+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function kd(){var u=ml;return ml<<=1,(ml&4194176)===0&&(ml=128),u}function xl(){var u=gl;return gl<<=1,(gl&62914560)===0&&(gl=4194304),u}function uo(u){for(var h=[],f=0;31>f;f++)h.push(u);return h}function bl(u,h){u.pendingLanes|=h,h!==268435456&&(u.suspendedLanes=0,u.pingedLanes=0,u.warmLanes=0)}function co(u,h,f,y,S,k){var F=u.pendingLanes;u.pendingLanes=f,u.suspendedLanes=0,u.pingedLanes=0,u.warmLanes=0,u.expiredLanes&=f,u.entangledLanes&=f,u.errorRecoveryDisabledLanes&=f,u.shellSuspendCounter=0;var U=u.entanglements,Y=u.expirationTimes,he=u.hiddenUpdates;for(f=F&~f;0<f;){var ke=31-Ls(f),Re=1<<ke;U[ke]=0,Y[ke]=-1;var be=he[ke];if(be!==null)for(he[ke]=null,ke=0;ke<be.length;ke++){var Se=be[ke];Se!==null&&(Se.lane&=-536870913)}f&=~Re}y!==0&&Lm(u,y,0),k!==0&&S===0&&u.tag!==0&&(u.suspendedLanes|=k&~(F&~h))}function Lm(u,h,f){u.pendingLanes|=h,u.suspendedLanes&=~h;var y=31-Ls(h);u.entangledLanes|=h,u.entanglements[y]=u.entanglements[y]|1073741824|f&4194218}function Kr(u,h){var f=u.entangledLanes|=h;for(u=u.entanglements;f;){var y=31-Ls(f),S=1<<y;S&h|u[y]&h&&(u[y]|=h),f&=~S}}function Ji(u){return u&=-u,2<u?8<u?(u&134217727)!==0?32:268435456:8:2}function Nd(){var u=xe.p;return u!==0?u:(u=window.event,u===void 0?32:nN(u.type))}function xn(u,h){var f=xe.p;try{return xe.p=u,h()}finally{xe.p=f}}var ns=Math.random().toString(36).slice(2),Bn="__reactFiber$"+ns,Ps="__reactProps$"+ns,Ni="__reactContainer$"+ns,wl="__reactEvents$"+ns,qu="__reactListeners$"+ns,vl="__reactHandles$"+ns,Id="__reactResources$"+ns,ka="__reactMarker$"+ns;function Sl(u){delete u[Bn],delete u[Ps],delete u[wl],delete u[qu],delete u[vl]}function ea(u){var h=u[Bn];if(h)return h;for(var f=u.parentNode;f;){if(h=f[Ni]||f[Bn]){if(f=h.alternate,h.child!==null||f!==null&&f.child!==null)for(u=Vk(u);u!==null;){if(f=u[Bn])return f;u=Vk(u)}return h}u=f,f=u.parentNode}return null}function ps(u){if(u=u[Bn]||u[Ni]){var h=u.tag;if(h===5||h===6||h===13||h===26||h===27||h===3)return u}return null}function Ms(u){var h=u.tag;if(h===5||h===26||h===27||h===6)return u.stateNode;throw Error(s(33))}function Yr(u){var h=u[Id];return h||(h=u[Id]={hoistableStyles:new Map,hoistableScripts:new Map}),h}function kn(u){u[ka]=!0}var Xu=new Set,Td={};function Ii(u,h){ks(u,h),ks(u+"Capture",h)}function ks(u,h){for(Td[u]=h,u=0;u<h.length;u++)Xu.add(h[u])}var Qr=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),Ku=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),_r={},Cl={};function m0(u){return Os.call(Cl,u)?!0:Os.call(_r,u)?!1:Ku.test(u)?Cl[u]=!0:(_r[u]=!0,!1)}function $l(u,h,f){if(m0(h))if(f===null)u.removeAttribute(h);else{switch(typeof f){case"undefined":case"function":case"symbol":u.removeAttribute(h);return;case"boolean":var y=h.toLowerCase().slice(0,5);if(y!=="data-"&&y!=="aria-"){u.removeAttribute(h);return}}u.setAttribute(h,""+f)}}function ho(u,h,f){if(f===null)u.removeAttribute(h);else{switch(typeof f){case"undefined":case"function":case"symbol":case"boolean":u.removeAttribute(h);return}u.setAttribute(h,""+f)}}function Ti(u,h,f,y){if(y===null)u.removeAttribute(f);else{switch(typeof y){case"undefined":case"function":case"symbol":case"boolean":u.removeAttribute(f);return}u.setAttributeNS(h,f,""+y)}}function gr(u){switch(typeof u){case"bigint":case"boolean":case"number":case"string":case"undefined":return u;case"object":return u;default:return""}}function Ed(u){var h=u.type;return(u=u.nodeName)&&u.toLowerCase()==="input"&&(h==="checkbox"||h==="radio")}function Pm(u){var h=Ed(u)?"checked":"value",f=Object.getOwnPropertyDescriptor(u.constructor.prototype,h),y=""+u[h];if(!u.hasOwnProperty(h)&&typeof f<"u"&&typeof f.get=="function"&&typeof f.set=="function"){var S=f.get,k=f.set;return Object.defineProperty(u,h,{configurable:!0,get:function(){return S.call(this)},set:function(F){y=""+F,k.call(this,F)}}),Object.defineProperty(u,h,{enumerable:f.enumerable}),{getValue:function(){return y},setValue:function(F){y=""+F},stopTracking:function(){u._valueTracker=null,delete u[h]}}}}function kl(u){u._valueTracker||(u._valueTracker=Pm(u))}function Rd(u){if(!u)return!1;var h=u._valueTracker;if(!h)return!0;var f=h.getValue(),y="";return u&&(y=Ed(u)?u.checked?"true":"false":u.value),u=y,u!==f?(h.setValue(u),!0):!1}function ss(u){if(u=u||(typeof document<"u"?document:void 0),typeof u>"u")return null;try{return u.activeElement||u.body}catch{return u.body}}var Mm=/[\n"\\]/g;function er(u){return u.replace(Mm,function(h){return"\\"+h.charCodeAt(0).toString(16)+" "})}function po(u,h,f,y,S,k,F,U){u.name="",F!=null&&typeof F!="function"&&typeof F!="symbol"&&typeof F!="boolean"?u.type=F:u.removeAttribute("type"),h!=null?F==="number"?(h===0&&u.value===""||u.value!=h)&&(u.value=""+gr(h)):u.value!==""+gr(h)&&(u.value=""+gr(h)):F!=="submit"&&F!=="reset"||u.removeAttribute("value"),h!=null?Yu(u,F,gr(h)):f!=null?Yu(u,F,gr(f)):y!=null&&u.removeAttribute("value"),S==null&&k!=null&&(u.defaultChecked=!!k),S!=null&&(u.checked=S&&typeof S!="function"&&typeof S!="symbol"),U!=null&&typeof U!="function"&&typeof U!="symbol"&&typeof U!="boolean"?u.name=""+gr(U):u.removeAttribute("name")}function Ad(u,h,f,y,S,k,F,U){if(k!=null&&typeof k!="function"&&typeof k!="symbol"&&typeof k!="boolean"&&(u.type=k),h!=null||f!=null){if(!(k!=="submit"&&k!=="reset"||h!=null))return;f=f!=null?""+gr(f):"",h=h!=null?""+gr(h):f,U||h===u.value||(u.value=h),u.defaultValue=h}y=y??S,y=typeof y!="function"&&typeof y!="symbol"&&!!y,u.checked=U?u.checked:!!y,u.defaultChecked=!!y,F!=null&&typeof F!="function"&&typeof F!="symbol"&&typeof F!="boolean"&&(u.name=F)}function Yu(u,h,f){h==="number"&&ss(u.ownerDocument)===u||u.defaultValue===""+f||(u.defaultValue=""+f)}function fo(u,h,f,y){if(u=u.options,h){h={};for(var S=0;S<f.length;S++)h["$"+f[S]]=!0;for(f=0;f<u.length;f++)S=h.hasOwnProperty("$"+u[f].value),u[f].selected!==S&&(u[f].selected=S),S&&y&&(u[f].defaultSelected=!0)}else{for(f=""+gr(f),h=null,S=0;S<u.length;S++){if(u[S].value===f){u[S].selected=!0,y&&(u[S].defaultSelected=!0);return}h!==null||u[S].disabled||(h=u[S])}h!==null&&(h.selected=!0)}}function Bm(u,h,f){if(h!=null&&(h=""+gr(h),h!==u.value&&(u.value=h),f==null)){u.defaultValue!==h&&(u.defaultValue=h);return}u.defaultValue=f!=null?""+gr(f):""}function Dd(u,h,f,y){if(h==null){if(y!=null){if(f!=null)throw Error(s(92));if(me(y)){if(1<y.length)throw Error(s(93));y=y[0]}f=y}f==null&&(f=""),h=f}f=gr(h),u.defaultValue=f,y=u.textContent,y===f&&y!==""&&y!==null&&(u.value=y)}function Na(u,h){if(h){var f=u.firstChild;if(f&&f===u.lastChild&&f.nodeType===3){f.nodeValue=h;return}}u.textContent=h}var Qu=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function _d(u,h,f){var y=h.indexOf("--")===0;f==null||typeof f=="boolean"||f===""?y?u.setProperty(h,""):h==="float"?u.cssFloat="":u[h]="":y?u.setProperty(h,f):typeof f!="number"||f===0||Qu.has(h)?h==="float"?u.cssFloat=f:u[h]=(""+f).trim():u[h]=f+"px"}function Od(u,h,f){if(h!=null&&typeof h!="object")throw Error(s(62));if(u=u.style,f!=null){for(var y in f)!f.hasOwnProperty(y)||h!=null&&h.hasOwnProperty(y)||(y.indexOf("--")===0?u.setProperty(y,""):y==="float"?u.cssFloat="":u[y]="");for(var S in h)y=h[S],h.hasOwnProperty(S)&&f[S]!==y&&_d(u,S,y)}else for(var k in h)h.hasOwnProperty(k)&&_d(u,k,h[k])}function Ia(u){if(u.indexOf("-")===-1)return!1;switch(u){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var g0=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),y0=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function Zu(u){return y0.test(""+u)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":u}var Fd=null;function Nl(u){return u=u.target||u.srcElement||window,u.correspondingUseElement&&(u=u.correspondingUseElement),u.nodeType===3?u.parentNode:u}var Zr=null,mo=null;function Vm(u){var h=ps(u);if(h&&(u=h.stateNode)){var f=u[Ps]||null;e:switch(u=h.stateNode,h.type){case"input":if(po(u,f.value,f.defaultValue,f.defaultValue,f.checked,f.defaultChecked,f.type,f.name),h=f.name,f.type==="radio"&&h!=null){for(f=u;f.parentNode;)f=f.parentNode;for(f=f.querySelectorAll('input[name="'+er(""+h)+'"][type="radio"]'),h=0;h<f.length;h++){var y=f[h];if(y!==u&&y.form===u.form){var S=y[Ps]||null;if(!S)throw Error(s(90));po(y,S.value,S.defaultValue,S.defaultValue,S.checked,S.defaultChecked,S.type,S.name)}}for(h=0;h<f.length;h++)y=f[h],y.form===u.form&&Rd(y)}break e;case"textarea":Bm(u,f.value,f.defaultValue);break e;case"select":h=f.value,h!=null&&fo(u,!!f.multiple,h,!1)}}}var zd=!1;function Um(u,h,f){if(zd)return u(h,f);zd=!0;try{var y=u(h);return y}finally{if(zd=!1,(Zr!==null||mo!==null)&&(Tg(),Zr&&(h=Zr,u=mo,mo=Zr=null,Vm(h),u)))for(h=0;h<u.length;h++)Vm(u[h])}}function Ta(u,h){var f=u.stateNode;if(f===null)return null;var y=f[Ps]||null;if(y===null)return null;f=y[h];e:switch(h){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(y=!y.disabled)||(u=u.type,y=!(u==="button"||u==="input"||u==="select"||u==="textarea")),u=!y;break e;default:u=!1}if(u)return null;if(f&&typeof f!="function")throw Error(s(231,h,typeof f));return f}var Ju=!1;if(Qr)try{var go={};Object.defineProperty(go,"passive",{get:function(){Ju=!0}}),window.addEventListener("test",go,go),window.removeEventListener("test",go,go)}catch{Ju=!1}var yr=null,tr=null,ec=null;function Wm(){if(ec)return ec;var u,h=tr,f=h.length,y,S="value"in yr?yr.value:yr.textContent,k=S.length;for(u=0;u<f&&h[u]===S[u];u++);var F=f-u;for(y=1;y<=F&&h[f-y]===S[k-y];y++);return ec=S.slice(u,1<y?1-y:void 0)}function Il(u){var h=u.keyCode;return"charCode"in u?(u=u.charCode,u===0&&h===13&&(u=13)):u=h,u===10&&(u=13),32<=u||u===13?u:0}function Tl(){return!0}function tc(){return!1}function fs(u){function h(f,y,S,k,F){this._reactName=f,this._targetInst=S,this.type=y,this.nativeEvent=k,this.target=F,this.currentTarget=null;for(var U in u)u.hasOwnProperty(U)&&(f=u[U],this[U]=f?f(k):k[U]);return this.isDefaultPrevented=(k.defaultPrevented!=null?k.defaultPrevented:k.returnValue===!1)?Tl:tc,this.isPropagationStopped=tc,this}return L(h.prototype,{preventDefault:function(){this.defaultPrevented=!0;var f=this.nativeEvent;f&&(f.preventDefault?f.preventDefault():typeof f.returnValue!="unknown"&&(f.returnValue=!1),this.isDefaultPrevented=Tl)},stopPropagation:function(){var f=this.nativeEvent;f&&(f.stopPropagation?f.stopPropagation():typeof f.cancelBubble!="unknown"&&(f.cancelBubble=!0),this.isPropagationStopped=Tl)},persist:function(){},isPersistent:Tl}),h}var xr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(u){return u.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},El=fs(xr),Ea=L({},xr,{view:0,detail:0}),x0=fs(Ea),Ld,Ra,yo,Rl=L({},Ea,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:sc,button:0,buttons:0,relatedTarget:function(u){return u.relatedTarget===void 0?u.fromElement===u.srcElement?u.toElement:u.fromElement:u.relatedTarget},movementX:function(u){return"movementX"in u?u.movementX:(u!==yo&&(yo&&u.type==="mousemove"?(Ld=u.screenX-yo.screenX,Ra=u.screenY-yo.screenY):Ra=Ld=0,yo=u),Ld)},movementY:function(u){return"movementY"in u?u.movementY:Ra}}),Gm=fs(Rl),b0=L({},Rl,{dataTransfer:0}),nc=fs(b0),Hm=L({},Ea,{relatedTarget:0}),Pd=fs(Hm),jm=L({},xr,{animationName:0,elapsedTime:0,pseudoElement:0}),w0=fs(jm),v0=L({},xr,{clipboardData:function(u){return"clipboardData"in u?u.clipboardData:window.clipboardData}}),Md=fs(v0),Bd=L({},xr,{data:0}),Vd=fs(Bd),S0={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},C0={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},$0={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function k0(u){var h=this.nativeEvent;return h.getModifierState?h.getModifierState(u):(u=$0[u])?!!h[u]:!1}function sc(){return k0}var N0=L({},Ea,{key:function(u){if(u.key){var h=S0[u.key]||u.key;if(h!=="Unidentified")return h}return u.type==="keypress"?(u=Il(u),u===13?"Enter":String.fromCharCode(u)):u.type==="keydown"||u.type==="keyup"?C0[u.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:sc,charCode:function(u){return u.type==="keypress"?Il(u):0},keyCode:function(u){return u.type==="keydown"||u.type==="keyup"?u.keyCode:0},which:function(u){return u.type==="keypress"?Il(u):u.type==="keydown"||u.type==="keyup"?u.keyCode:0}}),I0=fs(N0),Ud=L({},Rl,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),qm=fs(Ud),T0=L({},Ea,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:sc}),E0=fs(T0),rc=L({},xr,{propertyName:0,elapsedTime:0,pseudoElement:0}),R0=fs(rc),A0=L({},Rl,{deltaX:function(u){return"deltaX"in u?u.deltaX:"wheelDeltaX"in u?-u.wheelDeltaX:0},deltaY:function(u){return"deltaY"in u?u.deltaY:"wheelDeltaY"in u?-u.wheelDeltaY:"wheelDelta"in u?-u.wheelDelta:0},deltaZ:0,deltaMode:0}),D0=fs(A0),Xm=L({},xr,{newState:0,oldState:0}),Km=fs(Xm),C=[9,13,27,32],T=Qr&&"CompositionEvent"in window,A=null;Qr&&"documentMode"in document&&(A=document.documentMode);var M=Qr&&"TextEvent"in window&&!A,j=Qr&&(!T||A&&8<A&&11>=A),K=" ",X=!1;function ae(u,h){switch(u){case"keyup":return C.indexOf(h.keyCode)!==-1;case"keydown":return h.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function we(u){return u=u.detail,typeof u=="object"&&"data"in u?u.data:null}var Ee=!1;function ze(u,h){switch(u){case"compositionend":return we(h);case"keypress":return h.which!==32?null:(X=!0,K);case"textInput":return u=h.data,u===K&&X?null:u;default:return null}}function ot(u,h){if(Ee)return u==="compositionend"||!T&&ae(u,h)?(u=Wm(),ec=tr=yr=null,Ee=!1,u):null;switch(u){case"paste":return null;case"keypress":if(!(h.ctrlKey||h.altKey||h.metaKey)||h.ctrlKey&&h.altKey){if(h.char&&1<h.char.length)return h.char;if(h.which)return String.fromCharCode(h.which)}return null;case"compositionend":return j&&h.locale!=="ko"?null:h.data;default:return null}}var Je={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function We(u){var h=u&&u.nodeName&&u.nodeName.toLowerCase();return h==="input"?!!Je[u.type]:h==="textarea"}function at(u,h,f,y){Zr?mo?mo.push(y):mo=[y]:Zr=y,h=_g(h,"onChange"),0<h.length&&(f=new El("onChange","change",null,f,y),u.push({event:f,listeners:h}))}var ft=null,Gt=null;function Zt(u){Dk(u,0)}function Nn(u){var h=Ms(u);if(Rd(h))return u}function nr(u,h){if(u==="change")return h}var Ns=!1;if(Qr){var Tt;if(Qr){var Fn="oninput"in document;if(!Fn){var Ei=document.createElement("div");Ei.setAttribute("oninput","return;"),Fn=typeof Ei.oninput=="function"}Tt=Fn}else Tt=!1;Ns=Tt&&(!document.documentMode||9<document.documentMode)}function Ym(){ft&&(ft.detachEvent("onpropertychange",Qm),Gt=ft=null)}function Qm(u){if(u.propertyName==="value"&&Nn(Gt)){var h=[];at(h,Gt,u,Nl(u)),Um(Zt,h)}}function _0(u,h,f){u==="focusin"?(Ym(),ft=h,Gt=f,ft.attachEvent("onpropertychange",Qm)):u==="focusout"&&Ym()}function O0(u){if(u==="selectionchange"||u==="keyup"||u==="keydown")return Nn(Gt)}function F0(u,h){if(u==="click")return Nn(h)}function ic(u,h){if(u==="input"||u==="change")return Nn(h)}function ZF(u,h){return u===h&&(u!==0||1/u===1/h)||u!==u&&h!==h}var Or=typeof Object.is=="function"?Object.is:ZF;function Wd(u,h){if(Or(u,h))return!0;if(typeof u!="object"||u===null||typeof h!="object"||h===null)return!1;var f=Object.keys(u),y=Object.keys(h);if(f.length!==y.length)return!1;for(y=0;y<f.length;y++){var S=f[y];if(!Os.call(h,S)||!Or(u[S],h[S]))return!1}return!0}function dC(u){for(;u&&u.firstChild;)u=u.firstChild;return u}function pC(u,h){var f=dC(u);u=0;for(var y;f;){if(f.nodeType===3){if(y=u+f.textContent.length,u<=h&&y>=h)return{node:f,offset:h-u};u=y}e:{for(;f;){if(f.nextSibling){f=f.nextSibling;break e}f=f.parentNode}f=void 0}f=dC(f)}}function fC(u,h){return u&&h?u===h?!0:u&&u.nodeType===3?!1:h&&h.nodeType===3?fC(u,h.parentNode):"contains"in u?u.contains(h):u.compareDocumentPosition?!!(u.compareDocumentPosition(h)&16):!1:!1}function mC(u){u=u!=null&&u.ownerDocument!=null&&u.ownerDocument.defaultView!=null?u.ownerDocument.defaultView:window;for(var h=ss(u.document);h instanceof u.HTMLIFrameElement;){try{var f=typeof h.contentWindow.location.href=="string"}catch{f=!1}if(f)u=h.contentWindow;else break;h=ss(u.document)}return h}function z0(u){var h=u&&u.nodeName&&u.nodeName.toLowerCase();return h&&(h==="input"&&(u.type==="text"||u.type==="search"||u.type==="tel"||u.type==="url"||u.type==="password")||h==="textarea"||u.contentEditable==="true")}function JF(u,h){var f=mC(h);h=u.focusedElem;var y=u.selectionRange;if(f!==h&&h&&h.ownerDocument&&fC(h.ownerDocument.documentElement,h)){if(y!==null&&z0(h)){if(u=y.start,f=y.end,f===void 0&&(f=u),"selectionStart"in h)h.selectionStart=u,h.selectionEnd=Math.min(f,h.value.length);else if(f=(u=h.ownerDocument||document)&&u.defaultView||window,f.getSelection){f=f.getSelection();var S=h.textContent.length,k=Math.min(y.start,S);y=y.end===void 0?k:Math.min(y.end,S),!f.extend&&k>y&&(S=y,y=k,k=S),S=pC(h,k);var F=pC(h,y);S&&F&&(f.rangeCount!==1||f.anchorNode!==S.node||f.anchorOffset!==S.offset||f.focusNode!==F.node||f.focusOffset!==F.offset)&&(u=u.createRange(),u.setStart(S.node,S.offset),f.removeAllRanges(),k>y?(f.addRange(u),f.extend(F.node,F.offset)):(u.setEnd(F.node,F.offset),f.addRange(u)))}}for(u=[],f=h;f=f.parentNode;)f.nodeType===1&&u.push({element:f,left:f.scrollLeft,top:f.scrollTop});for(typeof h.focus=="function"&&h.focus(),h=0;h<u.length;h++)f=u[h],f.element.scrollLeft=f.left,f.element.scrollTop=f.top}}var ez=Qr&&"documentMode"in document&&11>=document.documentMode,ac=null,L0=null,Gd=null,P0=!1;function gC(u,h,f){var y=f.window===f?f.document:f.nodeType===9?f:f.ownerDocument;P0||ac==null||ac!==ss(y)||(y=ac,"selectionStart"in y&&z0(y)?y={start:y.selectionStart,end:y.selectionEnd}:(y=(y.ownerDocument&&y.ownerDocument.defaultView||window).getSelection(),y={anchorNode:y.anchorNode,anchorOffset:y.anchorOffset,focusNode:y.focusNode,focusOffset:y.focusOffset}),Gd&&Wd(Gd,y)||(Gd=y,y=_g(L0,"onSelect"),0<y.length&&(h=new El("onSelect","select",null,h,f),u.push({event:h,listeners:y}),h.target=ac)))}function Al(u,h){var f={};return f[u.toLowerCase()]=h.toLowerCase(),f["Webkit"+u]="webkit"+h,f["Moz"+u]="moz"+h,f}var oc={animationend:Al("Animation","AnimationEnd"),animationiteration:Al("Animation","AnimationIteration"),animationstart:Al("Animation","AnimationStart"),transitionrun:Al("Transition","TransitionRun"),transitionstart:Al("Transition","TransitionStart"),transitioncancel:Al("Transition","TransitionCancel"),transitionend:Al("Transition","TransitionEnd")},M0={},yC={};Qr&&(yC=document.createElement("div").style,"AnimationEvent"in window||(delete oc.animationend.animation,delete oc.animationiteration.animation,delete oc.animationstart.animation),"TransitionEvent"in window||delete oc.transitionend.transition);function Dl(u){if(M0[u])return M0[u];if(!oc[u])return u;var h=oc[u],f;for(f in h)if(h.hasOwnProperty(f)&&f in yC)return M0[u]=h[f];return u}var xC=Dl("animationend"),bC=Dl("animationiteration"),wC=Dl("animationstart"),tz=Dl("transitionrun"),nz=Dl("transitionstart"),sz=Dl("transitioncancel"),vC=Dl("transitionend"),SC=new Map,CC="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(" ");function Ri(u,h){SC.set(u,h),Ii(h,[u])}var Jr=[],lc=0,B0=0;function Zm(){for(var u=lc,h=B0=lc=0;h<u;){var f=Jr[h];Jr[h++]=null;var y=Jr[h];Jr[h++]=null;var S=Jr[h];Jr[h++]=null;var k=Jr[h];if(Jr[h++]=null,y!==null&&S!==null){var F=y.pending;F===null?S.next=S:(S.next=F.next,F.next=S),y.pending=S}k!==0&&$C(f,S,k)}}function Jm(u,h,f,y){Jr[lc++]=u,Jr[lc++]=h,Jr[lc++]=f,Jr[lc++]=y,B0|=y,u.lanes|=y,u=u.alternate,u!==null&&(u.lanes|=y)}function V0(u,h,f,y){return Jm(u,h,f,y),eg(u)}function xo(u,h){return Jm(u,null,null,h),eg(u)}function $C(u,h,f){u.lanes|=f;var y=u.alternate;y!==null&&(y.lanes|=f);for(var S=!1,k=u.return;k!==null;)k.childLanes|=f,y=k.alternate,y!==null&&(y.childLanes|=f),k.tag===22&&(u=k.stateNode,u===null||u._visibility&1||(S=!0)),u=k,k=k.return;S&&h!==null&&u.tag===3&&(k=u.stateNode,S=31-Ls(f),k=k.hiddenUpdates,u=k[S],u===null?k[S]=[h]:u.push(h),h.lane=f|536870912)}function eg(u){if(50<mp)throw mp=0,q1=null,Error(s(185));for(var h=u.return;h!==null;)u=h,h=u.return;return u.tag===3?u.stateNode:null}var uc={},kC=new WeakMap;function ei(u,h){if(typeof u=="object"&&u!==null){var f=kC.get(u);return f!==void 0?f:(h={value:u,source:h,stack:oe(h)},kC.set(u,h),h)}return{value:u,source:h,stack:oe(h)}}var cc=[],hc=0,tg=null,ng=0,ti=[],ni=0,_l=null,Aa=1,Da="";function Ol(u,h){cc[hc++]=ng,cc[hc++]=tg,tg=u,ng=h}function NC(u,h,f){ti[ni++]=Aa,ti[ni++]=Da,ti[ni++]=_l,_l=u;var y=Aa;u=Da;var S=32-Ls(y)-1;y&=~(1<<S),f+=1;var k=32-Ls(h)+S;if(30<k){var F=S-S%5;k=(y&(1<<F)-1).toString(32),y>>=F,S-=F,Aa=1<<32-Ls(h)+S|f<<S|y,Da=k+u}else Aa=1<<k|f<<S|y,Da=u}function U0(u){u.return!==null&&(Ol(u,1),NC(u,1,0))}function W0(u){for(;u===tg;)tg=cc[--hc],cc[hc]=null,ng=cc[--hc],cc[hc]=null;for(;u===_l;)_l=ti[--ni],ti[ni]=null,Da=ti[--ni],ti[ni]=null,Aa=ti[--ni],ti[ni]=null}var sr=null,Is=null,Vt=!1,Ai=null,ta=!1,G0=Error(s(519));function Fl(u){var h=Error(s(418,""));throw qd(ei(h,u)),G0}function IC(u){var h=u.stateNode,f=u.type,y=u.memoizedProps;switch(h[Bn]=u,h[Ps]=y,f){case"dialog":Ot("cancel",h),Ot("close",h);break;case"iframe":case"object":case"embed":Ot("load",h);break;case"video":case"audio":for(f=0;f<yp.length;f++)Ot(yp[f],h);break;case"source":Ot("error",h);break;case"img":case"image":case"link":Ot("error",h),Ot("load",h);break;case"details":Ot("toggle",h);break;case"input":Ot("invalid",h),Ad(h,y.value,y.defaultValue,y.checked,y.defaultChecked,y.type,y.name,!0),kl(h);break;case"select":Ot("invalid",h);break;case"textarea":Ot("invalid",h),Dd(h,y.value,y.defaultValue,y.children),kl(h)}f=y.children,typeof f!="string"&&typeof f!="number"&&typeof f!="bigint"||h.textContent===""+f||y.suppressHydrationWarning===!0||zk(h.textContent,f)?(y.popover!=null&&(Ot("beforetoggle",h),Ot("toggle",h)),y.onScroll!=null&&Ot("scroll",h),y.onScrollEnd!=null&&Ot("scrollend",h),y.onClick!=null&&(h.onclick=Og),h=!0):h=!1,h||Fl(u)}function TC(u){for(sr=u.return;sr;)switch(sr.tag){case 3:case 27:ta=!0;return;case 5:case 13:ta=!1;return;default:sr=sr.return}}function Hd(u){if(u!==sr)return!1;if(!Vt)return TC(u),Vt=!0,!1;var h=!1,f;if((f=u.tag!==3&&u.tag!==27)&&((f=u.tag===5)&&(f=u.type,f=!(f!=="form"&&f!=="button")||cw(u.type,u.memoizedProps)),f=!f),f&&(h=!0),h&&Is&&Fl(u),TC(u),u.tag===13){if(u=u.memoizedState,u=u!==null?u.dehydrated:null,!u)throw Error(s(317));e:{for(u=u.nextSibling,h=0;u;){if(u.nodeType===8)if(f=u.data,f==="/$"){if(h===0){Is=_i(u.nextSibling);break e}h--}else f!=="$"&&f!=="$!"&&f!=="$?"||h++;u=u.nextSibling}Is=null}}else Is=sr?_i(u.stateNode.nextSibling):null;return!0}function jd(){Is=sr=null,Vt=!1}function qd(u){Ai===null?Ai=[u]:Ai.push(u)}var Xd=Error(s(460)),EC=Error(s(474)),H0={then:function(){}};function RC(u){return u=u.status,u==="fulfilled"||u==="rejected"}function sg(){}function AC(u,h,f){switch(f=u[f],f===void 0?u.push(h):f!==h&&(h.then(sg,sg),h=f),h.status){case"fulfilled":return h.value;case"rejected":throw u=h.reason,u===Xd?Error(s(483)):u;default:if(typeof h.status=="string")h.then(sg,sg);else{if(u=un,u!==null&&100<u.shellSuspendCounter)throw Error(s(482));u=h,u.status="pending",u.then(function(y){if(h.status==="pending"){var S=h;S.status="fulfilled",S.value=y}},function(y){if(h.status==="pending"){var S=h;S.status="rejected",S.reason=y}})}switch(h.status){case"fulfilled":return h.value;case"rejected":throw u=h.reason,u===Xd?Error(s(483)):u}throw Kd=h,Xd}}var Kd=null;function DC(){if(Kd===null)throw Error(s(459));var u=Kd;return Kd=null,u}var dc=null,Yd=0;function rg(u){var h=Yd;return Yd+=1,dc===null&&(dc=[]),AC(dc,u,h)}function Qd(u,h){h=h.props.ref,u.ref=h!==void 0?h:null}function ig(u,h){throw h.$$typeof===i?Error(s(525)):(u=Object.prototype.toString.call(h),Error(s(31,u==="[object Object]"?"object with keys {"+Object.keys(h).join(", ")+"}":u)))}function _C(u){var h=u._init;return h(u._payload)}function OC(u){function h(fe,le){if(u){var ye=fe.deletions;ye===null?(fe.deletions=[le],fe.flags|=16):ye.push(le)}}function f(fe,le){if(!u)return null;for(;le!==null;)h(fe,le),le=le.sibling;return null}function y(fe){for(var le=new Map;fe!==null;)fe.key!==null?le.set(fe.key,fe):le.set(fe.index,fe),fe=fe.sibling;return le}function S(fe,le){return fe=Ro(fe,le),fe.index=0,fe.sibling=null,fe}function k(fe,le,ye){return fe.index=ye,u?(ye=fe.alternate,ye!==null?(ye=ye.index,ye<le?(fe.flags|=33554434,le):ye):(fe.flags|=33554434,le)):(fe.flags|=1048576,le)}function F(fe){return u&&fe.alternate===null&&(fe.flags|=33554434),fe}function U(fe,le,ye,Ie){return le===null||le.tag!==6?(le=M1(ye,fe.mode,Ie),le.return=fe,le):(le=S(le,ye),le.return=fe,le)}function Y(fe,le,ye,Ie){var Ke=ye.type;return Ke===l?ke(fe,le,ye.props.children,Ie,ye.key):le!==null&&(le.elementType===Ke||typeof Ke=="object"&&Ke!==null&&Ke.$$typeof===$&&_C(Ke)===le.type)?(le=S(le,ye.props),Qd(le,ye),le.return=fe,le):(le=Cg(ye.type,ye.key,ye.props,null,fe.mode,Ie),Qd(le,ye),le.return=fe,le)}function he(fe,le,ye,Ie){return le===null||le.tag!==4||le.stateNode.containerInfo!==ye.containerInfo||le.stateNode.implementation!==ye.implementation?(le=B1(ye,fe.mode,Ie),le.return=fe,le):(le=S(le,ye.children||[]),le.return=fe,le)}function ke(fe,le,ye,Ie,Ke){return le===null||le.tag!==7?(le=Hl(ye,fe.mode,Ie,Ke),le.return=fe,le):(le=S(le,ye),le.return=fe,le)}function Re(fe,le,ye){if(typeof le=="string"&&le!==""||typeof le=="number"||typeof le=="bigint")return le=M1(""+le,fe.mode,ye),le.return=fe,le;if(typeof le=="object"&&le!==null){switch(le.$$typeof){case a:return ye=Cg(le.type,le.key,le.props,null,fe.mode,ye),Qd(ye,le),ye.return=fe,ye;case o:return le=B1(le,fe.mode,ye),le.return=fe,le;case $:var Ie=le._init;return le=Ie(le._payload),Re(fe,le,ye)}if(me(le)||_(le))return le=Hl(le,fe.mode,ye,null),le.return=fe,le;if(typeof le.then=="function")return Re(fe,rg(le),ye);if(le.$$typeof===g)return Re(fe,wg(fe,le),ye);ig(fe,le)}return null}function be(fe,le,ye,Ie){var Ke=le!==null?le.key:null;if(typeof ye=="string"&&ye!==""||typeof ye=="number"||typeof ye=="bigint")return Ke!==null?null:U(fe,le,""+ye,Ie);if(typeof ye=="object"&&ye!==null){switch(ye.$$typeof){case a:return ye.key===Ke?Y(fe,le,ye,Ie):null;case o:return ye.key===Ke?he(fe,le,ye,Ie):null;case $:return Ke=ye._init,ye=Ke(ye._payload),be(fe,le,ye,Ie)}if(me(ye)||_(ye))return Ke!==null?null:ke(fe,le,ye,Ie,null);if(typeof ye.then=="function")return be(fe,le,rg(ye),Ie);if(ye.$$typeof===g)return be(fe,le,wg(fe,ye),Ie);ig(fe,ye)}return null}function Se(fe,le,ye,Ie,Ke){if(typeof Ie=="string"&&Ie!==""||typeof Ie=="number"||typeof Ie=="bigint")return fe=fe.get(ye)||null,U(le,fe,""+Ie,Ke);if(typeof Ie=="object"&&Ie!==null){switch(Ie.$$typeof){case a:return fe=fe.get(Ie.key===null?ye:Ie.key)||null,Y(le,fe,Ie,Ke);case o:return fe=fe.get(Ie.key===null?ye:Ie.key)||null,he(le,fe,Ie,Ke);case $:var Nt=Ie._init;return Ie=Nt(Ie._payload),Se(fe,le,ye,Ie,Ke)}if(me(Ie)||_(Ie))return fe=fe.get(ye)||null,ke(le,fe,Ie,Ke,null);if(typeof Ie.then=="function")return Se(fe,le,ye,rg(Ie),Ke);if(Ie.$$typeof===g)return Se(fe,le,ye,wg(le,Ie),Ke);ig(le,Ie)}return null}function et(fe,le,ye,Ie){for(var Ke=null,Nt=null,st=le,lt=le=0,ys=null;st!==null&&lt<ye.length;lt++){st.index>lt?(ys=st,st=null):ys=st.sibling;var Ut=be(fe,st,ye[lt],Ie);if(Ut===null){st===null&&(st=ys);break}u&&st&&Ut.alternate===null&&h(fe,st),le=k(Ut,le,lt),Nt===null?Ke=Ut:Nt.sibling=Ut,Nt=Ut,st=ys}if(lt===ye.length)return f(fe,st),Vt&&Ol(fe,lt),Ke;if(st===null){for(;lt<ye.length;lt++)st=Re(fe,ye[lt],Ie),st!==null&&(le=k(st,le,lt),Nt===null?Ke=st:Nt.sibling=st,Nt=st);return Vt&&Ol(fe,lt),Ke}for(st=y(st);lt<ye.length;lt++)ys=Se(st,fe,lt,ye[lt],Ie),ys!==null&&(u&&ys.alternate!==null&&st.delete(ys.key===null?lt:ys.key),le=k(ys,le,lt),Nt===null?Ke=ys:Nt.sibling=ys,Nt=ys);return u&&st.forEach(function(Lo){return h(fe,Lo)}),Vt&&Ol(fe,lt),Ke}function gt(fe,le,ye,Ie){if(ye==null)throw Error(s(151));for(var Ke=null,Nt=null,st=le,lt=le=0,ys=null,Ut=ye.next();st!==null&&!Ut.done;lt++,Ut=ye.next()){st.index>lt?(ys=st,st=null):ys=st.sibling;var Lo=be(fe,st,Ut.value,Ie);if(Lo===null){st===null&&(st=ys);break}u&&st&&Lo.alternate===null&&h(fe,st),le=k(Lo,le,lt),Nt===null?Ke=Lo:Nt.sibling=Lo,Nt=Lo,st=ys}if(Ut.done)return f(fe,st),Vt&&Ol(fe,lt),Ke;if(st===null){for(;!Ut.done;lt++,Ut=ye.next())Ut=Re(fe,Ut.value,Ie),Ut!==null&&(le=k(Ut,le,lt),Nt===null?Ke=Ut:Nt.sibling=Ut,Nt=Ut);return Vt&&Ol(fe,lt),Ke}for(st=y(st);!Ut.done;lt++,Ut=ye.next())Ut=Se(st,fe,lt,Ut.value,Ie),Ut!==null&&(u&&Ut.alternate!==null&&st.delete(Ut.key===null?lt:Ut.key),le=k(Ut,le,lt),Nt===null?Ke=Ut:Nt.sibling=Ut,Nt=Ut);return u&&st.forEach(function(yL){return h(fe,yL)}),Vt&&Ol(fe,lt),Ke}function En(fe,le,ye,Ie){if(typeof ye=="object"&&ye!==null&&ye.type===l&&ye.key===null&&(ye=ye.props.children),typeof ye=="object"&&ye!==null){switch(ye.$$typeof){case a:e:{for(var Ke=ye.key;le!==null;){if(le.key===Ke){if(Ke=ye.type,Ke===l){if(le.tag===7){f(fe,le.sibling),Ie=S(le,ye.props.children),Ie.return=fe,fe=Ie;break e}}else if(le.elementType===Ke||typeof Ke=="object"&&Ke!==null&&Ke.$$typeof===$&&_C(Ke)===le.type){f(fe,le.sibling),Ie=S(le,ye.props),Qd(Ie,ye),Ie.return=fe,fe=Ie;break e}f(fe,le);break}else h(fe,le);le=le.sibling}ye.type===l?(Ie=Hl(ye.props.children,fe.mode,Ie,ye.key),Ie.return=fe,fe=Ie):(Ie=Cg(ye.type,ye.key,ye.props,null,fe.mode,Ie),Qd(Ie,ye),Ie.return=fe,fe=Ie)}return F(fe);case o:e:{for(Ke=ye.key;le!==null;){if(le.key===Ke)if(le.tag===4&&le.stateNode.containerInfo===ye.containerInfo&&le.stateNode.implementation===ye.implementation){f(fe,le.sibling),Ie=S(le,ye.children||[]),Ie.return=fe,fe=Ie;break e}else{f(fe,le);break}else h(fe,le);le=le.sibling}Ie=B1(ye,fe.mode,Ie),Ie.return=fe,fe=Ie}return F(fe);case $:return Ke=ye._init,ye=Ke(ye._payload),En(fe,le,ye,Ie)}if(me(ye))return et(fe,le,ye,Ie);if(_(ye)){if(Ke=_(ye),typeof Ke!="function")throw Error(s(150));return ye=Ke.call(ye),gt(fe,le,ye,Ie)}if(typeof ye.then=="function")return En(fe,le,rg(ye),Ie);if(ye.$$typeof===g)return En(fe,le,wg(fe,ye),Ie);ig(fe,ye)}return typeof ye=="string"&&ye!==""||typeof ye=="number"||typeof ye=="bigint"?(ye=""+ye,le!==null&&le.tag===6?(f(fe,le.sibling),Ie=S(le,ye),Ie.return=fe,fe=Ie):(f(fe,le),Ie=M1(ye,fe.mode,Ie),Ie.return=fe,fe=Ie),F(fe)):f(fe,le)}return function(fe,le,ye,Ie){try{Yd=0;var Ke=En(fe,le,ye,Ie);return dc=null,Ke}catch(st){if(st===Xd)throw st;var Nt=ai(29,st,null,fe.mode);return Nt.lanes=Ie,Nt.return=fe,Nt}finally{}}}var zl=OC(!0),FC=OC(!1),pc=Fe(null),ag=Fe(0);function zC(u,h){u=Wa,He(ag,u),He(pc,h),Wa=u|h.baseLanes}function j0(){He(ag,Wa),He(pc,pc.current)}function q0(){Wa=ag.current,Pe(pc),Pe(ag)}var si=Fe(null),na=null;function bo(u){var h=u.alternate;He(rs,rs.current&1),He(si,u),na===null&&(h===null||pc.current!==null||h.memoizedState!==null)&&(na=u)}function LC(u){if(u.tag===22){if(He(rs,rs.current),He(si,u),na===null){var h=u.alternate;h!==null&&h.memoizedState!==null&&(na=u)}}else wo()}function wo(){He(rs,rs.current),He(si,si.current)}function _a(u){Pe(si),na===u&&(na=null),Pe(rs)}var rs=Fe(0);function og(u){for(var h=u;h!==null;){if(h.tag===13){var f=h.memoizedState;if(f!==null&&(f=f.dehydrated,f===null||f.data==="$?"||f.data==="$!"))return h}else if(h.tag===19&&h.memoizedProps.revealOrder!==void 0){if((h.flags&128)!==0)return h}else if(h.child!==null){h.child.return=h,h=h.child;continue}if(h===u)break;for(;h.sibling===null;){if(h.return===null||h.return===u)return null;h=h.return}h.sibling.return=h.return,h=h.sibling}return null}var rz=typeof AbortController<"u"?AbortController:function(){var u=[],h=this.signal={aborted:!1,addEventListener:function(f,y){u.push(y)}};this.abort=function(){h.aborted=!0,u.forEach(function(f){return f()})}},iz=n.unstable_scheduleCallback,az=n.unstable_NormalPriority,is={$$typeof:g,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function X0(){return{controller:new rz,data:new Map,refCount:0}}function Zd(u){u.refCount--,u.refCount===0&&iz(az,function(){u.controller.abort()})}var Jd=null,K0=0,fc=0,mc=null;function oz(u,h){if(Jd===null){var f=Jd=[];K0=0,fc=tw(),mc={status:"pending",value:void 0,then:function(y){f.push(y)}}}return K0++,h.then(PC,PC),h}function PC(){if(--K0===0&&Jd!==null){mc!==null&&(mc.status="fulfilled");var u=Jd;Jd=null,fc=0,mc=null;for(var h=0;h<u.length;h++)(0,u[h])()}}function lz(u,h){var f=[],y={status:"pending",value:null,reason:null,then:function(S){f.push(S)}};return u.then(function(){y.status="fulfilled",y.value=h;for(var S=0;S<f.length;S++)(0,f[S])(h)},function(S){for(y.status="rejected",y.reason=S,S=0;S<f.length;S++)(0,f[S])(void 0)}),y}var MC=O.S;O.S=function(u,h){typeof h=="object"&&h!==null&&typeof h.then=="function"&&oz(u,h),MC!==null&&MC(u,h)};var Ll=Fe(null);function Y0(){var u=Ll.current;return u!==null?u:un.pooledCache}function lg(u,h){h===null?He(Ll,Ll.current):He(Ll,h.pool)}function BC(){var u=Y0();return u===null?null:{parent:is._currentValue,pool:u}}var vo=0,St=null,Jt=null,Vn=null,ug=!1,gc=!1,Pl=!1,cg=0,ep=0,yc=null,uz=0;function zn(){throw Error(s(321))}function Q0(u,h){if(h===null)return!1;for(var f=0;f<h.length&&f<u.length;f++)if(!Or(u[f],h[f]))return!1;return!0}function Z0(u,h,f,y,S,k){return vo=k,St=h,h.memoizedState=null,h.updateQueue=null,h.lanes=0,O.H=u===null||u.memoizedState===null?Ml:So,Pl=!1,k=f(y,S),Pl=!1,gc&&(k=UC(h,f,y,S)),VC(u),k}function VC(u){O.H=sa;var h=Jt!==null&&Jt.next!==null;if(vo=0,Vn=Jt=St=null,ug=!1,ep=0,yc=null,h)throw Error(s(300));u===null||ms||(u=u.dependencies,u!==null&&bg(u)&&(ms=!0))}function UC(u,h,f,y){St=u;var S=0;do{if(gc&&(yc=null),ep=0,gc=!1,25<=S)throw Error(s(301));if(S+=1,Vn=Jt=null,u.updateQueue!=null){var k=u.updateQueue;k.lastEffect=null,k.events=null,k.stores=null,k.memoCache!=null&&(k.memoCache.index=0)}O.H=Bl,k=h(f,y)}while(gc);return k}function cz(){var u=O.H,h=u.useState()[0];return h=typeof h.then=="function"?tp(h):h,u=u.useState()[0],(Jt!==null?Jt.memoizedState:null)!==u&&(St.flags|=1024),h}function J0(){var u=cg!==0;return cg=0,u}function e1(u,h,f){h.updateQueue=u.updateQueue,h.flags&=-2053,u.lanes&=~f}function t1(u){if(ug){for(u=u.memoizedState;u!==null;){var h=u.queue;h!==null&&(h.pending=null),u=u.next}ug=!1}vo=0,Vn=Jt=St=null,gc=!1,ep=cg=0,yc=null}function br(){var u={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Vn===null?St.memoizedState=Vn=u:Vn=Vn.next=u,Vn}function Un(){if(Jt===null){var u=St.alternate;u=u!==null?u.memoizedState:null}else u=Jt.next;var h=Vn===null?St.memoizedState:Vn.next;if(h!==null)Vn=h,Jt=u;else{if(u===null)throw St.alternate===null?Error(s(467)):Error(s(310));Jt=u,u={memoizedState:Jt.memoizedState,baseState:Jt.baseState,baseQueue:Jt.baseQueue,queue:Jt.queue,next:null},Vn===null?St.memoizedState=Vn=u:Vn=Vn.next=u}return Vn}var hg;hg=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}};function tp(u){var h=ep;return ep+=1,yc===null&&(yc=[]),u=AC(yc,u,h),h=St,(Vn===null?h.memoizedState:Vn.next)===null&&(h=h.alternate,O.H=h===null||h.memoizedState===null?Ml:So),u}function dg(u){if(u!==null&&typeof u=="object"){if(typeof u.then=="function")return tp(u);if(u.$$typeof===g)return Bs(u)}throw Error(s(438,String(u)))}function n1(u){var h=null,f=St.updateQueue;if(f!==null&&(h=f.memoCache),h==null){var y=St.alternate;y!==null&&(y=y.updateQueue,y!==null&&(y=y.memoCache,y!=null&&(h={data:y.data.map(function(S){return S.slice()}),index:0})))}if(h==null&&(h={data:[],index:0}),f===null&&(f=hg(),St.updateQueue=f),f.memoCache=h,f=h.data[h.index],f===void 0)for(f=h.data[h.index]=Array(u),y=0;y<u;y++)f[y]=N;return h.index++,f}function Oa(u,h){return typeof h=="function"?h(u):h}function pg(u){var h=Un();return s1(h,Jt,u)}function s1(u,h,f){var y=u.queue;if(y===null)throw Error(s(311));y.lastRenderedReducer=f;var S=u.baseQueue,k=y.pending;if(k!==null){if(S!==null){var F=S.next;S.next=k.next,k.next=F}h.baseQueue=S=k,y.pending=null}if(k=u.baseState,S===null)u.memoizedState=k;else{h=S.next;var U=F=null,Y=null,he=h,ke=!1;do{var Re=he.lane&-536870913;if(Re!==he.lane?(Lt&Re)===Re:(vo&Re)===Re){var be=he.revertLane;if(be===0)Y!==null&&(Y=Y.next={lane:0,revertLane:0,action:he.action,hasEagerState:he.hasEagerState,eagerState:he.eagerState,next:null}),Re===fc&&(ke=!0);else if((vo&be)===be){he=he.next,be===fc&&(ke=!0);continue}else Re={lane:0,revertLane:he.revertLane,action:he.action,hasEagerState:he.hasEagerState,eagerState:he.eagerState,next:null},Y===null?(U=Y=Re,F=k):Y=Y.next=Re,St.lanes|=be,Ao|=be;Re=he.action,Pl&&f(k,Re),k=he.hasEagerState?he.eagerState:f(k,Re)}else be={lane:Re,revertLane:he.revertLane,action:he.action,hasEagerState:he.hasEagerState,eagerState:he.eagerState,next:null},Y===null?(U=Y=be,F=k):Y=Y.next=be,St.lanes|=Re,Ao|=Re;he=he.next}while(he!==null&&he!==h);if(Y===null?F=k:Y.next=U,!Or(k,u.memoizedState)&&(ms=!0,ke&&(f=mc,f!==null)))throw f;u.memoizedState=k,u.baseState=F,u.baseQueue=Y,y.lastRenderedState=k}return S===null&&(y.lanes=0),[u.memoizedState,y.dispatch]}function r1(u){var h=Un(),f=h.queue;if(f===null)throw Error(s(311));f.lastRenderedReducer=u;var y=f.dispatch,S=f.pending,k=h.memoizedState;if(S!==null){f.pending=null;var F=S=S.next;do k=u(k,F.action),F=F.next;while(F!==S);Or(k,h.memoizedState)||(ms=!0),h.memoizedState=k,h.baseQueue===null&&(h.baseState=k),f.lastRenderedState=k}return[k,y]}function WC(u,h,f){var y=St,S=Un(),k=Vt;if(k){if(f===void 0)throw Error(s(407));f=f()}else f=h();var F=!Or((Jt||S).memoizedState,f);if(F&&(S.memoizedState=f,ms=!0),S=S.queue,o1(jC.bind(null,y,S,u),[u]),S.getSnapshot!==h||F||Vn!==null&&Vn.memoizedState.tag&1){if(y.flags|=2048,xc(9,HC.bind(null,y,S,f,h),{destroy:void 0},null),un===null)throw Error(s(349));k||(vo&60)!==0||GC(y,h,f)}return f}function GC(u,h,f){u.flags|=16384,u={getSnapshot:h,value:f},h=St.updateQueue,h===null?(h=hg(),St.updateQueue=h,h.stores=[u]):(f=h.stores,f===null?h.stores=[u]:f.push(u))}function HC(u,h,f,y){h.value=f,h.getSnapshot=y,qC(h)&&XC(u)}function jC(u,h,f){return f(function(){qC(h)&&XC(u)})}function qC(u){var h=u.getSnapshot;u=u.value;try{var f=h();return!Or(u,f)}catch{return!0}}function XC(u){var h=xo(u,2);h!==null&&rr(h,u,2)}function i1(u){var h=br();if(typeof u=="function"){var f=u;if(u=f(),Pl){Zi(!0);try{f()}finally{Zi(!1)}}}return h.memoizedState=h.baseState=u,h.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Oa,lastRenderedState:u},h}function KC(u,h,f,y){return u.baseState=f,s1(u,Jt,typeof y=="function"?y:Oa)}function hz(u,h,f,y,S){if(gg(u))throw Error(s(485));if(u=h.action,u!==null){var k={payload:S,action:u,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(F){k.listeners.push(F)}};O.T!==null?f(!0):k.isTransition=!1,y(k),f=h.pending,f===null?(k.next=h.pending=k,YC(h,k)):(k.next=f.next,h.pending=f.next=k)}}function YC(u,h){var f=h.action,y=h.payload,S=u.state;if(h.isTransition){var k=O.T,F={};O.T=F;try{var U=f(S,y),Y=O.S;Y!==null&&Y(F,U),QC(u,h,U)}catch(he){a1(u,h,he)}finally{O.T=k}}else try{k=f(S,y),QC(u,h,k)}catch(he){a1(u,h,he)}}function QC(u,h,f){f!==null&&typeof f=="object"&&typeof f.then=="function"?f.then(function(y){ZC(u,h,y)},function(y){return a1(u,h,y)}):ZC(u,h,f)}function ZC(u,h,f){h.status="fulfilled",h.value=f,JC(h),u.state=f,h=u.pending,h!==null&&(f=h.next,f===h?u.pending=null:(f=f.next,h.next=f,YC(u,f)))}function a1(u,h,f){var y=u.pending;if(u.pending=null,y!==null){y=y.next;do h.status="rejected",h.reason=f,JC(h),h=h.next;while(h!==y)}u.action=null}function JC(u){u=u.listeners;for(var h=0;h<u.length;h++)(0,u[h])()}function e$(u,h){return h}function t$(u,h){if(Vt){var f=un.formState;if(f!==null){e:{var y=St;if(Vt){if(Is){t:{for(var S=Is,k=ta;S.nodeType!==8;){if(!k){S=null;break t}if(S=_i(S.nextSibling),S===null){S=null;break t}}k=S.data,S=k==="F!"||k==="F"?S:null}if(S){Is=_i(S.nextSibling),y=S.data==="F!";break e}}Fl(y)}y=!1}y&&(h=f[0])}}return f=br(),f.memoizedState=f.baseState=h,y={pending:null,lanes:0,dispatch:null,lastRenderedReducer:e$,lastRenderedState:h},f.queue=y,f=b$.bind(null,St,y),y.dispatch=f,y=i1(!1),k=d1.bind(null,St,!1,y.queue),y=br(),S={state:h,dispatch:null,action:u,pending:null},y.queue=S,f=hz.bind(null,St,S,k,f),S.dispatch=f,y.memoizedState=u,[h,f,!1]}function n$(u){var h=Un();return s$(h,Jt,u)}function s$(u,h,f){h=s1(u,h,e$)[0],u=pg(Oa)[0],h=typeof h=="object"&&h!==null&&typeof h.then=="function"?tp(h):h;var y=Un(),S=y.queue,k=S.dispatch;return f!==y.memoizedState&&(St.flags|=2048,xc(9,dz.bind(null,S,f),{destroy:void 0},null)),[h,k,u]}function dz(u,h){u.action=h}function r$(u){var h=Un(),f=Jt;if(f!==null)return s$(h,f,u);Un(),h=h.memoizedState,f=Un();var y=f.queue.dispatch;return f.memoizedState=u,[h,y,!1]}function xc(u,h,f,y){return u={tag:u,create:h,inst:f,deps:y,next:null},h=St.updateQueue,h===null&&(h=hg(),St.updateQueue=h),f=h.lastEffect,f===null?h.lastEffect=u.next=u:(y=f.next,f.next=u,u.next=y,h.lastEffect=u),u}function i$(){return Un().memoizedState}function fg(u,h,f,y){var S=br();St.flags|=u,S.memoizedState=xc(1|h,f,{destroy:void 0},y===void 0?null:y)}function mg(u,h,f,y){var S=Un();y=y===void 0?null:y;var k=S.memoizedState.inst;Jt!==null&&y!==null&&Q0(y,Jt.memoizedState.deps)?S.memoizedState=xc(h,f,k,y):(St.flags|=u,S.memoizedState=xc(1|h,f,k,y))}function a$(u,h){fg(8390656,8,u,h)}function o1(u,h){mg(2048,8,u,h)}function o$(u,h){return mg(4,2,u,h)}function l$(u,h){return mg(4,4,u,h)}function u$(u,h){if(typeof h=="function"){u=u();var f=h(u);return function(){typeof f=="function"?f():h(null)}}if(h!=null)return u=u(),h.current=u,function(){h.current=null}}function c$(u,h,f){f=f!=null?f.concat([u]):null,mg(4,4,u$.bind(null,h,u),f)}function l1(){}function h$(u,h){var f=Un();h=h===void 0?null:h;var y=f.memoizedState;return h!==null&&Q0(h,y[1])?y[0]:(f.memoizedState=[u,h],u)}function d$(u,h){var f=Un();h=h===void 0?null:h;var y=f.memoizedState;if(h!==null&&Q0(h,y[1]))return y[0];if(y=u(),Pl){Zi(!0);try{u()}finally{Zi(!1)}}return f.memoizedState=[y,h],y}function u1(u,h,f){return f===void 0||(vo&1073741824)!==0?u.memoizedState=h:(u.memoizedState=f,u=fk(),St.lanes|=u,Ao|=u,f)}function p$(u,h,f,y){return Or(f,h)?f:pc.current!==null?(u=u1(u,f,y),Or(u,h)||(ms=!0),u):(vo&42)===0?(ms=!0,u.memoizedState=f):(u=fk(),St.lanes|=u,Ao|=u,h)}function f$(u,h,f,y,S){var k=xe.p;xe.p=k!==0&&8>k?k:8;var F=O.T,U={};O.T=U,d1(u,!1,h,f);try{var Y=S(),he=O.S;if(he!==null&&he(U,Y),Y!==null&&typeof Y=="object"&&typeof Y.then=="function"){var ke=lz(Y,y);np(u,h,ke,Pr(u))}else np(u,h,y,Pr(u))}catch(Re){np(u,h,{then:function(){},status:"rejected",reason:Re},Pr())}finally{xe.p=k,O.T=F}}function pz(){}function c1(u,h,f,y){if(u.tag!==5)throw Error(s(476));var S=m$(u).queue;f$(u,S,h,$e,f===null?pz:function(){return g$(u),f(y)})}function m$(u){var h=u.memoizedState;if(h!==null)return h;h={memoizedState:$e,baseState:$e,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Oa,lastRenderedState:$e},next:null};var f={};return h.next={memoizedState:f,baseState:f,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Oa,lastRenderedState:f},next:null},u.memoizedState=h,u=u.alternate,u!==null&&(u.memoizedState=h),h}function g$(u){var h=m$(u).next.queue;np(u,h,{},Pr())}function h1(){return Bs(Sp)}function y$(){return Un().memoizedState}function x$(){return Un().memoizedState}function fz(u){for(var h=u.return;h!==null;){switch(h.tag){case 24:case 3:var f=Pr();u=ko(f);var y=No(h,u,f);y!==null&&(rr(y,h,f),ip(y,h,f)),h={cache:X0()},u.payload=h;return}h=h.return}}function mz(u,h,f){var y=Pr();f={lane:y,revertLane:0,action:f,hasEagerState:!1,eagerState:null,next:null},gg(u)?w$(h,f):(f=V0(u,h,f,y),f!==null&&(rr(f,u,y),v$(f,h,y)))}function b$(u,h,f){var y=Pr();np(u,h,f,y)}function np(u,h,f,y){var S={lane:y,revertLane:0,action:f,hasEagerState:!1,eagerState:null,next:null};if(gg(u))w$(h,S);else{var k=u.alternate;if(u.lanes===0&&(k===null||k.lanes===0)&&(k=h.lastRenderedReducer,k!==null))try{var F=h.lastRenderedState,U=k(F,f);if(S.hasEagerState=!0,S.eagerState=U,Or(U,F))return Jm(u,h,S,0),un===null&&Zm(),!1}catch{}finally{}if(f=V0(u,h,S,y),f!==null)return rr(f,u,y),v$(f,h,y),!0}return!1}function d1(u,h,f,y){if(y={lane:2,revertLane:tw(),action:y,hasEagerState:!1,eagerState:null,next:null},gg(u)){if(h)throw Error(s(479))}else h=V0(u,f,y,2),h!==null&&rr(h,u,2)}function gg(u){var h=u.alternate;return u===St||h!==null&&h===St}function w$(u,h){gc=ug=!0;var f=u.pending;f===null?h.next=h:(h.next=f.next,f.next=h),u.pending=h}function v$(u,h,f){if((f&4194176)!==0){var y=h.lanes;y&=u.pendingLanes,f|=y,h.lanes=f,Kr(u,f)}}var sa={readContext:Bs,use:dg,useCallback:zn,useContext:zn,useEffect:zn,useImperativeHandle:zn,useLayoutEffect:zn,useInsertionEffect:zn,useMemo:zn,useReducer:zn,useRef:zn,useState:zn,useDebugValue:zn,useDeferredValue:zn,useTransition:zn,useSyncExternalStore:zn,useId:zn};sa.useCacheRefresh=zn,sa.useMemoCache=zn,sa.useHostTransitionStatus=zn,sa.useFormState=zn,sa.useActionState=zn,sa.useOptimistic=zn;var Ml={readContext:Bs,use:dg,useCallback:function(u,h){return br().memoizedState=[u,h===void 0?null:h],u},useContext:Bs,useEffect:a$,useImperativeHandle:function(u,h,f){f=f!=null?f.concat([u]):null,fg(4194308,4,u$.bind(null,h,u),f)},useLayoutEffect:function(u,h){return fg(4194308,4,u,h)},useInsertionEffect:function(u,h){fg(4,2,u,h)},useMemo:function(u,h){var f=br();h=h===void 0?null:h;var y=u();if(Pl){Zi(!0);try{u()}finally{Zi(!1)}}return f.memoizedState=[y,h],y},useReducer:function(u,h,f){var y=br();if(f!==void 0){var S=f(h);if(Pl){Zi(!0);try{f(h)}finally{Zi(!1)}}}else S=h;return y.memoizedState=y.baseState=S,u={pending:null,lanes:0,dispatch:null,lastRenderedReducer:u,lastRenderedState:S},y.queue=u,u=u.dispatch=mz.bind(null,St,u),[y.memoizedState,u]},useRef:function(u){var h=br();return u={current:u},h.memoizedState=u},useState:function(u){u=i1(u);var h=u.queue,f=b$.bind(null,St,h);return h.dispatch=f,[u.memoizedState,f]},useDebugValue:l1,useDeferredValue:function(u,h){var f=br();return u1(f,u,h)},useTransition:function(){var u=i1(!1);return u=f$.bind(null,St,u.queue,!0,!1),br().memoizedState=u,[!1,u]},useSyncExternalStore:function(u,h,f){var y=St,S=br();if(Vt){if(f===void 0)throw Error(s(407));f=f()}else{if(f=h(),un===null)throw Error(s(349));(Lt&60)!==0||GC(y,h,f)}S.memoizedState=f;var k={value:f,getSnapshot:h};return S.queue=k,a$(jC.bind(null,y,k,u),[u]),y.flags|=2048,xc(9,HC.bind(null,y,k,f,h),{destroy:void 0},null),f},useId:function(){var u=br(),h=un.identifierPrefix;if(Vt){var f=Da,y=Aa;f=(y&~(1<<32-Ls(y)-1)).toString(32)+f,h=":"+h+"R"+f,f=cg++,0<f&&(h+="H"+f.toString(32)),h+=":"}else f=uz++,h=":"+h+"r"+f.toString(32)+":";return u.memoizedState=h},useCacheRefresh:function(){return br().memoizedState=fz.bind(null,St)}};Ml.useMemoCache=n1,Ml.useHostTransitionStatus=h1,Ml.useFormState=t$,Ml.useActionState=t$,Ml.useOptimistic=function(u){var h=br();h.memoizedState=h.baseState=u;var f={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return h.queue=f,h=d1.bind(null,St,!0,f),f.dispatch=h,[u,h]};var So={readContext:Bs,use:dg,useCallback:h$,useContext:Bs,useEffect:o1,useImperativeHandle:c$,useInsertionEffect:o$,useLayoutEffect:l$,useMemo:d$,useReducer:pg,useRef:i$,useState:function(){return pg(Oa)},useDebugValue:l1,useDeferredValue:function(u,h){var f=Un();return p$(f,Jt.memoizedState,u,h)},useTransition:function(){var u=pg(Oa)[0],h=Un().memoizedState;return[typeof u=="boolean"?u:tp(u),h]},useSyncExternalStore:WC,useId:y$};So.useCacheRefresh=x$,So.useMemoCache=n1,So.useHostTransitionStatus=h1,So.useFormState=n$,So.useActionState=n$,So.useOptimistic=function(u,h){var f=Un();return KC(f,Jt,u,h)};var Bl={readContext:Bs,use:dg,useCallback:h$,useContext:Bs,useEffect:o1,useImperativeHandle:c$,useInsertionEffect:o$,useLayoutEffect:l$,useMemo:d$,useReducer:r1,useRef:i$,useState:function(){return r1(Oa)},useDebugValue:l1,useDeferredValue:function(u,h){var f=Un();return Jt===null?u1(f,u,h):p$(f,Jt.memoizedState,u,h)},useTransition:function(){var u=r1(Oa)[0],h=Un().memoizedState;return[typeof u=="boolean"?u:tp(u),h]},useSyncExternalStore:WC,useId:y$};Bl.useCacheRefresh=x$,Bl.useMemoCache=n1,Bl.useHostTransitionStatus=h1,Bl.useFormState=r$,Bl.useActionState=r$,Bl.useOptimistic=function(u,h){var f=Un();return Jt!==null?KC(f,Jt,u,h):(f.baseState=u,[u,f.queue.dispatch])};function p1(u,h,f,y){h=u.memoizedState,f=f(y,h),f=f==null?h:L({},h,f),u.memoizedState=f,u.lanes===0&&(u.updateQueue.baseState=f)}var f1={isMounted:function(u){return(u=u._reactInternals)?se(u)===u:!1},enqueueSetState:function(u,h,f){u=u._reactInternals;var y=Pr(),S=ko(y);S.payload=h,f!=null&&(S.callback=f),h=No(u,S,y),h!==null&&(rr(h,u,y),ip(h,u,y))},enqueueReplaceState:function(u,h,f){u=u._reactInternals;var y=Pr(),S=ko(y);S.tag=1,S.payload=h,f!=null&&(S.callback=f),h=No(u,S,y),h!==null&&(rr(h,u,y),ip(h,u,y))},enqueueForceUpdate:function(u,h){u=u._reactInternals;var f=Pr(),y=ko(f);y.tag=2,h!=null&&(y.callback=h),h=No(u,y,f),h!==null&&(rr(h,u,f),ip(h,u,f))}};function S$(u,h,f,y,S,k,F){return u=u.stateNode,typeof u.shouldComponentUpdate=="function"?u.shouldComponentUpdate(y,k,F):h.prototype&&h.prototype.isPureReactComponent?!Wd(f,y)||!Wd(S,k):!0}function C$(u,h,f,y){u=h.state,typeof h.componentWillReceiveProps=="function"&&h.componentWillReceiveProps(f,y),typeof h.UNSAFE_componentWillReceiveProps=="function"&&h.UNSAFE_componentWillReceiveProps(f,y),h.state!==u&&f1.enqueueReplaceState(h,h.state,null)}function Vl(u,h){var f=h;if("ref"in h){f={};for(var y in h)y!=="ref"&&(f[y]=h[y])}if(u=u.defaultProps){f===h&&(f=L({},f));for(var S in u)f[S]===void 0&&(f[S]=u[S])}return f}var yg=typeof reportError=="function"?reportError:function(u){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var h=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof u=="object"&&u!==null&&typeof u.message=="string"?String(u.message):String(u),error:u});if(!window.dispatchEvent(h))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",u);return}console.error(u)};function $$(u){yg(u)}function k$(u){console.error(u)}function N$(u){yg(u)}function xg(u,h){try{var f=u.onUncaughtError;f(h.value,{componentStack:h.stack})}catch(y){setTimeout(function(){throw y})}}function I$(u,h,f){try{var y=u.onCaughtError;y(f.value,{componentStack:f.stack,errorBoundary:h.tag===1?h.stateNode:null})}catch(S){setTimeout(function(){throw S})}}function m1(u,h,f){return f=ko(f),f.tag=3,f.payload={element:null},f.callback=function(){xg(u,h)},f}function T$(u){return u=ko(u),u.tag=3,u}function E$(u,h,f,y){var S=f.type.getDerivedStateFromError;if(typeof S=="function"){var k=y.value;u.payload=function(){return S(k)},u.callback=function(){I$(h,f,y)}}var F=f.stateNode;F!==null&&typeof F.componentDidCatch=="function"&&(u.callback=function(){I$(h,f,y),typeof S!="function"&&(Do===null?Do=new Set([this]):Do.add(this));var U=y.stack;this.componentDidCatch(y.value,{componentStack:U!==null?U:""})})}function gz(u,h,f,y,S){if(f.flags|=32768,y!==null&&typeof y=="object"&&typeof y.then=="function"){if(h=f.alternate,h!==null&&rp(h,f,S,!0),f=si.current,f!==null){switch(f.tag){case 13:return na===null?Y1():f.alternate===null&&Tn===0&&(Tn=3),f.flags&=-257,f.flags|=65536,f.lanes=S,y===H0?f.flags|=16384:(h=f.updateQueue,h===null?f.updateQueue=new Set([y]):h.add(y),Z1(u,y,S)),!1;case 22:return f.flags|=65536,y===H0?f.flags|=16384:(h=f.updateQueue,h===null?(h={transitions:null,markerInstances:null,retryQueue:new Set([y])},f.updateQueue=h):(f=h.retryQueue,f===null?h.retryQueue=new Set([y]):f.add(y)),Z1(u,y,S)),!1}throw Error(s(435,f.tag))}return Z1(u,y,S),Y1(),!1}if(Vt)return h=si.current,h!==null?((h.flags&65536)===0&&(h.flags|=256),h.flags|=65536,h.lanes=S,y!==G0&&(u=Error(s(422),{cause:y}),qd(ei(u,f)))):(y!==G0&&(h=Error(s(423),{cause:y}),qd(ei(h,f))),u=u.current.alternate,u.flags|=65536,S&=-S,u.lanes|=S,y=ei(y,f),S=m1(u.stateNode,y,S),R1(u,S),Tn!==4&&(Tn=2)),!1;var k=Error(s(520),{cause:y});if(k=ei(k,f),pp===null?pp=[k]:pp.push(k),Tn!==4&&(Tn=2),h===null)return!0;y=ei(y,f),f=h;do{switch(f.tag){case 3:return f.flags|=65536,u=S&-S,f.lanes|=u,u=m1(f.stateNode,y,u),R1(f,u),!1;case 1:if(h=f.type,k=f.stateNode,(f.flags&128)===0&&(typeof h.getDerivedStateFromError=="function"||k!==null&&typeof k.componentDidCatch=="function"&&(Do===null||!Do.has(k))))return f.flags|=65536,S&=-S,f.lanes|=S,S=T$(S),E$(S,u,f,y),R1(f,S),!1}f=f.return}while(f!==null);return!1}var R$=Error(s(461)),ms=!1;function Ts(u,h,f,y){h.child=u===null?FC(h,null,f,y):zl(h,u.child,f,y)}function A$(u,h,f,y,S){f=f.render;var k=h.ref;if("ref"in y){var F={};for(var U in y)U!=="ref"&&(F[U]=y[U])}else F=y;return Wl(h),y=Z0(u,h,f,F,k,S),U=J0(),u!==null&&!ms?(e1(u,h,S),Fa(u,h,S)):(Vt&&U&&U0(h),h.flags|=1,Ts(u,h,y,S),h.child)}function D$(u,h,f,y,S){if(u===null){var k=f.type;return typeof k=="function"&&!P1(k)&&k.defaultProps===void 0&&f.compare===null?(h.tag=15,h.type=k,_$(u,h,k,y,S)):(u=Cg(f.type,null,y,h,h.mode,S),u.ref=h.ref,u.return=h,h.child=u)}if(k=u.child,!$1(u,S)){var F=k.memoizedProps;if(f=f.compare,f=f!==null?f:Wd,f(F,y)&&u.ref===h.ref)return Fa(u,h,S)}return h.flags|=1,u=Ro(k,y),u.ref=h.ref,u.return=h,h.child=u}function _$(u,h,f,y,S){if(u!==null){var k=u.memoizedProps;if(Wd(k,y)&&u.ref===h.ref)if(ms=!1,h.pendingProps=y=k,$1(u,S))(u.flags&131072)!==0&&(ms=!0);else return h.lanes=u.lanes,Fa(u,h,S)}return g1(u,h,f,y,S)}function O$(u,h,f){var y=h.pendingProps,S=y.children,k=(h.stateNode._pendingVisibility&2)!==0,F=u!==null?u.memoizedState:null;if(sp(u,h),y.mode==="hidden"||k){if((h.flags&128)!==0){if(y=F!==null?F.baseLanes|f:f,u!==null){for(S=h.child=u.child,k=0;S!==null;)k=k|S.lanes|S.childLanes,S=S.sibling;h.childLanes=k&~y}else h.childLanes=0,h.child=null;return F$(u,h,y,f)}if((f&536870912)!==0)h.memoizedState={baseLanes:0,cachePool:null},u!==null&&lg(h,F!==null?F.cachePool:null),F!==null?zC(h,F):j0(),LC(h);else return h.lanes=h.childLanes=536870912,F$(u,h,F!==null?F.baseLanes|f:f,f)}else F!==null?(lg(h,F.cachePool),zC(h,F),wo(),h.memoizedState=null):(u!==null&&lg(h,null),j0(),wo());return Ts(u,h,S,f),h.child}function F$(u,h,f,y){var S=Y0();return S=S===null?null:{parent:is._currentValue,pool:S},h.memoizedState={baseLanes:f,cachePool:S},u!==null&&lg(h,null),j0(),LC(h),u!==null&&rp(u,h,y,!0),null}function sp(u,h){var f=h.ref;if(f===null)u!==null&&u.ref!==null&&(h.flags|=2097664);else{if(typeof f!="function"&&typeof f!="object")throw Error(s(284));(u===null||u.ref!==f)&&(h.flags|=2097664)}}function g1(u,h,f,y,S){return Wl(h),f=Z0(u,h,f,y,void 0,S),y=J0(),u!==null&&!ms?(e1(u,h,S),Fa(u,h,S)):(Vt&&y&&U0(h),h.flags|=1,Ts(u,h,f,S),h.child)}function z$(u,h,f,y,S,k){return Wl(h),h.updateQueue=null,f=UC(h,y,f,S),VC(u),y=J0(),u!==null&&!ms?(e1(u,h,k),Fa(u,h,k)):(Vt&&y&&U0(h),h.flags|=1,Ts(u,h,f,k),h.child)}function L$(u,h,f,y,S){if(Wl(h),h.stateNode===null){var k=uc,F=f.contextType;typeof F=="object"&&F!==null&&(k=Bs(F)),k=new f(y,k),h.memoizedState=k.state!==null&&k.state!==void 0?k.state:null,k.updater=f1,h.stateNode=k,k._reactInternals=h,k=h.stateNode,k.props=y,k.state=h.memoizedState,k.refs={},T1(h),F=f.contextType,k.context=typeof F=="object"&&F!==null?Bs(F):uc,k.state=h.memoizedState,F=f.getDerivedStateFromProps,typeof F=="function"&&(p1(h,f,F,y),k.state=h.memoizedState),typeof f.getDerivedStateFromProps=="function"||typeof k.getSnapshotBeforeUpdate=="function"||typeof k.UNSAFE_componentWillMount!="function"&&typeof k.componentWillMount!="function"||(F=k.state,typeof k.componentWillMount=="function"&&k.componentWillMount(),typeof k.UNSAFE_componentWillMount=="function"&&k.UNSAFE_componentWillMount(),F!==k.state&&f1.enqueueReplaceState(k,k.state,null),op(h,y,k,S),ap(),k.state=h.memoizedState),typeof k.componentDidMount=="function"&&(h.flags|=4194308),y=!0}else if(u===null){k=h.stateNode;var U=h.memoizedProps,Y=Vl(f,U);k.props=Y;var he=k.context,ke=f.contextType;F=uc,typeof ke=="object"&&ke!==null&&(F=Bs(ke));var Re=f.getDerivedStateFromProps;ke=typeof Re=="function"||typeof k.getSnapshotBeforeUpdate=="function",U=h.pendingProps!==U,ke||typeof k.UNSAFE_componentWillReceiveProps!="function"&&typeof k.componentWillReceiveProps!="function"||(U||he!==F)&&C$(h,k,y,F),$o=!1;var be=h.memoizedState;k.state=be,op(h,y,k,S),ap(),he=h.memoizedState,U||be!==he||$o?(typeof Re=="function"&&(p1(h,f,Re,y),he=h.memoizedState),(Y=$o||S$(h,f,Y,y,be,he,F))?(ke||typeof k.UNSAFE_componentWillMount!="function"&&typeof k.componentWillMount!="function"||(typeof k.componentWillMount=="function"&&k.componentWillMount(),typeof k.UNSAFE_componentWillMount=="function"&&k.UNSAFE_componentWillMount()),typeof k.componentDidMount=="function"&&(h.flags|=4194308)):(typeof k.componentDidMount=="function"&&(h.flags|=4194308),h.memoizedProps=y,h.memoizedState=he),k.props=y,k.state=he,k.context=F,y=Y):(typeof k.componentDidMount=="function"&&(h.flags|=4194308),y=!1)}else{k=h.stateNode,E1(u,h),F=h.memoizedProps,ke=Vl(f,F),k.props=ke,Re=h.pendingProps,be=k.context,he=f.contextType,Y=uc,typeof he=="object"&&he!==null&&(Y=Bs(he)),U=f.getDerivedStateFromProps,(he=typeof U=="function"||typeof k.getSnapshotBeforeUpdate=="function")||typeof k.UNSAFE_componentWillReceiveProps!="function"&&typeof k.componentWillReceiveProps!="function"||(F!==Re||be!==Y)&&C$(h,k,y,Y),$o=!1,be=h.memoizedState,k.state=be,op(h,y,k,S),ap();var Se=h.memoizedState;F!==Re||be!==Se||$o||u!==null&&u.dependencies!==null&&bg(u.dependencies)?(typeof U=="function"&&(p1(h,f,U,y),Se=h.memoizedState),(ke=$o||S$(h,f,ke,y,be,Se,Y)||u!==null&&u.dependencies!==null&&bg(u.dependencies))?(he||typeof k.UNSAFE_componentWillUpdate!="function"&&typeof k.componentWillUpdate!="function"||(typeof k.componentWillUpdate=="function"&&k.componentWillUpdate(y,Se,Y),typeof k.UNSAFE_componentWillUpdate=="function"&&k.UNSAFE_componentWillUpdate(y,Se,Y)),typeof k.componentDidUpdate=="function"&&(h.flags|=4),typeof k.getSnapshotBeforeUpdate=="function"&&(h.flags|=1024)):(typeof k.componentDidUpdate!="function"||F===u.memoizedProps&&be===u.memoizedState||(h.flags|=4),typeof k.getSnapshotBeforeUpdate!="function"||F===u.memoizedProps&&be===u.memoizedState||(h.flags|=1024),h.memoizedProps=y,h.memoizedState=Se),k.props=y,k.state=Se,k.context=Y,y=ke):(typeof k.componentDidUpdate!="function"||F===u.memoizedProps&&be===u.memoizedState||(h.flags|=4),typeof k.getSnapshotBeforeUpdate!="function"||F===u.memoizedProps&&be===u.memoizedState||(h.flags|=1024),y=!1)}return k=y,sp(u,h),y=(h.flags&128)!==0,k||y?(k=h.stateNode,f=y&&typeof f.getDerivedStateFromError!="function"?null:k.render(),h.flags|=1,u!==null&&y?(h.child=zl(h,u.child,null,S),h.child=zl(h,null,f,S)):Ts(u,h,f,S),h.memoizedState=k.state,u=h.child):u=Fa(u,h,S),u}function P$(u,h,f,y){return jd(),h.flags|=256,Ts(u,h,f,y),h.child}var y1={dehydrated:null,treeContext:null,retryLane:0};function x1(u){return{baseLanes:u,cachePool:BC()}}function b1(u,h,f){return u=u!==null?u.childLanes&~f:0,h&&(u|=oi),u}function M$(u,h,f){var y=h.pendingProps,S=!1,k=(h.flags&128)!==0,F;if((F=k)||(F=u!==null&&u.memoizedState===null?!1:(rs.current&2)!==0),F&&(S=!0,h.flags&=-129),F=(h.flags&32)!==0,h.flags&=-33,u===null){if(Vt){if(S?bo(h):wo(),Vt){var U=Is,Y;if(Y=U){e:{for(Y=U,U=ta;Y.nodeType!==8;){if(!U){U=null;break e}if(Y=_i(Y.nextSibling),Y===null){U=null;break e}}U=Y}U!==null?(h.memoizedState={dehydrated:U,treeContext:_l!==null?{id:Aa,overflow:Da}:null,retryLane:536870912},Y=ai(18,null,null,0),Y.stateNode=U,Y.return=h,h.child=Y,sr=h,Is=null,Y=!0):Y=!1}Y||Fl(h)}if(U=h.memoizedState,U!==null&&(U=U.dehydrated,U!==null))return U.data==="$!"?h.lanes=16:h.lanes=536870912,null;_a(h)}return U=y.children,y=y.fallback,S?(wo(),S=h.mode,U=v1({mode:"hidden",children:U},S),y=Hl(y,S,f,null),U.return=h,y.return=h,U.sibling=y,h.child=U,S=h.child,S.memoizedState=x1(f),S.childLanes=b1(u,F,f),h.memoizedState=y1,y):(bo(h),w1(h,U))}if(Y=u.memoizedState,Y!==null&&(U=Y.dehydrated,U!==null)){if(k)h.flags&256?(bo(h),h.flags&=-257,h=S1(u,h,f)):h.memoizedState!==null?(wo(),h.child=u.child,h.flags|=128,h=null):(wo(),S=y.fallback,U=h.mode,y=v1({mode:"visible",children:y.children},U),S=Hl(S,U,f,null),S.flags|=2,y.return=h,S.return=h,y.sibling=S,h.child=y,zl(h,u.child,null,f),y=h.child,y.memoizedState=x1(f),y.childLanes=b1(u,F,f),h.memoizedState=y1,h=S);else if(bo(h),U.data==="$!"){if(F=U.nextSibling&&U.nextSibling.dataset,F)var he=F.dgst;F=he,y=Error(s(419)),y.stack="",y.digest=F,qd({value:y,source:null,stack:null}),h=S1(u,h,f)}else if(ms||rp(u,h,f,!1),F=(f&u.childLanes)!==0,ms||F){if(F=un,F!==null){if(y=f&-f,(y&42)!==0)y=1;else switch(y){case 2:y=1;break;case 8:y=4;break;case 32:y=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:y=64;break;case 268435456:y=134217728;break;default:y=0}if(y=(y&(F.suspendedLanes|f))!==0?0:y,y!==0&&y!==Y.retryLane)throw Y.retryLane=y,xo(u,y),rr(F,u,y),R$}U.data==="$?"||Y1(),h=S1(u,h,f)}else U.data==="$?"?(h.flags|=128,h.child=u.child,h=Az.bind(null,u),U._reactRetry=h,h=null):(u=Y.treeContext,Is=_i(U.nextSibling),sr=h,Vt=!0,Ai=null,ta=!1,u!==null&&(ti[ni++]=Aa,ti[ni++]=Da,ti[ni++]=_l,Aa=u.id,Da=u.overflow,_l=h),h=w1(h,y.children),h.flags|=4096);return h}return S?(wo(),S=y.fallback,U=h.mode,Y=u.child,he=Y.sibling,y=Ro(Y,{mode:"hidden",children:y.children}),y.subtreeFlags=Y.subtreeFlags&31457280,he!==null?S=Ro(he,S):(S=Hl(S,U,f,null),S.flags|=2),S.return=h,y.return=h,y.sibling=S,h.child=y,y=S,S=h.child,U=u.child.memoizedState,U===null?U=x1(f):(Y=U.cachePool,Y!==null?(he=is._currentValue,Y=Y.parent!==he?{parent:he,pool:he}:Y):Y=BC(),U={baseLanes:U.baseLanes|f,cachePool:Y}),S.memoizedState=U,S.childLanes=b1(u,F,f),h.memoizedState=y1,y):(bo(h),f=u.child,u=f.sibling,f=Ro(f,{mode:"visible",children:y.children}),f.return=h,f.sibling=null,u!==null&&(F=h.deletions,F===null?(h.deletions=[u],h.flags|=16):F.push(u)),h.child=f,h.memoizedState=null,f)}function w1(u,h){return h=v1({mode:"visible",children:h},u.mode),h.return=u,u.child=h}function v1(u,h){return hk(u,h,0,null)}function S1(u,h,f){return zl(h,u.child,null,f),u=w1(h,h.pendingProps.children),u.flags|=2,h.memoizedState=null,u}function B$(u,h,f){u.lanes|=h;var y=u.alternate;y!==null&&(y.lanes|=h),N1(u.return,h,f)}function C1(u,h,f,y,S){var k=u.memoizedState;k===null?u.memoizedState={isBackwards:h,rendering:null,renderingStartTime:0,last:y,tail:f,tailMode:S}:(k.isBackwards=h,k.rendering=null,k.renderingStartTime=0,k.last=y,k.tail=f,k.tailMode=S)}function V$(u,h,f){var y=h.pendingProps,S=y.revealOrder,k=y.tail;if(Ts(u,h,y.children,f),y=rs.current,(y&2)!==0)y=y&1|2,h.flags|=128;else{if(u!==null&&(u.flags&128)!==0)e:for(u=h.child;u!==null;){if(u.tag===13)u.memoizedState!==null&&B$(u,f,h);else if(u.tag===19)B$(u,f,h);else if(u.child!==null){u.child.return=u,u=u.child;continue}if(u===h)break e;for(;u.sibling===null;){if(u.return===null||u.return===h)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}y&=1}switch(He(rs,y),S){case"forwards":for(f=h.child,S=null;f!==null;)u=f.alternate,u!==null&&og(u)===null&&(S=f),f=f.sibling;f=S,f===null?(S=h.child,h.child=null):(S=f.sibling,f.sibling=null),C1(h,!1,S,f,k);break;case"backwards":for(f=null,S=h.child,h.child=null;S!==null;){if(u=S.alternate,u!==null&&og(u)===null){h.child=S;break}u=S.sibling,S.sibling=f,f=S,S=u}C1(h,!0,f,null,k);break;case"together":C1(h,!1,null,null,void 0);break;default:h.memoizedState=null}return h.child}function Fa(u,h,f){if(u!==null&&(h.dependencies=u.dependencies),Ao|=h.lanes,(f&h.childLanes)===0)if(u!==null){if(rp(u,h,f,!1),(f&h.childLanes)===0)return null}else return null;if(u!==null&&h.child!==u.child)throw Error(s(153));if(h.child!==null){for(u=h.child,f=Ro(u,u.pendingProps),h.child=f,f.return=h;u.sibling!==null;)u=u.sibling,f=f.sibling=Ro(u,u.pendingProps),f.return=h;f.sibling=null}return h.child}function $1(u,h){return(u.lanes&h)!==0?!0:(u=u.dependencies,!!(u!==null&&bg(u)))}function yz(u,h,f){switch(h.tag){case 3:_t(h,h.stateNode.containerInfo),Co(h,is,u.memoizedState.cache),jd();break;case 27:case 5:Wt(h);break;case 4:_t(h,h.stateNode.containerInfo);break;case 10:Co(h,h.type,h.memoizedProps.value);break;case 13:var y=h.memoizedState;if(y!==null)return y.dehydrated!==null?(bo(h),h.flags|=128,null):(f&h.child.childLanes)!==0?M$(u,h,f):(bo(h),u=Fa(u,h,f),u!==null?u.sibling:null);bo(h);break;case 19:var S=(u.flags&128)!==0;if(y=(f&h.childLanes)!==0,y||(rp(u,h,f,!1),y=(f&h.childLanes)!==0),S){if(y)return V$(u,h,f);h.flags|=128}if(S=h.memoizedState,S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),He(rs,rs.current),y)break;return null;case 22:case 23:return h.lanes=0,O$(u,h,f);case 24:Co(h,is,u.memoizedState.cache)}return Fa(u,h,f)}function U$(u,h,f){if(u!==null)if(u.memoizedProps!==h.pendingProps)ms=!0;else{if(!$1(u,f)&&(h.flags&128)===0)return ms=!1,yz(u,h,f);ms=(u.flags&131072)!==0}else ms=!1,Vt&&(h.flags&1048576)!==0&&NC(h,ng,h.index);switch(h.lanes=0,h.tag){case 16:e:{u=h.pendingProps;var y=h.elementType,S=y._init;if(y=S(y._payload),h.type=y,typeof y=="function")P1(y)?(u=Vl(y,u),h.tag=1,h=L$(null,h,y,u,f)):(h.tag=0,h=g1(null,h,y,u,f));else{if(y!=null){if(S=y.$$typeof,S===x){h.tag=11,h=A$(null,h,y,u,f);break e}else if(S===v){h.tag=14,h=D$(null,h,y,u,f);break e}}throw h=P(y)||y,Error(s(306,h,""))}}return h;case 0:return g1(u,h,h.type,h.pendingProps,f);case 1:return y=h.type,S=Vl(y,h.pendingProps),L$(u,h,y,S,f);case 3:e:{if(_t(h,h.stateNode.containerInfo),u===null)throw Error(s(387));var k=h.pendingProps;S=h.memoizedState,y=S.element,E1(u,h),op(h,k,null,f);var F=h.memoizedState;if(k=F.cache,Co(h,is,k),k!==S.cache&&I1(h,[is],f,!0),ap(),k=F.element,S.isDehydrated)if(S={element:k,isDehydrated:!1,cache:F.cache},h.updateQueue.baseState=S,h.memoizedState=S,h.flags&256){h=P$(u,h,k,f);break e}else if(k!==y){y=ei(Error(s(424)),h),qd(y),h=P$(u,h,k,f);break e}else for(Is=_i(h.stateNode.containerInfo.firstChild),sr=h,Vt=!0,Ai=null,ta=!0,f=FC(h,null,k,f),h.child=f;f;)f.flags=f.flags&-3|4096,f=f.sibling;else{if(jd(),k===y){h=Fa(u,h,f);break e}Ts(u,h,k,f)}h=h.child}return h;case 26:return sp(u,h),u===null?(f=Hk(h.type,null,h.pendingProps,null))?h.memoizedState=f:Vt||(f=h.type,u=h.pendingProps,y=Fg(nt.current).createElement(f),y[Bn]=h,y[Ps]=u,Es(y,f,u),kn(y),h.stateNode=y):h.memoizedState=Hk(h.type,u.memoizedProps,h.pendingProps,u.memoizedState),null;case 27:return Wt(h),u===null&&Vt&&(y=h.stateNode=Uk(h.type,h.pendingProps,nt.current),sr=h,ta=!0,Is=_i(y.firstChild)),y=h.pendingProps.children,u!==null||Vt?Ts(u,h,y,f):h.child=zl(h,null,y,f),sp(u,h),h.child;case 5:return u===null&&Vt&&((S=y=Is)&&(y=qz(y,h.type,h.pendingProps,ta),y!==null?(h.stateNode=y,sr=h,Is=_i(y.firstChild),ta=!1,S=!0):S=!1),S||Fl(h)),Wt(h),S=h.type,k=h.pendingProps,F=u!==null?u.memoizedProps:null,y=k.children,cw(S,k)?y=null:F!==null&&cw(S,F)&&(h.flags|=32),h.memoizedState!==null&&(S=Z0(u,h,cz,null,null,f),Sp._currentValue=S),sp(u,h),Ts(u,h,y,f),h.child;case 6:return u===null&&Vt&&((u=f=Is)&&(f=Xz(f,h.pendingProps,ta),f!==null?(h.stateNode=f,sr=h,Is=null,u=!0):u=!1),u||Fl(h)),null;case 13:return M$(u,h,f);case 4:return _t(h,h.stateNode.containerInfo),y=h.pendingProps,u===null?h.child=zl(h,null,y,f):Ts(u,h,y,f),h.child;case 11:return A$(u,h,h.type,h.pendingProps,f);case 7:return Ts(u,h,h.pendingProps,f),h.child;case 8:return Ts(u,h,h.pendingProps.children,f),h.child;case 12:return Ts(u,h,h.pendingProps.children,f),h.child;case 10:return y=h.pendingProps,Co(h,h.type,y.value),Ts(u,h,y.children,f),h.child;case 9:return S=h.type._context,y=h.pendingProps.children,Wl(h),S=Bs(S),y=y(S),h.flags|=1,Ts(u,h,y,f),h.child;case 14:return D$(u,h,h.type,h.pendingProps,f);case 15:return _$(u,h,h.type,h.pendingProps,f);case 19:return V$(u,h,f);case 22:return O$(u,h,f);case 24:return Wl(h),y=Bs(is),u===null?(S=Y0(),S===null&&(S=un,k=X0(),S.pooledCache=k,k.refCount++,k!==null&&(S.pooledCacheLanes|=f),S=k),h.memoizedState={parent:y,cache:S},T1(h),Co(h,is,S)):((u.lanes&f)!==0&&(E1(u,h),op(h,null,null,f),ap()),S=u.memoizedState,k=h.memoizedState,S.parent!==y?(S={parent:y,cache:y},h.memoizedState=S,h.lanes===0&&(h.memoizedState=h.updateQueue.baseState=S),Co(h,is,y)):(y=k.cache,Co(h,is,y),y!==S.cache&&I1(h,[is],f,!0))),Ts(u,h,h.pendingProps.children,f),h.child;case 29:throw h.pendingProps}throw Error(s(156,h.tag))}var k1=Fe(null),Ul=null,za=null;function Co(u,h,f){He(k1,h._currentValue),h._currentValue=f}function La(u){u._currentValue=k1.current,Pe(k1)}function N1(u,h,f){for(;u!==null;){var y=u.alternate;if((u.childLanes&h)!==h?(u.childLanes|=h,y!==null&&(y.childLanes|=h)):y!==null&&(y.childLanes&h)!==h&&(y.childLanes|=h),u===f)break;u=u.return}}function I1(u,h,f,y){var S=u.child;for(S!==null&&(S.return=u);S!==null;){var k=S.dependencies;if(k!==null){var F=S.child;k=k.firstContext;e:for(;k!==null;){var U=k;k=S;for(var Y=0;Y<h.length;Y++)if(U.context===h[Y]){k.lanes|=f,U=k.alternate,U!==null&&(U.lanes|=f),N1(k.return,f,u),y||(F=null);break e}k=U.next}}else if(S.tag===18){if(F=S.return,F===null)throw Error(s(341));F.lanes|=f,k=F.alternate,k!==null&&(k.lanes|=f),N1(F,f,u),F=null}else F=S.child;if(F!==null)F.return=S;else for(F=S;F!==null;){if(F===u){F=null;break}if(S=F.sibling,S!==null){S.return=F.return,F=S;break}F=F.return}S=F}}function rp(u,h,f,y){u=null;for(var S=h,k=!1;S!==null;){if(!k){if((S.flags&524288)!==0)k=!0;else if((S.flags&262144)!==0)break}if(S.tag===10){var F=S.alternate;if(F===null)throw Error(s(387));if(F=F.memoizedProps,F!==null){var U=S.type;Or(S.pendingProps.value,F.value)||(u!==null?u.push(U):u=[U])}}else if(S===mt.current){if(F=S.alternate,F===null)throw Error(s(387));F.memoizedState.memoizedState!==S.memoizedState.memoizedState&&(u!==null?u.push(Sp):u=[Sp])}S=S.return}u!==null&&I1(h,u,f,y),h.flags|=262144}function bg(u){for(u=u.firstContext;u!==null;){if(!Or(u.context._currentValue,u.memoizedValue))return!0;u=u.next}return!1}function Wl(u){Ul=u,za=null,u=u.dependencies,u!==null&&(u.firstContext=null)}function Bs(u){return W$(Ul,u)}function wg(u,h){return Ul===null&&Wl(u),W$(u,h)}function W$(u,h){var f=h._currentValue;if(h={context:h,memoizedValue:f,next:null},za===null){if(u===null)throw Error(s(308));za=h,u.dependencies={lanes:0,firstContext:h},u.flags|=524288}else za=za.next=h;return f}var $o=!1;function T1(u){u.updateQueue={baseState:u.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function E1(u,h){u=u.updateQueue,h.updateQueue===u&&(h.updateQueue={baseState:u.baseState,firstBaseUpdate:u.firstBaseUpdate,lastBaseUpdate:u.lastBaseUpdate,shared:u.shared,callbacks:null})}function ko(u){return{lane:u,tag:0,payload:null,callback:null,next:null}}function No(u,h,f){var y=u.updateQueue;if(y===null)return null;if(y=y.shared,(wn&2)!==0){var S=y.pending;return S===null?h.next=h:(h.next=S.next,S.next=h),y.pending=h,h=eg(u),$C(u,null,f),h}return Jm(u,y,h,f),eg(u)}function ip(u,h,f){if(h=h.updateQueue,h!==null&&(h=h.shared,(f&4194176)!==0)){var y=h.lanes;y&=u.pendingLanes,f|=y,h.lanes=f,Kr(u,f)}}function R1(u,h){var f=u.updateQueue,y=u.alternate;if(y!==null&&(y=y.updateQueue,f===y)){var S=null,k=null;if(f=f.firstBaseUpdate,f!==null){do{var F={lane:f.lane,tag:f.tag,payload:f.payload,callback:null,next:null};k===null?S=k=F:k=k.next=F,f=f.next}while(f!==null);k===null?S=k=h:k=k.next=h}else S=k=h;f={baseState:y.baseState,firstBaseUpdate:S,lastBaseUpdate:k,shared:y.shared,callbacks:y.callbacks},u.updateQueue=f;return}u=f.lastBaseUpdate,u===null?f.firstBaseUpdate=h:u.next=h,f.lastBaseUpdate=h}var A1=!1;function ap(){if(A1){var u=mc;if(u!==null)throw u}}function op(u,h,f,y){A1=!1;var S=u.updateQueue;$o=!1;var k=S.firstBaseUpdate,F=S.lastBaseUpdate,U=S.shared.pending;if(U!==null){S.shared.pending=null;var Y=U,he=Y.next;Y.next=null,F===null?k=he:F.next=he,F=Y;var ke=u.alternate;ke!==null&&(ke=ke.updateQueue,U=ke.lastBaseUpdate,U!==F&&(U===null?ke.firstBaseUpdate=he:U.next=he,ke.lastBaseUpdate=Y))}if(k!==null){var Re=S.baseState;F=0,ke=he=Y=null,U=k;do{var be=U.lane&-536870913,Se=be!==U.lane;if(Se?(Lt&be)===be:(y&be)===be){be!==0&&be===fc&&(A1=!0),ke!==null&&(ke=ke.next={lane:0,tag:U.tag,payload:U.payload,callback:null,next:null});e:{var et=u,gt=U;be=h;var En=f;switch(gt.tag){case 1:if(et=gt.payload,typeof et=="function"){Re=et.call(En,Re,be);break e}Re=et;break e;case 3:et.flags=et.flags&-65537|128;case 0:if(et=gt.payload,be=typeof et=="function"?et.call(En,Re,be):et,be==null)break e;Re=L({},Re,be);break e;case 2:$o=!0}}be=U.callback,be!==null&&(u.flags|=64,Se&&(u.flags|=8192),Se=S.callbacks,Se===null?S.callbacks=[be]:Se.push(be))}else Se={lane:be,tag:U.tag,payload:U.payload,callback:U.callback,next:null},ke===null?(he=ke=Se,Y=Re):ke=ke.next=Se,F|=be;if(U=U.next,U===null){if(U=S.shared.pending,U===null)break;Se=U,U=Se.next,Se.next=null,S.lastBaseUpdate=Se,S.shared.pending=null}}while(!0);ke===null&&(Y=Re),S.baseState=Y,S.firstBaseUpdate=he,S.lastBaseUpdate=ke,k===null&&(S.shared.lanes=0),Ao|=F,u.lanes=F,u.memoizedState=Re}}function G$(u,h){if(typeof u!="function")throw Error(s(191,u));u.call(h)}function H$(u,h){var f=u.callbacks;if(f!==null)for(u.callbacks=null,u=0;u<f.length;u++)G$(f[u],h)}function lp(u,h){try{var f=h.updateQueue,y=f!==null?f.lastEffect:null;if(y!==null){var S=y.next;f=S;do{if((f.tag&u)===u){y=void 0;var k=f.create,F=f.inst;y=k(),F.destroy=y}f=f.next}while(f!==S)}}catch(U){sn(h,h.return,U)}}function Io(u,h,f){try{var y=h.updateQueue,S=y!==null?y.lastEffect:null;if(S!==null){var k=S.next;y=k;do{if((y.tag&u)===u){var F=y.inst,U=F.destroy;if(U!==void 0){F.destroy=void 0,S=h;var Y=f;try{U()}catch(he){sn(S,Y,he)}}}y=y.next}while(y!==k)}}catch(he){sn(h,h.return,he)}}function j$(u){var h=u.updateQueue;if(h!==null){var f=u.stateNode;try{H$(h,f)}catch(y){sn(u,u.return,y)}}}function q$(u,h,f){f.props=Vl(u.type,u.memoizedProps),f.state=u.memoizedState;try{f.componentWillUnmount()}catch(y){sn(u,h,y)}}function Gl(u,h){try{var f=u.ref;if(f!==null){var y=u.stateNode;switch(u.tag){case 26:case 27:case 5:var S=y;break;default:S=y}typeof f=="function"?u.refCleanup=f(S):f.current=S}}catch(k){sn(u,h,k)}}function Fr(u,h){var f=u.ref,y=u.refCleanup;if(f!==null)if(typeof y=="function")try{y()}catch(S){sn(u,h,S)}finally{u.refCleanup=null,u=u.alternate,u!=null&&(u.refCleanup=null)}else if(typeof f=="function")try{f(null)}catch(S){sn(u,h,S)}else f.current=null}function X$(u){var h=u.type,f=u.memoizedProps,y=u.stateNode;try{e:switch(h){case"button":case"input":case"select":case"textarea":f.autoFocus&&y.focus();break e;case"img":f.src?y.src=f.src:f.srcSet&&(y.srcset=f.srcSet)}}catch(S){sn(u,u.return,S)}}function K$(u,h,f){try{var y=u.stateNode;Uz(y,u.type,f,h),y[Ps]=h}catch(S){sn(u,u.return,S)}}function Y$(u){return u.tag===5||u.tag===3||u.tag===26||u.tag===27||u.tag===4}function D1(u){e:for(;;){for(;u.sibling===null;){if(u.return===null||Y$(u.return))return null;u=u.return}for(u.sibling.return=u.return,u=u.sibling;u.tag!==5&&u.tag!==6&&u.tag!==27&&u.tag!==18;){if(u.flags&2||u.child===null||u.tag===4)continue e;u.child.return=u,u=u.child}if(!(u.flags&2))return u.stateNode}}function _1(u,h,f){var y=u.tag;if(y===5||y===6)u=u.stateNode,h?f.nodeType===8?f.parentNode.insertBefore(u,h):f.insertBefore(u,h):(f.nodeType===8?(h=f.parentNode,h.insertBefore(u,f)):(h=f,h.appendChild(u)),f=f._reactRootContainer,f!=null||h.onclick!==null||(h.onclick=Og));else if(y!==4&&y!==27&&(u=u.child,u!==null))for(_1(u,h,f),u=u.sibling;u!==null;)_1(u,h,f),u=u.sibling}function vg(u,h,f){var y=u.tag;if(y===5||y===6)u=u.stateNode,h?f.insertBefore(u,h):f.appendChild(u);else if(y!==4&&y!==27&&(u=u.child,u!==null))for(vg(u,h,f),u=u.sibling;u!==null;)vg(u,h,f),u=u.sibling}var Pa=!1,In=!1,O1=!1,Q$=typeof WeakSet=="function"?WeakSet:Set,gs=null,Z$=!1;function xz(u,h){if(u=u.containerInfo,lw=Vg,u=mC(u),z0(u)){if("selectionStart"in u)var f={start:u.selectionStart,end:u.selectionEnd};else e:{f=(f=u.ownerDocument)&&f.defaultView||window;var y=f.getSelection&&f.getSelection();if(y&&y.rangeCount!==0){f=y.anchorNode;var S=y.anchorOffset,k=y.focusNode;y=y.focusOffset;try{f.nodeType,k.nodeType}catch{f=null;break e}var F=0,U=-1,Y=-1,he=0,ke=0,Re=u,be=null;t:for(;;){for(var Se;Re!==f||S!==0&&Re.nodeType!==3||(U=F+S),Re!==k||y!==0&&Re.nodeType!==3||(Y=F+y),Re.nodeType===3&&(F+=Re.nodeValue.length),(Se=Re.firstChild)!==null;)be=Re,Re=Se;for(;;){if(Re===u)break t;if(be===f&&++he===S&&(U=F),be===k&&++ke===y&&(Y=F),(Se=Re.nextSibling)!==null)break;Re=be,be=Re.parentNode}Re=Se}f=U===-1||Y===-1?null:{start:U,end:Y}}else f=null}f=f||{start:0,end:0}}else f=null;for(uw={focusedElem:u,selectionRange:f},Vg=!1,gs=h;gs!==null;)if(h=gs,u=h.child,(h.subtreeFlags&1028)!==0&&u!==null)u.return=h,gs=u;else for(;gs!==null;){switch(h=gs,k=h.alternate,u=h.flags,h.tag){case 0:break;case 11:case 15:break;case 1:if((u&1024)!==0&&k!==null){u=void 0,f=h,S=k.memoizedProps,k=k.memoizedState,y=f.stateNode;try{var et=Vl(f.type,S,f.elementType===f.type);u=y.getSnapshotBeforeUpdate(et,k),y.__reactInternalSnapshotBeforeUpdate=u}catch(gt){sn(f,f.return,gt)}}break;case 3:if((u&1024)!==0){if(u=h.stateNode.containerInfo,f=u.nodeType,f===9)pw(u);else if(f===1)switch(u.nodeName){case"HEAD":case"HTML":case"BODY":pw(u);break;default:u.textContent=""}}break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((u&1024)!==0)throw Error(s(163))}if(u=h.sibling,u!==null){u.return=h.return,gs=u;break}gs=h.return}return et=Z$,Z$=!1,et}function J$(u,h,f){var y=f.flags;switch(f.tag){case 0:case 11:case 15:Ba(u,f),y&4&&lp(5,f);break;case 1:if(Ba(u,f),y&4)if(u=f.stateNode,h===null)try{u.componentDidMount()}catch(U){sn(f,f.return,U)}else{var S=Vl(f.type,h.memoizedProps);h=h.memoizedState;try{u.componentDidUpdate(S,h,u.__reactInternalSnapshotBeforeUpdate)}catch(U){sn(f,f.return,U)}}y&64&&j$(f),y&512&&Gl(f,f.return);break;case 3:if(Ba(u,f),y&64&&(y=f.updateQueue,y!==null)){if(u=null,f.child!==null)switch(f.child.tag){case 27:case 5:u=f.child.stateNode;break;case 1:u=f.child.stateNode}try{H$(y,u)}catch(U){sn(f,f.return,U)}}break;case 26:Ba(u,f),y&512&&Gl(f,f.return);break;case 27:case 5:Ba(u,f),h===null&&y&4&&X$(f),y&512&&Gl(f,f.return);break;case 12:Ba(u,f);break;case 13:Ba(u,f),y&4&&nk(u,f);break;case 22:if(S=f.memoizedState!==null||Pa,!S){h=h!==null&&h.memoizedState!==null||In;var k=Pa,F=In;Pa=S,(In=h)&&!F?To(u,f,(f.subtreeFlags&8772)!==0):Ba(u,f),Pa=k,In=F}y&512&&(f.memoizedProps.mode==="manual"?Gl(f,f.return):Fr(f,f.return));break;default:Ba(u,f)}}function ek(u){var h=u.alternate;h!==null&&(u.alternate=null,ek(h)),u.child=null,u.deletions=null,u.sibling=null,u.tag===5&&(h=u.stateNode,h!==null&&Sl(h)),u.stateNode=null,u.return=null,u.dependencies=null,u.memoizedProps=null,u.memoizedState=null,u.pendingProps=null,u.stateNode=null,u.updateQueue=null}var Wn=null,zr=!1;function Ma(u,h,f){for(f=f.child;f!==null;)tk(u,h,f),f=f.sibling}function tk(u,h,f){if(ts&&typeof ts.onCommitFiberUnmount=="function")try{ts.onCommitFiberUnmount(zs,f)}catch{}switch(f.tag){case 26:In||Fr(f,h),Ma(u,h,f),f.memoizedState?f.memoizedState.count--:f.stateNode&&(f=f.stateNode,f.parentNode.removeChild(f));break;case 27:In||Fr(f,h);var y=Wn,S=zr;for(Wn=f.stateNode,Ma(u,h,f),f=f.stateNode,h=f.attributes;h.length;)f.removeAttributeNode(h[0]);Sl(f),Wn=y,zr=S;break;case 5:In||Fr(f,h);case 6:S=Wn;var k=zr;if(Wn=null,Ma(u,h,f),Wn=S,zr=k,Wn!==null)if(zr)try{u=Wn,y=f.stateNode,u.nodeType===8?u.parentNode.removeChild(y):u.removeChild(y)}catch(F){sn(f,h,F)}else try{Wn.removeChild(f.stateNode)}catch(F){sn(f,h,F)}break;case 18:Wn!==null&&(zr?(h=Wn,f=f.stateNode,h.nodeType===8?dw(h.parentNode,f):h.nodeType===1&&dw(h,f),Np(h)):dw(Wn,f.stateNode));break;case 4:y=Wn,S=zr,Wn=f.stateNode.containerInfo,zr=!0,Ma(u,h,f),Wn=y,zr=S;break;case 0:case 11:case 14:case 15:In||Io(2,f,h),In||Io(4,f,h),Ma(u,h,f);break;case 1:In||(Fr(f,h),y=f.stateNode,typeof y.componentWillUnmount=="function"&&q$(f,h,y)),Ma(u,h,f);break;case 21:Ma(u,h,f);break;case 22:In||Fr(f,h),In=(y=In)||f.memoizedState!==null,Ma(u,h,f),In=y;break;default:Ma(u,h,f)}}function nk(u,h){if(h.memoizedState===null&&(u=h.alternate,u!==null&&(u=u.memoizedState,u!==null&&(u=u.dehydrated,u!==null))))try{Np(u)}catch(f){sn(h,h.return,f)}}function bz(u){switch(u.tag){case 13:case 19:var h=u.stateNode;return h===null&&(h=u.stateNode=new Q$),h;case 22:return u=u.stateNode,h=u._retryCache,h===null&&(h=u._retryCache=new Q$),h;default:throw Error(s(435,u.tag))}}function F1(u,h){var f=bz(u);h.forEach(function(y){var S=Dz.bind(null,u,y);f.has(y)||(f.add(y),y.then(S,S))})}function ri(u,h){var f=h.deletions;if(f!==null)for(var y=0;y<f.length;y++){var S=f[y],k=u,F=h,U=F;e:for(;U!==null;){switch(U.tag){case 27:case 5:Wn=U.stateNode,zr=!1;break e;case 3:Wn=U.stateNode.containerInfo,zr=!0;break e;case 4:Wn=U.stateNode.containerInfo,zr=!0;break e}U=U.return}if(Wn===null)throw Error(s(160));tk(k,F,S),Wn=null,zr=!1,k=S.alternate,k!==null&&(k.return=null),S.return=null}if(h.subtreeFlags&13878)for(h=h.child;h!==null;)sk(h,u),h=h.sibling}var Di=null;function sk(u,h){var f=u.alternate,y=u.flags;switch(u.tag){case 0:case 11:case 14:case 15:ri(h,u),ii(u),y&4&&(Io(3,u,u.return),lp(3,u),Io(5,u,u.return));break;case 1:ri(h,u),ii(u),y&512&&(In||f===null||Fr(f,f.return)),y&64&&Pa&&(u=u.updateQueue,u!==null&&(y=u.callbacks,y!==null&&(f=u.shared.hiddenCallbacks,u.shared.hiddenCallbacks=f===null?y:f.concat(y))));break;case 26:var S=Di;if(ri(h,u),ii(u),y&512&&(In||f===null||Fr(f,f.return)),y&4){var k=f!==null?f.memoizedState:null;if(y=u.memoizedState,f===null)if(y===null)if(u.stateNode===null){e:{y=u.type,f=u.memoizedProps,S=S.ownerDocument||S;t:switch(y){case"title":k=S.getElementsByTagName("title")[0],(!k||k[ka]||k[Bn]||k.namespaceURI==="http://www.w3.org/2000/svg"||k.hasAttribute("itemprop"))&&(k=S.createElement(y),S.head.insertBefore(k,S.querySelector("head > title"))),Es(k,y,f),k[Bn]=u,kn(k),y=k;break e;case"link":var F=Xk("link","href",S).get(y+(f.href||""));if(F){for(var U=0;U<F.length;U++)if(k=F[U],k.getAttribute("href")===(f.href==null?null:f.href)&&k.getAttribute("rel")===(f.rel==null?null:f.rel)&&k.getAttribute("title")===(f.title==null?null:f.title)&&k.getAttribute("crossorigin")===(f.crossOrigin==null?null:f.crossOrigin)){F.splice(U,1);break t}}k=S.createElement(y),Es(k,y,f),S.head.appendChild(k);break;case"meta":if(F=Xk("meta","content",S).get(y+(f.content||""))){for(U=0;U<F.length;U++)if(k=F[U],k.getAttribute("content")===(f.content==null?null:""+f.content)&&k.getAttribute("name")===(f.name==null?null:f.name)&&k.getAttribute("property")===(f.property==null?null:f.property)&&k.getAttribute("http-equiv")===(f.httpEquiv==null?null:f.httpEquiv)&&k.getAttribute("charset")===(f.charSet==null?null:f.charSet)){F.splice(U,1);break t}}k=S.createElement(y),Es(k,y,f),S.head.appendChild(k);break;default:throw Error(s(468,y))}k[Bn]=u,kn(k),y=k}u.stateNode=y}else Kk(S,u.type,u.stateNode);else u.stateNode=qk(S,y,u.memoizedProps);else k!==y?(k===null?f.stateNode!==null&&(f=f.stateNode,f.parentNode.removeChild(f)):k.count--,y===null?Kk(S,u.type,u.stateNode):qk(S,y,u.memoizedProps)):y===null&&u.stateNode!==null&&K$(u,u.memoizedProps,f.memoizedProps)}break;case 27:if(y&4&&u.alternate===null){S=u.stateNode,k=u.memoizedProps;try{for(var Y=S.firstChild;Y;){var he=Y.nextSibling,ke=Y.nodeName;Y[ka]||ke==="HEAD"||ke==="BODY"||ke==="SCRIPT"||ke==="STYLE"||ke==="LINK"&&Y.rel.toLowerCase()==="stylesheet"||S.removeChild(Y),Y=he}for(var Re=u.type,be=S.attributes;be.length;)S.removeAttributeNode(be[0]);Es(S,Re,k),S[Bn]=u,S[Ps]=k}catch(et){sn(u,u.return,et)}}case 5:if(ri(h,u),ii(u),y&512&&(In||f===null||Fr(f,f.return)),u.flags&32){S=u.stateNode;try{Na(S,"")}catch(et){sn(u,u.return,et)}}y&4&&u.stateNode!=null&&(S=u.memoizedProps,K$(u,S,f!==null?f.memoizedProps:S)),y&1024&&(O1=!0);break;case 6:if(ri(h,u),ii(u),y&4){if(u.stateNode===null)throw Error(s(162));y=u.memoizedProps,f=u.stateNode;try{f.nodeValue=y}catch(et){sn(u,u.return,et)}}break;case 3:if(Pg=null,S=Di,Di=zg(h.containerInfo),ri(h,u),Di=S,ii(u),y&4&&f!==null&&f.memoizedState.isDehydrated)try{Np(h.containerInfo)}catch(et){sn(u,u.return,et)}O1&&(O1=!1,rk(u));break;case 4:y=Di,Di=zg(u.stateNode.containerInfo),ri(h,u),ii(u),Di=y;break;case 12:ri(h,u),ii(u);break;case 13:ri(h,u),ii(u),u.child.flags&8192&&u.memoizedState!==null!=(f!==null&&f.memoizedState!==null)&&(G1=jt()),y&4&&(y=u.updateQueue,y!==null&&(u.updateQueue=null,F1(u,y)));break;case 22:if(y&512&&(In||f===null||Fr(f,f.return)),Y=u.memoizedState!==null,he=f!==null&&f.memoizedState!==null,ke=Pa,Re=In,Pa=ke||Y,In=Re||he,ri(h,u),In=Re,Pa=ke,ii(u),h=u.stateNode,h._current=u,h._visibility&=-3,h._visibility|=h._pendingVisibility&2,y&8192&&(h._visibility=Y?h._visibility&-2:h._visibility|1,Y&&(h=Pa||In,f===null||he||h||bc(u)),u.memoizedProps===null||u.memoizedProps.mode!=="manual"))e:for(f=null,h=u;;){if(h.tag===5||h.tag===26||h.tag===27){if(f===null){he=f=h;try{if(S=he.stateNode,Y)k=S.style,typeof k.setProperty=="function"?k.setProperty("display","none","important"):k.display="none";else{F=he.stateNode,U=he.memoizedProps.style;var Se=U!=null&&U.hasOwnProperty("display")?U.display:null;F.style.display=Se==null||typeof Se=="boolean"?"":(""+Se).trim()}}catch(et){sn(he,he.return,et)}}}else if(h.tag===6){if(f===null){he=h;try{he.stateNode.nodeValue=Y?"":he.memoizedProps}catch(et){sn(he,he.return,et)}}}else if((h.tag!==22&&h.tag!==23||h.memoizedState===null||h===u)&&h.child!==null){h.child.return=h,h=h.child;continue}if(h===u)break e;for(;h.sibling===null;){if(h.return===null||h.return===u)break e;f===h&&(f=null),h=h.return}f===h&&(f=null),h.sibling.return=h.return,h=h.sibling}y&4&&(y=u.updateQueue,y!==null&&(f=y.retryQueue,f!==null&&(y.retryQueue=null,F1(u,f))));break;case 19:ri(h,u),ii(u),y&4&&(y=u.updateQueue,y!==null&&(u.updateQueue=null,F1(u,y)));break;case 21:break;default:ri(h,u),ii(u)}}function ii(u){var h=u.flags;if(h&2){try{if(u.tag!==27){e:{for(var f=u.return;f!==null;){if(Y$(f)){var y=f;break e}f=f.return}throw Error(s(160))}switch(y.tag){case 27:var S=y.stateNode,k=D1(u);vg(u,k,S);break;case 5:var F=y.stateNode;y.flags&32&&(Na(F,""),y.flags&=-33);var U=D1(u);vg(u,U,F);break;case 3:case 4:var Y=y.stateNode.containerInfo,he=D1(u);_1(u,he,Y);break;default:throw Error(s(161))}}}catch(ke){sn(u,u.return,ke)}u.flags&=-3}h&4096&&(u.flags&=-4097)}function rk(u){if(u.subtreeFlags&1024)for(u=u.child;u!==null;){var h=u;rk(h),h.tag===5&&h.flags&1024&&h.stateNode.reset(),u=u.sibling}}function Ba(u,h){if(h.subtreeFlags&8772)for(h=h.child;h!==null;)J$(u,h.alternate,h),h=h.sibling}function bc(u){for(u=u.child;u!==null;){var h=u;switch(h.tag){case 0:case 11:case 14:case 15:Io(4,h,h.return),bc(h);break;case 1:Fr(h,h.return);var f=h.stateNode;typeof f.componentWillUnmount=="function"&&q$(h,h.return,f),bc(h);break;case 26:case 27:case 5:Fr(h,h.return),bc(h);break;case 22:Fr(h,h.return),h.memoizedState===null&&bc(h);break;default:bc(h)}u=u.sibling}}function To(u,h,f){for(f=f&&(h.subtreeFlags&8772)!==0,h=h.child;h!==null;){var y=h.alternate,S=u,k=h,F=k.flags;switch(k.tag){case 0:case 11:case 15:To(S,k,f),lp(4,k);break;case 1:if(To(S,k,f),y=k,S=y.stateNode,typeof S.componentDidMount=="function")try{S.componentDidMount()}catch(he){sn(y,y.return,he)}if(y=k,S=y.updateQueue,S!==null){var U=y.stateNode;try{var Y=S.shared.hiddenCallbacks;if(Y!==null)for(S.shared.hiddenCallbacks=null,S=0;S<Y.length;S++)G$(Y[S],U)}catch(he){sn(y,y.return,he)}}f&&F&64&&j$(k),Gl(k,k.return);break;case 26:case 27:case 5:To(S,k,f),f&&y===null&&F&4&&X$(k),Gl(k,k.return);break;case 12:To(S,k,f);break;case 13:To(S,k,f),f&&F&4&&nk(S,k);break;case 22:k.memoizedState===null&&To(S,k,f),Gl(k,k.return);break;default:To(S,k,f)}h=h.sibling}}function z1(u,h){var f=null;u!==null&&u.memoizedState!==null&&u.memoizedState.cachePool!==null&&(f=u.memoizedState.cachePool.pool),u=null,h.memoizedState!==null&&h.memoizedState.cachePool!==null&&(u=h.memoizedState.cachePool.pool),u!==f&&(u!=null&&u.refCount++,f!=null&&Zd(f))}function L1(u,h){u=null,h.alternate!==null&&(u=h.alternate.memoizedState.cache),h=h.memoizedState.cache,h!==u&&(h.refCount++,u!=null&&Zd(u))}function Eo(u,h,f,y){if(h.subtreeFlags&10256)for(h=h.child;h!==null;)ik(u,h,f,y),h=h.sibling}function ik(u,h,f,y){var S=h.flags;switch(h.tag){case 0:case 11:case 15:Eo(u,h,f,y),S&2048&&lp(9,h);break;case 3:Eo(u,h,f,y),S&2048&&(u=null,h.alternate!==null&&(u=h.alternate.memoizedState.cache),h=h.memoizedState.cache,h!==u&&(h.refCount++,u!=null&&Zd(u)));break;case 12:if(S&2048){Eo(u,h,f,y),u=h.stateNode;try{var k=h.memoizedProps,F=k.id,U=k.onPostCommit;typeof U=="function"&&U(F,h.alternate===null?"mount":"update",u.passiveEffectDuration,-0)}catch(Y){sn(h,h.return,Y)}}else Eo(u,h,f,y);break;case 23:break;case 22:k=h.stateNode,h.memoizedState!==null?k._visibility&4?Eo(u,h,f,y):up(u,h):k._visibility&4?Eo(u,h,f,y):(k._visibility|=4,wc(u,h,f,y,(h.subtreeFlags&10256)!==0)),S&2048&&z1(h.alternate,h);break;case 24:Eo(u,h,f,y),S&2048&&L1(h.alternate,h);break;default:Eo(u,h,f,y)}}function wc(u,h,f,y,S){for(S=S&&(h.subtreeFlags&10256)!==0,h=h.child;h!==null;){var k=u,F=h,U=f,Y=y,he=F.flags;switch(F.tag){case 0:case 11:case 15:wc(k,F,U,Y,S),lp(8,F);break;case 23:break;case 22:var ke=F.stateNode;F.memoizedState!==null?ke._visibility&4?wc(k,F,U,Y,S):up(k,F):(ke._visibility|=4,wc(k,F,U,Y,S)),S&&he&2048&&z1(F.alternate,F);break;case 24:wc(k,F,U,Y,S),S&&he&2048&&L1(F.alternate,F);break;default:wc(k,F,U,Y,S)}h=h.sibling}}function up(u,h){if(h.subtreeFlags&10256)for(h=h.child;h!==null;){var f=u,y=h,S=y.flags;switch(y.tag){case 22:up(f,y),S&2048&&z1(y.alternate,y);break;case 24:up(f,y),S&2048&&L1(y.alternate,y);break;default:up(f,y)}h=h.sibling}}var cp=8192;function vc(u){if(u.subtreeFlags&cp)for(u=u.child;u!==null;)ak(u),u=u.sibling}function ak(u){switch(u.tag){case 26:vc(u),u.flags&cp&&u.memoizedState!==null&&oL(Di,u.memoizedState,u.memoizedProps);break;case 5:vc(u);break;case 3:case 4:var h=Di;Di=zg(u.stateNode.containerInfo),vc(u),Di=h;break;case 22:u.memoizedState===null&&(h=u.alternate,h!==null&&h.memoizedState!==null?(h=cp,cp=16777216,vc(u),cp=h):vc(u));break;default:vc(u)}}function ok(u){var h=u.alternate;if(h!==null&&(u=h.child,u!==null)){h.child=null;do h=u.sibling,u.sibling=null,u=h;while(u!==null)}}function hp(u){var h=u.deletions;if((u.flags&16)!==0){if(h!==null)for(var f=0;f<h.length;f++){var y=h[f];gs=y,uk(y,u)}ok(u)}if(u.subtreeFlags&10256)for(u=u.child;u!==null;)lk(u),u=u.sibling}function lk(u){switch(u.tag){case 0:case 11:case 15:hp(u),u.flags&2048&&Io(9,u,u.return);break;case 3:hp(u);break;case 12:hp(u);break;case 22:var h=u.stateNode;u.memoizedState!==null&&h._visibility&4&&(u.return===null||u.return.tag!==13)?(h._visibility&=-5,Sg(u)):hp(u);break;default:hp(u)}}function Sg(u){var h=u.deletions;if((u.flags&16)!==0){if(h!==null)for(var f=0;f<h.length;f++){var y=h[f];gs=y,uk(y,u)}ok(u)}for(u=u.child;u!==null;){switch(h=u,h.tag){case 0:case 11:case 15:Io(8,h,h.return),Sg(h);break;case 22:f=h.stateNode,f._visibility&4&&(f._visibility&=-5,Sg(h));break;default:Sg(h)}u=u.sibling}}function uk(u,h){for(;gs!==null;){var f=gs;switch(f.tag){case 0:case 11:case 15:Io(8,f,h);break;case 23:case 22:if(f.memoizedState!==null&&f.memoizedState.cachePool!==null){var y=f.memoizedState.cachePool.pool;y!=null&&y.refCount++}break;case 24:Zd(f.memoizedState.cache)}if(y=f.child,y!==null)y.return=f,gs=y;else e:for(f=u;gs!==null;){y=gs;var S=y.sibling,k=y.return;if(ek(y),y===f){gs=null;break e}if(S!==null){S.return=k,gs=S;break e}gs=k}}}function wz(u,h,f,y){this.tag=u,this.key=f,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=h,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=y,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function ai(u,h,f,y){return new wz(u,h,f,y)}function P1(u){return u=u.prototype,!(!u||!u.isReactComponent)}function Ro(u,h){var f=u.alternate;return f===null?(f=ai(u.tag,h,u.key,u.mode),f.elementType=u.elementType,f.type=u.type,f.stateNode=u.stateNode,f.alternate=u,u.alternate=f):(f.pendingProps=h,f.type=u.type,f.flags=0,f.subtreeFlags=0,f.deletions=null),f.flags=u.flags&31457280,f.childLanes=u.childLanes,f.lanes=u.lanes,f.child=u.child,f.memoizedProps=u.memoizedProps,f.memoizedState=u.memoizedState,f.updateQueue=u.updateQueue,h=u.dependencies,f.dependencies=h===null?null:{lanes:h.lanes,firstContext:h.firstContext},f.sibling=u.sibling,f.index=u.index,f.ref=u.ref,f.refCleanup=u.refCleanup,f}function ck(u,h){u.flags&=31457282;var f=u.alternate;return f===null?(u.childLanes=0,u.lanes=h,u.child=null,u.subtreeFlags=0,u.memoizedProps=null,u.memoizedState=null,u.updateQueue=null,u.dependencies=null,u.stateNode=null):(u.childLanes=f.childLanes,u.lanes=f.lanes,u.child=f.child,u.subtreeFlags=0,u.deletions=null,u.memoizedProps=f.memoizedProps,u.memoizedState=f.memoizedState,u.updateQueue=f.updateQueue,u.type=f.type,h=f.dependencies,u.dependencies=h===null?null:{lanes:h.lanes,firstContext:h.firstContext}),u}function Cg(u,h,f,y,S,k){var F=0;if(y=u,typeof u=="function")P1(u)&&(F=1);else if(typeof u=="string")F=iL(u,f,tt.current)?26:u==="html"||u==="head"||u==="body"?27:5;else e:switch(u){case l:return Hl(f.children,S,k,h);case c:F=8,S|=24;break;case d:return u=ai(12,f,h,S|2),u.elementType=d,u.lanes=k,u;case b:return u=ai(13,f,h,S),u.elementType=b,u.lanes=k,u;case w:return u=ai(19,f,h,S),u.elementType=w,u.lanes=k,u;case I:return hk(f,S,k,h);default:if(typeof u=="object"&&u!==null)switch(u.$$typeof){case p:case g:F=10;break e;case m:F=9;break e;case x:F=11;break e;case v:F=14;break e;case $:F=16,y=null;break e}F=29,f=Error(s(130,u===null?"null":typeof u,"")),y=null}return h=ai(F,f,h,S),h.elementType=u,h.type=y,h.lanes=k,h}function Hl(u,h,f,y){return u=ai(7,u,y,h),u.lanes=f,u}function hk(u,h,f,y){u=ai(22,u,y,h),u.elementType=I,u.lanes=f;var S={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var k=S._current;if(k===null)throw Error(s(456));if((S._pendingVisibility&2)===0){var F=xo(k,2);F!==null&&(S._pendingVisibility|=2,rr(F,k,2))}},attach:function(){var k=S._current;if(k===null)throw Error(s(456));if((S._pendingVisibility&2)!==0){var F=xo(k,2);F!==null&&(S._pendingVisibility&=-3,rr(F,k,2))}}};return u.stateNode=S,u}function M1(u,h,f){return u=ai(6,u,null,h),u.lanes=f,u}function B1(u,h,f){return h=ai(4,u.children!==null?u.children:[],u.key,h),h.lanes=f,h.stateNode={containerInfo:u.containerInfo,pendingChildren:null,implementation:u.implementation},h}function Va(u){u.flags|=4}function dk(u,h){if(h.type!=="stylesheet"||(h.state.loading&4)!==0)u.flags&=-16777217;else if(u.flags|=16777216,!Yk(h)){if(h=si.current,h!==null&&((Lt&4194176)===Lt?na!==null:(Lt&62914560)!==Lt&&(Lt&536870912)===0||h!==na))throw Kd=H0,EC;u.flags|=8192}}function $g(u,h){h!==null&&(u.flags|=4),u.flags&16384&&(h=u.tag!==22?xl():536870912,u.lanes|=h,Cc|=h)}function dp(u,h){if(!Vt)switch(u.tailMode){case"hidden":h=u.tail;for(var f=null;h!==null;)h.alternate!==null&&(f=h),h=h.sibling;f===null?u.tail=null:f.sibling=null;break;case"collapsed":f=u.tail;for(var y=null;f!==null;)f.alternate!==null&&(y=f),f=f.sibling;y===null?h||u.tail===null?u.tail=null:u.tail.sibling=null:y.sibling=null}}function bn(u){var h=u.alternate!==null&&u.alternate.child===u.child,f=0,y=0;if(h)for(var S=u.child;S!==null;)f|=S.lanes|S.childLanes,y|=S.subtreeFlags&31457280,y|=S.flags&31457280,S.return=u,S=S.sibling;else for(S=u.child;S!==null;)f|=S.lanes|S.childLanes,y|=S.subtreeFlags,y|=S.flags,S.return=u,S=S.sibling;return u.subtreeFlags|=y,u.childLanes=f,h}function vz(u,h,f){var y=h.pendingProps;switch(W0(h),h.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return bn(h),null;case 1:return bn(h),null;case 3:return f=h.stateNode,y=null,u!==null&&(y=u.memoizedState.cache),h.memoizedState.cache!==y&&(h.flags|=2048),La(is),kt(),f.pendingContext&&(f.context=f.pendingContext,f.pendingContext=null),(u===null||u.child===null)&&(Hd(h)?Va(h):u===null||u.memoizedState.isDehydrated&&(h.flags&256)===0||(h.flags|=1024,Ai!==null&&(X1(Ai),Ai=null))),bn(h),null;case 26:return f=h.memoizedState,u===null?(Va(h),f!==null?(bn(h),dk(h,f)):(bn(h),h.flags&=-16777217)):f?f!==u.memoizedState?(Va(h),bn(h),dk(h,f)):(bn(h),h.flags&=-16777217):(u.memoizedProps!==y&&Va(h),bn(h),h.flags&=-16777217),null;case 27:Mt(h),f=nt.current;var S=h.type;if(u!==null&&h.stateNode!=null)u.memoizedProps!==y&&Va(h);else{if(!y){if(h.stateNode===null)throw Error(s(166));return bn(h),null}u=tt.current,Hd(h)?IC(h):(u=Uk(S,y,f),h.stateNode=u,Va(h))}return bn(h),null;case 5:if(Mt(h),f=h.type,u!==null&&h.stateNode!=null)u.memoizedProps!==y&&Va(h);else{if(!y){if(h.stateNode===null)throw Error(s(166));return bn(h),null}if(u=tt.current,Hd(h))IC(h);else{switch(S=Fg(nt.current),u){case 1:u=S.createElementNS("http://www.w3.org/2000/svg",f);break;case 2:u=S.createElementNS("http://www.w3.org/1998/Math/MathML",f);break;default:switch(f){case"svg":u=S.createElementNS("http://www.w3.org/2000/svg",f);break;case"math":u=S.createElementNS("http://www.w3.org/1998/Math/MathML",f);break;case"script":u=S.createElement("div"),u.innerHTML="<script><\/script>",u=u.removeChild(u.firstChild);break;case"select":u=typeof y.is=="string"?S.createElement("select",{is:y.is}):S.createElement("select"),y.multiple?u.multiple=!0:y.size&&(u.size=y.size);break;default:u=typeof y.is=="string"?S.createElement(f,{is:y.is}):S.createElement(f)}}u[Bn]=h,u[Ps]=y;e:for(S=h.child;S!==null;){if(S.tag===5||S.tag===6)u.appendChild(S.stateNode);else if(S.tag!==4&&S.tag!==27&&S.child!==null){S.child.return=S,S=S.child;continue}if(S===h)break e;for(;S.sibling===null;){if(S.return===null||S.return===h)break e;S=S.return}S.sibling.return=S.return,S=S.sibling}h.stateNode=u;e:switch(Es(u,f,y),f){case"button":case"input":case"select":case"textarea":u=!!y.autoFocus;break e;case"img":u=!0;break e;default:u=!1}u&&Va(h)}}return bn(h),h.flags&=-16777217,null;case 6:if(u&&h.stateNode!=null)u.memoizedProps!==y&&Va(h);else{if(typeof y!="string"&&h.stateNode===null)throw Error(s(166));if(u=nt.current,Hd(h)){if(u=h.stateNode,f=h.memoizedProps,y=null,S=sr,S!==null)switch(S.tag){case 27:case 5:y=S.memoizedProps}u[Bn]=h,u=!!(u.nodeValue===f||y!==null&&y.suppressHydrationWarning===!0||zk(u.nodeValue,f)),u||Fl(h)}else u=Fg(u).createTextNode(y),u[Bn]=h,h.stateNode=u}return bn(h),null;case 13:if(y=h.memoizedState,u===null||u.memoizedState!==null&&u.memoizedState.dehydrated!==null){if(S=Hd(h),y!==null&&y.dehydrated!==null){if(u===null){if(!S)throw Error(s(318));if(S=h.memoizedState,S=S!==null?S.dehydrated:null,!S)throw Error(s(317));S[Bn]=h}else jd(),(h.flags&128)===0&&(h.memoizedState=null),h.flags|=4;bn(h),S=!1}else Ai!==null&&(X1(Ai),Ai=null),S=!0;if(!S)return h.flags&256?(_a(h),h):(_a(h),null)}if(_a(h),(h.flags&128)!==0)return h.lanes=f,h;if(f=y!==null,u=u!==null&&u.memoizedState!==null,f){y=h.child,S=null,y.alternate!==null&&y.alternate.memoizedState!==null&&y.alternate.memoizedState.cachePool!==null&&(S=y.alternate.memoizedState.cachePool.pool);var k=null;y.memoizedState!==null&&y.memoizedState.cachePool!==null&&(k=y.memoizedState.cachePool.pool),k!==S&&(y.flags|=2048)}return f!==u&&f&&(h.child.flags|=8192),$g(h,h.updateQueue),bn(h),null;case 4:return kt(),u===null&&iw(h.stateNode.containerInfo),bn(h),null;case 10:return La(h.type),bn(h),null;case 19:if(Pe(rs),S=h.memoizedState,S===null)return bn(h),null;if(y=(h.flags&128)!==0,k=S.rendering,k===null)if(y)dp(S,!1);else{if(Tn!==0||u!==null&&(u.flags&128)!==0)for(u=h.child;u!==null;){if(k=og(u),k!==null){for(h.flags|=128,dp(S,!1),u=k.updateQueue,h.updateQueue=u,$g(h,u),h.subtreeFlags=0,u=f,f=h.child;f!==null;)ck(f,u),f=f.sibling;return He(rs,rs.current&1|2),h.child}u=u.sibling}S.tail!==null&&jt()>kg&&(h.flags|=128,y=!0,dp(S,!1),h.lanes=4194304)}else{if(!y)if(u=og(k),u!==null){if(h.flags|=128,y=!0,u=u.updateQueue,h.updateQueue=u,$g(h,u),dp(S,!0),S.tail===null&&S.tailMode==="hidden"&&!k.alternate&&!Vt)return bn(h),null}else 2*jt()-S.renderingStartTime>kg&&f!==536870912&&(h.flags|=128,y=!0,dp(S,!1),h.lanes=4194304);S.isBackwards?(k.sibling=h.child,h.child=k):(u=S.last,u!==null?u.sibling=k:h.child=k,S.last=k)}return S.tail!==null?(h=S.tail,S.rendering=h,S.tail=h.sibling,S.renderingStartTime=jt(),h.sibling=null,u=rs.current,He(rs,y?u&1|2:u&1),h):(bn(h),null);case 22:case 23:return _a(h),q0(),y=h.memoizedState!==null,u!==null?u.memoizedState!==null!==y&&(h.flags|=8192):y&&(h.flags|=8192),y?(f&536870912)!==0&&(h.flags&128)===0&&(bn(h),h.subtreeFlags&6&&(h.flags|=8192)):bn(h),f=h.updateQueue,f!==null&&$g(h,f.retryQueue),f=null,u!==null&&u.memoizedState!==null&&u.memoizedState.cachePool!==null&&(f=u.memoizedState.cachePool.pool),y=null,h.memoizedState!==null&&h.memoizedState.cachePool!==null&&(y=h.memoizedState.cachePool.pool),y!==f&&(h.flags|=2048),u!==null&&Pe(Ll),null;case 24:return f=null,u!==null&&(f=u.memoizedState.cache),h.memoizedState.cache!==f&&(h.flags|=2048),La(is),bn(h),null;case 25:return null}throw Error(s(156,h.tag))}function Sz(u,h){switch(W0(h),h.tag){case 1:return u=h.flags,u&65536?(h.flags=u&-65537|128,h):null;case 3:return La(is),kt(),u=h.flags,(u&65536)!==0&&(u&128)===0?(h.flags=u&-65537|128,h):null;case 26:case 27:case 5:return Mt(h),null;case 13:if(_a(h),u=h.memoizedState,u!==null&&u.dehydrated!==null){if(h.alternate===null)throw Error(s(340));jd()}return u=h.flags,u&65536?(h.flags=u&-65537|128,h):null;case 19:return Pe(rs),null;case 4:return kt(),null;case 10:return La(h.type),null;case 22:case 23:return _a(h),q0(),u!==null&&Pe(Ll),u=h.flags,u&65536?(h.flags=u&-65537|128,h):null;case 24:return La(is),null;case 25:return null;default:return null}}function pk(u,h){switch(W0(h),h.tag){case 3:La(is),kt();break;case 26:case 27:case 5:Mt(h);break;case 4:kt();break;case 13:_a(h);break;case 19:Pe(rs);break;case 10:La(h.type);break;case 22:case 23:_a(h),q0(),u!==null&&Pe(Ll);break;case 24:La(is)}}var Cz={getCacheForType:function(u){var h=Bs(is),f=h.data.get(u);return f===void 0&&(f=u(),h.data.set(u,f)),f}},$z=typeof WeakMap=="function"?WeakMap:Map,wn=0,un=null,It=null,Lt=0,cn=0,Lr=null,Ua=!1,Sc=!1,V1=!1,Wa=0,Tn=0,Ao=0,jl=0,U1=0,oi=0,Cc=0,pp=null,ra=null,W1=!1,G1=0,kg=1/0,Ng=null,Do=null,Ig=!1,ql=null,fp=0,H1=0,j1=null,mp=0,q1=null;function Pr(){if((wn&2)!==0&&Lt!==0)return Lt&-Lt;if(O.T!==null){var u=fc;return u!==0?u:tw()}return Nd()}function fk(){oi===0&&(oi=(Lt&536870912)===0||Vt?kd():536870912);var u=si.current;return u!==null&&(u.flags|=32),oi}function rr(u,h,f){(u===un&&cn===2||u.cancelPendingCommit!==null)&&($c(u,0),Ga(u,Lt,oi,!1)),bl(u,f),((wn&2)===0||u!==un)&&(u===un&&((wn&2)===0&&(jl|=f),Tn===4&&Ga(u,Lt,oi,!1)),ia(u))}function mk(u,h,f){if((wn&6)!==0)throw Error(s(327));var y=!f&&(h&60)===0&&(h&u.expiredLanes)===0||Dr(u,h),S=y?Iz(u,h):Q1(u,h,!0),k=y;do{if(S===0){Sc&&!y&&Ga(u,h,0,!1);break}else if(S===6)Ga(u,h,0,!Ua);else{if(f=u.current.alternate,k&&!kz(f)){S=Q1(u,h,!1),k=!1;continue}if(S===2){if(k=h,u.errorRecoveryDisabledLanes&k)var F=0;else F=u.pendingLanes&-536870913,F=F!==0?F:F&536870912?536870912:0;if(F!==0){h=F;e:{var U=u;S=pp;var Y=U.current.memoizedState.isDehydrated;if(Y&&($c(U,F).flags|=256),F=Q1(U,F,!1),F!==2){if(V1&&!Y){U.errorRecoveryDisabledLanes|=k,jl|=k,S=4;break e}k=ra,ra=S,k!==null&&X1(k)}S=F}if(k=!1,S!==2)continue}}if(S===1){$c(u,0),Ga(u,h,0,!0);break}e:{switch(y=u,S){case 0:case 1:throw Error(s(345));case 4:if((h&4194176)===h){Ga(y,h,oi,!Ua);break e}break;case 2:ra=null;break;case 3:case 5:break;default:throw Error(s(329))}if(y.finishedWork=f,y.finishedLanes=h,(h&62914560)===h&&(k=G1+300-jt(),10<k)){if(Ga(y,h,oi,!Ua),yl(y,0)!==0)break e;y.timeoutHandle=Mk(gk.bind(null,y,f,ra,Ng,W1,h,oi,jl,Cc,Ua,2,-0,0),k);break e}gk(y,f,ra,Ng,W1,h,oi,jl,Cc,Ua,0,-0,0)}}break}while(!0);ia(u)}function X1(u){ra===null?ra=u:ra.push.apply(ra,u)}function gk(u,h,f,y,S,k,F,U,Y,he,ke,Re,be){var Se=h.subtreeFlags;if((Se&8192||(Se&16785408)===16785408)&&(vp={stylesheets:null,count:0,unsuspend:aL},ak(h),h=lL(),h!==null)){u.cancelPendingCommit=h(Ck.bind(null,u,f,y,S,F,U,Y,1,Re,be)),Ga(u,k,F,!he);return}Ck(u,f,y,S,F,U,Y,ke,Re,be)}function kz(u){for(var h=u;;){var f=h.tag;if((f===0||f===11||f===15)&&h.flags&16384&&(f=h.updateQueue,f!==null&&(f=f.stores,f!==null)))for(var y=0;y<f.length;y++){var S=f[y],k=S.getSnapshot;S=S.value;try{if(!Or(k(),S))return!1}catch{return!1}}if(f=h.child,h.subtreeFlags&16384&&f!==null)f.return=h,h=f;else{if(h===u)break;for(;h.sibling===null;){if(h.return===null||h.return===u)return!0;h=h.return}h.sibling.return=h.return,h=h.sibling}}return!0}function Ga(u,h,f,y){h&=~U1,h&=~jl,u.suspendedLanes|=h,u.pingedLanes&=~h,y&&(u.warmLanes|=h),y=u.expirationTimes;for(var S=h;0<S;){var k=31-Ls(S),F=1<<k;y[k]=-1,S&=~F}f!==0&&Lm(u,f,h)}function Tg(){return(wn&6)===0?(gp(0),!1):!0}function K1(){if(It!==null){if(cn===0)var u=It.return;else u=It,za=Ul=null,t1(u),dc=null,Yd=0,u=It;for(;u!==null;)pk(u.alternate,u),u=u.return;It=null}}function $c(u,h){u.finishedWork=null,u.finishedLanes=0;var f=u.timeoutHandle;f!==-1&&(u.timeoutHandle=-1,Gz(f)),f=u.cancelPendingCommit,f!==null&&(u.cancelPendingCommit=null,f()),K1(),un=u,It=f=Ro(u.current,null),Lt=h,cn=0,Lr=null,Ua=!1,Sc=Dr(u,h),V1=!1,Cc=oi=U1=jl=Ao=Tn=0,ra=pp=null,W1=!1,(h&8)!==0&&(h|=h&32);var y=u.entangledLanes;if(y!==0)for(u=u.entanglements,y&=h;0<y;){var S=31-Ls(y),k=1<<S;h|=u[S],y&=~k}return Wa=h,Zm(),f}function yk(u,h){St=null,O.H=sa,h===Xd?(h=DC(),cn=3):h===EC?(h=DC(),cn=4):cn=h===R$?8:h!==null&&typeof h=="object"&&typeof h.then=="function"?6:1,Lr=h,It===null&&(Tn=1,xg(u,ei(h,u.current)))}function xk(){var u=O.H;return O.H=sa,u===null?sa:u}function bk(){var u=O.A;return O.A=Cz,u}function Y1(){Tn=4,Ua||(Lt&4194176)!==Lt&&si.current!==null||(Sc=!0),(Ao&134217727)===0&&(jl&134217727)===0||un===null||Ga(un,Lt,oi,!1)}function Q1(u,h,f){var y=wn;wn|=2;var S=xk(),k=bk();(un!==u||Lt!==h)&&(Ng=null,$c(u,h)),h=!1;var F=Tn;e:do try{if(cn!==0&&It!==null){var U=It,Y=Lr;switch(cn){case 8:K1(),F=6;break e;case 3:case 2:case 6:si.current===null&&(h=!0);var he=cn;if(cn=0,Lr=null,kc(u,U,Y,he),f&&Sc){F=0;break e}break;default:he=cn,cn=0,Lr=null,kc(u,U,Y,he)}}Nz(),F=Tn;break}catch(ke){yk(u,ke)}while(!0);return h&&u.shellSuspendCounter++,za=Ul=null,wn=y,O.H=S,O.A=k,It===null&&(un=null,Lt=0,Zm()),F}function Nz(){for(;It!==null;)wk(It)}function Iz(u,h){var f=wn;wn|=2;var y=xk(),S=bk();un!==u||Lt!==h?(Ng=null,kg=jt()+500,$c(u,h)):Sc=Dr(u,h);e:do try{if(cn!==0&&It!==null){h=It;var k=Lr;t:switch(cn){case 1:cn=0,Lr=null,kc(u,h,k,1);break;case 2:if(RC(k)){cn=0,Lr=null,vk(h);break}h=function(){cn===2&&un===u&&(cn=7),ia(u)},k.then(h,h);break e;case 3:cn=7;break e;case 4:cn=5;break e;case 7:RC(k)?(cn=0,Lr=null,vk(h)):(cn=0,Lr=null,kc(u,h,k,7));break;case 5:var F=null;switch(It.tag){case 26:F=It.memoizedState;case 5:case 27:var U=It;if(!F||Yk(F)){cn=0,Lr=null;var Y=U.sibling;if(Y!==null)It=Y;else{var he=U.return;he!==null?(It=he,Eg(he)):It=null}break t}}cn=0,Lr=null,kc(u,h,k,5);break;case 6:cn=0,Lr=null,kc(u,h,k,6);break;case 8:K1(),Tn=6;break e;default:throw Error(s(462))}}Tz();break}catch(ke){yk(u,ke)}while(!0);return za=Ul=null,O.H=y,O.A=S,wn=f,It!==null?0:(un=null,Lt=0,Zm(),Tn)}function Tz(){for(;It!==null&&!es();)wk(It)}function wk(u){var h=U$(u.alternate,u,Wa);u.memoizedProps=u.pendingProps,h===null?Eg(u):It=h}function vk(u){var h=u,f=h.alternate;switch(h.tag){case 15:case 0:h=z$(f,h,h.pendingProps,h.type,void 0,Lt);break;case 11:h=z$(f,h,h.pendingProps,h.type.render,h.ref,Lt);break;case 5:t1(h);default:pk(f,h),h=It=ck(h,Wa),h=U$(f,h,Wa)}u.memoizedProps=u.pendingProps,h===null?Eg(u):It=h}function kc(u,h,f,y){za=Ul=null,t1(h),dc=null,Yd=0;var S=h.return;try{if(gz(u,S,h,f,Lt)){Tn=1,xg(u,ei(f,u.current)),It=null;return}}catch(k){if(S!==null)throw It=S,k;Tn=1,xg(u,ei(f,u.current)),It=null;return}h.flags&32768?(Vt||y===1?u=!0:Sc||(Lt&536870912)!==0?u=!1:(Ua=u=!0,(y===2||y===3||y===6)&&(y=si.current,y!==null&&y.tag===13&&(y.flags|=16384))),Sk(h,u)):Eg(h)}function Eg(u){var h=u;do{if((h.flags&32768)!==0){Sk(h,Ua);return}u=h.return;var f=vz(h.alternate,h,Wa);if(f!==null){It=f;return}if(h=h.sibling,h!==null){It=h;return}It=h=u}while(h!==null);Tn===0&&(Tn=5)}function Sk(u,h){do{var f=Sz(u.alternate,u);if(f!==null){f.flags&=32767,It=f;return}if(f=u.return,f!==null&&(f.flags|=32768,f.subtreeFlags=0,f.deletions=null),!h&&(u=u.sibling,u!==null)){It=u;return}It=u=f}while(u!==null);Tn=6,It=null}function Ck(u,h,f,y,S,k,F,U,Y,he){var ke=O.T,Re=xe.p;try{xe.p=2,O.T=null,Ez(u,h,f,y,Re,S,k,F,U,Y,he)}finally{O.T=ke,xe.p=Re}}function Ez(u,h,f,y,S,k,F,U){do Nc();while(ql!==null);if((wn&6)!==0)throw Error(s(327));var Y=u.finishedWork;if(y=u.finishedLanes,Y===null)return null;if(u.finishedWork=null,u.finishedLanes=0,Y===u.current)throw Error(s(177));u.callbackNode=null,u.callbackPriority=0,u.cancelPendingCommit=null;var he=Y.lanes|Y.childLanes;if(he|=B0,co(u,y,he,k,F,U),u===un&&(It=un=null,Lt=0),(Y.subtreeFlags&10256)===0&&(Y.flags&10256)===0||Ig||(Ig=!0,H1=he,j1=f,_z(Js,function(){return Nc(),null})),f=(Y.flags&15990)!==0,(Y.subtreeFlags&15990)!==0||f?(f=O.T,O.T=null,k=xe.p,xe.p=2,F=wn,wn|=4,xz(u,Y),sk(Y,u),JF(uw,u.containerInfo),Vg=!!lw,uw=lw=null,u.current=Y,J$(u,Y.alternate,Y),Xr(),wn=F,xe.p=k,O.T=f):u.current=Y,Ig?(Ig=!1,ql=u,fp=y):$k(u,he),he=u.pendingLanes,he===0&&(Do=null),ju(Y.stateNode),ia(u),h!==null)for(S=u.onRecoverableError,Y=0;Y<h.length;Y++)he=h[Y],S(he.value,{componentStack:he.stack});return(fp&3)!==0&&Nc(),he=u.pendingLanes,(y&4194218)!==0&&(he&42)!==0?u===q1?mp++:(mp=0,q1=u):mp=0,gp(0),null}function $k(u,h){(u.pooledCacheLanes&=h)===0&&(h=u.pooledCache,h!=null&&(u.pooledCache=null,Zd(h)))}function Nc(){if(ql!==null){var u=ql,h=H1;H1=0;var f=Ji(fp),y=O.T,S=xe.p;try{if(xe.p=32>f?32:f,O.T=null,ql===null)var k=!1;else{f=j1,j1=null;var F=ql,U=fp;if(ql=null,fp=0,(wn&6)!==0)throw Error(s(331));var Y=wn;if(wn|=4,lk(F.current),ik(F,F.current,U,f),wn=Y,gp(0,!1),ts&&typeof ts.onPostCommitFiberRoot=="function")try{ts.onPostCommitFiberRoot(zs,F)}catch{}k=!0}return k}finally{xe.p=S,O.T=y,$k(u,h)}}return!1}function kk(u,h,f){h=ei(f,h),h=m1(u.stateNode,h,2),u=No(u,h,2),u!==null&&(bl(u,2),ia(u))}function sn(u,h,f){if(u.tag===3)kk(u,u,f);else for(;h!==null;){if(h.tag===3){kk(h,u,f);break}else if(h.tag===1){var y=h.stateNode;if(typeof h.type.getDerivedStateFromError=="function"||typeof y.componentDidCatch=="function"&&(Do===null||!Do.has(y))){u=ei(f,u),f=T$(2),y=No(h,f,2),y!==null&&(E$(f,y,h,u),bl(y,2),ia(y));break}}h=h.return}}function Z1(u,h,f){var y=u.pingCache;if(y===null){y=u.pingCache=new $z;var S=new Set;y.set(h,S)}else S=y.get(h),S===void 0&&(S=new Set,y.set(h,S));S.has(f)||(V1=!0,S.add(f),u=Rz.bind(null,u,h,f),h.then(u,u))}function Rz(u,h,f){var y=u.pingCache;y!==null&&y.delete(h),u.pingedLanes|=u.suspendedLanes&f,u.warmLanes&=~f,un===u&&(Lt&f)===f&&(Tn===4||Tn===3&&(Lt&62914560)===Lt&&300>jt()-G1?(wn&2)===0&&$c(u,0):U1|=f,Cc===Lt&&(Cc=0)),ia(u)}function Nk(u,h){h===0&&(h=xl()),u=xo(u,h),u!==null&&(bl(u,h),ia(u))}function Az(u){var h=u.memoizedState,f=0;h!==null&&(f=h.retryLane),Nk(u,f)}function Dz(u,h){var f=0;switch(u.tag){case 13:var y=u.stateNode,S=u.memoizedState;S!==null&&(f=S.retryLane);break;case 19:y=u.stateNode;break;case 22:y=u.stateNode._retryCache;break;default:throw Error(s(314))}y!==null&&y.delete(h),Nk(u,f)}function _z(u,h){return dn(u,h)}var Rg=null,Ic=null,J1=!1,Ag=!1,ew=!1,Xl=0;function ia(u){u!==Ic&&u.next===null&&(Ic===null?Rg=Ic=u:Ic=Ic.next=u),Ag=!0,J1||(J1=!0,Fz(Oz))}function gp(u,h){if(!ew&&Ag){ew=!0;do for(var f=!1,y=Rg;y!==null;){if(u!==0){var S=y.pendingLanes;if(S===0)var k=0;else{var F=y.suspendedLanes,U=y.pingedLanes;k=(1<<31-Ls(42|u)+1)-1,k&=S&~(F&~U),k=k&201326677?k&201326677|1:k?k|2:0}k!==0&&(f=!0,Ek(y,k))}else k=Lt,k=yl(y,y===un?k:0),(k&3)===0||Dr(y,k)||(f=!0,Ek(y,k));y=y.next}while(f);ew=!1}}function Oz(){Ag=J1=!1;var u=0;Xl!==0&&(Wz()&&(u=Xl),Xl=0);for(var h=jt(),f=null,y=Rg;y!==null;){var S=y.next,k=Ik(y,h);k===0?(y.next=null,f===null?Rg=S:f.next=S,S===null&&(Ic=f)):(f=y,(u!==0||(k&3)!==0)&&(Ag=!0)),y=S}gp(u)}function Ik(u,h){for(var f=u.suspendedLanes,y=u.pingedLanes,S=u.expirationTimes,k=u.pendingLanes&-62914561;0<k;){var F=31-Ls(k),U=1<<F,Y=S[F];Y===-1?((U&f)===0||(U&y)!==0)&&(S[F]=$d(U,h)):Y<=h&&(u.expiredLanes|=U),k&=~U}if(h=un,f=Lt,f=yl(u,u===h?f:0),y=u.callbackNode,f===0||u===h&&cn===2||u.cancelPendingCommit!==null)return y!==null&&y!==null&&Qs(y),u.callbackNode=null,u.callbackPriority=0;if((f&3)===0||Dr(u,f)){if(h=f&-f,h===u.callbackPriority)return h;switch(y!==null&&Qs(y),Ji(f)){case 2:case 8:f=Zs;break;case 32:f=Js;break;case 268435456:f=oo;break;default:f=Js}return y=Tk.bind(null,u),f=dn(f,y),u.callbackPriority=h,u.callbackNode=f,h}return y!==null&&y!==null&&Qs(y),u.callbackPriority=2,u.callbackNode=null,2}function Tk(u,h){var f=u.callbackNode;if(Nc()&&u.callbackNode!==f)return null;var y=Lt;return y=yl(u,u===un?y:0),y===0?null:(mk(u,y,h),Ik(u,jt()),u.callbackNode!=null&&u.callbackNode===f?Tk.bind(null,u):null)}function Ek(u,h){if(Nc())return null;mk(u,h,!0)}function Fz(u){Hz(function(){(wn&6)!==0?dn(Fs,u):u()})}function tw(){return Xl===0&&(Xl=kd()),Xl}function Rk(u){return u==null||typeof u=="symbol"||typeof u=="boolean"?null:typeof u=="function"?u:Zu(""+u)}function Ak(u,h){var f=h.ownerDocument.createElement("input");return f.name=h.name,f.value=h.value,u.id&&f.setAttribute("form",u.id),h.parentNode.insertBefore(f,h),u=new FormData(u),f.parentNode.removeChild(f),u}function zz(u,h,f,y,S){if(h==="submit"&&f&&f.stateNode===S){var k=Rk((S[Ps]||null).action),F=y.submitter;F&&(h=(h=F[Ps]||null)?Rk(h.formAction):F.getAttribute("formAction"),h!==null&&(k=h,F=null));var U=new El("action","action",null,y,S);u.push({event:U,listeners:[{instance:null,listener:function(){if(y.defaultPrevented){if(Xl!==0){var Y=F?Ak(S,F):new FormData(S);c1(f,{pending:!0,data:Y,method:S.method,action:k},null,Y)}}else typeof k=="function"&&(U.preventDefault(),Y=F?Ak(S,F):new FormData(S),c1(f,{pending:!0,data:Y,method:S.method,action:k},k,Y))},currentTarget:S}]})}}for(var nw=0;nw<CC.length;nw++){var sw=CC[nw],Lz=sw.toLowerCase(),Pz=sw[0].toUpperCase()+sw.slice(1);Ri(Lz,"on"+Pz)}Ri(xC,"onAnimationEnd"),Ri(bC,"onAnimationIteration"),Ri(wC,"onAnimationStart"),Ri("dblclick","onDoubleClick"),Ri("focusin","onFocus"),Ri("focusout","onBlur"),Ri(tz,"onTransitionRun"),Ri(nz,"onTransitionStart"),Ri(sz,"onTransitionCancel"),Ri(vC,"onTransitionEnd"),ks("onMouseEnter",["mouseout","mouseover"]),ks("onMouseLeave",["mouseout","mouseover"]),ks("onPointerEnter",["pointerout","pointerover"]),ks("onPointerLeave",["pointerout","pointerover"]),Ii("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),Ii("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),Ii("onBeforeInput",["compositionend","keypress","textInput","paste"]),Ii("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),Ii("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),Ii("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var yp="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Mz=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(yp));function Dk(u,h){h=(h&4)!==0;for(var f=0;f<u.length;f++){var y=u[f],S=y.event;y=y.listeners;e:{var k=void 0;if(h)for(var F=y.length-1;0<=F;F--){var U=y[F],Y=U.instance,he=U.currentTarget;if(U=U.listener,Y!==k&&S.isPropagationStopped())break e;k=U,S.currentTarget=he;try{k(S)}catch(ke){yg(ke)}S.currentTarget=null,k=Y}else for(F=0;F<y.length;F++){if(U=y[F],Y=U.instance,he=U.currentTarget,U=U.listener,Y!==k&&S.isPropagationStopped())break e;k=U,S.currentTarget=he;try{k(S)}catch(ke){yg(ke)}S.currentTarget=null,k=Y}}}}function Ot(u,h){var f=h[wl];f===void 0&&(f=h[wl]=new Set);var y=u+"__bubble";f.has(y)||(_k(h,u,2,!1),f.add(y))}function rw(u,h,f){var y=0;h&&(y|=4),_k(f,u,y,h)}var Dg="_reactListening"+Math.random().toString(36).slice(2);function iw(u){if(!u[Dg]){u[Dg]=!0,Xu.forEach(function(f){f!=="selectionchange"&&(Mz.has(f)||rw(f,!1,u),rw(f,!0,u))});var h=u.nodeType===9?u:u.ownerDocument;h===null||h[Dg]||(h[Dg]=!0,rw("selectionchange",!1,h))}}function _k(u,h,f,y){switch(nN(h)){case 2:var S=hL;break;case 8:S=dL;break;default:S=xw}f=S.bind(null,h,f,u),S=void 0,!Ju||h!=="touchstart"&&h!=="touchmove"&&h!=="wheel"||(S=!0),y?S!==void 0?u.addEventListener(h,f,{capture:!0,passive:S}):u.addEventListener(h,f,!0):S!==void 0?u.addEventListener(h,f,{passive:S}):u.addEventListener(h,f,!1)}function aw(u,h,f,y,S){var k=y;if((h&1)===0&&(h&2)===0&&y!==null)e:for(;;){if(y===null)return;var F=y.tag;if(F===3||F===4){var U=y.stateNode.containerInfo;if(U===S||U.nodeType===8&&U.parentNode===S)break;if(F===4)for(F=y.return;F!==null;){var Y=F.tag;if((Y===3||Y===4)&&(Y=F.stateNode.containerInfo,Y===S||Y.nodeType===8&&Y.parentNode===S))return;F=F.return}for(;U!==null;){if(F=ea(U),F===null)return;if(Y=F.tag,Y===5||Y===6||Y===26||Y===27){y=k=F;continue e}U=U.parentNode}}y=y.return}Um(function(){var he=k,ke=Nl(f),Re=[];e:{var be=SC.get(u);if(be!==void 0){var Se=El,et=u;switch(u){case"keypress":if(Il(f)===0)break e;case"keydown":case"keyup":Se=I0;break;case"focusin":et="focus",Se=Pd;break;case"focusout":et="blur",Se=Pd;break;case"beforeblur":case"afterblur":Se=Pd;break;case"click":if(f.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":Se=Gm;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":Se=nc;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":Se=E0;break;case xC:case bC:case wC:Se=w0;break;case vC:Se=R0;break;case"scroll":case"scrollend":Se=x0;break;case"wheel":Se=D0;break;case"copy":case"cut":case"paste":Se=Md;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":Se=qm;break;case"toggle":case"beforetoggle":Se=Km}var gt=(h&4)!==0,En=!gt&&(u==="scroll"||u==="scrollend"),fe=gt?be!==null?be+"Capture":null:be;gt=[];for(var le=he,ye;le!==null;){var Ie=le;if(ye=Ie.stateNode,Ie=Ie.tag,Ie!==5&&Ie!==26&&Ie!==27||ye===null||fe===null||(Ie=Ta(le,fe),Ie!=null&&gt.push(xp(le,Ie,ye))),En)break;le=le.return}0<gt.length&&(be=new Se(be,et,null,f,ke),Re.push({event:be,listeners:gt}))}}if((h&7)===0){e:{if(be=u==="mouseover"||u==="pointerover",Se=u==="mouseout"||u==="pointerout",be&&f!==Fd&&(et=f.relatedTarget||f.fromElement)&&(ea(et)||et[Ni]))break e;if((Se||be)&&(be=ke.window===ke?ke:(be=ke.ownerDocument)?be.defaultView||be.parentWindow:window,Se?(et=f.relatedTarget||f.toElement,Se=he,et=et?ea(et):null,et!==null&&(En=se(et),gt=et.tag,et!==En||gt!==5&&gt!==27&&gt!==6)&&(et=null)):(Se=null,et=he),Se!==et)){if(gt=Gm,Ie="onMouseLeave",fe="onMouseEnter",le="mouse",(u==="pointerout"||u==="pointerover")&&(gt=qm,Ie="onPointerLeave",fe="onPointerEnter",le="pointer"),En=Se==null?be:Ms(Se),ye=et==null?be:Ms(et),be=new gt(Ie,le+"leave",Se,f,ke),be.target=En,be.relatedTarget=ye,Ie=null,ea(ke)===he&&(gt=new gt(fe,le+"enter",et,f,ke),gt.target=ye,gt.relatedTarget=En,Ie=gt),En=Ie,Se&&et)t:{for(gt=Se,fe=et,le=0,ye=gt;ye;ye=Tc(ye))le++;for(ye=0,Ie=fe;Ie;Ie=Tc(Ie))ye++;for(;0<le-ye;)gt=Tc(gt),le--;for(;0<ye-le;)fe=Tc(fe),ye--;for(;le--;){if(gt===fe||fe!==null&&gt===fe.alternate)break t;gt=Tc(gt),fe=Tc(fe)}gt=null}else gt=null;Se!==null&&Ok(Re,be,Se,gt,!1),et!==null&&En!==null&&Ok(Re,En,et,gt,!0)}}e:{if(be=he?Ms(he):window,Se=be.nodeName&&be.nodeName.toLowerCase(),Se==="select"||Se==="input"&&be.type==="file")var Ke=nr;else if(We(be))if(Ns)Ke=ic;else{Ke=O0;var Nt=_0}else Se=be.nodeName,!Se||Se.toLowerCase()!=="input"||be.type!=="checkbox"&&be.type!=="radio"?he&&Ia(he.elementType)&&(Ke=nr):Ke=F0;if(Ke&&(Ke=Ke(u,he))){at(Re,Ke,f,ke);break e}Nt&&Nt(u,be,he),u==="focusout"&&he&&be.type==="number"&&he.memoizedProps.value!=null&&Yu(be,"number",be.value)}switch(Nt=he?Ms(he):window,u){case"focusin":(We(Nt)||Nt.contentEditable==="true")&&(ac=Nt,L0=he,Gd=null);break;case"focusout":Gd=L0=ac=null;break;case"mousedown":P0=!0;break;case"contextmenu":case"mouseup":case"dragend":P0=!1,gC(Re,f,ke);break;case"selectionchange":if(ez)break;case"keydown":case"keyup":gC(Re,f,ke)}var st;if(T)e:{switch(u){case"compositionstart":var lt="onCompositionStart";break e;case"compositionend":lt="onCompositionEnd";break e;case"compositionupdate":lt="onCompositionUpdate";break e}lt=void 0}else Ee?ae(u,f)&&(lt="onCompositionEnd"):u==="keydown"&&f.keyCode===229&&(lt="onCompositionStart");lt&&(j&&f.locale!=="ko"&&(Ee||lt!=="onCompositionStart"?lt==="onCompositionEnd"&&Ee&&(st=Wm()):(yr=ke,tr="value"in yr?yr.value:yr.textContent,Ee=!0)),Nt=_g(he,lt),0<Nt.length&&(lt=new Vd(lt,u,null,f,ke),Re.push({event:lt,listeners:Nt}),st?lt.data=st:(st=we(f),st!==null&&(lt.data=st)))),(st=M?ze(u,f):ot(u,f))&&(lt=_g(he,"onBeforeInput"),0<lt.length&&(Nt=new Vd("onBeforeInput","beforeinput",null,f,ke),Re.push({event:Nt,listeners:lt}),Nt.data=st)),zz(Re,u,he,f,ke)}Dk(Re,h)})}function xp(u,h,f){return{instance:u,listener:h,currentTarget:f}}function _g(u,h){for(var f=h+"Capture",y=[];u!==null;){var S=u,k=S.stateNode;S=S.tag,S!==5&&S!==26&&S!==27||k===null||(S=Ta(u,f),S!=null&&y.unshift(xp(u,S,k)),S=Ta(u,h),S!=null&&y.push(xp(u,S,k))),u=u.return}return y}function Tc(u){if(u===null)return null;do u=u.return;while(u&&u.tag!==5&&u.tag!==27);return u||null}function Ok(u,h,f,y,S){for(var k=h._reactName,F=[];f!==null&&f!==y;){var U=f,Y=U.alternate,he=U.stateNode;if(U=U.tag,Y!==null&&Y===y)break;U!==5&&U!==26&&U!==27||he===null||(Y=he,S?(he=Ta(f,k),he!=null&&F.unshift(xp(f,he,Y))):S||(he=Ta(f,k),he!=null&&F.push(xp(f,he,Y)))),f=f.return}F.length!==0&&u.push({event:h,listeners:F})}var Bz=/\r\n?/g,Vz=/\u0000|\uFFFD/g;function Fk(u){return(typeof u=="string"?u:""+u).replace(Bz,`
`).replace(Vz,"")}function zk(u,h){return h=Fk(h),Fk(u)===h}function Og(){}function en(u,h,f,y,S,k){switch(f){case"children":typeof y=="string"?h==="body"||h==="textarea"&&y===""||Na(u,y):(typeof y=="number"||typeof y=="bigint")&&h!=="body"&&Na(u,""+y);break;case"className":ho(u,"class",y);break;case"tabIndex":ho(u,"tabindex",y);break;case"dir":case"role":case"viewBox":case"width":case"height":ho(u,f,y);break;case"style":Od(u,y,k);break;case"data":if(h!=="object"){ho(u,"data",y);break}case"src":case"href":if(y===""&&(h!=="a"||f!=="href")){u.removeAttribute(f);break}if(y==null||typeof y=="function"||typeof y=="symbol"||typeof y=="boolean"){u.removeAttribute(f);break}y=Zu(""+y),u.setAttribute(f,y);break;case"action":case"formAction":if(typeof y=="function"){u.setAttribute(f,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}else typeof k=="function"&&(f==="formAction"?(h!=="input"&&en(u,h,"name",S.name,S,null),en(u,h,"formEncType",S.formEncType,S,null),en(u,h,"formMethod",S.formMethod,S,null),en(u,h,"formTarget",S.formTarget,S,null)):(en(u,h,"encType",S.encType,S,null),en(u,h,"method",S.method,S,null),en(u,h,"target",S.target,S,null)));if(y==null||typeof y=="symbol"||typeof y=="boolean"){u.removeAttribute(f);break}y=Zu(""+y),u.setAttribute(f,y);break;case"onClick":y!=null&&(u.onclick=Og);break;case"onScroll":y!=null&&Ot("scroll",u);break;case"onScrollEnd":y!=null&&Ot("scrollend",u);break;case"dangerouslySetInnerHTML":if(y!=null){if(typeof y!="object"||!("__html"in y))throw Error(s(61));if(f=y.__html,f!=null){if(S.children!=null)throw Error(s(60));u.innerHTML=f}}break;case"multiple":u.multiple=y&&typeof y!="function"&&typeof y!="symbol";break;case"muted":u.muted=y&&typeof y!="function"&&typeof y!="symbol";break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":break;case"autoFocus":break;case"xlinkHref":if(y==null||typeof y=="function"||typeof y=="boolean"||typeof y=="symbol"){u.removeAttribute("xlink:href");break}f=Zu(""+y),u.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",f);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":y!=null&&typeof y!="function"&&typeof y!="symbol"?u.setAttribute(f,""+y):u.removeAttribute(f);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":y&&typeof y!="function"&&typeof y!="symbol"?u.setAttribute(f,""):u.removeAttribute(f);break;case"capture":case"download":y===!0?u.setAttribute(f,""):y!==!1&&y!=null&&typeof y!="function"&&typeof y!="symbol"?u.setAttribute(f,y):u.removeAttribute(f);break;case"cols":case"rows":case"size":case"span":y!=null&&typeof y!="function"&&typeof y!="symbol"&&!isNaN(y)&&1<=y?u.setAttribute(f,y):u.removeAttribute(f);break;case"rowSpan":case"start":y==null||typeof y=="function"||typeof y=="symbol"||isNaN(y)?u.removeAttribute(f):u.setAttribute(f,y);break;case"popover":Ot("beforetoggle",u),Ot("toggle",u),$l(u,"popover",y);break;case"xlinkActuate":Ti(u,"http://www.w3.org/1999/xlink","xlink:actuate",y);break;case"xlinkArcrole":Ti(u,"http://www.w3.org/1999/xlink","xlink:arcrole",y);break;case"xlinkRole":Ti(u,"http://www.w3.org/1999/xlink","xlink:role",y);break;case"xlinkShow":Ti(u,"http://www.w3.org/1999/xlink","xlink:show",y);break;case"xlinkTitle":Ti(u,"http://www.w3.org/1999/xlink","xlink:title",y);break;case"xlinkType":Ti(u,"http://www.w3.org/1999/xlink","xlink:type",y);break;case"xmlBase":Ti(u,"http://www.w3.org/XML/1998/namespace","xml:base",y);break;case"xmlLang":Ti(u,"http://www.w3.org/XML/1998/namespace","xml:lang",y);break;case"xmlSpace":Ti(u,"http://www.w3.org/XML/1998/namespace","xml:space",y);break;case"is":$l(u,"is",y);break;case"innerText":case"textContent":break;default:(!(2<f.length)||f[0]!=="o"&&f[0]!=="O"||f[1]!=="n"&&f[1]!=="N")&&(f=g0.get(f)||f,$l(u,f,y))}}function ow(u,h,f,y,S,k){switch(f){case"style":Od(u,y,k);break;case"dangerouslySetInnerHTML":if(y!=null){if(typeof y!="object"||!("__html"in y))throw Error(s(61));if(f=y.__html,f!=null){if(S.children!=null)throw Error(s(60));u.innerHTML=f}}break;case"children":typeof y=="string"?Na(u,y):(typeof y=="number"||typeof y=="bigint")&&Na(u,""+y);break;case"onScroll":y!=null&&Ot("scroll",u);break;case"onScrollEnd":y!=null&&Ot("scrollend",u);break;case"onClick":y!=null&&(u.onclick=Og);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":break;case"innerText":case"textContent":break;default:if(!Td.hasOwnProperty(f))e:{if(f[0]==="o"&&f[1]==="n"&&(S=f.endsWith("Capture"),h=f.slice(2,S?f.length-7:void 0),k=u[Ps]||null,k=k!=null?k[f]:null,typeof k=="function"&&u.removeEventListener(h,k,S),typeof y=="function")){typeof k!="function"&&k!==null&&(f in u?u[f]=null:u.hasAttribute(f)&&u.removeAttribute(f)),u.addEventListener(h,y,S);break e}f in u?u[f]=y:y===!0?u.setAttribute(f,""):$l(u,f,y)}}}function Es(u,h,f){switch(h){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":Ot("error",u),Ot("load",u);var y=!1,S=!1,k;for(k in f)if(f.hasOwnProperty(k)){var F=f[k];if(F!=null)switch(k){case"src":y=!0;break;case"srcSet":S=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(s(137,h));default:en(u,h,k,F,f,null)}}S&&en(u,h,"srcSet",f.srcSet,f,null),y&&en(u,h,"src",f.src,f,null);return;case"input":Ot("invalid",u);var U=k=F=S=null,Y=null,he=null;for(y in f)if(f.hasOwnProperty(y)){var ke=f[y];if(ke!=null)switch(y){case"name":S=ke;break;case"type":F=ke;break;case"checked":Y=ke;break;case"defaultChecked":he=ke;break;case"value":k=ke;break;case"defaultValue":U=ke;break;case"children":case"dangerouslySetInnerHTML":if(ke!=null)throw Error(s(137,h));break;default:en(u,h,y,ke,f,null)}}Ad(u,k,U,Y,he,F,S,!1),kl(u);return;case"select":Ot("invalid",u),y=F=k=null;for(S in f)if(f.hasOwnProperty(S)&&(U=f[S],U!=null))switch(S){case"value":k=U;break;case"defaultValue":F=U;break;case"multiple":y=U;default:en(u,h,S,U,f,null)}h=k,f=F,u.multiple=!!y,h!=null?fo(u,!!y,h,!1):f!=null&&fo(u,!!y,f,!0);return;case"textarea":Ot("invalid",u),k=S=y=null;for(F in f)if(f.hasOwnProperty(F)&&(U=f[F],U!=null))switch(F){case"value":y=U;break;case"defaultValue":S=U;break;case"children":k=U;break;case"dangerouslySetInnerHTML":if(U!=null)throw Error(s(91));break;default:en(u,h,F,U,f,null)}Dd(u,y,S,k),kl(u);return;case"option":for(Y in f)if(f.hasOwnProperty(Y)&&(y=f[Y],y!=null))switch(Y){case"selected":u.selected=y&&typeof y!="function"&&typeof y!="symbol";break;default:en(u,h,Y,y,f,null)}return;case"dialog":Ot("cancel",u),Ot("close",u);break;case"iframe":case"object":Ot("load",u);break;case"video":case"audio":for(y=0;y<yp.length;y++)Ot(yp[y],u);break;case"image":Ot("error",u),Ot("load",u);break;case"details":Ot("toggle",u);break;case"embed":case"source":case"link":Ot("error",u),Ot("load",u);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(he in f)if(f.hasOwnProperty(he)&&(y=f[he],y!=null))switch(he){case"children":case"dangerouslySetInnerHTML":throw Error(s(137,h));default:en(u,h,he,y,f,null)}return;default:if(Ia(h)){for(ke in f)f.hasOwnProperty(ke)&&(y=f[ke],y!==void 0&&ow(u,h,ke,y,f,void 0));return}}for(U in f)f.hasOwnProperty(U)&&(y=f[U],y!=null&&en(u,h,U,y,f,null))}function Uz(u,h,f,y){switch(h){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var S=null,k=null,F=null,U=null,Y=null,he=null,ke=null;for(Se in f){var Re=f[Se];if(f.hasOwnProperty(Se)&&Re!=null)switch(Se){case"checked":break;case"value":break;case"defaultValue":Y=Re;default:y.hasOwnProperty(Se)||en(u,h,Se,null,y,Re)}}for(var be in y){var Se=y[be];if(Re=f[be],y.hasOwnProperty(be)&&(Se!=null||Re!=null))switch(be){case"type":k=Se;break;case"name":S=Se;break;case"checked":he=Se;break;case"defaultChecked":ke=Se;break;case"value":F=Se;break;case"defaultValue":U=Se;break;case"children":case"dangerouslySetInnerHTML":if(Se!=null)throw Error(s(137,h));break;default:Se!==Re&&en(u,h,be,Se,y,Re)}}po(u,F,U,Y,he,ke,k,S);return;case"select":Se=F=U=be=null;for(k in f)if(Y=f[k],f.hasOwnProperty(k)&&Y!=null)switch(k){case"value":break;case"multiple":Se=Y;default:y.hasOwnProperty(k)||en(u,h,k,null,y,Y)}for(S in y)if(k=y[S],Y=f[S],y.hasOwnProperty(S)&&(k!=null||Y!=null))switch(S){case"value":be=k;break;case"defaultValue":U=k;break;case"multiple":F=k;default:k!==Y&&en(u,h,S,k,y,Y)}h=U,f=F,y=Se,be!=null?fo(u,!!f,be,!1):!!y!=!!f&&(h!=null?fo(u,!!f,h,!0):fo(u,!!f,f?[]:"",!1));return;case"textarea":Se=be=null;for(U in f)if(S=f[U],f.hasOwnProperty(U)&&S!=null&&!y.hasOwnProperty(U))switch(U){case"value":break;case"children":break;default:en(u,h,U,null,y,S)}for(F in y)if(S=y[F],k=f[F],y.hasOwnProperty(F)&&(S!=null||k!=null))switch(F){case"value":be=S;break;case"defaultValue":Se=S;break;case"children":break;case"dangerouslySetInnerHTML":if(S!=null)throw Error(s(91));break;default:S!==k&&en(u,h,F,S,y,k)}Bm(u,be,Se);return;case"option":for(var et in f)if(be=f[et],f.hasOwnProperty(et)&&be!=null&&!y.hasOwnProperty(et))switch(et){case"selected":u.selected=!1;break;default:en(u,h,et,null,y,be)}for(Y in y)if(be=y[Y],Se=f[Y],y.hasOwnProperty(Y)&&be!==Se&&(be!=null||Se!=null))switch(Y){case"selected":u.selected=be&&typeof be!="function"&&typeof be!="symbol";break;default:en(u,h,Y,be,y,Se)}return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var gt in f)be=f[gt],f.hasOwnProperty(gt)&&be!=null&&!y.hasOwnProperty(gt)&&en(u,h,gt,null,y,be);for(he in y)if(be=y[he],Se=f[he],y.hasOwnProperty(he)&&be!==Se&&(be!=null||Se!=null))switch(he){case"children":case"dangerouslySetInnerHTML":if(be!=null)throw Error(s(137,h));break;default:en(u,h,he,be,y,Se)}return;default:if(Ia(h)){for(var En in f)be=f[En],f.hasOwnProperty(En)&&be!==void 0&&!y.hasOwnProperty(En)&&ow(u,h,En,void 0,y,be);for(ke in y)be=y[ke],Se=f[ke],!y.hasOwnProperty(ke)||be===Se||be===void 0&&Se===void 0||ow(u,h,ke,be,y,Se);return}}for(var fe in f)be=f[fe],f.hasOwnProperty(fe)&&be!=null&&!y.hasOwnProperty(fe)&&en(u,h,fe,null,y,be);for(Re in y)be=y[Re],Se=f[Re],!y.hasOwnProperty(Re)||be===Se||be==null&&Se==null||en(u,h,Re,be,y,Se)}var lw=null,uw=null;function Fg(u){return u.nodeType===9?u:u.ownerDocument}function Lk(u){switch(u){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function Pk(u,h){if(u===0)switch(h){case"svg":return 1;case"math":return 2;default:return 0}return u===1&&h==="foreignObject"?0:u}function cw(u,h){return u==="textarea"||u==="noscript"||typeof h.children=="string"||typeof h.children=="number"||typeof h.children=="bigint"||typeof h.dangerouslySetInnerHTML=="object"&&h.dangerouslySetInnerHTML!==null&&h.dangerouslySetInnerHTML.__html!=null}var hw=null;function Wz(){var u=window.event;return u&&u.type==="popstate"?u===hw?!1:(hw=u,!0):(hw=null,!1)}var Mk=typeof setTimeout=="function"?setTimeout:void 0,Gz=typeof clearTimeout=="function"?clearTimeout:void 0,Bk=typeof Promise=="function"?Promise:void 0,Hz=typeof queueMicrotask=="function"?queueMicrotask:typeof Bk<"u"?function(u){return Bk.resolve(null).then(u).catch(jz)}:Mk;function jz(u){setTimeout(function(){throw u})}function dw(u,h){var f=h,y=0;do{var S=f.nextSibling;if(u.removeChild(f),S&&S.nodeType===8)if(f=S.data,f==="/$"){if(y===0){u.removeChild(S),Np(h);return}y--}else f!=="$"&&f!=="$?"&&f!=="$!"||y++;f=S}while(f);Np(h)}function pw(u){var h=u.firstChild;for(h&&h.nodeType===10&&(h=h.nextSibling);h;){var f=h;switch(h=h.nextSibling,f.nodeName){case"HTML":case"HEAD":case"BODY":pw(f),Sl(f);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if(f.rel.toLowerCase()==="stylesheet")continue}u.removeChild(f)}}function qz(u,h,f,y){for(;u.nodeType===1;){var S=f;if(u.nodeName.toLowerCase()!==h.toLowerCase()){if(!y&&(u.nodeName!=="INPUT"||u.type!=="hidden"))break}else if(y){if(!u[ka])switch(h){case"meta":if(!u.hasAttribute("itemprop"))break;return u;case"link":if(k=u.getAttribute("rel"),k==="stylesheet"&&u.hasAttribute("data-precedence"))break;if(k!==S.rel||u.getAttribute("href")!==(S.href==null?null:S.href)||u.getAttribute("crossorigin")!==(S.crossOrigin==null?null:S.crossOrigin)||u.getAttribute("title")!==(S.title==null?null:S.title))break;return u;case"style":if(u.hasAttribute("data-precedence"))break;return u;case"script":if(k=u.getAttribute("src"),(k!==(S.src==null?null:S.src)||u.getAttribute("type")!==(S.type==null?null:S.type)||u.getAttribute("crossorigin")!==(S.crossOrigin==null?null:S.crossOrigin))&&k&&u.hasAttribute("async")&&!u.hasAttribute("itemprop"))break;return u;default:return u}}else if(h==="input"&&u.type==="hidden"){var k=S.name==null?null:""+S.name;if(S.type==="hidden"&&u.getAttribute("name")===k)return u}else return u;if(u=_i(u.nextSibling),u===null)break}return null}function Xz(u,h,f){if(h==="")return null;for(;u.nodeType!==3;)if((u.nodeType!==1||u.nodeName!=="INPUT"||u.type!=="hidden")&&!f||(u=_i(u.nextSibling),u===null))return null;return u}function _i(u){for(;u!=null;u=u.nextSibling){var h=u.nodeType;if(h===1||h===3)break;if(h===8){if(h=u.data,h==="$"||h==="$!"||h==="$?"||h==="F!"||h==="F")break;if(h==="/$")return null}}return u}function Vk(u){u=u.previousSibling;for(var h=0;u;){if(u.nodeType===8){var f=u.data;if(f==="$"||f==="$!"||f==="$?"){if(h===0)return u;h--}else f==="/$"&&h++}u=u.previousSibling}return null}function Uk(u,h,f){switch(h=Fg(f),u){case"html":if(u=h.documentElement,!u)throw Error(s(452));return u;case"head":if(u=h.head,!u)throw Error(s(453));return u;case"body":if(u=h.body,!u)throw Error(s(454));return u;default:throw Error(s(451))}}var li=new Map,Wk=new Set;function zg(u){return typeof u.getRootNode=="function"?u.getRootNode():u.ownerDocument}var Ha=xe.d;xe.d={f:Kz,r:Yz,D:Qz,C:Zz,L:Jz,m:eL,X:nL,S:tL,M:sL};function Kz(){var u=Ha.f(),h=Tg();return u||h}function Yz(u){var h=ps(u);h!==null&&h.tag===5&&h.type==="form"?g$(h):Ha.r(u)}var Ec=typeof document>"u"?null:document;function Gk(u,h,f){var y=Ec;if(y&&typeof h=="string"&&h){var S=er(h);S='link[rel="'+u+'"][href="'+S+'"]',typeof f=="string"&&(S+='[crossorigin="'+f+'"]'),Wk.has(S)||(Wk.add(S),u={rel:u,crossOrigin:f,href:h},y.querySelector(S)===null&&(h=y.createElement("link"),Es(h,"link",u),kn(h),y.head.appendChild(h)))}}function Qz(u){Ha.D(u),Gk("dns-prefetch",u,null)}function Zz(u,h){Ha.C(u,h),Gk("preconnect",u,h)}function Jz(u,h,f){Ha.L(u,h,f);var y=Ec;if(y&&u&&h){var S='link[rel="preload"][as="'+er(h)+'"]';h==="image"&&f&&f.imageSrcSet?(S+='[imagesrcset="'+er(f.imageSrcSet)+'"]',typeof f.imageSizes=="string"&&(S+='[imagesizes="'+er(f.imageSizes)+'"]')):S+='[href="'+er(u)+'"]';var k=S;switch(h){case"style":k=Rc(u);break;case"script":k=Ac(u)}li.has(k)||(u=L({rel:"preload",href:h==="image"&&f&&f.imageSrcSet?void 0:u,as:h},f),li.set(k,u),y.querySelector(S)!==null||h==="style"&&y.querySelector(bp(k))||h==="script"&&y.querySelector(wp(k))||(h=y.createElement("link"),Es(h,"link",u),kn(h),y.head.appendChild(h)))}}function eL(u,h){Ha.m(u,h);var f=Ec;if(f&&u){var y=h&&typeof h.as=="string"?h.as:"script",S='link[rel="modulepreload"][as="'+er(y)+'"][href="'+er(u)+'"]',k=S;switch(y){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":k=Ac(u)}if(!li.has(k)&&(u=L({rel:"modulepreload",href:u},h),li.set(k,u),f.querySelector(S)===null)){switch(y){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(f.querySelector(wp(k)))return}y=f.createElement("link"),Es(y,"link",u),kn(y),f.head.appendChild(y)}}}function tL(u,h,f){Ha.S(u,h,f);var y=Ec;if(y&&u){var S=Yr(y).hoistableStyles,k=Rc(u);h=h||"default";var F=S.get(k);if(!F){var U={loading:0,preload:null};if(F=y.querySelector(bp(k)))U.loading=5;else{u=L({rel:"stylesheet",href:u,"data-precedence":h},f),(f=li.get(k))&&fw(u,f);var Y=F=y.createElement("link");kn(Y),Es(Y,"link",u),Y._p=new Promise(function(he,ke){Y.onload=he,Y.onerror=ke}),Y.addEventListener("load",function(){U.loading|=1}),Y.addEventListener("error",function(){U.loading|=2}),U.loading|=4,Lg(F,h,y)}F={type:"stylesheet",instance:F,count:1,state:U},S.set(k,F)}}}function nL(u,h){Ha.X(u,h);var f=Ec;if(f&&u){var y=Yr(f).hoistableScripts,S=Ac(u),k=y.get(S);k||(k=f.querySelector(wp(S)),k||(u=L({src:u,async:!0},h),(h=li.get(S))&&mw(u,h),k=f.createElement("script"),kn(k),Es(k,"link",u),f.head.appendChild(k)),k={type:"script",instance:k,count:1,state:null},y.set(S,k))}}function sL(u,h){Ha.M(u,h);var f=Ec;if(f&&u){var y=Yr(f).hoistableScripts,S=Ac(u),k=y.get(S);k||(k=f.querySelector(wp(S)),k||(u=L({src:u,async:!0,type:"module"},h),(h=li.get(S))&&mw(u,h),k=f.createElement("script"),kn(k),Es(k,"link",u),f.head.appendChild(k)),k={type:"script",instance:k,count:1,state:null},y.set(S,k))}}function Hk(u,h,f,y){var S=(S=nt.current)?zg(S):null;if(!S)throw Error(s(446));switch(u){case"meta":case"title":return null;case"style":return typeof f.precedence=="string"&&typeof f.href=="string"?(h=Rc(f.href),f=Yr(S).hoistableStyles,y=f.get(h),y||(y={type:"style",instance:null,count:0,state:null},f.set(h,y)),y):{type:"void",instance:null,count:0,state:null};case"link":if(f.rel==="stylesheet"&&typeof f.href=="string"&&typeof f.precedence=="string"){u=Rc(f.href);var k=Yr(S).hoistableStyles,F=k.get(u);if(F||(S=S.ownerDocument||S,F={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},k.set(u,F),(k=S.querySelector(bp(u)))&&!k._p&&(F.instance=k,F.state.loading=5),li.has(u)||(f={rel:"preload",as:"style",href:f.href,crossOrigin:f.crossOrigin,integrity:f.integrity,media:f.media,hrefLang:f.hrefLang,referrerPolicy:f.referrerPolicy},li.set(u,f),k||rL(S,u,f,F.state))),h&&y===null)throw Error(s(528,""));return F}if(h&&y!==null)throw Error(s(529,""));return null;case"script":return h=f.async,f=f.src,typeof f=="string"&&h&&typeof h!="function"&&typeof h!="symbol"?(h=Ac(f),f=Yr(S).hoistableScripts,y=f.get(h),y||(y={type:"script",instance:null,count:0,state:null},f.set(h,y)),y):{type:"void",instance:null,count:0,state:null};default:throw Error(s(444,u))}}function Rc(u){return'href="'+er(u)+'"'}function bp(u){return'link[rel="stylesheet"]['+u+"]"}function jk(u){return L({},u,{"data-precedence":u.precedence,precedence:null})}function rL(u,h,f,y){u.querySelector('link[rel="preload"][as="style"]['+h+"]")?y.loading=1:(h=u.createElement("link"),y.preload=h,h.addEventListener("load",function(){return y.loading|=1}),h.addEventListener("error",function(){return y.loading|=2}),Es(h,"link",f),kn(h),u.head.appendChild(h))}function Ac(u){return'[src="'+er(u)+'"]'}function wp(u){return"script[async]"+u}function qk(u,h,f){if(h.count++,h.instance===null)switch(h.type){case"style":var y=u.querySelector('style[data-href~="'+er(f.href)+'"]');if(y)return h.instance=y,kn(y),y;var S=L({},f,{"data-href":f.href,"data-precedence":f.precedence,href:null,precedence:null});return y=(u.ownerDocument||u).createElement("style"),kn(y),Es(y,"style",S),Lg(y,f.precedence,u),h.instance=y;case"stylesheet":S=Rc(f.href);var k=u.querySelector(bp(S));if(k)return h.state.loading|=4,h.instance=k,kn(k),k;y=jk(f),(S=li.get(S))&&fw(y,S),k=(u.ownerDocument||u).createElement("link"),kn(k);var F=k;return F._p=new Promise(function(U,Y){F.onload=U,F.onerror=Y}),Es(k,"link",y),h.state.loading|=4,Lg(k,f.precedence,u),h.instance=k;case"script":return k=Ac(f.src),(S=u.querySelector(wp(k)))?(h.instance=S,kn(S),S):(y=f,(S=li.get(k))&&(y=L({},f),mw(y,S)),u=u.ownerDocument||u,S=u.createElement("script"),kn(S),Es(S,"link",y),u.head.appendChild(S),h.instance=S);case"void":return null;default:throw Error(s(443,h.type))}else h.type==="stylesheet"&&(h.state.loading&4)===0&&(y=h.instance,h.state.loading|=4,Lg(y,f.precedence,u));return h.instance}function Lg(u,h,f){for(var y=f.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),S=y.length?y[y.length-1]:null,k=S,F=0;F<y.length;F++){var U=y[F];if(U.dataset.precedence===h)k=U;else if(k!==S)break}k?k.parentNode.insertBefore(u,k.nextSibling):(h=f.nodeType===9?f.head:f,h.insertBefore(u,h.firstChild))}function fw(u,h){u.crossOrigin==null&&(u.crossOrigin=h.crossOrigin),u.referrerPolicy==null&&(u.referrerPolicy=h.referrerPolicy),u.title==null&&(u.title=h.title)}function mw(u,h){u.crossOrigin==null&&(u.crossOrigin=h.crossOrigin),u.referrerPolicy==null&&(u.referrerPolicy=h.referrerPolicy),u.integrity==null&&(u.integrity=h.integrity)}var Pg=null;function Xk(u,h,f){if(Pg===null){var y=new Map,S=Pg=new Map;S.set(f,y)}else S=Pg,y=S.get(f),y||(y=new Map,S.set(f,y));if(y.has(u))return y;for(y.set(u,null),f=f.getElementsByTagName(u),S=0;S<f.length;S++){var k=f[S];if(!(k[ka]||k[Bn]||u==="link"&&k.getAttribute("rel")==="stylesheet")&&k.namespaceURI!=="http://www.w3.org/2000/svg"){var F=k.getAttribute(h)||"";F=u+F;var U=y.get(F);U?U.push(k):y.set(F,[k])}}return y}function Kk(u,h,f){u=u.ownerDocument||u,u.head.insertBefore(f,h==="title"?u.querySelector("head > title"):null)}function iL(u,h,f){if(f===1||h.itemProp!=null)return!1;switch(u){case"meta":case"title":return!0;case"style":if(typeof h.precedence!="string"||typeof h.href!="string"||h.href==="")break;return!0;case"link":if(typeof h.rel!="string"||typeof h.href!="string"||h.href===""||h.onLoad||h.onError)break;switch(h.rel){case"stylesheet":return u=h.disabled,typeof h.precedence=="string"&&u==null;default:return!0}case"script":if(h.async&&typeof h.async!="function"&&typeof h.async!="symbol"&&!h.onLoad&&!h.onError&&h.src&&typeof h.src=="string")return!0}return!1}function Yk(u){return!(u.type==="stylesheet"&&(u.state.loading&3)===0)}var vp=null;function aL(){}function oL(u,h,f){if(vp===null)throw Error(s(475));var y=vp;if(h.type==="stylesheet"&&(typeof f.media!="string"||matchMedia(f.media).matches!==!1)&&(h.state.loading&4)===0){if(h.instance===null){var S=Rc(f.href),k=u.querySelector(bp(S));if(k){u=k._p,u!==null&&typeof u=="object"&&typeof u.then=="function"&&(y.count++,y=Mg.bind(y),u.then(y,y)),h.state.loading|=4,h.instance=k,kn(k);return}k=u.ownerDocument||u,f=jk(f),(S=li.get(S))&&fw(f,S),k=k.createElement("link"),kn(k);var F=k;F._p=new Promise(function(U,Y){F.onload=U,F.onerror=Y}),Es(k,"link",f),h.instance=k}y.stylesheets===null&&(y.stylesheets=new Map),y.stylesheets.set(h,u),(u=h.state.preload)&&(h.state.loading&3)===0&&(y.count++,h=Mg.bind(y),u.addEventListener("load",h),u.addEventListener("error",h))}}function lL(){if(vp===null)throw Error(s(475));var u=vp;return u.stylesheets&&u.count===0&&gw(u,u.stylesheets),0<u.count?function(h){var f=setTimeout(function(){if(u.stylesheets&&gw(u,u.stylesheets),u.unsuspend){var y=u.unsuspend;u.unsuspend=null,y()}},6e4);return u.unsuspend=h,function(){u.unsuspend=null,clearTimeout(f)}}:null}function Mg(){if(this.count--,this.count===0){if(this.stylesheets)gw(this,this.stylesheets);else if(this.unsuspend){var u=this.unsuspend;this.unsuspend=null,u()}}}var Bg=null;function gw(u,h){u.stylesheets=null,u.unsuspend!==null&&(u.count++,Bg=new Map,h.forEach(uL,u),Bg=null,Mg.call(u))}function uL(u,h){if(!(h.state.loading&4)){var f=Bg.get(u);if(f)var y=f.get(null);else{f=new Map,Bg.set(u,f);for(var S=u.querySelectorAll("link[data-precedence],style[data-precedence]"),k=0;k<S.length;k++){var F=S[k];(F.nodeName==="LINK"||F.getAttribute("media")!=="not all")&&(f.set(F.dataset.precedence,F),y=F)}y&&f.set(null,y)}S=h.instance,F=S.getAttribute("data-precedence"),k=f.get(F)||y,k===y&&f.set(null,S),f.set(F,S),this.count++,y=Mg.bind(this),S.addEventListener("load",y),S.addEventListener("error",y),k?k.parentNode.insertBefore(S,k.nextSibling):(u=u.nodeType===9?u.head:u,u.insertBefore(S,u.firstChild)),h.state.loading|=4}}var Sp={$$typeof:g,Provider:null,Consumer:null,_currentValue:$e,_currentValue2:$e,_threadCount:0};function cL(u,h,f,y,S,k,F,U){this.tag=1,this.containerInfo=u,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=uo(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=uo(0),this.hiddenUpdates=uo(null),this.identifierPrefix=y,this.onUncaughtError=S,this.onCaughtError=k,this.onRecoverableError=F,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=U,this.incompleteTransitions=new Map}function Qk(u,h,f,y,S,k,F,U,Y,he,ke,Re){return u=new cL(u,h,f,F,U,Y,he,Re),h=1,k===!0&&(h|=24),k=ai(3,null,null,h),u.current=k,k.stateNode=u,h=X0(),h.refCount++,u.pooledCache=h,h.refCount++,k.memoizedState={element:y,isDehydrated:f,cache:h},T1(k),u}function Zk(u){return u?(u=uc,u):uc}function Jk(u,h,f,y,S,k){S=Zk(S),y.context===null?y.context=S:y.pendingContext=S,y=ko(h),y.payload={element:f},k=k===void 0?null:k,k!==null&&(y.callback=k),f=No(u,y,h),f!==null&&(rr(f,u,h),ip(f,u,h))}function eN(u,h){if(u=u.memoizedState,u!==null&&u.dehydrated!==null){var f=u.retryLane;u.retryLane=f!==0&&f<h?f:h}}function yw(u,h){eN(u,h),(u=u.alternate)&&eN(u,h)}function tN(u){if(u.tag===13){var h=xo(u,67108864);h!==null&&rr(h,u,67108864),yw(u,67108864)}}var Vg=!0;function hL(u,h,f,y){var S=O.T;O.T=null;var k=xe.p;try{xe.p=2,xw(u,h,f,y)}finally{xe.p=k,O.T=S}}function dL(u,h,f,y){var S=O.T;O.T=null;var k=xe.p;try{xe.p=8,xw(u,h,f,y)}finally{xe.p=k,O.T=S}}function xw(u,h,f,y){if(Vg){var S=bw(y);if(S===null)aw(u,h,y,Ug,f),sN(u,y);else if(fL(S,u,h,f,y))y.stopPropagation();else if(sN(u,y),h&4&&-1<pL.indexOf(u)){for(;S!==null;){var k=ps(S);if(k!==null)switch(k.tag){case 3:if(k=k.stateNode,k.current.memoizedState.isDehydrated){var F=ki(k.pendingLanes);if(F!==0){var U=k;for(U.pendingLanes|=2,U.entangledLanes|=2;F;){var Y=1<<31-Ls(F);U.entanglements[1]|=Y,F&=~Y}ia(k),(wn&6)===0&&(kg=jt()+500,gp(0))}}break;case 13:U=xo(k,2),U!==null&&rr(U,k,2),Tg(),yw(k,2)}if(k=bw(y),k===null&&aw(u,h,y,Ug,f),k===S)break;S=k}S!==null&&y.stopPropagation()}else aw(u,h,y,null,f)}}function bw(u){return u=Nl(u),ww(u)}var Ug=null;function ww(u){if(Ug=null,u=ea(u),u!==null){var h=se(u);if(h===null)u=null;else{var f=h.tag;if(f===13){if(u=de(h),u!==null)return u;u=null}else if(f===3){if(h.stateNode.current.memoizedState.isDehydrated)return h.tag===3?h.stateNode.containerInfo:null;u=null}else h!==u&&(u=null)}}return Ug=u,null}function nN(u){switch(u){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(mr()){case Fs:return 2;case Zs:return 8;case Js:case Qi:return 32;case oo:return 268435456;default:return 32}default:return 32}}var vw=!1,_o=null,Oo=null,Fo=null,Cp=new Map,$p=new Map,zo=[],pL="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function sN(u,h){switch(u){case"focusin":case"focusout":_o=null;break;case"dragenter":case"dragleave":Oo=null;break;case"mouseover":case"mouseout":Fo=null;break;case"pointerover":case"pointerout":Cp.delete(h.pointerId);break;case"gotpointercapture":case"lostpointercapture":$p.delete(h.pointerId)}}function kp(u,h,f,y,S,k){return u===null||u.nativeEvent!==k?(u={blockedOn:h,domEventName:f,eventSystemFlags:y,nativeEvent:k,targetContainers:[S]},h!==null&&(h=ps(h),h!==null&&tN(h)),u):(u.eventSystemFlags|=y,h=u.targetContainers,S!==null&&h.indexOf(S)===-1&&h.push(S),u)}function fL(u,h,f,y,S){switch(h){case"focusin":return _o=kp(_o,u,h,f,y,S),!0;case"dragenter":return Oo=kp(Oo,u,h,f,y,S),!0;case"mouseover":return Fo=kp(Fo,u,h,f,y,S),!0;case"pointerover":var k=S.pointerId;return Cp.set(k,kp(Cp.get(k)||null,u,h,f,y,S)),!0;case"gotpointercapture":return k=S.pointerId,$p.set(k,kp($p.get(k)||null,u,h,f,y,S)),!0}return!1}function rN(u){var h=ea(u.target);if(h!==null){var f=se(h);if(f!==null){if(h=f.tag,h===13){if(h=de(f),h!==null){u.blockedOn=h,xn(u.priority,function(){if(f.tag===13){var y=Pr(),S=xo(f,y);S!==null&&rr(S,f,y),yw(f,y)}});return}}else if(h===3&&f.stateNode.current.memoizedState.isDehydrated){u.blockedOn=f.tag===3?f.stateNode.containerInfo:null;return}}}u.blockedOn=null}function Wg(u){if(u.blockedOn!==null)return!1;for(var h=u.targetContainers;0<h.length;){var f=bw(u.nativeEvent);if(f===null){f=u.nativeEvent;var y=new f.constructor(f.type,f);Fd=y,f.target.dispatchEvent(y),Fd=null}else return h=ps(f),h!==null&&tN(h),u.blockedOn=f,!1;h.shift()}return!0}function iN(u,h,f){Wg(u)&&f.delete(h)}function mL(){vw=!1,_o!==null&&Wg(_o)&&(_o=null),Oo!==null&&Wg(Oo)&&(Oo=null),Fo!==null&&Wg(Fo)&&(Fo=null),Cp.forEach(iN),$p.forEach(iN)}function Gg(u,h){u.blockedOn===h&&(u.blockedOn=null,vw||(vw=!0,n.unstable_scheduleCallback(n.unstable_NormalPriority,mL)))}var Hg=null;function aN(u){Hg!==u&&(Hg=u,n.unstable_scheduleCallback(n.unstable_NormalPriority,function(){Hg===u&&(Hg=null);for(var h=0;h<u.length;h+=3){var f=u[h],y=u[h+1],S=u[h+2];if(typeof y!="function"){if(ww(y||f)===null)continue;break}var k=ps(f);k!==null&&(u.splice(h,3),h-=3,c1(k,{pending:!0,data:S,method:f.method,action:y},y,S))}}))}function Np(u){function h(Y){return Gg(Y,u)}_o!==null&&Gg(_o,u),Oo!==null&&Gg(Oo,u),Fo!==null&&Gg(Fo,u),Cp.forEach(h),$p.forEach(h);for(var f=0;f<zo.length;f++){var y=zo[f];y.blockedOn===u&&(y.blockedOn=null)}for(;0<zo.length&&(f=zo[0],f.blockedOn===null);)rN(f),f.blockedOn===null&&zo.shift();if(f=(u.ownerDocument||u).$$reactFormReplay,f!=null)for(y=0;y<f.length;y+=3){var S=f[y],k=f[y+1],F=S[Ps]||null;if(typeof k=="function")F||aN(f);else if(F){var U=null;if(k&&k.hasAttribute("formAction")){if(S=k,F=k[Ps]||null)U=F.formAction;else if(ww(S)!==null)continue}else U=F.action;typeof U=="function"?f[y+1]=U:(f.splice(y,3),y-=3),aN(f)}}}function Sw(u){this._internalRoot=u}jg.prototype.render=Sw.prototype.render=function(u){var h=this._internalRoot;if(h===null)throw Error(s(409));var f=h.current,y=Pr();Jk(f,y,u,h,null,null)},jg.prototype.unmount=Sw.prototype.unmount=function(){var u=this._internalRoot;if(u!==null){this._internalRoot=null;var h=u.containerInfo;u.tag===0&&Nc(),Jk(u.current,2,null,u,null,null),Tg(),h[Ni]=null}};function jg(u){this._internalRoot=u}jg.prototype.unstable_scheduleHydration=function(u){if(u){var h=Nd();u={blockedOn:null,target:u,priority:h};for(var f=0;f<zo.length&&h!==0&&h<zo[f].priority;f++);zo.splice(f,0,u),f===0&&rN(u)}};var oN=e.version;if(oN!=="19.0.0")throw Error(s(527,oN,"19.0.0"));xe.findDOMNode=function(u){var h=u._reactInternals;if(h===void 0)throw typeof u.render=="function"?Error(s(188)):(u=Object.keys(u).join(","),Error(s(268,u)));return u=ne(h),u=u!==null?ge(u):null,u=u===null?null:u.stateNode,u};var gL={bundleType:0,version:"19.0.0",rendererPackageName:"react-dom",currentDispatcherRef:O,findFiberByHostInstance:ea,reconcilerVersion:"19.0.0"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var qg=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!qg.isDisabled&&qg.supportsFiber)try{zs=qg.inject(gL),ts=qg}catch{}}return Tp.createRoot=function(u,h){if(!r(u))throw Error(s(299));var f=!1,y="",S=$$,k=k$,F=N$,U=null;return h!=null&&(h.unstable_strictMode===!0&&(f=!0),h.identifierPrefix!==void 0&&(y=h.identifierPrefix),h.onUncaughtError!==void 0&&(S=h.onUncaughtError),h.onCaughtError!==void 0&&(k=h.onCaughtError),h.onRecoverableError!==void 0&&(F=h.onRecoverableError),h.unstable_transitionCallbacks!==void 0&&(U=h.unstable_transitionCallbacks)),h=Qk(u,1,!1,null,null,f,y,S,k,F,U,null),u[Ni]=h.current,iw(u.nodeType===8?u.parentNode:u),new Sw(h)},Tp.hydrateRoot=function(u,h,f){if(!r(u))throw Error(s(299));var y=!1,S="",k=$$,F=k$,U=N$,Y=null,he=null;return f!=null&&(f.unstable_strictMode===!0&&(y=!0),f.identifierPrefix!==void 0&&(S=f.identifierPrefix),f.onUncaughtError!==void 0&&(k=f.onUncaughtError),f.onCaughtError!==void 0&&(F=f.onCaughtError),f.onRecoverableError!==void 0&&(U=f.onRecoverableError),f.unstable_transitionCallbacks!==void 0&&(Y=f.unstable_transitionCallbacks),f.formState!==void 0&&(he=f.formState)),h=Qk(u,1,!0,h,f??null,y,S,k,F,U,Y,he),h.context=Zk(null),f=h.current,y=Pr(),S=ko(y),S.callback=null,No(f,S,y),h.current.lanes=y,bl(h,y),ia(h),u[Ni]=h.current,iw(u),new jg(h)},Tp.version="19.0.0",Tp}var xN;function EL(){if(xN)return kw.exports;xN=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(e){console.error(e)}}return n(),kw.exports=TL(),kw.exports}var RL=EL();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AL=1e-7,DL=1e-4;class u2{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class nx{refCount(e){return wr("refCount")}incRef(e){return wr("incRef")}timerAvailable(){return!0}time(e){return wr("time")}read(e){return wr("read")}readSync(e){return wr("readSync")}readToGPU(e,t){return wr("readToGPU")}numDataIds(){return wr("numDataIds")}disposeData(e,t){return wr("disposeData")}write(e,t,s){return wr("write")}move(e,t,s,r,i){return wr("move")}createTensorFromGPUData(e,t,s){return wr("createTensorFromGPUData")}memory(){return wr("memory")}floatPrecision(){return wr("floatPrecision")}epsilon(){return this.floatPrecision()===32?AL:DL}dispose(){return wr("dispose")}}function wr(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _L(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,Pc(n,e,t)}function pu(n,e,t){return Math.max(n,Math.min(e,t))}function c2(n){return n%2===0?n:n+1}function Pc(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function aE(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function B(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function fr(n,e,t=""){B(yt(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function lh(n){B(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ue(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function bN(n){return n.length===0}function OL(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function yt(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Xc(n){return n%1===0}function ov(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function Uc(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function wN(n,e=r=>0,t,s){return new Promise((r,i)=>{let a=0;const o=()=>{if(n()){r();return}a++;const l=e(a);if(t!=null&&a>=t){i();return}s!=null?s(o,l):setTimeout(o,l)};o()})}function h2(n,e){let t=1,s=-1;for(let i=0;i<n.length;++i)if(n[i]>=0)t*=n[i];else if(n[i]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${i}`);s=i}else if(n[i]<0)throw Error(`Shapes can not be < 0. Found ${n[i]} at dim ${i}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function pt(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),B(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),B(n.every(s=>Xc(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function sl(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||r?null:pt(e,n).sort();let a=0;for(let o=0;o<n.length;++o){if(i!=null){if(i[a]===o&&n[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${n[o]}' is not 1`);(i[a]==null||i[a]>o)&&n[o]===1&&(t.push(n[o]),s.push(o)),i[a]<=o&&a++}n[o]!==1&&(t.push(n[o]),s.push(o))}return{newShape:t,keptDims:s}}function Yn(n,e){return Sn(n,e)}function Sn(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function FL(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function zL(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function d2(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Sy(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function LL(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function uh(n){return typeof n=="string"||n instanceof String}function PL(n){return typeof n=="boolean"}function lv(n){return typeof n=="number"}function Tu(n){return Array.isArray(n)?Tu(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":lv(n)?"float32":uh(n)?"string":PL(n)?"bool":"float32"}function uv(n){return!!(n&&n.constructor&&n.call&&n.apply)}function cv(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Qe(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function oE(n,e,t,s=!1){const r=new Array;if(e.length===1){const i=e[0]*(s?2:1);for(let a=0;a<i;a++)r[a]=t[n+a]}else{const i=e[0],a=e.slice(1),o=a.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<i;l++)r[l]=oE(n+l*o,a,t,s)}return r}function yi(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((r,i)=>r*i)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return oE(0,n,e,t)}function uy(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function p2(n,e){const t=vs(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function vs(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function lE(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return yi(n,new Float32Array(t));if(e==="int32")return yi(n,new Int32Array(t));if(e==="bool")return yi(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Gr(n){n.forEach(e=>{B(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function ha(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function ch(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function fu(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vN="tfjsflags";class ML{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=BL,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(pe().getBool("IS_TEST")||pe().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];pe().getBool("IS_TEST")||pe().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(fu(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);vN in e&&e[vN].split(",").forEach(s=>{const[r,i]=s.split(":");this.urlFlags[r]=UL(r,i)})}}function BL(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(VL(e,s[0],s[1]),s.join("="))),e}function VL(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function UL(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function pe(){return uE}let uE=null;function WL(n){uE=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ew;function cE(){if(Ew==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Ew=n}return Ew}function GL(){const n=cE();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function f2(n,e){const t=GL();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const hf="Abs",hh="Acos",dh="Acosh",Eu="Add",df="AddN",sx="All",rx="Any",pf="ArgMax",ff="ArgMin",ph="Asin",fh="Asinh",mh="Atan",gh="Atanh",yh="Atan2",mf="AvgPool",ix="AvgPoolGrad",gf="AvgPool3D",ax="AvgPool3DGrad",yf="BatchMatMul",xf="BatchToSpaceND",ox="Bincount",lx="BitwiseAnd",HL="BroadcastTo",ux="BroadcastArgs",xh="Cast",bh="Ceil",wh="ClipByValue",cx="Complex",bf="ComplexAbs",wf="Concat",vf="Conv2D",hx="Conv2DBackpropFilter",Sf="Conv2DBackpropInput",Cf="Conv3D",dx="Conv3DBackpropFilterV2",px="Conv3DBackpropInputV2",vh="Cos",Sh="Cosh",fx="Cumprod",$f="Cumsum",mx="CropAndResize",gx="DenseBincount",yx="DepthToSpace",kf="DepthwiseConv2dNative",xx="DepthwiseConv2dNativeBackpropFilter",bx="DepthwiseConv2dNativeBackpropInput",wx="Diag",Nf="Dilation2D",Cy="Dilation2DBackpropInput",$y="Dilation2DBackpropFilter",m2="Draw",Ch="RealDiv",vx="Einsum",$h="Elu",Sx="EluGrad",kh="Erf",If="Equal",Nh="Exp",Tf="ExpandDims",Ih="Expm1",Cx="FFT",$x="Fill",kx="FlipLeftRight",Th="Floor",Eh="FloorDiv",Ef="FusedBatchNorm",Rf="GatherV2",Nx="GatherNd",Af="Greater",Rh="GreaterEqual",Ah="Identity",Ix="IFFT",Tx="Imag",Dh="IsFinite",_h="IsInf",Oh="IsNan",Df="LeakyRelu",_f="Less",Of="LessEqual",Ex="LinSpace",Fh="Log",zh="Log1p",Ff="LogicalAnd",zf="LogicalNot",Lf="LogicalOr",jL="LogSoftmax",Pf="LRN",Rx="LRNGrad",Mf="Max",Lh="Maximum",Bf="MaxPool",Ax="MaxPoolGrad",Vf="MaxPool3D",Dx="MaxPool3DGrad",_x="MaxPoolWithArgmax",Uf="Mean",Wf="Min",Ph="Minimum",Gf="MirrorPad",Mh="Mod",Ox="Multinomial",Bh="Multiply",Hf="Neg",jf="NotEqual",Fx="NonMaxSuppressionV3",g2="NonMaxSuppressionV4",zx="NonMaxSuppressionV5",qf="OnesLike",Xf="OneHot",Kf="Pack",Yf="PadV2",Vh="Pow",Qf="Prelu",Zf="Prod",y2="RaggedGather",x2="RaggedRange",b2="RaggedTensorToTensor",Lx="Range",Px="Real",Uh="Reciprocal",Wh="Relu",Jf="Reshape",em="ResizeNearestNeighbor",Mx="ResizeNearestNeighborGrad",tm="ResizeBilinear",Bx="ResizeBilinearGrad",Gh="Relu6",nm="Reverse",Hh="Round",jh="Rsqrt",Vx="ScatterNd",Ux="TensorScatterUpdate",Wx="SearchSorted",sm="Select",qh="Selu",rm="Slice",Xh="Sin",Kh="Sinh",Yh="Sign",Qh="Sigmoid",Zh="Softplus",Jh="Sqrt",im="Sum",am="SpaceToBatchND",om="SplitV",lm="Softmax",w2="SparseFillEmptyRows",v2="SparseReshape",Gx="SparseSegmentMean",Hx="SparseSegmentSum",jx="SparseToDense",ed="SquaredDifference",qx="Square",Xx="StaticRegexReplace",Kx="StridedSlice",Yx="StringNGrams",S2="StringSplit",C2="StringToHashBucketFast",td="Sub",nd="Tan",sd="Tanh",rd="Tile",Qx="TopK",Zx="Transform",lu="Transpose",$2="Unique",um="Unpack",cm="UnsortedSegmentSum",hm="ZerosLike",id="Step",ky="FromPixels",Jx="RotateWithOffset",Wp="_FusedMatMul",Gp="FusedConv2D",Hp="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mr(...n){pe().getBool("IS_TEST")||pe().getBool("PROD")||console.warn(...n)}function qL(...n){pe().getBool("IS_TEST")||pe().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ny=f2("kernelRegistry",()=>new Map),hv=f2("gradRegistry",()=>new Map);function Iy(n,e){const t=hE(n,e);return Ny.get(t)}function SN(n){return hv.get(n)}function CN(n){const e=Ny.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[i,a]=r,[o]=i.split("_");o===n&&t.push(a)}return t}function k2(n){const{kernelName:e,backendName:t}=n,s=hE(e,t);Ny.has(s)&&Mr(`The kernel '${e}' for backend '${t}' is already registered`),Ny.set(s,n)}function XL(n){const{kernelName:e}=n;hv.has(e)&&pe().getBool("DEBUG")&&Mr(`Overriding the gradient for '${e}'`),hv.set(e,n)}function hE(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dE(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var Rw,$N;function KL(){if($N)return Rw;$N=1,Rw=e;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function e(L,D,G){this.low=L|0,this.high=D|0,this.unsigned=!!G}e.prototype.__isLong__,Object.defineProperty(e.prototype,"__isLong__",{value:!0});function t(L){return(L&&L.__isLong__)===!0}e.isLong=t;var s={},r={};function i(L,D){var G,q,ee;return D?(L>>>=0,(ee=0<=L&&L<256)&&(q=r[L],q)?q:(G=o(L,(L|0)<0?-1:0,!0),ee&&(r[L]=G),G)):(L|=0,(ee=-128<=L&&L<128)&&(q=s[L],q)?q:(G=o(L,L<0?-1:0,!1),ee&&(s[L]=G),G))}e.fromInt=i;function a(L,D){if(isNaN(L))return D?$:v;if(D){if(L<0)return $;if(L>=x)return z}else{if(L<=-9223372036854776e3)return P;if(L+1>=b)return _}return L<0?a(-L,D).neg():o(L%g|0,L/g|0,D)}e.fromNumber=a;function o(L,D,G){return new e(L,D,G)}e.fromBits=o;var l=Math.pow;function c(L,D,G){if(L.length===0)throw Error("empty string");if(L==="NaN"||L==="Infinity"||L==="+Infinity"||L==="-Infinity")return v;if(typeof D=="number"?(G=D,D=!1):D=!!D,G=G||10,G<2||36<G)throw RangeError("radix");var q;if((q=L.indexOf("-"))>0)throw Error("interior hyphen");if(q===0)return c(L.substring(1),D,G).neg();for(var ee=a(l(G,8)),Z=v,H=0;H<L.length;H+=8){var oe=Math.min(8,L.length-H),se=parseInt(L.substring(H,H+oe),G);if(oe<8){var de=a(l(G,oe));Z=Z.mul(de).add(a(se))}else Z=Z.mul(ee),Z=Z.add(a(se))}return Z.unsigned=D,Z}e.fromString=c;function d(L,D){return typeof L=="number"?a(L,D):typeof L=="string"?c(L,D):o(L.low,L.high,typeof D=="boolean"?D:L.unsigned)}e.fromValue=d;var p=65536,m=1<<24,g=p*p,x=g*g,b=x/2,w=i(m),v=i(0);e.ZERO=v;var $=i(0,!0);e.UZERO=$;var I=i(1);e.ONE=I;var N=i(1,!0);e.UONE=N;var E=i(-1);e.NEG_ONE=E;var _=o(-1,2147483647,!1);e.MAX_VALUE=_;var z=o(-1,-1,!0);e.MAX_UNSIGNED_VALUE=z;var P=o(0,-2147483648,!1);e.MIN_VALUE=P;var O=e.prototype;return O.toInt=function(){return this.unsigned?this.low>>>0:this.low},O.toNumber=function(){return this.unsigned?(this.high>>>0)*g+(this.low>>>0):this.high*g+(this.low>>>0)},O.toString=function(D){if(D=D||10,D<2||36<D)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(P)){var G=a(D),q=this.div(G),ee=q.mul(G).sub(this);return q.toString(D)+ee.toInt().toString(D)}else return"-"+this.neg().toString(D);for(var Z=a(l(D,6),this.unsigned),H=this,oe="";;){var se=H.div(Z),de=H.sub(se.mul(Z)).toInt()>>>0,W=de.toString(D);if(H=se,H.isZero())return W+oe;for(;W.length<6;)W="0"+W;oe=""+W+oe}},O.getHighBits=function(){return this.high},O.getHighBitsUnsigned=function(){return this.high>>>0},O.getLowBits=function(){return this.low},O.getLowBitsUnsigned=function(){return this.low>>>0},O.getNumBitsAbs=function(){if(this.isNegative())return this.eq(P)?64:this.neg().getNumBitsAbs();for(var D=this.high!=0?this.high:this.low,G=31;G>0&&(D&1<<G)==0;G--);return this.high!=0?G+33:G+1},O.isZero=function(){return this.high===0&&this.low===0},O.eqz=O.isZero,O.isNegative=function(){return!this.unsigned&&this.high<0},O.isPositive=function(){return this.unsigned||this.high>=0},O.isOdd=function(){return(this.low&1)===1},O.isEven=function(){return(this.low&1)===0},O.equals=function(D){return t(D)||(D=d(D)),this.unsigned!==D.unsigned&&this.high>>>31===1&&D.high>>>31===1?!1:this.high===D.high&&this.low===D.low},O.eq=O.equals,O.notEquals=function(D){return!this.eq(D)},O.neq=O.notEquals,O.ne=O.notEquals,O.lessThan=function(D){return this.comp(D)<0},O.lt=O.lessThan,O.lessThanOrEqual=function(D){return this.comp(D)<=0},O.lte=O.lessThanOrEqual,O.le=O.lessThanOrEqual,O.greaterThan=function(D){return this.comp(D)>0},O.gt=O.greaterThan,O.greaterThanOrEqual=function(D){return this.comp(D)>=0},O.gte=O.greaterThanOrEqual,O.ge=O.greaterThanOrEqual,O.compare=function(D){if(t(D)||(D=d(D)),this.eq(D))return 0;var G=this.isNegative(),q=D.isNegative();return G&&!q?-1:!G&&q?1:this.unsigned?D.high>>>0>this.high>>>0||D.high===this.high&&D.low>>>0>this.low>>>0?-1:1:this.sub(D).isNegative()?-1:1},O.comp=O.compare,O.negate=function(){return!this.unsigned&&this.eq(P)?P:this.not().add(I)},O.neg=O.negate,O.add=function(D){t(D)||(D=d(D));var G=this.high>>>16,q=this.high&65535,ee=this.low>>>16,Z=this.low&65535,H=D.high>>>16,oe=D.high&65535,se=D.low>>>16,de=D.low&65535,W=0,ne=0,ge=0,me=0;return me+=Z+de,ge+=me>>>16,me&=65535,ge+=ee+se,ne+=ge>>>16,ge&=65535,ne+=q+oe,W+=ne>>>16,ne&=65535,W+=G+H,W&=65535,o(ge<<16|me,W<<16|ne,this.unsigned)},O.subtract=function(D){return t(D)||(D=d(D)),this.add(D.neg())},O.sub=O.subtract,O.multiply=function(D){if(this.isZero())return v;if(t(D)||(D=d(D)),n){var G=n.mul(this.low,this.high,D.low,D.high);return o(G,n.get_high(),this.unsigned)}if(D.isZero())return v;if(this.eq(P))return D.isOdd()?P:v;if(D.eq(P))return this.isOdd()?P:v;if(this.isNegative())return D.isNegative()?this.neg().mul(D.neg()):this.neg().mul(D).neg();if(D.isNegative())return this.mul(D.neg()).neg();if(this.lt(w)&&D.lt(w))return a(this.toNumber()*D.toNumber(),this.unsigned);var q=this.high>>>16,ee=this.high&65535,Z=this.low>>>16,H=this.low&65535,oe=D.high>>>16,se=D.high&65535,de=D.low>>>16,W=D.low&65535,ne=0,ge=0,me=0,xe=0;return xe+=H*W,me+=xe>>>16,xe&=65535,me+=Z*W,ge+=me>>>16,me&=65535,me+=H*de,ge+=me>>>16,me&=65535,ge+=ee*W,ne+=ge>>>16,ge&=65535,ge+=Z*de,ne+=ge>>>16,ge&=65535,ge+=H*se,ne+=ge>>>16,ge&=65535,ne+=q*W+ee*de+Z*se+H*oe,ne&=65535,o(me<<16|xe,ne<<16|ge,this.unsigned)},O.mul=O.multiply,O.divide=function(D){if(t(D)||(D=d(D)),D.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&D.low===-1&&D.high===-1)return this;var G=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,D.low,D.high);return o(G,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?$:v;var q,ee,Z;if(this.unsigned){if(D.unsigned||(D=D.toUnsigned()),D.gt(this))return $;if(D.gt(this.shru(1)))return N;Z=$}else{if(this.eq(P)){if(D.eq(I)||D.eq(E))return P;if(D.eq(P))return I;var H=this.shr(1);return q=H.div(D).shl(1),q.eq(v)?D.isNegative()?I:E:(ee=this.sub(D.mul(q)),Z=q.add(ee.div(D)),Z)}else if(D.eq(P))return this.unsigned?$:v;if(this.isNegative())return D.isNegative()?this.neg().div(D.neg()):this.neg().div(D).neg();if(D.isNegative())return this.div(D.neg()).neg();Z=v}for(ee=this;ee.gte(D);){q=Math.max(1,Math.floor(ee.toNumber()/D.toNumber()));for(var oe=Math.ceil(Math.log(q)/Math.LN2),se=oe<=48?1:l(2,oe-48),de=a(q),W=de.mul(D);W.isNegative()||W.gt(ee);)q-=se,de=a(q,this.unsigned),W=de.mul(D);de.isZero()&&(de=I),Z=Z.add(de),ee=ee.sub(W)}return Z},O.div=O.divide,O.modulo=function(D){if(t(D)||(D=d(D)),n){var G=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,D.low,D.high);return o(G,n.get_high(),this.unsigned)}return this.sub(this.div(D).mul(D))},O.mod=O.modulo,O.rem=O.modulo,O.not=function(){return o(~this.low,~this.high,this.unsigned)},O.and=function(D){return t(D)||(D=d(D)),o(this.low&D.low,this.high&D.high,this.unsigned)},O.or=function(D){return t(D)||(D=d(D)),o(this.low|D.low,this.high|D.high,this.unsigned)},O.xor=function(D){return t(D)||(D=d(D)),o(this.low^D.low,this.high^D.high,this.unsigned)},O.shiftLeft=function(D){return t(D)&&(D=D.toInt()),(D&=63)===0?this:D<32?o(this.low<<D,this.high<<D|this.low>>>32-D,this.unsigned):o(0,this.low<<D-32,this.unsigned)},O.shl=O.shiftLeft,O.shiftRight=function(D){return t(D)&&(D=D.toInt()),(D&=63)===0?this:D<32?o(this.low>>>D|this.high<<32-D,this.high>>D,this.unsigned):o(this.high>>D-32,this.high>=0?0:-1,this.unsigned)},O.shr=O.shiftRight,O.shiftRightUnsigned=function(D){if(t(D)&&(D=D.toInt()),D&=63,D===0)return this;var G=this.high;if(D<32){var q=this.low;return o(q>>>D|G<<32-D,G>>>D,this.unsigned)}else return D===32?o(G,0,this.unsigned):o(G>>>D-32,0,this.unsigned)},O.shru=O.shiftRightUnsigned,O.shr_u=O.shiftRightUnsigned,O.toSigned=function(){return this.unsigned?o(this.low,this.high,!1):this},O.toUnsigned=function(){return this.unsigned?this:o(this.low,this.high,!0)},O.toBytes=function(D){return D?this.toBytesLE():this.toBytesBE()},O.toBytesLE=function(){var D=this.high,G=this.low;return[G&255,G>>>8&255,G>>>16&255,G>>>24,D&255,D>>>8&255,D>>>16&255,D>>>24]},O.toBytesBE=function(){var D=this.high,G=this.low;return[D>>>24,D>>>16&255,D>>>8&255,D&255,G>>>24,G>>>16&255,G>>>8&255,G&255]},e.fromBytes=function(D,G,q){return q?e.fromBytesLE(D,G):e.fromBytesBE(D,G)},e.fromBytesLE=function(D,G){return new e(D[0]|D[1]<<8|D[2]<<16|D[3]<<24,D[4]|D[5]<<8|D[6]<<16|D[7]<<24,G)},e.fromBytesBE=function(D,G){return new e(D[4]<<24|D[5]<<16|D[6]<<8|D[7],D[0]<<24|D[1]<<16|D[2]<<8|D[3],G)},Rw}var pE=KL();const fE=bL(pE),YL=xL({__proto__:null,default:fE},[pE]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eu=fE||YL;function eb(n){return eu.fromString(n,!0,16)}const mE=eb("c3a5c85c97cb3127"),Zl=eb("b492b66fbe98f273"),Gs=eb("9ae16a3b2f90404f");function dv(n){return n.xor(n.shru(47))}function gE(n,e,t){const s=n.slice(e,e+t);return eu.fromBytes(Array.from(s),!0,!0)}function rn(n,e){return gE(n,e,8)}function kN(n,e){return gE(n,e,4)}function ls(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Wo(n,e,t=eb("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let r=e.xor(s).mul(t);return r=r.xor(r.shru(47)),r=r.mul(t),r}function QL(n,e,t,s,r,i){r=r.add(n),i=ls(i.add(r).add(s),21);const a=r;return r=r.add(e),r=r.add(t),i=i.add(ls(r,44)),[r.add(s),i.add(a)]}function Xg(n,e,t,s){return QL(rn(n,e),rn(n,e+8),rn(n,e+16),rn(n,e+24),t,s)}function ZL(n,e=n.length){if(e>=8){const t=Gs.add(e*2),s=rn(n,0).add(Gs),r=rn(n,e-8),i=ls(r,37).mul(t).add(s),a=ls(s,25).add(r).mul(t);return Wo(i,a,t)}if(e>=4){const t=Gs.add(e*2),s=kN(n,0);return Wo(s.shl(3).add(e),kN(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],r=n[e-1],i=t+(s<<8),a=e+(r<<2);return dv(Gs.mul(i).xor(mE.mul(a))).mul(Gs)}return Gs}function JL(n,e=n.length){const t=Gs.add(e*2),s=rn(n,0).mul(Zl),r=rn(n,8),i=rn(n,e-8).mul(t),a=rn(n,e-16).mul(Gs);return Wo(ls(s.add(r),43).add(ls(i,30)).add(a),s.add(ls(r.add(Gs),18)).add(i),t)}function eP(n,e=n.length){const t=Gs.add(e*2),s=rn(n,0).mul(Gs),r=rn(n,8),i=rn(n,e-8).mul(t),a=rn(n,e-16).mul(Gs),o=ls(s.add(r),43).add(ls(i,30)).add(a),l=Wo(o,s.add(ls(r.add(Gs),18)).add(i),t),c=rn(n,16).mul(t),d=rn(n,24),p=o.add(rn(n,e-32)).mul(t),m=l.add(rn(n,e-24)).mul(t);return Wo(ls(c.add(d),43).add(ls(p,30)).add(m),c.add(ls(d.add(s),18)).add(p),t)}function tP(n,e=n.length){const t=eu.fromNumber(81,!0);if(e<=32)return e<=16?ZL(n,e):JL(n,e);if(e<=64)return eP(n,e);let s=t,r=t.mul(Zl).add(113),i=dv(r.mul(Gs).add(113)).mul(Gs),a=[eu.UZERO,eu.UZERO],o=[eu.UZERO,eu.UZERO];s=s.mul(Gs).add(rn(n,0));let l=0;const c=(e-1>>6)*64,d=c+(e-1&63)-63;do s=ls(s.add(r).add(a[0]).add(rn(n,l+8)),37).mul(Zl),r=ls(r.add(a[1]).add(rn(n,l+48)),42).mul(Zl),s=s.xor(o[1]),r=r.add(a[0]).add(rn(n,l+40)),i=ls(i.add(o[0]),33).mul(Zl),a=Xg(n,l,a[1].mul(Zl),s.add(o[0])),o=Xg(n,l+32,i.add(o[1]),r.add(rn(n,l+16))),[i,s]=[s,i],l+=64;while(l!==c);const p=Zl.add(i.and(255).shl(1));return l=d,o[0]=o[0].add(e-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),s=ls(s.add(r).add(a[0]).add(rn(n,l+8)),37).mul(p),r=ls(r.add(a[1]).add(rn(n,l+48)),42).mul(p),s=s.xor(o[1].mul(9)),r=r.add(a[0].mul(9).add(rn(n,l+40))),i=ls(i.add(o[0]),33).mul(p),a=Xg(n,l,a[1].mul(p),s.add(o[0])),o=Xg(n,l+32,i.add(o[1]),r.add(rn(n,l+16))),[i,s]=[s,i],Wo(Wo(a[0],o[0],p).add(dv(r).mul(mE)).add(i),Wo(a[1],o[1],p).add(s),p)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rl(n,e){return e==="string"?Ya(n):Ru([n],e)}function nP(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function Ru(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=eo(n)),pe().getBool("DEBUG")&&FL(n,e),nP(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function ar(){return pe().platform.now()}function Ya(n,e="utf-8"){return e=e||"utf-8",pe().platform.encode(n,e)}function Bi(n,e="utf-8"){return e=e||"utf-8",pe().platform.decode(n,e)}function wi(n){return pe().platform.isTypedArray!=null?pe().platform.isTypedArray(n):dE(n)}function eo(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||fu(n)||n==null||wi(n)&&t)e.push(n);else if(Array.isArray(n)||wi(n))for(let s=0;s<n.length;++s)eo(n[s],e,t);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)eo(n[r],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sP{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new iP)}profileKernel(e,t,s){let r;const i=()=>{r=s()};let a;const o=ar();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(i);else{i();for(const c of r)c.dataSync();a=Promise.resolve({kernelMs:ar()-o})}if(pe().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<r.length;c++){const d=r[c];d.data().then(p=>{rP(p,d.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(c=>c.kernelMs),extraInfo:a.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:i,extraInfo:a}=e;s.forEach(o=>{Promise.all([o.data(),r,a]).then(l=>{this.logger.logKernelProfile(t,o,l[0],l[1],i,l[2])})})}}function rP(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${t}'`),!0}return!1}class iP{logKernelProfile(e,t,s,r,i,a){const o=typeof r=="number"?Uc(`${r}ms`,9):r.error,l=Uc(e,25),c=t.rank,d=t.size,p=Uc(t.shape.toString(),14);let m="";for(const g in i){const x=i[g];if(x!=null){const b=x.shape||t.shape,w=b.length;m+=`${g}: ${w}D ${w>0?b:""} `}}console.log(`%c${l}	%c${o}	%c${c}D ${p}	%c${d}	%c${m}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(n,e,t){const s={},r={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<n.length;l++){const c=n[l],d=c.inputs;for(const p in d){const m=d[p];let g=!1;for(let x=0;x<e.length;x++)if(s[m.id]){c.outputs.forEach(b=>s[b.id]=!0),g=!0,r[c.id]=!0;break}if(g)break}}const i={};i[t.id]=!0;const a={};for(let l=n.length-1;l>=0;l--){const c=n[l],d=c.inputs;for(let p=0;p<c.outputs.length;p++)if(i[c.outputs[p].id]){for(const m in d)i[d[m].id]=!0,a[c.id]=!0;break}}const o=[];for(let l=0;l<n.length;l++){const c=n[l];if(r[c.id]&&a[c.id]){const d={};for(const m in c.inputs){const g=c.inputs[m];s[g.id]&&(d[m]=g)}const p=Object.assign({},c);p.inputs=d,p.outputs=c.outputs,o.push(p)}}return o}function oP(n,e,t,s){for(let r=e.length-1;r>=0;r--){const i=e[r],a=[];if(i.outputs.forEach(l=>{const c=n[l.id];c!=null?a.push(c):a.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const l in i.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);const c=t(()=>o[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const d=i.inputs[l];if(!yt(c.shape,d.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${d.shape}'`);if(n[d.id]==null)n[d.id]=c;else{const p=n[d.id];n[d.id]=s(p,c),p.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NN=20,Ep=3,Aw=7;function lP(n,e,t,s){const r=Qe(e),i=uP(n,e,t,r),a=e.length,o=cy(n,e,t,r,i),l=["Tensor"];return s&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map(c=>"    "+c).join(`
`)),l.join(`
`)}function uP(n,e,t,s){const r=ue(e),i=s[s.length-1],a=new Array(i).fill(0),o=e.length,l=t==="complex64"?Fp(n):n;if(o>1)for(let c=0;c<r/i;c++){const d=c*i;for(let p=0;p<i;p++)a[p]=Math.max(a[p],Op(l[d+p],0,t).length)}return a}function Op(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Aw))} + ${parseFloat(n[1].toFixed(Aw))}j`:uh(n)?s=`'${n}'`:t==="bool"?s=yE(n):s=parseFloat(n.toFixed(Aw)).toString(),Uc(s,e)}function yE(n){return n===0?"false":"true"}function cy(n,e,t,s,r,i=!0){const a=t==="complex64"?2:1,o=e[0],l=e.length;if(l===0){if(t==="complex64"){const b=Fp(n);return[Op(b[0],0,t)]}return t==="bool"?[yE(n[0])]:[n[0].toString()]}if(l===1){if(o>NN){const w=Ep*a;let v=Array.from(n.slice(0,w)),$=Array.from(n.slice((o-Ep)*a,o*a));return t==="complex64"&&(v=Fp(v),$=Fp($)),["["+v.map((I,N)=>Op(I,r[N],t)).join(", ")+", ..., "+$.map((I,N)=>Op(I,r[o-Ep+N],t)).join(", ")+"]"]}return["["+(t==="complex64"?Fp(n):Array.from(n)).map((w,v)=>Op(w,r[v],t)).join(", ")+"]"]}const c=e.slice(1),d=s.slice(1),p=s[0]*a,m=[];if(o>NN){for(let b=0;b<Ep;b++){const w=b*p,v=w+p;m.push(...cy(n.slice(w,v),c,t,d,r,!1))}m.push("...");for(let b=o-Ep;b<o;b++){const w=b*p,v=w+p;m.push(...cy(n.slice(w,v),c,t,d,r,b===o-1))}}else for(let b=0;b<o;b++){const w=b*p,v=w+p;m.push(...cy(n.slice(w,v),c,t,d,r,b===o-1))}const g=l===2?",":"";m[0]="["+(o>0?m[0]+g:"");for(let b=1;b<m.length-1;b++)m[b]=" "+m[b]+g;let x=`,
`;for(let b=2;b<l;b++)x+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(i?"":x),m}function Fp(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qn{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=ue(e),s!=null){const r=s.length;B(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Sn(t,this.size),this.strides=Qe(e)}set(e,...t){t.length===0&&(t=[0]),B(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const i=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(i)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return zi().makeTensor(this.values,this.shape,this.dtype)}}let zi=null,Mc=null;function cP(n){zi=n}function hP(n){Mc=n}class Ht{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ue(e),this.strides=Qe(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Mc.buffer(this.shape,this.dtype,e)}bufferSync(){return Mc.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return yi(this.shape,e,this.dtype==="complex64")}arraySync(){return yi(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=zi().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>Bi(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),zi().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=zi().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Bi(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await zi().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),zi().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Mc.print(this,e)}clone(){return this.throwIfDisposed(),Mc.clone(this)}toString(e=!1){const t=this.dataSync();return lP(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Mc.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),zi().makeVariable(this,e,t,s)}}Object.defineProperty(Ht,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function ve(){return f2("Tensor",()=>Ht)}ve();class Ty extends Ht{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!yt(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);zi().disposeTensor(this),this.dataId=e.dataId,zi().incRef(this,null)}dispose(){zi().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Ty,Symbol.hasInstance,{value:n=>n instanceof Ht&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var IN;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(IN||(IN={}));var pv;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(pv||(pv={}));var fv;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(fv||(fv={}));var mv;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(mv||(mv={}));var gv;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(gv||(gv={}));const dP={float32:mv,int32:pv,bool:fv,complex64:gv};function hs(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return dP[n][e]}function tb(n){return hs(n,"int32")}function xE(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function bE(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cn(n,e){if(n.dtype===e.dtype)return[n,e];const t=hs(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function pP(n,e){B(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function wE(n){const e=[];return vE(n,e,new Set),e}function vE(n,e,t){if(n==null)return;if(n instanceof Ht){e.push(n);return}if(!fP(n))return;const s=n;for(const r in s){const i=s[r];t.has(i)||(t.add(i),vE(i,e,t))}}function fP(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dw(n){return n.kernelName!=null}class TN{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Kc{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new TN}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(Mr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new sP(this.backendInstance),!0}setupRegisteredKernels(){CN(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){CN(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof nx)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,i=s.then(a=>r<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,Mr(`Initialization of backend ${e} failed`),Mr(a.stack||a.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return Mr(`Initialization of backend ${e} failed`),Mr(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:i}=this.initializeBackend(s);if(i||r)return{name:s,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,i=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),s.backend=e,e.move(t,i,s.shape,s.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return Kc.nextTensorId++}nextVariableId(){return Kc.nextVariableId++}clone(e){const t=te.runKernel(Ah,{x:e}),s={x:e},r=a=>({x:()=>{const o="float32",l={x:a},c={dtype:o};return te.runKernel(xh,l,c)}}),i=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,i,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(Iy(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let i=0;s.forEach(l=>{i+=l.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-i-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const r=this.isTapeOn(),i=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let l;const c=Dw(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Dw(e)){const{kernelName:x,inputs:b,attrs:w}=e;this.backendName==null&&this.backend;const v=Iy(x,this.backendName);B(v!=null,()=>`Cannot find registered kernel '${x}' for backend '${this.backendName}'`),o=()=>{const $=this.backend.numDataIds();l=v.kernelFunc({inputs:b,attrs:w,backend:this.backend});const I=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(x,$,I);const N=I.map(E=>E.rank!=null?E:this.makeTensorFromTensorInfo(E));if(r){const E=this.getTensorsForGradient(x,b,N);s=this.saveTensorsForBackwardMode(E)}return N}}else{const{forwardFunc:x}=e,b=w=>{r&&(s=w.map(v=>this.keep(this.clone(v))))};o=()=>{const w=this.backend.numDataIds();l=this.tidy(()=>x(this.backend,b));const v=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,w,v),v}}const{inputs:d,attrs:p}=e,m=Dw(e)?null:e.backwardsFunc;let g;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(g=this.profiler.profileKernel(c,d,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),t=g.outputs)}),r&&this.addTapeNode(c,d,t,m,s,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(x=>d[x]!=null?d[x].shape:null),outputShapes:t.map(x=>x.shape),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=SN(e);if(r!=null){const i=r.inputsToSave||[],a=r.outputsToSave||[];let o;r.saveAllInputs?(B(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(c=>t[c])):o=i.map(c=>t[c]);const l=s.filter((c,d)=>a[d]);return o.concat(l)}return[]}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let i=e;s==="string"&&uh(e[0])&&(i=e.map(l=>Ya(l)));const a=r.write(i,t,s),o=new Ht(t,s,a,this.nextTensorId());if(this.trackTensor(o,r),s==="string"){const l=this.state.tensorInfo.get(a),c=LL(i);this.state.numBytes+=c-l.bytes,l.bytes=c}return o}makeTensorFromDataId(e,t,s,r){s=s||"float32";const i={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(i,r)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:r,dtype:i}=e,a=new Ht(r,i,s,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const i=new Ty(e,t,s,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*Sy(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof Ty||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*Sy(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,i,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:i},l=SN(e);l!=null&&(r=l.gradFunc),r!=null&&(o.gradient=c=>(c=c.map((d,p)=>{if(d==null){const m=s[p],g=vs(m.size,m.dtype);return this.makeTensor(g,m.shape,m.dtype)}return d}),r(c.length>1?c:c[0],i,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=wE(e),s=new Set(t.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const a=this.state.activeScope.track[i];!a.kept&&!s.has(a.id)&&a.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(i=>{!i.kept&&i.scopeId===r.id&&this.track(i)})}gradients(e,t,s,r=!1){if(B(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));B(i instanceof Ht,()=>"The result y returned by f() must be a tensor.");const a=aP(this.state.activeTape,t,i);if(!r&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const o={};o[i.id]=s??mP(i.shape),oP(o,a,c=>this.tidy(c),gP);const l=t.map(c=>o[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const d of c.saved)d.dispose()}),this.state.activeTape=null),{value:i,grads:l}})}customGrad(e){return B(uv(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{B(t.every(o=>o instanceof Ht),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};t.forEach((o,l)=>{r[l]=o});const i=(o,l)=>(s=e(...t,l),B(s.value instanceof Ht,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),B(uv(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),a=(o,l)=>{const c=s.gradFunc(o,l),d=Array.isArray(c)?c:[c];B(d.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),B(d.every(m=>m instanceof Ht),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const p={};return d.forEach((m,g)=>{p[g]=()=>m}),p};return this.runKernelFunc({forwardFunc:i,backwardsFunc:a,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=ar(),s=await this.backend.time(e);return s.wallMs=ar()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new TN;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Kc.nextTensorId=0;Kc.nextVariableId=0;function mP(n){const e=p2(ue(n),"float32");return te.makeTensor(e,n,"float32")}function SE(){const n=cE();if(n._tfengine==null){const e=new ML(n);n._tfengine=new Kc(e)}return WL(n._tfengine.ENV),cP(()=>n._tfengine),n._tfengine}const te=SE();function gP(n,e){const t={a:n,b:e};return te.runKernel(Eu,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yP(){return typeof navigator<"u"&&navigator!=null}function CE(n){if(n||yP()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function $E(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hr=pe();hr.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});hr.registerFlag("IS_BROWSER",()=>$E());hr.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");hr.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));hr.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));hr.registerFlag("PROD",()=>!1);hr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>hr.getBool("DEBUG"));hr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);hr.registerFlag("IS_TEST",()=>!1);hr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>hr.getBool("DEBUG"));hr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);hr.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);hr.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function il(n,e){let t=n;if(wi(n))return e==="string"?[]:[n.length];if(xE(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(bE(n))return[n.buffer.size/(e==null?4:Sy(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||wi(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&pe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&kE(n,s,[]),s}function kE(n,e,t){if(t=t||[],!Array.isArray(n)&&!wi(n)){B(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}B(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),B(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)kE(n[r],s,t.concat(r))}function EN(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function V(n,e,t,s="numeric"){if(n instanceof ve())return EN(s,n.dtype,e,t),n;let r=Tu(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),EN(s,r,e,t),n==null||!wi(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}const i=il(n,r);!wi(n)&&!Array.isArray(n)&&(n=[n]);const o=r!=="string"?Ru(n,r):eo(n,[],!0);return te.makeTensor(o,i,r)}function Ey(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((i,a)=>V(i,`${e}[${a}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NE="__op";function J(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+NE;const r=(...i)=>{te.startScope(t);try{const a=s(...i);return fu(a)&&console.error("Cannot return a Promise inside of tidy."),te.endScope(a),a}catch(a){throw te.endScope(null),a}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xP(n,e){const t=V(n,"real","complex"),s=V(e,"imag","complex");fr(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return te.runKernel(cx,r)}const jo=J({complex_:xP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function al(n,e,t,s){if(s==null)s=Tu(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(bE(n)||xE(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return te.backend.createTensorFromGPUData(n,e||t,s)}if(!wi(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Gr(e);const r=ue(e),i=ue(t);B(r===i,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${i}`);for(let a=0;a<t.length;++a){const o=t[a],l=a===t.length-1?o!==ue(e.slice(a)):!0;B(t[a]===e[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!wi(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?Ru(n,s):eo(n,[],!0),te.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pi(n,e,t){const s=il(n,t);return al(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mu={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Xi{static join(e){return new Xi(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>wi(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const r=e[s];s!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const i=t+r.byteLength;this.shards.push({buffer:r,start:t,end:i}),t=i}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const r=t-e,i=new ArrayBuffer(r),a=new Uint8Array(i);let o=0;for(let l=s;l<this.shards.length;l++){const c=this.shards[l],p=e+o-c.start,m=o,x=Math.min(t,c.end)-c.start,b=new Uint8Array(c.buffer,p,x-p);if(a.set(b,m),o+=b.length,t<c.end)break}return i}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(r){return e<r.start?-1:e>=r.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=bP(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function bP(n,e){let t=0,s=n.length;for(;t<=s;){const r=Math.floor((s-t)/2)+t,i=e(n[r]);if(i===0)return r;i<0?s=r:t=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function os(){return te}function RN(){return te.memory()}function ce(n,e){return te.tidy(n,e)}function rt(n){wE(n).forEach(t=>t.dispose())}function us(n){return te.keep(n)}function wP(n){return te.setBackend(n)}function vP(){return te.ready()}function Yc(){return te.backendName}function N2(n,e,t=1){return te.registerBackend(n,e,t)}function gu(){return te.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qo=4;async function yv(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<r.length;++a){const o=r[a],l=Array.isArray(n)?n[a].tensor:n[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);const c={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const d=new Promise(async p=>{const m=await l.bytes(),g=m.reduce((w,v)=>w+v.length,0)+qo*m.length,x=new Uint8Array(g);let b=0;for(let w=0;w<m.length;w++){const v=m[w],$=new Uint8Array(new Uint32Array([v.length]).buffer);x.set($,b),b+=qo,x.set(v,b),b+=v.length}p(x)});s.push(d)}else s.push(l.data());e!=null&&(c.group=e),t.push(c)}const i=await Promise.all(s);return{data:$P(i),specs:t}}function IE(n,e){const t=new Xi(n),s={};let r=0;for(const i of e){const a=SP(i,(o,l)=>t.slice(r+o,r+l));s[i.name]=TE(i,t.slice(r,r+a)),r+=a}return s}function SP(n,e){const t=ue(n.shape);let s;if("quantization"in n){const r=n.quantization;s=mu[r.dtype]}else if(n.dtype==="string"){let r=0;for(let i=0;i<t;i++)r+=qo+new Uint32Array(e(r,r+qo))[0];return r}else s=mu[n.dtype];return t*s}async function CP(n,e){const t=ue(n.shape);let s;if("quantization"in n){const r=n.quantization;s=mu[r.dtype]}else if(n.dtype==="string"){let r=0;for(let i=0;i<t;i++)r+=qo+new Uint32Array(await e(r,r+qo))[0];return r}else s=mu[n.dtype];return t*s}function TE(n,e){const t=n.name,s=n.dtype,r=n.shape,i=ue(r);let a,o=0;if("quantization"in n){const l=n.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${n.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const c=mu[l.dtype],d=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){a=new Float32Array(d.length);for(let p=0;p<d.length;p++){const m=d[p];a[p]=m*l.scale+l.min}}else if(l.dtype==="float16")a=RP()(d);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(s==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);a=new Int32Array(d.length);for(let p=0;p<d.length;p++){const m=d[p];a[p]=Math.round(m*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);o+=i*c}else if(s==="string"){const l=ue(n.shape);a=[];for(let c=0;c<l;c++){const d=new Uint32Array(e.slice(o,o+qo))[0];o+=qo;const p=new Uint8Array(e.slice(o,o+d));a.push(p),o+=d}}else{const l=mu[s];if(s==="float32")a=new Float32Array(e);else if(s==="int32")a=new Int32Array(e);else if(s==="bool")a=new Uint8Array(e);else if(s==="complex64"){a=new Float32Array(e);const c=new Float32Array(a.length/2),d=new Float32Array(a.length/2);for(let x=0;x<c.length;x++)c[x]=a[x*2],d[x]=a[x*2+1];const p=Pi(c,r,"float32"),m=Pi(d,r,"float32"),g=jo(p,m);return p.dispose(),m.dispose(),g}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);o+=i*l}return Pi(a,r,s)}async function AN(n,e,t){let s=new Uint8Array(e);for(;s.byteLength<t;){const{done:r,value:i}=await n.read();if(r&&i==null){const o=t-s.byteLength;throw new Error(`Reader is done but ${o} bytes are still expected`)}const a=new Uint8Array(s.length+i.byteLength);a.set(s,0),a.set(new Uint8Array(i),s.length),s=a}return s.buffer}async function EE(n,e){const t={},s=n.getReader();let r=new ArrayBuffer(0);for(const i of e){const a=await CP(i,async(c,d)=>(r=await AN(s,r,d),r.slice(c,d)));r=await AN(s,r,a);const o=r.slice(0,a);r=r.slice(a);const l=TE(i,o);if(t[i.name]=l,Yc()==="webgpu"){const c=gu();"uploadToGPU"in c&&ue(l.shape)>=pe().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&c.uploadToGPU(l.dataId)}}return t}function $P(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(i=>{if(e+=i.byteLength,t.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(i=>{s.set(new Uint8Array(i.buffer),r),r+=i.byteLength}),s.buffer}const I2=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function DN(n){return I2?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function kP(n){if(I2)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function NP(n){if(I2){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function RE(n){return Xi.join(n)}function _N(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function AE(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function DE(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function T2(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),DE(n,t,s)}function dm(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:DN(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:DN(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Xi(n.weightData).byteLength}}function xv(n){const e=[];for(const t of n)e.push(...t.weights);return e}function IP(){const n=t=>{let s=t<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function TP(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function EP(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function RP(){const n=IP(),e=TP(),t=EP();return s=>{const r=new ArrayBuffer(4*s.length),i=new Uint32Array(r);for(let a=0;a<s.length;a++){const o=s[a],l=n[t[o>>10]+(o&1023)]+e[o>>10];i[a]=l}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return mn.instance==null&&(mn.instance=new mn),mn.instance}static registerSaveRouter(e){mn.getInstance().saveRouters.push(e)}static registerLoadRouter(e){mn.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return mn.getHandlers(e,"save")}static getLoadHandlers(e,t){return mn.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?mn.getInstance().loadRouters:mn.getInstance().saveRouters).forEach(a=>{const o=a(e,s);o!==null&&r.push(o)}),r}}const AP=n=>mn.registerSaveRouter(n),DP=n=>mn.registerLoadRouter(n),_E=n=>mn.getSaveHandlers(n),_P=(n,e)=>mn.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bv="tensorflowjs",wv=1,iu="models_store",Mo="model_info_store";function OE(){if(!pe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function vv(n){const e=n.result;e.createObjectStore(iu,{keyPath:"modelPath"}),e.createObjectStore(Mo,{keyPath:"modelPath"})}class yu{constructor(e){if(this.indexedDB=OE(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const i=this.indexedDB.open(bv,wv);i.onupgradeneeded=()=>vv(i),i.onsuccess=()=>{const a=i.result;if(t==null){const o=a.transaction(iu,"readonly"),c=o.objectStore(iu).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(c.result.modelArtifacts)},c.onerror=d=>(a.close(),r(c.error)),o.oncomplete=()=>a.close()}else{t.weightData=Xi.join(t.weightData);const o=dm(t),l=a.transaction(Mo,"readwrite");let c=l.objectStore(Mo),d;try{d=c.put({modelPath:this.modelPath,modelArtifactsInfo:o})}catch(m){return r(m)}let p;d.onsuccess=()=>{p=a.transaction(iu,"readwrite");const m=p.objectStore(iu);let g;try{g=m.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o})}catch(x){return r(x)}g.onsuccess=()=>s({modelArtifactsInfo:o}),g.onerror=x=>{c=l.objectStore(Mo);const b=c.delete(this.modelPath);b.onsuccess=()=>(a.close(),r(g.error)),b.onerror=w=>(a.close(),r(g.error))}},d.onerror=m=>(a.close(),r(d.error)),l.oncomplete=()=>{p==null?a.close():p.oncomplete=()=>a.close()}}},i.onerror=a=>r(i.error)})}}yu.URL_SCHEME="indexeddb://";const FE=n=>pe().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(yu.URL_SCHEME)?OP(n.slice(yu.URL_SCHEME.length)):null;mn.registerSaveRouter(FE);mn.registerLoadRouter(FE);function OP(n){return new yu(n)}function FP(n){return n.startsWith(yu.URL_SCHEME)?n.slice(yu.URL_SCHEME.length):n}class zP{constructor(){this.indexedDB=OE()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(bv,wv);s.onupgradeneeded=()=>vv(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(Mo,"readonly"),o=i.objectStore(Mo).getAll();o.onsuccess=()=>{const l={};for(const c of o.result)l[c.modelPath]=c.modelArtifactsInfo;e(l)},o.onerror=l=>(r.close(),t(o.error)),i.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=FP(e),new Promise((t,s)=>{const r=this.indexedDB.open(bv,wv);r.onupgradeneeded=()=>vv(r),r.onsuccess=()=>{const i=r.result,a=i.transaction(Mo,"readwrite"),o=a.objectStore(Mo),l=o.get(e);let c;l.onsuccess=()=>{if(l.result==null)return i.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const d=o.delete(e),p=()=>{c=i.transaction(iu,"readwrite");const g=c.objectStore(iu).delete(e);g.onsuccess=()=>t(l.result.modelArtifactsInfo),g.onerror=x=>s(l.error)};d.onsuccess=p,d.onerror=m=>(p(),i.close(),s(l.error))}},l.onerror=d=>(i.close(),s(l.error)),a.oncomplete=()=>{c==null?i.close():c.oncomplete=()=>i.close()}},r.onerror=i=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ka="/",Bc="tensorflowjs_models",zE="info",LP="model_topology",PP="weight_specs",MP="weight_data",BP="model_metadata";function LE(n){return{info:[Bc,n,zE].join(Ka),topology:[Bc,n,LP].join(Ka),weightSpecs:[Bc,n,PP].join(Ka),weightData:[Bc,n,MP].join(Ka),modelMetadata:[Bc,n,BP].join(Ka)}}function PE(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function VP(n){const e=n.split(Ka);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(Ka)}function UP(n){return n.startsWith(xu.URL_SCHEME)?n.slice(xu.URL_SCHEME.length):n}class xu{constructor(e){if(!pe().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=LE(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=dm(e),i=Xi.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,kP(i));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch{throw PE(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){const o=JSON.parse(i);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.initializerSignature!=null&&(t.initializerSignature=o.initializerSignature),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=NP(a),t}}xu.URL_SCHEME="localstorage://";const ME=n=>pe().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(xu.URL_SCHEME)?WP(n.slice(xu.URL_SCHEME.length)):null;mn.registerSaveRouter(ME);mn.registerLoadRouter(ME);function WP(n){return new xu(n)}class GP{constructor(){B(pe().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),B(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Bc+Ka,s=Ka+zE;for(let r=0;r<this.LS.length;++r){const i=this.LS.key(r);if(i.startsWith(t)&&i.endsWith(s)){const a=VP(i);e[a]=JSON.parse(this.LS.getItem(i))}}return e}async removeModel(e){e=UP(e);const t=LE(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return PE(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wc="://";class Ws{constructor(){this.managers={}}static getInstance(){return Ws.instance==null&&(Ws.instance=new Ws),Ws.instance}static registerManager(e,t){B(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Wc)&&(e=e.slice(0,e.indexOf(Wc))),B(e.length>0,()=>"scheme must not be an empty string.");const s=Ws.getInstance();B(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=Ws.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Ws.getInstance().managers)}}function hy(n){if(n.indexOf(Wc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ws.getSchemes().join(",")}`);return{scheme:n.split(Wc)[0],path:n.split(Wc)[1]}}async function BE(n,e,t=!1){B(n!==e,()=>`Old path and new path are the same: '${n}'`);const s=mn.getLoadHandlers(n);B(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),B(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],i=mn.getSaveHandlers(e);B(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),B(i.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const a=i[0],o=hy(n).scheme,l=hy(n).path,c=o===hy(n).scheme,d=await r.load();t&&c&&await Ws.getManager(o).removeModel(l);const p=await a.save(d);return t&&!c&&await Ws.getManager(o).removeModel(l),p.modelArtifactsInfo}async function HP(){const n=Ws.getSchemes(),e={};for(const t of n){const s=await Ws.getManager(t).listModels();for(const r in s){const i=t+Wc+r;e[i]=s[r]}}return e}async function jP(n){const e=hy(n);return Ws.getManager(e.scheme).removeModel(e.path)}async function qP(n,e){return BE(n,e,!1)}async function XP(n,e){return BE(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KP{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!pe().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return dE(e)}}if(pe().get("IS_BROWSER")){pe().setPlatform("browser",new KP);try{Ws.registerManager(xu.URL_SCHEME,new GP)}catch{}try{Ws.registerManager(yu.URL_SCHEME,new zP)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YP={importFetch:()=>require("node-fetch")};let _w;class QP{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return pe().global.fetch!=null?pe().global.fetch(e,t):(_w==null&&(_w=YP.importFetch()),_w(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}pe().get("IS_NODE")&&!pe().get("IS_BROWSER")&&pe().setPlatform("node",new QP);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dt(n,e="float32",t){return e=e||"float32",Gr(n),new qn(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(n,e){const t=V(n,"x","cast");if(!zL(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return te.runKernel(xh,s,r)}const De=J({cast_:ZP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JP(n){const t={x:V(n,"x","clone","string_or_numeric")};return te.runKernel(Ah,t)}const Qa=J({clone_:JP});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VE(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */SE();const eM={buffer:dt,cast:De,clone:Qa,print:VE};hP(eM);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n,e){let t=V(n,"a","add"),s=V(e,"b","add");[t,s]=Cn(t,s);const r={a:t,b:s};return te.runKernel(Eu,r)}const Ce=J({add_:tM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nM(n,e){let t=V(n,"a","floorDiv"),s=V(e,"b","floorDiv");[t,s]=Cn(t,s);const r={a:t,b:s};return te.runKernel(Eh,r)}const E2=J({floorDiv_:nM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(n,e){let t=V(n,"a","div"),s=V(e,"b","div");if([t,s]=Cn(t,s),t.dtype==="int32"&&s.dtype==="int32")return E2(t,s);const r={a:t,b:s},i={};return te.runKernel(Ch,r,i)}const Be=J({div_:sM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rM(n,e){let t=V(n,"a","mul"),s=V(e,"b","mul");[t,s]=Cn(t,s);const r={a:t,b:s};return te.runKernel(Bh,r)}const Q=J({mul_:rM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iM(n){const e=V(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return te.runKernel(bf,t)}else{const t={x:e};return te.runKernel(hf,t)}}const Gn=J({abs_:iM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aM(n){const t={x:V(n,"x","acos")};return te.runKernel(hh,t)}const UE=J({acos_:aM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oM(n){const t={x:V(n,"x","acosh")};return te.runKernel(dh,t)}const WE=J({acosh_:oM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(n){B(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),B(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((r,i)=>V(r,`tensors${i}`,"addN")),t=e[0];e.forEach(r=>{if(r.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!yt(r.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return te.runKernel(df,s)}const uM=J({addN_:lM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cM(n,e=null,t=!1){const r={x:V(n,"x","all","bool")},i={axis:e,keepDims:t};return te.runKernel(sx,r,i)}const R2=J({all_:cM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hM(n,e=null,t=!1){const r={x:V(n,"x","any","bool")},i={axis:e,keepDims:t};return te.runKernel(rx,r,i)}const Ry=J({any_:hM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dM(n,e=0){const s={x:V(n,"x","argMax")},r={axis:e};return te.runKernel(pf,s,r)}const bu=J({argMax_:dM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(n,e=0){const s={x:V(n,"x","argMin")},r={axis:e};return te.runKernel(ff,s,r)}const GE=J({argMin_:pM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(n){const t={x:V(n,"x","asin")};return te.runKernel(ph,t)}const HE=J({asin_:fM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mM(n){const t={x:V(n,"x","asinh")};return te.runKernel(fh,t)}const jE=J({asinh_:mM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gM(n){const t={x:V(n,"x","atan")};return te.runKernel(mh,t)}const qE=J({atan_:gM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(n,e){let t=V(n,"a","atan2"),s=V(e,"b","atan2");[t,s]=Cn(t,s);const r={a:t,b:s};return te.runKernel(yh,r)}const XE=J({atan2_:yM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xM(n){const t={x:V(n,"x","atanh")};return te.runKernel(gh,t)}const KE=J({atanh_:xM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ol(n,e,t,s,r="NHWC",i){const a=n[3],o=[...e,a],l=Rr(r);return on(n,o,t,i,s,null,null,l)}function As(n,e,t,s,r,i,a="channelsLast"){const[o,l]=jp(e);let c;if(a==="channelsLast")c=[o,l,n[3],n[3]];else if(a==="channelsFirst")c=[o,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return on(n,c,t,s,r,i,!1,a)}function Hr(n,e,t,s,r,i,a="NDHWC"){const[o,l,c]=Sv(e);let d,p;if(a==="NDHWC")p="channelsLast",d=[o,l,c,n[4],n[4]];else if(a==="NCDHW")p="channelsFirst",d=[o,l,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Ki(n,d,t,s,r,!1,p,i)}function on(n,e,t,s,r,i,a=!1,o="channelsLast"){let[l,c,d,p]=[-1,-1,-1,-1];if(o==="channelsLast")[l,c,d,p]=n;else if(o==="channelsFirst")[l,p,c,d]=n;else throw new Error(`Unknown dataFormat ${o}`);const[m,g,,x]=e,[b,w]=jp(t),[v,$]=jp(s),I=Gc(m,v),N=Gc(g,$),{padInfo:E,outHeight:_,outWidth:z}=vM(r,c,d,b,w,I,N,i,o),P=a?x*p:x;let O;return o==="channelsFirst"?O=[l,P,_,z]:o==="channelsLast"&&(O=[l,_,z,P]),{batchSize:l,dataFormat:o,inHeight:c,inWidth:d,inChannels:p,outHeight:_,outWidth:z,outChannels:P,padInfo:E,strideHeight:b,strideWidth:w,filterHeight:m,filterWidth:g,effectiveFilterHeight:I,effectiveFilterWidth:N,dilationHeight:v,dilationWidth:$,inShape:n,outShape:O,filterShape:e}}function Ki(n,e,t,s,r,i=!1,a="channelsLast",o){let[l,c,d,p,m]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[l,c,d,p,m]=n;else if(a==="channelsFirst")[l,m,c,d,p]=n;else throw new Error(`Unknown dataFormat ${a}`);const[g,x,b,,w]=e,[v,$,I]=Sv(t),[N,E,_]=Sv(s),z=Gc(g,N),P=Gc(x,E),O=Gc(b,_),{padInfo:L,outDepth:D,outHeight:G,outWidth:q}=SM(r,c,d,p,v,$,I,z,P,O,o),ee=i?w*m:w;let Z;return a==="channelsFirst"?Z=[l,ee,D,G,q]:a==="channelsLast"&&(Z=[l,D,G,q,ee]),{batchSize:l,dataFormat:a,inDepth:c,inHeight:d,inWidth:p,inChannels:m,outDepth:D,outHeight:G,outWidth:q,outChannels:ee,padInfo:L,strideDepth:v,strideHeight:$,strideWidth:I,filterDepth:g,filterHeight:x,filterWidth:b,effectiveFilterDepth:z,effectiveFilterHeight:P,effectiveFilterWidth:O,dilationDepth:N,dilationHeight:E,dilationWidth:_,inShape:n,outShape:Z,filterShape:e}}function bM(n,e,t,s,r){s==null&&(s=A2(n,e,t));const i=n[0],a=n[1],o=qp((i-e+2*s)/t+1,r),l=qp((a-e+2*s)/t+1,r);return[o,l]}function wM(n,e,t,s,r,i){r==null&&(r=A2(n,e[0],s[0]));const a=[0,0,0,t];for(let o=0;o<3;o++)n[o]+2*r>=e[o]&&(a[o]=qp((n[o]-e[o]+2*r)/s[o]+1,i));return a}function A2(n,e,t,s=1){const r=Gc(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function jp(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Sv(n){return typeof n=="number"?[n,n,n]:n}function Gc(n,e){return e<=1?n:n+(n-1)*(e-1)}function vM(n,e,t,s,r,i,a,o,l){let c,d,p;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const g=bM([e,t],i,s,n,o);d=g[0],p=g[1]}else if(n==="same"){d=Math.ceil(e/s),p=Math.ceil(t/r);const m=Math.max(0,(d-1)*s+i-e),g=Math.max(0,(p-1)*r+a-t),x=Math.floor(m/2),b=m-x,w=Math.floor(g/2),v=g-w;c={top:x,bottom:b,left:w,right:v,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((e-i+1)/s),p=Math.ceil((t-a+1)/r);else if(typeof n=="object"){const m=l==="channelsLast"?n[1][0]:n[2][0],g=l==="channelsLast"?n[1][1]:n[2][1],x=l==="channelsLast"?n[2][0]:n[3][0],b=l==="channelsLast"?n[2][1]:n[3][1];c={top:m,bottom:g,left:x,right:b,type:m===0&&g===0&&x===0&&b===0?"VALID":"EXPLICIT"},d=qp((e-i+m+g)/s+1,o),p=qp((t-a+x+b)/r+1,o)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:d,outWidth:p}}function SM(n,e,t,s,r,i,a,o,l,c,d){let p,m,g,x;if(n==="valid"&&(n=0),typeof n=="number"){p={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const w=wM([e,t,s,1],[o,l,c],1,[r,i,a],n,d);m=w[0],g=w[1],x=w[2]}else if(n==="same"){m=Math.ceil(e/r),g=Math.ceil(t/i),x=Math.ceil(s/a);const b=(m-1)*r+o-e,w=(g-1)*i+l-t,v=(x-1)*a+c-s,$=Math.floor(b/2),I=b-$,N=Math.floor(w/2),E=w-N,_=Math.floor(v/2),z=v-_;p={top:N,bottom:E,left:_,right:z,front:$,back:I,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:p,outDepth:m,outHeight:g,outWidth:x}}function qp(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function Xo(n){const[e,t,s]=jp(n);return e===1&&t===1&&s===1}function Zn(n,e){return Xo(n)||Xo(e)}function wu(n){return jp(n).every(e=>e>0)}function Rr(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Ks(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")B(Xc(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{B(Xc(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CM(n,e){const s={x:V(n,"x","reshape","string_or_numeric")},r={shape:e};return te.runKernel(Jf,s,r)}const re=J({reshape_:CM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $M(n,e,t,s,r){const i=V(n,"x","avgPool","float32"),a=1;B(Zn(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let o=i,l=!1;i.rank===3&&(l=!0,o=re(i,[1,i.shape[0],i.shape[1],i.shape[2]])),B(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),Ks("avgPool",s,r);const c={x:o},d={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let p=te.runKernel(mf,c,d);return p=De(p,i.dtype),l?re(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const nb=J({avgPool_:$M});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(n,e,t,s,r,i="NDHWC"){const a=V(n,"x","avgPool3d","float32");let o=a,l=!1;a.rank===4&&(l=!0,o=re(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),B(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),B(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),B(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Ks("avgPool3d",s,r);const c={x:o},d={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:i};let p=te.runKernel(gf,c,d);return p=De(p,o.dtype),l?re(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const YE=J({avgPool3d_:kM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NM(n,e=0){B(n.length>=1,()=>"Pass at least one tensor to concat");const t=Ey(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),t.length===1)return Qa(t[0]);const s=t,r={axis:e};return te.runKernel(wf,s,r)}const yn=J({concat_:NM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IM(n,e,t=!1,s=!1){let r=V(n,"a","matMul"),i=V(e,"b","matMul");[r,i]=Cn(r,i);const a={a:r,b:i},o={transposeA:t,transposeB:s};return te.runKernel(yf,a,o)}const Ct=J({matMul_:IM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(n){const t={x:V(n,"x","sigmoid","float32")};return te.runKernel(Qh,t)}const Vr=J({sigmoid_:TM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(n,e,t){const s=V(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:e,size:t};return te.runKernel(rm,r,i)}const ct=J({slice_:EM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(n){const t={x:V(n,"x","tanh","float32")};return te.runKernel(sd,t)}const vu=J({tanh_:RM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AM(n,e,t,s,r,i){const a=V(n,"forgetBias","basicLSTMCell"),o=V(e,"lstmKernel","basicLSTMCell"),l=V(t,"lstmBias","basicLSTMCell"),c=V(s,"data","basicLSTMCell"),d=V(r,"c","basicLSTMCell"),p=V(i,"h","basicLSTMCell"),m=yn([c,p],1),g=Ct(m,o),x=Ce(g,l),b=x.shape[0],w=x.shape[1]/4,v=[b,w],$=ct(x,[0,0],v),I=ct(x,[0,w],v),N=ct(x,[0,w*2],v),E=ct(x,[0,w*3],v),_=Ce(Q(Vr($),vu(I)),Q(d,Vr(Ce(a,N)))),z=Q(vu(_),Vr(E));return[_,z]}const DM=J({basicLSTMCell_:AM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _M(n,e,t){const s=V(n,"x","batchToSpaceND"),r=e.reduce((o,l)=>o*l);B(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),B(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),B(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const i={x:s},a={blockShape:e,crops:t};return te.runKernel(xf,i,a)}const sb=J({batchToSpaceND_:_M});function OM(n){let e;return n.rank===0||n.rank===1?e=re(n,[1,1,1,n.size]):n.rank===2?e=re(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=re(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FM(n,e,t,s,r,i){i==null&&(i=.001);const a=V(n,"x","batchNorm"),o=V(e,"mean","batchNorm"),l=V(t,"variance","batchNorm");let c;r!=null&&(c=V(r,"scale","batchNorm"));let d;s!=null&&(d=V(s,"offset","batchNorm")),B(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),B(d==null||o.rank===d.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),B(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const m={x:OM(a),scale:c,offset:d,mean:o,variance:l},g={varianceEpsilon:i},x=te.runKernel(Ef,m,g);return re(x,a.shape)}const pm=J({batchNorm_:FM});function zM(n,e,t,s,r,i){const a=V(n,"x","batchNorm"),o=V(e,"mean","batchNorm"),l=V(t,"variance","batchNorm");let c;r!=null&&(c=V(r,"scale","batchNorm"));let d;return s!=null&&(d=V(s,"offset","batchNorm")),B(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),B(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),B(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&B(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),d!=null&&B(d.rank===2||d.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`),pm(a,o,l,d,c,i)}const QE=J({batchNorm2d_:zM});function LM(n,e,t,s,r,i){const a=V(n,"x","batchNorm"),o=V(e,"mean","batchNorm"),l=V(t,"variance","batchNorm");let c;r!=null&&(c=V(r,"scale","batchNorm"));let d;return s!=null&&(d=V(s,"offset","batchNorm")),B(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),B(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),B(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&B(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),d!=null&&B(d.rank===3||d.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`),pm(a,o,l,d,c,i)}const ZE=J({batchNorm3d_:LM});function PM(n,e,t,s,r,i){const a=V(n,"x","batchNorm"),o=V(e,"mean","batchNorm"),l=V(t,"variance","batchNorm");let c;r!=null&&(c=V(r,"scale","batchNorm"));let d;return s!=null&&(d=V(s,"offset","batchNorm")),B(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),B(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),B(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&B(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),d!=null&&B(d.rank===4||d.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`),pm(a,o,l,d,c,i)}const JE=J({batchNorm4d_:PM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM(n,e,t){const s=V(n,"x","bincount"),r=V(e,"weights","bincount");B(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),B(t>=0,()=>`size must be non-negative, but got ${t}.`),B(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const i={x:s,weights:r},a={size:t};return te.runKernel(ox,i,a)}const eR=J({bincount_:MM});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(n,e){const t=V(n,"x","bitwiseAnd"),s=V(e,"y","bitwiseAnd");if(!yt(t.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${s.shape}`);if(t.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${s.dtype}`);const r={a:t,b:s};return te.runKernel(lx,r)}const VM=J({bitwiseAnd_:BM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(n,e){const t=V(n,"s0","broadcastArgs","int32"),s=V(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:t,s1:s};return te.runKernel(ux,r)}const WM=J({broadcastArgs_:UM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(n,e){let t=V(n,"broadcastTo","x");const s=t.shape;if(Gr(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const c=t.shape.slice();for(;c.length<e.length;)c.unshift(1);t=re(t,c)}const r=t.shape,i=Array.from(e);for(let c=e.length-1;c>=0;c--)if(r[c]===e[c])i[c]=1;else if(t.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(i.map((c,d)=>c>1?d:-1).filter(c=>c>=0).length===0)return Qa(t);const o={x:t},l={reps:i};return te.runKernel(rd,o,l)}const Hc=J({broadcastTo_:GM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HM(n){const t={x:V(n,"x","ceil","float32")};return te.runKernel(bh,t)}const tR=J({ceil_:HM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ad(n,e,t){Gr(n),t=t||Tu(e);const s={shape:n,value:e,dtype:t};return te.runKernel($x,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(n,e,t){const s=V(n,"x","clipByValue");if(B(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return ad(s.shape,e,s.dtype);const r={x:s},i={clipValueMin:e,clipValueMax:t};return te.runKernel(wh,r,i)}const dr=J({clipByValue_:jM});function qM(n){return yn(n,0)}const nR=J({concat1d_:qM});function XM(n,e){return yn(n,e)}const sR=J({concat2d_:XM});function KM(n,e){return yn(n,e)}const rR=J({concat3d_:KM});function YM(n,e){return yn(n,e)}const iR=J({concat4d_:YM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QM(n,e,t,s,r="NHWC",i=[1,1],a){const o=V(n,"x","conv2d","float32"),l=V(e,"filter","conv2d","float32");let c=o,d=!1;o.rank===3&&(d=!0,c=re(o,[1,o.shape[0],o.shape[1],o.shape[2]])),B(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),B(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Ks("conv2d",s,a);const p=r==="NHWC"?c.shape[3]:c.shape[1];B(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),B(Zn(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),B(wu(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),B(wu(t),()=>"Error in conv2D: Strides should be larger than 0.");const m={x:c,filter:l},g={strides:t,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},x=te.runKernel(vf,m,g);return d?re(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const Ko=J({conv2d_:QM});function ZM(n,e,t,s,r="NWC",i=1,a){const o=V(n,"x","conv1d"),l=V(e,"filter","conv1d");let c=o,d=!1;o.rank===2&&(d=!0,c=re(o,[1,o.shape[0],o.shape[1]])),B(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),B(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Ks("conv1d",s,a),B(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),B(Zn(t,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${i}'`),B(wu(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),B(wu(t),()=>"Error in conv1D: Stride should be larger than 0."),B(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const p=re(l,[1,l.shape[0],l.shape[1],l.shape[2]]),m=re(c,[c.shape[0],1,c.shape[1],c.shape[2]]),w=Ko(m,p,[1,t],s,"NHWC",[1,i],a);return d?re(w,[w.shape[2],w.shape[3]]):re(w,[w.shape[0],w.shape[2],w.shape[3]])}const D2=J({conv1d_:ZM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(n,e,t,s,r,i="NHWC",a){B(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,l=e,c=!1;e.rank===3&&(c=!0,l=re(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,n[0],n[1],n[2]]),B(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),B(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),B(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const d=i==="NHWC"?o[3]:o[1],p=i==="NHWC"?l.shape[3]:l.shape[1];B(d===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${t.shape[2]}.`),B(p===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${t.shape[3]}.`),Ks("conv2dDerInput",r,a);const m={dy:l,filter:t},g={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,inputShape:o},x=te.runKernel(Sf,m,g);return c?re(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const _2=J({conv2DBackpropInput_:JM});function eB(n,e,t,s,r,i){const a=V(n,"x","conv2dTranspose"),o=V(e,"filter","conv2dTranspose");return _2(t,a,o,s,r,"NHWC",i)}const O2=J({conv2dTranspose_:eB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(n,e,t,s,r="NDHWC",i=[1,1,1]){const a=V(n,"x","conv3d"),o=V(e,"filter","conv3d");let l=a,c=!1;a.rank===4&&(c=!0,l=re(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),B(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),B(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),B(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),B(Zn(t,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),B(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),B(wu(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),B(wu(t),()=>"Error in conv3D: Strides should be larger than 0.");const d={x:l,filter:o},p={strides:t,pad:s,dataFormat:r,dilations:i},m=te.runKernel(Cf,d,p);return c?re(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const aR=J({conv3d_:tB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nB(n,e,t,s,r){B(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,a=e,o=!1;e.rank===4&&(o=!0,a=re(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,n[0],n[1],n[2],n[3]]);const l=i[4],c=a.shape[4];B(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),B(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),B(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),B(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),B(c===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[4]}.`);const d={dy:a,filter:t},p={pad:r,strides:s,inputShape:i},m=te.runKernel(px,d,p);return o?re(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const oR=J({conv3DBackpropInput_:nB});function sB(n,e,t,s,r){const i=V(n,"x","conv3dTranspose"),a=V(e,"filter","conv3dTranspose");return oR(t,i,a,s,r)}const lR=J({conv3dTranspose_:sB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rB(n){const t={x:V(n,"x","cos","float32")};return te.runKernel(vh,t)}const rb=J({cos_:rB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iB(n){const t={x:V(n,"x","cosh","float32")};return te.runKernel(Sh,t)}const F2=J({cosh_:iB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aB(n,e=0,t=!1,s=!1){const i={x:V(n,"x","cumprod")},a={axis:e,exclusive:t,reverse:s};return te.runKernel(fx,i,a)}const Ay=J({cumprod_:aB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(n,e=0,t=!1,s=!1){const i={x:V(n,"x","cumsum")},a={axis:e,exclusive:t,reverse:s};return te.runKernel($f,i,a)}const z2=J({cumsum_:oB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(n,e,t,s=!1){const r=V(n,"x","denseBincount"),i=V(e,"weights","denseBincount");B(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),B(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),B(t>=0,()=>`size must be non-negative, but got ${t}.`),B(i.size===r.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`);const a={x:r,weights:i},o={size:t,binaryOutput:s};return te.runKernel(gx,a,o)}const Cv=J({denseBincount_:lB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uB(n,e,t="NHWC"){const s=V(n,"x","depthToSpace","float32"),r=t==="NHWC"?s.shape[1]:s.shape[2],i=t==="NHWC"?s.shape[2]:s.shape[3],a=t==="NHWC"?s.shape[3]:s.shape[1];B(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),B(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),B(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${e} for depthToSpace with input shape
        ${s.shape}`),B(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${s.shape}`);const o={x:s},l={blockSize:e,dataFormat:t};return te.runKernel(yx,o,l)}const uR=J({depthToSpace_:uB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cB(n,e,t,s,r="NHWC",i=[1,1],a){const o=V(n,"x","depthwiseConv2d","float32"),l=V(e,"filter","depthwiseConv2d","float32");let c=o,d=!1;o.rank===3&&(d=!0,c=re(o,[1,o.shape[0],o.shape[1],o.shape[2]])),B(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),B(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const p=r==="NHWC"?c.shape[3]:c.shape[1];B(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),Ks("depthwiseConv2d",s,a);const m={x:c,filter:l},g={strides:t,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},x=te.runKernel(kf,m,g);return d?re(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const fm=J({depthwiseConv2d_:cB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hB(n){const t={x:V(n,"x","diag")};return te.runKernel(wx,t)}const dB=J({diag_:hB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(n,e,t,s,r=[1,1],i="NHWC"){const a=V(n,"x","dilation2d"),o=V(e,"filter","dilation2d");B(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),B(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),B(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=a,c=!1;a.rank===3&&(l=re(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=!0),B(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);const d={x:l,filter:o},p={strides:t,pad:s,dilations:r},m=te.runKernel(Nf,d,p);return c?re(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const cR=J({dilation2d_:pB});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yo(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const i=t-1-r,a=n[i]||1;(e[e.length-1-r]||1)>1&&a===1&&s.unshift(i)}return s}function Qn(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],i=e.length-s-1,a=e[i];(r==null||r===1&&a>1)&&t.unshift(i)}return t}function it(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let r=0;r<t;r++){let i=n[n.length-r-1];i==null&&(i=1);let a=e[e.length-r-1];if(a==null&&(a=1),i===1)s[t-r-1]=a;else if(a===1)s[t-r-1]=i;else if(i!==a){const o=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(o)}else s[t-r-1]=i}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fB(n,e){let t=V(n,"a","equal","string_or_numeric"),s=V(e,"b","equal","string_or_numeric");[t,s]=Cn(t,s),it(t.shape,s.shape);const r={a:t,b:s};return te.runKernel(If,r)}const Vi=J({equal_:fB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mB(n,e,t){const s=V(e,"a","where"),r=V(t,"b","where"),i=V(n,"condition","where","bool"),a=it(it(i.shape,s.shape),r.shape),o=Hc(i,a),l=Hc(s,a),c=Hc(r,a),d={condition:o,t:l,e:c};return te.runKernel(sm,d)}const Rs=J({where_:mB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gB(n){const t={x:V(n,"x","zerosLike")};return te.runKernel(hm,t)}const Dt=J({zerosLike_:gB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(n,e){let t=V(n,"a","div"),s=V(e,"b","div");[t,s]=Cn(t,s);const r=Be(t,s),i=Dt(r),a=Vi(s,i);return Rs(a,i,r)}const hR=J({divNoNan_:yB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xB(n,e){const t=V(n,"t1","dot"),s=V(e,"t2","dot");B((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],i=s.rank===1?s.size:s.shape[0];if(B(r===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`),t.rank===1&&s.rank===1){const a=re(t,[1,-1]),o=re(s,[-1,1]),l=Ct(a,o);return re(l,[])}else if(t.rank===1&&s.rank===2){const a=re(t,[1,-1]),o=re(s,[s.shape[0],s.shape[1]]),l=Ct(a,o);return re(l,[l.size])}else if(t.rank===2&&s.rank===1){const a=re(s,[-1,1]),o=Ct(t,a);return re(o,[o.size])}else{const a=re(s,[s.shape[0],s.shape[1]]);return Ct(t,a)}}const dR=J({dot_:xB});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bB(n,...e){const t=e.map((r,i)=>V(r,`tensors${i}`,"einsum")),s={equation:n};return te.runKernel(vx,t,s)}const Vc=J({einsum_:bB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wB(n){const t={x:V(n,"x","elu","float32")};return te.runKernel($h,t)}const mm=J({elu_:wB});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(n,e){const t=V(n,"x","ensureShape","string_or_numeric");if(!OL(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const SB=J({ensureShape_:vB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(n){let e=V(n,"x","erf");B(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=De(e,"float32"));const t={x:e};return te.runKernel(kh,t)}const L2=J({erf_:CB});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P2(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function pR(n,e,t){const s=n.length+e.length,r=[];let i=0,a=0;for(let o=0;o<s;o++)t.indexOf(o)===-1?r.push(n[i++]):r.push(e[a++]);return r}function Dn(n,e){const t=[],s=n.length;for(let i=0;i<s;i++)e.indexOf(i)===-1&&t.push(n[i]);const r=e.map(i=>n[i]);return[t,r]}function $n(n,e){const t=e.map(s=>1);return pR(n,t,e)}function Mn(n,e,t){B(P2(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function Qt(n,e){if(P2(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function wa(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function ln(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(n,e=null,t=!1){const r={x:V(n,"x","max")},i={reductionIndices:e,keepDims:t};return te.runKernel(Mf,r,i)}const xi=J({max_:$B});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(n,e=null,t=!1){const r={x:V(n,"x","min")},i={axis:e,keepDims:t};return te.runKernel(Wf,r,i)}const Xp=J({min_:kB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n,e){let t=V(n,"base","pow"),s=V(e,"exp","pow");[t,s]=Cn(t,s);const r={a:t,b:s};return te.runKernel(Vh,r)}const to=J({pow_:NB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ze(n,e){if((wi(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&wi(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return al(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IB(n){const t={x:V(n,"x","sqrt","float32")};return te.runKernel(Jh,t)}const Ss=J({sqrt_:IB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TB(n){const e=V(n,"x","square"),t={};return te.runKernel("Square",{x:e},t)}const Kt=J({square_:TB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EB(n,e=null,t=!1){let s=V(n,"x","sum");s.dtype==="bool"&&(s=De(s,"int32"));const r={x:s},i={axis:e,keepDims:t};return te.runKernel(im,r,i)}const qe=J({sum_:EB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(n,e="euclidean",t=null,s=!1){n=V(n,"x","norm");const r=fR(n,e,t);let i=r.shape;if(s){const a=pt(t,n.shape);i=$n(r.shape,a)}return re(r,i)}function fR(n,e,t=null){if(n.rank===0)return Gn(n);if(n.rank!==1&&t===null)return fR(re(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return qe(Gn(n),t);if(e===1/0)return xi(Gn(n),t);if(e===-1/0)return Xp(Gn(n),t);if(e==="euclidean"||e===2)return Ss(qe(to(Gn(n),Ze(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return xi(qe(Gn(n),t[0]),t[1]-1);if(e===1/0)return xi(qe(Gn(n),t[1]),t[0]);if(e===-1/0)return Xp(qe(Gn(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Ss(qe(Kt(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const gm=J({norm_:RB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(n,e=null,t=!1){return gm(n,"euclidean",e,t)}const mR=J({euclideanNorm_:AB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DB(n){const t={x:V(n,"x","exp")};return te.runKernel(Nh,t)}const qs=J({exp_:DB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _B(n,e=0){const t=V(n,"x","expandDims","string_or_numeric");B(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return te.runKernel(Tf,s,r)}const Ln=J({expandDims_:_B});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OB(n){const t={x:V(n,"x","expm1")};return te.runKernel(Ih,t)}const gR=J({expm1_:OB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FB(n,e){const t=V(n,"x","tile","string_or_numeric");B(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return te.runKernel(rd,s,r)}const fi=J({tile_:FB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zB(n,e,t,s="float32"){e==null&&(e=n);const r=dt([n,e],s),i=n<=e?n:e;for(let o=0;o<i;++o)r.set(1,o,o);const a=re(r.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return fi(Ln(a,0),[t[0],1,1]);if(t.length===2)return fi(Ln(Ln(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return fi(Ln(Ln(Ln(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const M2=J({eye_:zB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n){const t={x:V(n,"x","floor","float32")};return te.runKernel(Th,t)}const ym=J({floor_:LB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PB(n,e,t=0,s=0){const r=V(n,"x","gather"),i=V(e,"indices","gather","int32"),a={x:r,indices:i},o={axis:t,batchDims:s};return te.runKernel(Rf,a,o)}const xm=J({gather_:PB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(n,e){let t=V(n,"a","greater","string_or_numeric"),s=V(e,"b","greater","string_or_numeric");[t,s]=Cn(t,s),it(t.shape,s.shape);const r={a:t,b:s};return te.runKernel(Af,r)}const Ar=J({greater_:MB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(n,e){let t=V(n,"a","greaterEqual","string_or_numeric"),s=V(e,"b","greaterEqual","string_or_numeric");[t,s]=Cn(t,s),it(t.shape,s.shape);const r={a:t,b:s};return te.runKernel(Rh,r)}const ll=J({greaterEqual_:BB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(n){const t={input:V(n,"input","imag")};return te.runKernel(Tx,t)}const ib=J({imag_:VB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(n){const t={x:V(n,"x","isFinite")};return te.runKernel(Dh,t)}const yR=J({isFinite_:UB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(n){const t={x:V(n,"x","isInf")};return te.runKernel(_h,t)}const xR=J({isInf_:WB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(n){const t={x:V(n,"x","isNaN")};return te.runKernel(Oh,t)}const bR=J({isNaN_:GB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HB(n,e=.2){const s={x:V(n,"x","leakyRelu")},r={alpha:e};return te.runKernel(Df,s,r)}const ab=J({leakyRelu_:HB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(n,e){let t=V(n,"a","less","string_or_numeric"),s=V(e,"b","less","string_or_numeric");[t,s]=Cn(t,s),it(t.shape,s.shape);const r={a:t,b:s};return te.runKernel(_f,r)}const Kp=J({less_:jB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qB(n,e){let t=V(n,"a","lessEqual","string_or_numeric"),s=V(e,"b","lessEqual","string_or_numeric");[t,s]=Cn(t,s),it(t.shape,s.shape);const r={a:t,b:s};return te.runKernel(Of,r)}const Au=J({lessEqual_:qB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return te.runKernel(Ex,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(n,e=5,t=1,s=1,r=.5){const i=V(n,"x","localResponseNormalization");B(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),B(Xc(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=i,o=!1;i.rank===3&&(o=!0,a=re(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},c={depthRadius:e,bias:t,alpha:s,beta:r},d=te.runKernel(Pf,l,c);return o?re(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const wR=J({localResponseNormalization_:KB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(n){const t={x:V(n,"x","log","float32")};return te.runKernel(Fh,t)}const Ur=J({log_:YB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QB(n){const t={x:V(n,"x","log1p")};return te.runKernel(zh,t)}const ob=J({log1p_:QB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(n,e){B(uv(n),()=>"The f passed in variableGrads(f) must be a function"),B(e==null||Array.isArray(e)&&e.every(c=>c instanceof Ty),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const c in te.registeredVariables)e.push(te.registeredVariables[c])}const s=t?e.filter(c=>!c.trainable):null,r=e.length;e=e.filter(c=>c.trainable),B(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const i=!0,{value:a,grads:o}=te.gradients(n,e,null,i);B(o.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),B(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const l={};return e.forEach((c,d)=>{o[d]!=null&&(l[c.name]=o[d])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:a,grads:l}}function no(n){return te.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(n){const t={x:V(n,"x","neg")};return te.runKernel(Hf,t)}const hn=J({neg_:JB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(n){const t={x:V(n,"x","softplus")};return te.runKernel(Zh,t)}const od=J({softplus_:e4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t4(n){const e=V(n,"x","logSigmoid");return no(s=>({value:hn(od(hn(s))),gradFunc:a=>Q(a,Vr(hn(s)))}))(e)}const vR=J({logSigmoid_:t4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(n,e){let t=V(n,"a","sub"),s=V(e,"b","sub");[t,s]=Cn(t,s);const r={a:t,b:s};return te.runKernel(td,r)}const Ve=J({sub_:n4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(n,e=-1){const t=V(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return no((r,i)=>{const o=xi(r,e,!0),l=Ve(r,o),c=Ve(De(l,"float32"),Ur(qe(qs(l),e,!0)));return i([c]),{value:c,gradFunc:(p,m)=>{const[g]=m,x=!0,b=qs(g);return Ve(p,Q(qe(p,e,x),b))}}})(t)}const B2=J({logSoftmax_:s4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4(n,e=null,t=!1){const s=V(n,"x","logSumExp"),r=pt(e,s.shape),i=xi(s,r,!0),a=Ve(s,i),o=qs(a),l=qe(o,r),c=Ur(l),d=Ce(re(i,c.shape),c);if(t){const p=$n(d.shape,r);return re(d,p)}return d}const lb=J({logSumExp_:r4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i4(n,e){const t=V(n,"a","logicalAnd","bool"),s=V(e,"b","logicalAnd","bool");it(t.shape,s.shape);const r={a:t,b:s};return te.runKernel(Ff,r)}const ma=J({logicalAnd_:i4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(n){const t={x:V(n,"x","logicalNot","bool")};return te.runKernel(zf,t)}const ub=J({logicalNot_:a4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(n,e){const t=V(n,"a","logicalOr","bool"),s=V(e,"b","logicalOr","bool");it(t.shape,s.shape);const r={a:t,b:s};return te.runKernel(Lf,r)}const V2=J({logicalOr_:o4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l4(n,e){const t=V(n,"a","logicalXor","bool"),s=V(e,"b","logicalXor","bool");return it(t.shape,s.shape),ma(V2(n,e),ub(ma(n,e)))}const SR=J({logicalXor_:l4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kg=2147483648;function u4(n,e,t="left"){const s=V(n,"sortedSequence","searchSorted"),r=V(e,"values","searchSorted"),i=s.shape[s.shape.length-1],a=r.shape[r.shape.length-1],o=re(s,[-1,i]),l=re(r,[-1,a]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ue(l.shape)>=Kg)throw new Error(`values tensor size must less than ${Kg}`);if(o.shape[1]>=Kg)throw new Error(`trailing dim_size must less than ${Kg} for int32 output type, was ${o.shape[1]}`);const c={sortedSequence:o,values:l},d={side:t};return te.runKernel(Wx,c,d)}const U2=J({searchSorted_:u4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(n,e){return U2(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h4(n,e,t,s,r){const i=V(n,"x","maxPool"),a=1;let o=i,l=!1;i.rank===3&&(l=!0,o=re(i,[1,i.shape[0],i.shape[1],i.shape[2]])),B(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),B(Zn(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),Ks("maxPool",s,r);const c={x:o},d={filterSize:e,strides:t,pad:s,dimRoundingMode:r},p=te.runKernel(Bf,c,d);return l?re(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const cb=J({maxPool_:h4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d4(n,e=[1,1,1],t,s,r,i="NDHWC"){const a=V(n,"x","maxPool3d");let o=a,l=!1;a.rank===4&&(l=!0,o=re(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),B(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),B(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Ks("maxPool3d",s,r);const c={x:o},d={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:i},p=te.runKernel(Vf,c,d);return l?re(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const CR=J({maxPool3d_:d4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(n,e,t,s,r=!1){const a={x:V(n,"x","maxPoolWithArgmax")},o={filterSize:e,strides:t,pad:s,includeBatchInIndex:r},l=te.runKernel(_x,a,o);return{result:l[0],indexes:l[1]}}const f4=J({maxPoolWithArgmax_:p4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(n,e){let t=V(n,"a","maximum"),s=V(e,"b","maximum");[t,s]=Cn(t,s),t.dtype==="bool"&&(t=De(t,"int32"),s=De(s,"int32")),it(t.shape,s.shape);const r={a:t,b:s};return te.runKernel(Lh,r)}const so=J({maximum_:m4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g4(n,e=null,t=!1){const r={x:V(n,"x","mean")},i={axis:e,keepDims:t};return te.runKernel(Uf,r,i)}const vn=J({mean_:g4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rn(n,e="float32"){if(Gr(n),e==="complex64"){const s=Rn(n,"float32"),r=Rn(n,"float32");return jo(s,r)}const t=vs(ue(n),e);return te.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $r(n,e="float32"){if(Gr(n),e==="complex64"){const s=$r(n,"float32"),r=Rn(n,"float32");return jo(s,r)}const t=p2(ue(n),e);return te.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y4(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=V(n,"x","meshgrid",n instanceof Ht?n.dtype:"float32");if(e===void 0)return[s];let r=V(e,"y","meshgrid",e instanceof Ht?e.dtype:"float32");const i=ue(s.shape),a=ue(r.shape);return t==="xy"?(s=re(s,[1,-1]),r=re(r,[-1,1]),[Ct($r([a,1],s.dtype),s),Ct(r,$r([1,i],r.dtype))]):(s=re(s,[-1,1]),r=re(r,[1,-1]),[Ct(s,$r([1,a],s.dtype)),Ct($r([i,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x4(n,e){let t=V(n,"a","minimum"),s=V(e,"b","minimum");[t,s]=Cn(t,s),t.dtype==="bool"&&(t=De(t,"int32"),s=De(s,"int32")),it(t.shape,s.shape);const r={a:t,b:s};return te.runKernel(Ph,r)}const Qo=J({minimum_:x4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(n,e,t){B(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=V(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");B(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let o=0;o<s.rank;o++)B(e[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),B(e[o][0]>=0&&e[o][0]<=s.shape[o]-r&&e[o][1]>=0&&e[o][1]<=s.shape[o]-r,()=>`Padding in dimension ${o} cannot be greater than or equal to ${s.shape[o]-r} or less than 0 for input of shape ${s.shape}`);const i={paddings:e,mode:t},a={x:s};return te.runKernel(Gf,a,i)}const W2=J({mirrorPad_:b4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w4(n,e){let t=V(n,"a","mod"),s=V(e,"b","mod");[t,s]=Cn(t,s);const r={a:t,b:s};return te.runKernel(Mh,r)}const $R=J({mod_:w4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v4(n,e=null,t=!1){n=V(n,"x","moments");const s=pt(e,n.shape),r=vn(n,s,t);let i=r.shape;t||(i=$n(r.shape,s));const a=Kt(Ve(De(n,"float32"),re(r,i))),o=vn(a,s,t);return{mean:r,variance:o}}const hb=J({moments_:v4});function S4(n,e,t,s){const r=V(e,"data","multiRNNCell"),i=Ey(t,"c","multiRNNCell"),a=Ey(s,"h","multiRNNCell");let o=r;const l=[];for(let p=0;p<n.length;p++){const m=n[p](o,i[p],a[p]);l.push(m[0]),l.push(m[1]),o=m[1]}const c=[],d=[];for(let p=0;p<l.length;p+=2)c.push(l[p]),d.push(l[p+1]);return[c,d]}const C4=J({multiRNNCell_:S4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $4(n,e,t,s=!1){const r=V(n,"logits","multinomial"),i=r.size,a=r.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();const l={logits:a===1?re(r,[1,-1]):r},c={numSamples:e,seed:t,normalized:s},d=te.runKernel(Ox,l,c);return a===1?re(d,[d.size]):d}const k4=J({multinomial_:$4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N4(n,e){let t=V(n,"a","notEqual","string_or_numeric"),s=V(e,"b","notEqual","string_or_numeric");[t,s]=Cn(t,s),it(t.shape,s.shape);const r={a:t,b:s};return te.runKernel(jf,r)}const Qc=J({notEqual_:N4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(n,e,t=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:V(n,"indices","oneHot","int32")},o={dtype:r,depth:e,onValue:t,offValue:s};return te.runKernel(Xf,a,o)}const G2=J({oneHot_:I4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(n){const t={x:V(n,"x","onesLike")};return te.runKernel(qf,t)}const Wr=J({onesLike_:T4});function E4(n,e){const t=V(n,"v1","outerProduct"),s=V(e,"v2","outerProduct");B(t.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const r=re(t,[-1,1]),i=re(s,[1,-1]);return Ct(r,i)}const R4=J({outerProduct_:E4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(n,e,t=0){const s=V(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},i={x:s};return te.runKernel(Yf,i,r)}const Ui=J({pad_:A4});function D4(n,e,t=0){return B(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Ui(n,[e],t)}const _4=J({pad1d_:D4});function O4(n,e,t=0){return B(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ui(n,e,t)}const F4=J({pad2d_:O4});function z4(n,e,t=0){return B(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ui(n,e,t)}const L4=J({pad3d_:z4});function P4(n,e,t=0){return B(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ui(n,e,t)}const M4=J({pad4d_:P4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B4(n,e,t){const s=V(n,"x","spaceToBatchND");B(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),B(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),B(s.shape.reduce((a,o,l)=>l>0&&l<=e.length?a&&(o+t[l-1][0]+t[l-1][1])%e[l-1]===0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},i={blockShape:e,paddings:t};return te.runKernel(am,r,i)}const db=J({spaceToBatchND_:B4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(n,e,t,s,r,i,a){r==null&&(r=[1,1]),i==null&&(i=1),s===0&&(s="valid");const o=V(n,"x","maxPool");let l=o,c=!1;o.rank===3&&(c=!0,l=re(o,[1,o.shape[0],o.shape[1],o.shape[2]])),B(Zn(i,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`);const d=As(l.shape,e,i,r,s),p=[d.dilationHeight,d.dilationWidth];let m;s==="same"?m=W4([d.filterHeight,d.filterWidth],p):m=[[0,0],[0,0]];const g=p[0]===1&&p[1]===1,[x,b]=U4([d.inHeight,d.inWidth],p,m),w=g?s:"valid",v=g?l:db(l,p,x),I=(t==="avg"?()=>nb(v,e,i,w,a):()=>cb(v,e,i,w,a))(),N=g?I:sb(I,p,b);return c?re(N,[N.shape[1],N.shape[2],N.shape[3]]):N}function U4(n,e,t){const s=t.map(d=>d[0]),r=t.map(d=>d[1]),i=n.concat(s,r),a=e.map((d,p)=>(d-i[p]%d)%d),o=r.map((d,p)=>d+a[p]),l=e.map((d,p)=>[s[p],o[p]]),c=e.map((d,p)=>[0,a[p]]);return[l,c]}function W4(n,e){const s=n.map((a,o)=>a+(a-1)*(e[o]-1)).map(a=>a-1),r=s.map(a=>Math.floor(a/2)),i=s.map((a,o)=>a-r[o]);return s.map((a,o)=>[r[o],i[o]])}const kR=J({pool_:V4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(n,e){const t=V(n,"x","prelu"),s=V(e,"alpha","prelu"),r={x:t,alpha:s};return te.runKernel(Qf,r)}const pb=J({prelu_:G4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H4(n,e=null,t=!1){let s=V(n,"x","prod");s.dtype==="bool"&&(s=De(s,"int32"));const r={x:s},i={axis:e,keepDims:t};return te.runKernel(Zf,r,i)}const NR=J({prod_:H4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j4(n,e,t,s){const r=n.map((d,p)=>V(d,`tensors${p}`,"raggedGather","int32")),i=V(e,"paramsDenseValues","raggedGather"),a=V(t,"indices","raggedGather","int32"),o={paramsNestedSplits:r,paramsDenseValues:i,indices:a},l={outputRaggedRank:s},c=te.runKernel(y2,o,l);return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}const q4=J({raggedGather_:j4});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X4(n,e,t){const s=V(n,"starts","raggedRange"),r=V(e,"limits","raggedRange",s.dtype),i=V(t,"deltas","raggedRange",s.dtype),a={starts:s,limits:r,deltas:i},o=te.runKernel(x2,a);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}const K4=J({raggedRange_:X4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(n,e,t,s,r){const i=V(n,"shape","raggedTensorToTensor","int32"),a=V(e,"values","raggedTensorToTensor"),o=V(t,"defaultValue","raggedTensorToTensor",a.dtype),l=s.map((p,m)=>V(p,`tensors${m}`,"raggedTensorToTensor","int32")),c={shape:i,values:a,defaultValue:o,rowPartitionTensors:l},d={rowPartitionTypes:r};return te.runKernel(b2,c,d)}const Q4=J({raggedTensorToTensor_:Y4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(n,e,t){Gr(n);const s=ue(n);let r=null;if(t==null||t==="float32")r=new Float32Array(s);else if(t==="int32")r=new Int32Array(s);else if(t==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${t}`);for(let i=0;i<s;i++)r[i]=e();return te.makeTensor(r,n,t)}const J4=J({rand_:Z4});var dy={exports:{}},eV=dy.exports,ON;function tV(){return ON||(ON=1,function(n){(function(e,t,s){function r(l){var c=this,d=o();c.next=function(){var p=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=p-(c.c=p|0)},c.c=1,c.s0=d(" "),c.s1=d(" "),c.s2=d(" "),c.s0-=d(l),c.s0<0&&(c.s0+=1),c.s1-=d(l),c.s1<0&&(c.s1+=1),c.s2-=d(l),c.s2<0&&(c.s2+=1),d=null}function i(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function a(l,c){var d=new r(l),p=c&&c.state,m=d.next;return m.int32=function(){return d.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,p&&(typeof p=="object"&&i(p,d),m.state=function(){return i(d,{})}),m}function o(){var l=4022871197,c=function(d){d=String(d);for(var p=0;p<d.length;p++){l+=d.charCodeAt(p);var m=.02519603282416938*l;l=m>>>0,m-=l,m*=l,l=m>>>0,m-=l,l+=m*4294967296}return(l>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=a:this.alea=a})(eV,n)}(dy)),dy.exports}var py={exports:{}},nV=py.exports,FN;function sV(){return FN||(FN=1,function(n){(function(e,t,s){function r(o){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var p=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^p^p>>>8},o===(o|0)?l.x=o:c+=o;for(var d=0;d<c.length+64;d++)l.x^=c.charCodeAt(d)|0,l.next()}function i(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l}function a(o,l){var c=new r(o),d=l&&l.state,p=function(){return(c.next()>>>0)/4294967296};return p.double=function(){do var m=c.next()>>>11,g=(c.next()>>>0)/4294967296,x=(m+g)/(1<<21);while(x===0);return x},p.int32=c.next,p.quick=p,d&&(typeof d=="object"&&i(d,c),p.state=function(){return i(c,{})}),p}t&&t.exports?t.exports=a:this.xor128=a})(nV,n)}(py)),py.exports}var fy={exports:{}},rV=fy.exports,zN;function iV(){return zN||(zN=1,function(n){(function(e,t,s){function r(o){var l=this,c="";l.next=function(){var p=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(p^p<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,o===(o|0)?l.x=o:c+=o;for(var d=0;d<c.length+64;d++)l.x^=c.charCodeAt(d)|0,d==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function i(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l.v=o.v,l.d=o.d,l}function a(o,l){var c=new r(o),d=l&&l.state,p=function(){return(c.next()>>>0)/4294967296};return p.double=function(){do var m=c.next()>>>11,g=(c.next()>>>0)/4294967296,x=(m+g)/(1<<21);while(x===0);return x},p.int32=c.next,p.quick=p,d&&(typeof d=="object"&&i(d,c),p.state=function(){return i(c,{})}),p}t&&t.exports?t.exports=a:this.xorwow=a})(rV,n)}(fy)),fy.exports}var my={exports:{}},aV=my.exports,LN;function oV(){return LN||(LN=1,function(n){(function(e,t,s){function r(o){var l=this;l.next=function(){var d=l.x,p=l.i,m,g;return m=d[p],m^=m>>>7,g=m^m<<24,m=d[p+1&7],g^=m^m>>>10,m=d[p+3&7],g^=m^m>>>3,m=d[p+4&7],g^=m^m<<7,m=d[p+7&7],m=m^m<<13,g^=m^m<<9,d[p]=g,l.i=p+1&7,g};function c(d,p){var m,g=[];if(p===(p|0))g[0]=p;else for(p=""+p,m=0;m<p.length;++m)g[m&7]=g[m&7]<<15^p.charCodeAt(m)+g[m+1&7]<<13;for(;g.length<8;)g.push(0);for(m=0;m<8&&g[m]===0;++m);for(m==8?g[7]=-1:g[m],d.x=g,d.i=0,m=256;m>0;--m)d.next()}c(l,o)}function i(o,l){return l.x=o.x.slice(),l.i=o.i,l}function a(o,l){o==null&&(o=+new Date);var c=new r(o),d=l&&l.state,p=function(){return(c.next()>>>0)/4294967296};return p.double=function(){do var m=c.next()>>>11,g=(c.next()>>>0)/4294967296,x=(m+g)/(1<<21);while(x===0);return x},p.int32=c.next,p.quick=p,d&&(d.x&&i(d,c),p.state=function(){return i(c,{})}),p}t&&t.exports?t.exports=a:this.xorshift7=a})(aV,n)}(my)),my.exports}var gy={exports:{}},lV=gy.exports,PN;function uV(){return PN||(PN=1,function(n){(function(e,t,s){function r(o){var l=this;l.next=function(){var d=l.w,p=l.X,m=l.i,g,x;return l.w=d=d+1640531527|0,x=p[m+34&127],g=p[m=m+1&127],x^=x<<13,g^=g<<17,x^=x>>>15,g^=g>>>12,x=p[m]=x^g,l.i=m,x+(d^d>>>16)|0};function c(d,p){var m,g,x,b,w,v=[],$=128;for(p===(p|0)?(g=p,p=null):(p=p+"\0",g=0,$=Math.max($,p.length)),x=0,b=-32;b<$;++b)p&&(g^=p.charCodeAt((b+32)%p.length)),b===0&&(w=g),g^=g<<10,g^=g>>>15,g^=g<<4,g^=g>>>13,b>=0&&(w=w+1640531527|0,m=v[b&127]^=g+w,x=m==0?x+1:0);for(x>=128&&(v[(p&&p.length||0)&127]=-1),x=127,b=4*128;b>0;--b)g=v[x+34&127],m=v[x=x+1&127],g^=g<<13,m^=m<<17,g^=g>>>15,m^=m>>>12,v[x]=g^m;d.w=w,d.X=v,d.i=x}c(l,o)}function i(o,l){return l.i=o.i,l.w=o.w,l.X=o.X.slice(),l}function a(o,l){o==null&&(o=+new Date);var c=new r(o),d=l&&l.state,p=function(){return(c.next()>>>0)/4294967296};return p.double=function(){do var m=c.next()>>>11,g=(c.next()>>>0)/4294967296,x=(m+g)/(1<<21);while(x===0);return x},p.int32=c.next,p.quick=p,d&&(d.X&&i(d,c),p.state=function(){return i(c,{})}),p}t&&t.exports?t.exports=a:this.xor4096=a})(lV,n)}(gy)),gy.exports}var yy={exports:{}},cV=yy.exports,MN;function hV(){return MN||(MN=1,function(n){(function(e,t,s){function r(o){var l=this,c="";l.next=function(){var p=l.b,m=l.c,g=l.d,x=l.a;return p=p<<25^p>>>7^m,m=m-g|0,g=g<<24^g>>>8^x,x=x-p|0,l.b=p=p<<20^p>>>12^m,l.c=m=m-g|0,l.d=g<<16^m>>>16^x,l.a=x-p|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,o===Math.floor(o)?(l.a=o/4294967296|0,l.b=o|0):c+=o;for(var d=0;d<c.length+20;d++)l.b^=c.charCodeAt(d)|0,l.next()}function i(o,l){return l.a=o.a,l.b=o.b,l.c=o.c,l.d=o.d,l}function a(o,l){var c=new r(o),d=l&&l.state,p=function(){return(c.next()>>>0)/4294967296};return p.double=function(){do var m=c.next()>>>11,g=(c.next()>>>0)/4294967296,x=(m+g)/(1<<21);while(x===0);return x},p.int32=c.next,p.quick=p,d&&(typeof d=="object"&&i(d,c),p.state=function(){return i(c,{})}),p}t&&t.exports?t.exports=a:this.tychei=a})(cV,n)}(yy)),yy.exports}var xy={exports:{}};const dV={},pV=Object.freeze(Object.defineProperty({__proto__:null,default:dV},Symbol.toStringTag,{value:"Module"})),fV=wL(pV);var mV=xy.exports,BN;function gV(){return BN||(BN=1,function(n){(function(e,t,s){var r=256,i=6,a=52,o="random",l=s.pow(r,i),c=s.pow(2,a),d=c*2,p=r-1,m;function g(N,E,_){var z=[];E=E==!0?{entropy:!0}:E||{};var P=v(w(E.entropy?[N,I(t)]:N??$(),3),z),O=new x(z),L=function(){for(var D=O.g(i),G=l,q=0;D<c;)D=(D+q)*r,G*=r,q=O.g(1);for(;D>=d;)D/=2,G/=2,q>>>=1;return(D+q)/G};return L.int32=function(){return O.g(4)|0},L.quick=function(){return O.g(4)/4294967296},L.double=L,v(I(O.S),t),(E.pass||_||function(D,G,q,ee){return ee&&(ee.S&&b(ee,O),D.state=function(){return b(O,{})}),q?(s[o]=D,G):D})(L,P,"global"in E?E.global:this==s,E.state)}function x(N){var E,_=N.length,z=this,P=0,O=z.i=z.j=0,L=z.S=[];for(_||(N=[_++]);P<r;)L[P]=P++;for(P=0;P<r;P++)L[P]=L[O=p&O+N[P%_]+(E=L[P])],L[O]=E;(z.g=function(D){for(var G,q=0,ee=z.i,Z=z.j,H=z.S;D--;)G=H[ee=p&ee+1],q=q*r+H[p&(H[ee]=H[Z=p&Z+G])+(H[Z]=G)];return z.i=ee,z.j=Z,q})(r)}function b(N,E){return E.i=N.i,E.j=N.j,E.S=N.S.slice(),E}function w(N,E){var _=[],z=typeof N,P;if(E&&z=="object")for(P in N)try{_.push(w(N[P],E-1))}catch{}return _.length?_:z=="string"?N:N+"\0"}function v(N,E){for(var _=N+"",z,P=0;P<_.length;)E[p&P]=p&(z^=E[p&P]*19)+_.charCodeAt(P++);return I(E)}function $(){try{var N;return m&&(N=m.randomBytes)?N=N(r):(N=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(N)),I(N)}catch{var E=e.navigator,_=E&&E.plugins;return[+new Date,e,_,e.screen,I(t)]}}function I(N){return String.fromCharCode.apply(0,N)}if(v(s.random(),t),n.exports){n.exports=g;try{m=fV}catch{}}else s["seed"+o]=g})(typeof self<"u"?self:mV,[],Math)}(xy)),xy.exports}var Ow,VN;function yV(){if(VN)return Ow;VN=1;var n=tV(),e=sV(),t=iV(),s=oV(),r=uV(),i=hV(),a=gV();return a.alea=n,a.xor128=e,a.xorwow=t,a.xorshift7=s,a.xor4096=r,a.tychei=i,Ow=a,Ow}var fb=yV();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H2{constructor(e,t,s,r,i){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=i||Math.random();this.random=fb.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,i,a;do r=2*this.random()-1,i=2*this.random()-1,a=r*r+i*i;while(a>=1||a===0);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*i*o,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class xV{constructor(e,t,s,r){this.alpha=e,this.beta=1/t,this.dtype=s;const i=r||Math.random();this.randu=fb.alea(i.toString()),this.randn=new H2(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,r,i,a;for(;;){do r=this.randn.nextValue(),a=1+this.c*r;while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,s=.5*e+this.d*(1-a+Math.log(a)),i=this.randu(),i<t||Math.log(i)<s)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class bV{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=fb.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(n,e,t=1,s="float32",r){if(Gr(n),t==null&&(t=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const i=new xV(e,t,s,r),a=dt(n,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const vV=J({randomGamma_:wV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(n,e=0,t=1,s,r){if(Gr(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const i=new H2(e,t,s,!1,r),a=dt(n,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const j2=J({randomNormal_:SV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return j2(n,0,1,e,t)}const $V=J({randomStandardNormal_:CV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(n,e=0,t=1,s="float32",r){Gr(n);const i=dt(n,s),a=new bV(e,t,null,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}const Du=J({randomUniform_:kV});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NV(n,e,t,s){return Du(n,e,t,"int32",s)}const IV=J({randomUniformInt_:NV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zc(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return te.runKernel(Lx,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(n){const t={input:V(n,"input","real")};return te.runKernel(Px,t)}const Yp=J({real_:TV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(n){const t={x:V(n,"x","reciprocal")};return te.runKernel(Uh,t)}const IR=J({reciprocal_:EV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(n){const t={x:V(n,"x","relu")};return te.runKernel(Wh,t)}const va=J({relu_:RV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(n){const t={x:V(n,"x","relu6")};return te.runKernel(Gh,t)}const q2=J({relu6_:AV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(n,e){const s={x:V(n,"x","reverse")},r={dims:e};return te.runKernel(nm,s,r)}const vi=J({reverse_:DV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _V(n){const e=V(n,"x","reverse");return B(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),vi(e,0)}const OV=J({reverse1d_:_V});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FV(n,e){const t=V(n,"x","reverse");return B(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),vi(t,e)}const zV=J({reverse2d_:FV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LV(n,e){const t=V(n,"x","reverse");return B(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),vi(t,e)}const PV=J({reverse3d_:LV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(n,e){const t=V(n,"x","reverse");return B(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),vi(t,e)}const BV=J({reverse4d_:MV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(n){const t={x:V(n,"x","round")};return te.runKernel(Hh,t)}const X2=J({round_:VV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(n){const t={x:V(n,"x","rsqrt","float32")};return te.runKernel(jh,t)}const K2=J({rsqrt_:UV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WV(n){const t={x:V(n,"x","selu")};return te.runKernel(qh,t)}const Y2=J({selu_:WV});function GV(n,e,t,s,r,i=[1,1],a="NHWC"){const o=V(n,"x","separableConv2d"),l=V(e,"depthwiseFilter","separableConv2d"),c=V(t,"pointwiseFilter","separableConv2d");let d=o,p=!1;if(o.rank===3&&(p=!0,d=re(o,[1,o.shape[0],o.shape[1],o.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");B(d.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`),B(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),B(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),B(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),B(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const m=l.shape[2],g=l.shape[3];B(c.shape[2]===m*g,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*g}, but got ${c.shape[2]}.`);const x=fm(d,l,s,r,a,i),w=Ko(x,c,1,"valid",a);return p?re(w,[w.shape[1],w.shape[2],w.shape[3]]):w}const Q2=J({separableConv2d_:GV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function HV(n,e){const t=V(n,"x","setdiff1d"),s=V(e,"y","setdiff1d");B(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),B(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),B(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await t.data(),i=await s.data(),a=new Set(i);let o=0;for(let d=0;d<r.length;d++)a.has(r[d])||o++;const l=new qn([o],t.dtype),c=new qn([o],"int32");for(let d=0,p=0;d<r.length;d++)a.has(r[d])||(l.values[p]=r[d],c.values[p]=d,p++);return[l.toTensor(),c.toTensor()]}const jV=HV;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qV(n){const t={x:V(n,"x","sign")};return te.runKernel(Yh,t)}const TR=J({sign_:qV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(n){const t={x:V(n,"x","sin","float32")};return te.runKernel(Xh,t)}const Z2=J({sin_:XV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KV(n){const t={x:V(n,"x","sinh")};return te.runKernel(Kh,t)}const J2=J({sinh_:KV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(n,e,t){const s=V(n,"x","slice1d");return B(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),ct(s,[e],[t])}const mb=J({slice1d_:YV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QV(n,e,t){const s=V(n,"x","slice2d");return B(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),ct(s,e,t)}const eS=J({slice2d_:QV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(n,e,t){const s=V(n,"x","slice3d");return B(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),ct(s,e,t)}const gb=J({slice3d_:ZV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(n,e,t){const s=V(n,"x","slice4d");return B(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),ct(s,e,t)}const Qp=J({slice4d_:JV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eU(n,e=-1){const t=V(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return te.runKernel(lm,s,r)}const yb=J({softmax_:eU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tU(n){B(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return te.runKernel(Cx,e)}const xb=J({fft_:tU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(n){B(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return te.runKernel(Ix,e)}const Zp=J({ifft_:nU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=re(n,[t,e]);s=Zp(r)}else{const r=[t,2*(e-1)],i=re(Yp(n),[t,e]),a=re(ib(n),[t,e]),o=vi(ct(i,[0,1],[t,e-2]),1),l=Q(vi(ct(a,[0,1],[t,e-2]),1),Ze(-1)),c=yn([i,o],1),d=yn([a,l],1),p=re(jo(c,d),[r[0],r[1]]);s=Zp(p)}if(s=Yp(s),n.rank===3&&n.shape[0]!==0){const r=s,i=n.shape[0];s=re(s,[i,s.shape[0]/i,s.shape[1]]),r.dispose()}return s}const tS=J({irfft_:sU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rU(n,e,t=0){const r={x:V(n,"x","split")},i={numOrSizeSplits:e,axis:t};return te.runKernel(om,r,i)}const kr=J({split_:rU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iU(n,e){B(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const x=n.shape.map(w=>0),b=n.shape.map(w=>w);b[n.shape.length-1]=e,r=ct(n,x,b),t=e}else if(e!=null&&e>t){const x=n.shape.map(b=>b);x[n.shape.length-1]=e-t,r=yn([n,Rn(x)],n.shape.length-1),t=e}else r=n;const i=Dt(r),a=re(jo(r,i),[s,t]),o=xb(a),l=Math.floor(t/2)+1,c=Yp(o),d=ib(o),p=kr(c,[l,t-l],c.shape.length-1),m=kr(d,[l,t-l],d.shape.length-1),g=r.shape.slice();return g[r.shape.length-1]=l,re(jo(p[0],m[0]),g)}const bb=J({rfft_:iU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aU(n,e){let t=V(n,"a","squaredDifference"),s=V(e,"b","squaredDifference");[t,s]=Cn(t,s),it(t.shape,s.shape);const r={a:t,b:s},i={};return te.runKernel(ed,r,i)}const nS=J({squaredDifference_:aU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oU(n,e){const t=V(n,"x","squeeze","string_or_numeric");return re(t,sl(t.shape,e).newShape)}const Bt=J({squeeze_:oU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lU(n,e=0){const t=Ey(n,"tensors","stack","string_or_numeric");B(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&B(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return te.runKernel(Kf,s,r)}const Nr=J({stack_:lU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(n,e=0){const s={x:V(n,"x","step")},r={alpha:e};return te.runKernel(id,s,r)}const ld=J({step_:uU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cU(n,e,t,s,r=0,i=0,a=0,o=0,l=0){const d={x:V(n,"x","stridedSlice","string_or_numeric")},p={begin:e,end:t,strides:s,beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return te.runKernel(Kx,d,p)}const ER=J({stridedSlice_:cU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hU(n){const t={x:V(n,"x","tan","float32")};return te.runKernel(nd,t)}const RR=J({tan_:hU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pn(n,e){lh(n);const t=il(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return al(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bi(n,e,t){if(lh(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=il(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return al(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AR(n,e,t){if(lh(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=il(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return al(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dU(n,e,t){if(lh(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=il(n,t);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return al(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pU(n,e,t){if(lh(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=il(n,t);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return al(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fU(n,e,t){if(lh(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=il(n,t);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,al(n,e,s,t)}function DR(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(i+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(i+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(i+` update.rank != ${r+n.length-s}`);for(let a=0;a<r;++a)if(t.shape[a]!==e.shape[a])throw new Error(i+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-r;++a)if(t.shape[a+r]!==n[a+s])throw new Error(i+` updates.shape[${a+r}] (${t.shape[a+r]}) != shape[${a+r}] (${n[a+r]})`)}function sS(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}DR(t,e,n)}function Sa(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,i=t.length;let a=1;for(let p=r;p<i;++p)a*=t[p];const o=r<1?1:r,l=ue(e.shape)/o,c=[...Qe(t.slice(0,r)),1],d=ue(t);return{sliceRank:r,numUpdates:l,sliceSize:a,strides:c,outputSize:d}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mU(n,e,t){const s=V(n,"tensor","tensorScatterupdate"),r=V(e,"indices","tensorScatterupdate","int32"),i=V(t,"updates","tensorScatterupdate");if(sS(i,r,s.shape),s.dtype!==i.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${i.dtype}.`);const a={tensor:s,indices:r,updates:i},o={};return te.runKernel(Ux,a,o)}const gU=J({tensorScatterUpdate_:mU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yU(n,e=1,t=!0){const s=V(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const i={x:s},a={k:e,sorted:t},[o,l]=te.runKernel(Qx,i,a);return{values:o,indices:l}}const _R=J({topk_:yU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xU(n,e=0,t=1,s,r){if(Gr(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const i=new H2(e,t,s,!0,r),a=dt(n,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const rS=J({truncatedNormal_:xU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bU(n,e=0){const t=V(n,"x","unique","string_or_numeric");B(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[i,a]=te.runKernel($2,s,r);return{values:i,indices:a}}const OR=J({unique_:bU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wU(n,e,t){const s=V(n,"x","unsortedSegmentSum"),r=V(e,"segmentIds","unsortedSegmentSum","int32");B(Xc(t),()=>"numSegments must be of dtype int");const i={x:s,segmentIds:r},a={numSegments:t};return te.runKernel(cm,i,a)}const iS=J({unsortedSegmentSum_:wU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vU(n,e=0){const t=V(n,"x","unstack","string_or_numeric");B(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return te.runKernel(um,s,r)}const Si=J({unstack_:vU});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SU(n,e){return U2(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FR(n,e=!0,t,s){return te.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aS(n,e){const t=[];for(let i=0;i<e.length;i++)e[i]&&t.push(i);const s=dt(n,"int32"),r=dt([t.length,n.length],"int32");for(let i=0;i<t.length;i++){const a=s.indexToLoc(t[i]),o=i*n.length;r.values.set(a,o)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function CU(n){const e=V(n,"condition","whereAsync","bool"),t=await e.data(),s=aS(e.shape,t);return n!==e&&e.dispose(),s}const zR=CU;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function $U(n,e,t){const s=V(n,"tensor","boolMask"),r=V(e,"mask","boolMask","bool"),i=t??0,a=r.rank,o=s.shape;B(a>0,()=>"mask cannot be scalar"),fr(o.slice(i,i+a),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let b=i;b<i+a;b++)l*=o[b];const c=o.slice(0,i).concat([l],o.slice(i+a)),d=re(s,c),p=re(r,[-1]),m=await zR(p),g=Bt(m,[1]),x=xm(d,g,i);return n!==s&&s.dispose(),e!==r&&r.dispose(),g.dispose(),d.dispose(),p.dispose(),m.dispose(),x}const kU=$U;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NU(n,e,t){const s=V(n,"x","transpose");if(e==null&&(e=s.shape.map((a,o)=>o).reverse()),B(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(a=>{B(a>=0&&a<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},i={perm:e};return s.dtype==="complex64"?ce(()=>{let a=Yp(s),o=ib(s);return a=te.runKernel(lu,{x:a},i),o=te.runKernel(lu,{x:o},i),t&&(o=hn(o)),jo(a,o)}):te.runKernel(lu,r,i)}const At=J({transpose_:NU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IU(n,e,t,s,r=!0){const i=V(n,"v","movingAverage"),a=V(e,"x","movingAverage"),o=V(t,"decay","movingAverage");pP(i,a),B(yt(i.shape,a.shape),()=>"Shape mismatch in v and x");const l=Ze(1),c=Ve(l,o);let d=Q(Ve(a,i),c);if(r){B(s!=null,()=>"When using zeroDebias: true, step is required.");const p=V(s,"step","movingAverage");d=Be(d,Ve(l,to(o,p)))}return Ce(i,d)}const TU=J({movingAverage_:IU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EU(n,e,t){Gr(t);const s=V(n,"indices","scatterND","int32"),r=V(e,"updates","scatterND");sS(r,s,t);const i={indices:s,updates:r},a={shape:t};return te.runKernel(Vx,i,a)}const RU=J({scatterND_:EU});function AU(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,i=n.rank>1?n.shape[1]:1;if(t.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${i}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(n,e,t,s=0){Gr(t);const r=V(n,"sparseIndices","sparseToDense","int32"),i=V(e,"sparseValues","sparseToDense","string_or_numeric"),a=V(s,"defaultValue","sparseToDense",i.dtype);AU(r,i,t,a);const o={sparseIndices:r,sparseValues:i,defaultValue:a},l={outputShape:t};return te.runKernel(jx,o,l)}const _U=J({sparseToDense_:DU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OU(n,e){const t=V(e,"indices","gatherND","int32"),r={params:V(n,"x","gatherND","string_or_numeric"),indices:t};return te.runKernel(Nx,r)}const FU=J({gatherND_:OU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(n,e){if(e==null)return n.shape.slice();if(yt(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LU(n,e,t,s){const r=V(n,"x","dropout");if(B(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),B(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Ht?r.clone():r;const i=zU(r,t),a=1-e,o=Be(ym(Ce(Du(i,0,1,"float32",s),a)),a);return Q(r,o)}const LR=J({dropout_:LU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PR(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function oS(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let i=0;i<n;++i){const a=2*Math.PI*i/(n+s-1);r[i]=e-t*Math.cos(a)}return Pn(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function PU(n,e,t=1){const s=V(n,"predictions","inTopK"),r=V(e,"targets","inTopK");B(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),B(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),fr(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=s.shape[s.shape.length-1];B(t>0&&t<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${t}`);const a=await s.data(),o=await r.data(),[l,c]=[a.length/i,i],d=Yn("bool",l);for(let p=0;p<l;p++){const m=p*c,g=a.subarray(m,m+c),x=[];for(let b=0;b<g.length;b++)x.push({value:g[b],index:b});x.sort((b,w)=>w.value-b.value),d[p]=0;for(let b=0;b<t;b++)if(x[b].index===o[p]){d[p]=1;break}}return n!==s&&s.dispose(),e!==r&&r.dispose(),Pi(d,r.shape,"bool")}const MU=PU;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BU(n,e,t,s,r,i="NHWC",a){let o=n;n.rank===3&&(o=re(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=re(e,[1,e.shape[0],e.shape[1],e.shape[2]])),B(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),B(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),B(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const c=i==="NHWC"?o.shape[3]:o.shape[1],d=i==="NHWC"?l.shape[3]:l.shape[1];B(c===t[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${t[2]}.`),B(d===t[3],()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${t[3]}).`),Ks("conv2dDerFilter",r,a);const p={x:o,dy:l},m={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,filterShape:t};return te.runKernel(hx,p,m)}const lS=J({conv2DBackpropFilter_:BU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wb(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return Q(n,ld(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function vb(n,e){let t=e;const s=Qn(n.shape,e.shape);return s.length>0&&(t=qe(t,s)),re(t,n.shape)}function Sb(n,e,t,s){if(e==="linear")return n;if(e==="relu")return va(n);if(e==="elu")return mm(n);if(e==="relu6")return q2(n);if(e==="prelu")return pb(n,t);if(e==="leakyrelu")return ab(n,s);if(e==="sigmoid")return Vr(n);throw new Error(`Unknown fused activation ${e}.`)}const Cb=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VU({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:d}){if(l=l||"linear",Cb(te.state.gradientDepth,l)===!1){B(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let _=Ko(n,e,t,s,r,i,a);return o!=null&&(_=Ce(_,o)),Sb(_,l,c,d)}const p=V(n,"x","conv2d","float32"),m=V(e,"filter","conv2d","float32");let g=p,x=!1;p.rank===3&&(x=!0,g=re(p,[1,p.shape[0],p.shape[1],p.shape[2]])),B(g.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${g.rank}.`),B(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),Ks("fused conv2d",s,a);const b=r==="NHWC"?g.shape[3]:g.shape[1];B(m.shape[2]===b,()=>`Error in conv2d: depth of input (${b}) must match input depth for filter ${m.shape[2]}.`),B(Zn(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);const w=on(g.shape,m.shape,t,i,s,a);let v;o!=null&&(v=V(o,"bias","fused conv2d"),[v]=Cn(v,p),r==="NHWC"?it(w.outShape,v.shape):(B(v.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${v.shape.length}.`),B(v.shape.length===0||v.shape[0]===w.outChannels||v.shape[0]===1,()=>`Error in fused conv2d: bias shape (${v.shape}) is not compatible with the number of output channels (${w.outChannels})`)));let $;if(c!=null){const _=c.shape;if(B(_.length<=1||_.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${_.length}.`),_.length===1)B(_[0]===1||_[0]===w.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the number of output channels (${w.outChannels}).`);else if(_.length===3)try{it(_,w.outShape)}catch{const P=`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the output shape of the conv2d (${w.outShape}).`;throw Error(P)}$=V(c,"prelu weights","fused conv2d")}const I=(_,z)=>{B(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[P,O,L,D]=z,G=wb(_,L,l);B(Xo(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const q=_2(O.shape,G,P,t,s),ee=lS(O,G,P.shape,t,s),Z=[q,ee];if(D!=null){const H=vb(D,G);Z.push(H)}return Z},N={x:g,filter:m,bias:v,preluActivationWeights:$},E={strides:t,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:d};return o==null?no((z,P,O)=>{let L=te.runKernel(Gp,N,E);return O([P,z,L]),x&&(L=re(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:I}})(g,m):no((z,P,O,L)=>{let D=te.runKernel(Gp,N,E);return L([P,z,D,O]),x&&(D=re(D,[D.shape[1],D.shape[2],D.shape[3]])),{value:D,gradFunc:I}})(g,m,v)}const MR=J({fusedConv2d_:VU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UU(n,e,t,s,r,i=[1,1],a){let o=n;n.rank===3&&(o=re(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=re(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:o,dy:l},d={strides:s,pad:r,dimRoundingMode:a,dilations:i,filterShape:t};return te.runKernel(xx,c,d)}const BR=J({depthwiseConv2dNativeBackpropFilter_:UU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WU(n,e,t,s,r,i=[1,1],a){let o=e,l=!1;e.rank===3&&(l=!0,o=re(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:o,filter:t},d={strides:s,pad:r,dimRoundingMode:a,dilations:i,inputShape:n},p=te.runKernel(bx,c,d);return l?re(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const VR=J({depthwiseConv2dNativeBackpropInput_:WU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GU({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:d}){if(Cb(te.state.gradientDepth,l)===!1){let E=fm(n,e,t,s,r,i,a);return o!=null&&(E=Ce(E,o)),Sb(E,l,c,d)}const p=V(n,"x","depthwiseConv2d","float32"),m=V(e,"filter","depthwiseConv2d","float32");let g=p,x=!1;p.rank===3&&(x=!0,g=re(p,[1,p.shape[0],p.shape[1],p.shape[2]])),B(g.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${g.rank}.`),B(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),B(g.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${g.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),i==null&&(i=[1,1]),B(Zn(t,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),Ks("fused depthwiseConv2d",s,a);const b=on(g.shape,m.shape,t,i,s,a,!0);let w;o!=null&&(w=V(o,"bias","fused conv2d"),[w]=Cn(w,p),it(b.outShape,w.shape));let v;c!=null&&(v=V(c,"prelu weights","fused depthwiseConv2d"));const $=(E,_)=>{B(Xo(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[z,P,O,L]=_,D=wb(E,O,l),G=VR(P.shape,D,z,t,s,i,a),q=BR(P,D,z.shape,t,s,i,a);if(L!=null){const ee=vb(w,D);return[G,q,ee]}return[G,q]},I={x:g,filter:m,bias:w,preluActivationWeights:v},N={strides:t,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:d};return o==null?no((_,z,P)=>{let O=te.runKernel(Hp,I,N);return P([z,_,O]),x&&(O=re(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:$}})(g,m):no((_,z,P,O)=>{let L=te.runKernel(Hp,I,N);return O([z,_,L,P]),x&&(L=re(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:$}})(g,m,w)}const HU=J({fusedDepthwiseConv2d_:GU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jU({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(Cb(te.state.gradientDepth,i)===!1){let D=Ct(n,e,t,s);return r!=null&&(D=Ce(D,r)),Sb(D,i,a,o)}let l=V(n,"a","fused matMul"),c=V(e,"b","fused matMul");[l,c]=Cn(l,c);const d=t?l.shape[l.rank-2]:l.shape[l.rank-1],p=s?c.shape[c.rank-1]:c.shape[c.rank-2],m=t?l.shape[l.rank-1]:l.shape[l.rank-2],g=s?c.shape[c.rank-2]:c.shape[c.rank-1],x=l.shape.slice(0,-2),b=c.shape.slice(0,-2),w=ue(x),v=ue(b);B(d===p,()=>`Error in fused matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${t} and transposeB=${s} must match.`);const I=it(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([m,g]),N=t?re(l,[w,d,m]):re(l,[w,m,d]),E=s?re(c,[v,g,p]):re(c,[v,p,g]);let _;r!=null&&(_=V(r,"bias","fused matMul"),[_]=Cn(_,l),it(I,_.shape));let z;a!=null&&(z=V(a,"prelu weights","fused matMul"));const P=(D,G)=>{const[q,ee,Z,H]=G,oe=wb(re(D,Z.shape),Z,i);let se,de;if(!t&&!s?(se=Ct(oe,ee,!1,!0),de=Ct(q,oe,!0,!1)):!t&&s?(se=Ct(oe,ee,!1,!1),de=Ct(oe,q,!0,!1)):t&&!s?(se=Ct(ee,oe,!1,!0),de=Ct(q,oe,!1,!1)):(se=Ct(ee,oe,!0,!0),de=Ct(oe,q,!0,!0)),r!=null){const W=vb(H,oe);return[se,de,W]}else return[se,de]},O={a:N,b:E,bias:_,preluActivationWeights:z},L={transposeA:t,transposeB:s,activation:i,leakyreluAlpha:o};return r==null?no((G,q,ee)=>{const Z=te.runKernel(Wp,O,L);return ee([G,q,Z]),{value:re(Z,I),gradFunc:P}})(N,E):no((G,q,ee,Z)=>{const H=te.runKernel(Wp,O,L);return Z([G,q,H,ee]),{value:re(H,I),gradFunc:P}})(N,E,_)}const $v=J({fusedMatMul_:jU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qU=Object.freeze(Object.defineProperty({__proto__:null,conv2d:MR,depthwiseConv2d:HU,matMul:$v},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XU(n){return oS(n,.54,.46)}const KU=J({hammingWindow_:XU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YU(n){return oS(n,.5,.5)}const UR=J({hannWindow_:YU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QU(n,e,t,s=!1,r=0){let i=0;const a=[];for(;i+e<=n.size;)a.push(ct(n,i,e)),i+=t;if(s)for(;i<n.size;){const o=i+e-n.size,l=yn([ct(n,i,e-o),ad([o],r)]);a.push(l),i+=t}return a.length===0?bi([],[0,e]):re(yn(a),[a.length,e])}const WR=J({frame_:QU});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZU(n,e,t,s,r=UR){s==null&&(s=PR(e));const i=WR(n,e,t),a=Q(i,r(e));return bb(a,s)}const JU=J({stft_:ZU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eW(n,e,t,s,r="bilinear",i=0){const a=V(n,"image","cropAndResize"),o=V(e,"boxes","cropAndResize","float32"),l=V(t,"boxInd","cropAndResize","int32"),c=o.shape[0];B(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),B(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`),B(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`),B(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),B(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),B(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const d={image:a,boxes:o,boxInd:l},p={method:r,extrapolationValue:i,cropSize:s};return te.runKernel(mx,d,p)}const tW=J({cropAndResize_:eW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nW(n){const e=V(n,"image","flipLeftRight","float32");B(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return te.runKernel(kx,t,{})}const sW=J({flipLeftRight_:nW});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rW(n){const e=V(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];B(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),B(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,fi(e,r)}const iW=J({grayscaleToRGB_:rW});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aW(n){const e=V(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];B(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),B(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=e.dtype,i=De(e,"float32"),a=Pn([.2989,.587,.114]);let o;switch(e.rank){case 2:o=Vc("ij,j->i",i,a);break;case 3:o=Vc("ijk,k->ij",i,a);break;case 4:o=Vc("ijkl,l->ijk",i,a);break;case 5:o=Vc("ijklm,m->ijkl",i,a);break;case 6:o=Vc("ijklmn,n->ijklm",i,a);break;default:throw new Error("Not a valid tensor rank.")}return o=Ln(o,-1),De(o,r)}const oW=J({rgbToGrayscale_:aW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lW(n,e,t=0,s=.5){const r=V(n,"image","rotateWithOffset","float32");B(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const i={image:r},a={radians:e,fillValue:t,center:s};return te.runKernel(Jx,i,a)}const uW=J({rotateWithOffset_:lW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ud(n,e,t,s,r,i){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),i==null&&(i=0);const a=n.shape[0];return t=Math.min(t,a),B(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),B(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),B(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),B(e.rank===1,()=>"scores must be a 1D tensor"),B(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),B(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cW(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const i=V(n,"boxes","nonMaxSuppression","float32"),a=V(e,"scores","nonMaxSuppression","float32"),o=ud(i,a,t,s,r);t=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return te.runKernel(Fx,{boxes:i,scores:a},l)}const hW=J({nonMaxSuppression_:cW});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dW(n,e,t){const s=pW(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function pW(n,e,t){return mW(n,e,t||fW)}function fW(n,e){return n>e?1:n<e?-1:0}function mW(n,e,t){let s=0,r=n.length,i=0,a=!1;for(;s<r;){i=s+(r-s>>>1);const o=t(e,n[i]);o>0?s=i+1:(r=i,a=!o)}return a?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $b(n,e,t,s,r){return cS(n,e,t,s,r,0)}function uS(n,e,t,s,r,i){return cS(n,e,t,s,r,0,!1,i,!0)}function kb(n,e,t,s,r,i){return cS(n,e,t,s,r,i,!0)}function cS(n,e,t,s,r,i,a=!1,o=!1,l=!1){const c=[];for(let w=0;w<e.length;w++)e[w]>r&&c.push({score:e[w],boxIndex:w,suppressBeginIndex:0});c.sort(UN);const d=i>0?-.5/i:0,p=[],m=[];for(;p.length<t&&c.length>0;){const w=c.pop(),{score:v,boxIndex:$,suppressBeginIndex:I}=w;if(v<r)break;let N=!1;for(let E=p.length-1;E>=I;--E){const _=gW(n,$,p[E]);if(_>=s){N=!0;break}if(w.score=w.score*yW(s,d,_),w.score<=r)break}w.suppressBeginIndex=p.length,N||(w.score===v?(p.push($),m.push(w.score)):w.score>r&&dW(c,w,UN))}const g=p.length,x=t-g;o&&x>0&&(p.push(...new Array(x).fill(0)),m.push(...new Array(x).fill(0)));const b={selectedIndices:p};return a&&(b.selectedScores=m),l&&(b.validOutputs=g),b}function gW(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),i=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),d=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),m=Math.max(r[1],r[3]),g=(o-i)*(l-a),x=(p-c)*(m-d);if(g<=0||x<=0)return 0;const b=Math.max(i,c),w=Math.max(a,d),v=Math.min(o,p),$=Math.min(l,m),I=Math.max(v-b,0)*Math.max($-w,0);return I/(g+x-I)}function yW(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function UN(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function xW(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const i=V(n,"boxes","nonMaxSuppressionAsync"),a=V(e,"scores","nonMaxSuppressionAsync"),o=ud(i,a,t,s,r);t=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),c=l[0],d=l[1],{selectedIndices:p}=$b(c,d,t,s,r);return i!==n&&i.dispose(),a!==e&&a.dispose(),Pn(p,"int32")}const bW=xW;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wW(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=V(n,"boxes","nonMaxSuppression"),o=V(e,"scores","nonMaxSuppression"),l=ud(a,o,t,s,r,i);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const c={boxes:a,scores:o},d={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:i},p=te.runKernel(zx,c,d);return{selectedIndices:p[0],selectedScores:p[1]}}const vW=J({nonMaxSuppressionWithScore_:wW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function SW(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=V(n,"boxes","nonMaxSuppressionAsync"),o=V(e,"scores","nonMaxSuppressionAsync"),l=ud(a,o,t,s,r,i);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const c=await Promise.all([a.data(),o.data()]),d=c[0],p=c[1],{selectedIndices:m,selectedScores:g}=kb(d,p,t,s,r,i);return a!==n&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:Pn(m,"int32"),selectedScores:Pn(g)}}const CW=SW;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $W(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=V(n,"boxes","nonMaxSuppression"),o=V(e,"scores","nonMaxSuppression"),l=ud(a,o,t,s,r,null),c=l.maxOutputSize,d=l.iouThreshold,p=l.scoreThreshold,m={boxes:a,scores:o},g={maxOutputSize:c,iouThreshold:d,scoreThreshold:p,padToMaxOutputSize:i},x=te.runKernel(g2,m,g);return{selectedIndices:x[0],validOutputs:x[1]}}const kW=J({nonMaxSuppressionPadded_:$W});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function NW(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=V(n,"boxes","nonMaxSuppressionAsync"),o=V(e,"scores","nonMaxSuppressionAsync"),l=ud(a,o,t,s,r,null),c=l.maxOutputSize,d=l.iouThreshold,p=l.scoreThreshold,[m,g]=await Promise.all([a.data(),o.data()]),{selectedIndices:x,validOutputs:b}=uS(m,g,c,d,p,i);return a!==n&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:Pn(x,"int32"),validOutputs:Ze(b,"int32")}}const IW=NW;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TW(n,e,t=!1,s=!1){const r=V(n,"images","resizeBilinear");B(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),B(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),B(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=r,a=!1;r.rank===3&&(a=!0,i=re(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const o={images:i},l={alignCorners:t,halfPixelCenters:s,size:e},c=te.runKernel(tm,o,l);return a?re(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const GR=J({resizeBilinear_:TW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(n,e,t=!1,s=!1){const r=V(n,"images","resizeNearestNeighbor");B(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),B(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),B(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),B(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=r,a=!1;r.rank===3&&(a=!0,i=re(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const o={images:i},l={alignCorners:t,halfPixelCenters:s,size:e},c=te.runKernel(em,o,l);return a?re(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const HR=J({resizeNearestNeighbor_:EW});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RW(n,e="binary",t=!1,s=.5){const r=V(n,"image","threshold"),i=.2989,a=.587,o=.114,l=r.shape[0]*r.shape[1];let c=Q(Pn([s]),255),d,p,m,g;if(B(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),B(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),B(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),B(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[d,p,m]=kr(r,[1,1,1],-1);const w=Q(d,i),v=Q(p,a),$=Q(m,o);g=Ce(Ce(w,v),$)}else g=n;if(e==="otsu"){const w=eR(De(X2(g),"int32"),Pi([]),256);c=AW(w,l)}const x=t?Au(g,c):Ar(g,c);return De(Q(x,255),"int32")}function AW(n,e){let t=Pn([-1]),s=Pn([0]),r=Pn([0]),i,a,o,l,c,d;for(let p=0;p<n.size-1;p++){i=ct(n,0,p+1),a=ct(n,p+1),c=Be(qe(i),e),d=Be(qe(a),e);const m=qe(Q(i,Zc(0,i.size)));o=Be(m,qe(i));const g=ad(a.shape,i.size),x=Ce(Zc(0,a.size),g),b=Q(a,x);l=Be(qe(b),qe(a));const w=Ve(o,l),v=Ve(o,l),$=Q(c,d);r=Q(Q($,w),v);const I=Ar(r,s);s=Rs(I,r,s),t=Rs(I,Pn([p]),t)}return t}const DW=J({threshold_:RW});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _W(n,e,t="nearest",s="constant",r=0,i){const a=V(n,"image","transform","float32"),o=V(e,"transforms","transform","float32");B(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),B(o.rank===2&&(o.shape[0]===a.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),B(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const l={image:a,transforms:o},c={interpolation:t,fillMode:s,fillValue:r,outputShape:i};return te.runKernel(Zx,l,c)}const OW=J({transform_:_W});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FW(n,e,t){const s=V(n,"a","bandPart");B(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[i,a]=s.shape.slice(-2);let o,l;typeof e=="number"?(B(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),B(e<=i,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`),o=V(e<0?i:e,"numLower","bandPart")):(B(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=Rs(Kp(e,0),i,Qo(e,i))),typeof t=="number"?(B(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),B(t<=a,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`),l=V(t<0?a:t,"numUpper","bandPart")):(B(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=Rs(Kp(t,0),a,Qo(t,a)));const c=re(Zc(0,i,1,"int32"),[-1,1]),d=Zc(0,a,1,"int32"),p=Ve(c,d),m=ma(Au(p,o),ll(p,hn(l))),g=Rn([i,a],s.dtype);return re(Nr(Si(re(s,[-1,i,a])).map(x=>Rs(m,x,g))),r)}const zW=J({bandPart_:FW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LW(n){let e;if(Array.isArray(n)){e=!1,B(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let i=1;i<n.length;++i)B(n[i].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[i].shape[0]} vs. ${r})`)}else e=!0,n=kr(n,n.shape[0],0).map(r=>Bt(r,[0]));B(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(te.tidy(()=>{let i=s[r];if(r>0)for(let a=0;a<r;++a){const o=Q(qe(Q(t[a],i)),t[a]);i=Ve(i,o)}return Be(i,gm(i,"euclidean"))}));return e?Nr(t,0):t}const PW=J({gramSchmidt_:LW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MW(n,e=!1){if(B(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return WN(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((l,c)=>l*c),s=Si(re(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],i=[];s.forEach(l=>{const[c,d]=WN(l,e);r.push(c),i.push(d)});const a=re(Nr(r,0),n.shape),o=re(Nr(i,0),n.shape);return[a,o]}}function WN(n,e=!1){return te.tidy(()=>{B(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=M2(t),i=Qa(n);const a=bi([[1]],[1,1]);let o=Qa(a);const l=t>=s?s:t;for(let c=0;c<l;++c){const d=i,p=o,m=r;[o,i,r]=te.tidy(()=>{const g=ct(i,[c,c],[t-c,1]),x=gm(g),b=ct(i,[c,c],[1,1]),w=Rs(Ar(b,0),bi([[-1]]),bi([[1]])),v=Ve(b,Q(w,x)),$=Be(g,v);$.shape[0]===1?o=Qa(a):o=yn([a,ct($,[1,0],[$.shape[0]-1,$.shape[1]])],0);const I=hn(Be(Ct(w,v),x)),N=ct(i,[c,0],[t-c,s]),E=Q(I,o),_=At(o);if(c===0)i=Ve(N,Ct(E,Ct(_,N)));else{const O=Ve(N,Ct(E,Ct(_,N)));i=yn([ct(i,[0,0],[c,s]),O],0)}const z=At(E),P=ct(r,[0,c],[t,r.shape[1]-c]);if(c===0)r=Ve(P,Ct(Ct(P,o),z));else{const O=Ve(P,Ct(Ct(P,o),z));r=yn([ct(r,[0,0],[t,c]),O],1)}return[o,i,r]}),rt([d,p,m])}return!e&&t>s&&(r=ct(r,[0,0],[t,s]),i=ct(i,[0,0],[s,s])),[r,i]})}const BW=J({qr_:MW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var lr;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(lr||(lr={}));function VW(n,e,t=lr.SUM_BY_NONZERO_WEIGHTS){const s=V(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=V(e,"weights","computeWeightedLoss"));const i=r==null?s:Q(s,r);if(t===lr.NONE)return i;if(t===lr.SUM)return qe(i);if(t===lr.MEAN){if(r==null)return vn(i);{const a=s.size/r.size,o=Be(qe(i),qe(r));return a>1?Be(o,Ze(a)):o}}if(t===lr.SUM_BY_NONZERO_WEIGHTS){if(r==null)return Be(qe(i),Ze(s.size));{const a=Q(r,$r(s.shape)),o=De(qe(Qc(a,Ze(0))),"float32");return Be(qe(i),o)}}throw Error(`Unknown reduction: ${t}`)}const ro=J({computeWeightedLoss_:VW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UW(n,e,t,s=lr.SUM_BY_NONZERO_WEIGHTS){const r=V(n,"labels","absoluteDifference"),i=V(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=V(t,"weights","absoluteDifference")),fr(r.shape,i.shape,"Error in absoluteDifference: ");const o=Gn(Ve(r,i));return ro(o,a,s)}const WW=J({absoluteDifference_:UW});function GW(n,e,t,s,r=lr.SUM_BY_NONZERO_WEIGHTS){const i=V(n,"labels","cosineDistance"),a=V(e,"predictions","cosineDistance");let o=null;s!=null&&(o=V(s,"weights","cosineDistance")),fr(i.shape,a.shape,"Error in cosineDistance: ");const l=Ze(1),c=Ve(l,qe(Q(i,a),t,!0));return ro(c,o,r)}const HW=J({cosineDistance_:GW});function jW(n,e,t,s=lr.SUM_BY_NONZERO_WEIGHTS){let r=V(n,"labels","hingeLoss");const i=V(e,"predictions","hingeLoss");let a=null;t!=null&&(a=V(t,"weights","hingeLoss")),fr(r.shape,i.shape,"Error in hingeLoss: ");const o=Ze(1);r=Ve(Q(Ze(2),r),o);const l=va(Ve(o,Q(r,i)));return ro(l,a,s)}const qW=J({hingeLoss_:jW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(n,e,t,s=1,r=lr.SUM_BY_NONZERO_WEIGHTS){const i=V(n,"labels","huberLoss"),a=V(e,"predictions","huberLoss");let o=null;t!=null&&(o=V(t,"weights","huberLoss")),fr(i.shape,a.shape,"Error in huberLoss: ");const l=Ze(s),c=Gn(Ve(a,i)),d=Qo(c,l),p=Ve(c,d),m=Ce(Q(Ze(.5),Kt(d)),Q(l,p));return ro(m,o,r)}const KW=J({huberLoss_:XW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YW(n,e,t,s=1e-7,r=lr.SUM_BY_NONZERO_WEIGHTS){const i=V(n,"labels","logLoss"),a=V(e,"predictions","logLoss");let o=null;t!=null&&(o=V(t,"weights","logLoss")),fr(i.shape,a.shape,"Error in logLoss: ");const l=Ze(1),c=Ze(s),d=hn(Q(i,Ur(Ce(a,c)))),p=Q(Ve(l,i),Ur(Ce(Ve(l,a),c))),m=Ve(d,p);return ro(m,o,r)}const QW=J({logLoss_:YW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZW(n,e,t,s=lr.SUM_BY_NONZERO_WEIGHTS){const r=V(n,"labels","meanSquaredError"),i=V(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=V(t,"weights","meanSquaredError")),fr(r.shape,i.shape,"Error in meanSquaredError: ");const o=nS(r,i);return ro(o,a,s)}const JW=J({meanSquaredError_:ZW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eG(n,e){const t=V(n,"labels","sigmoidCrossEntropyWithLogits"),s=V(e,"logits","sigmoidCrossEntropyWithLogits");fr(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=va(s),i=Q(s,t),a=ob(qs(hn(Gn(s))));return Ce(Ve(r,i),a)}function tG(n,e,t,s=0,r=lr.SUM_BY_NONZERO_WEIGHTS){let i=V(n,"multiClassLabels","sigmoidCrossEntropy");const a=V(e,"logits","sigmoidCrossEntropy");let o=null;if(t!=null&&(o=V(t,"weights","sigmoidCrossEntropy")),fr(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const c=Ze(s),d=Ze(1),p=Ze(.5);i=Ce(Q(i,Ve(d,c)),Q(p,c))}const l=eG(i,a);return ro(l,o,r)}const nG=J({sigmoidCrossEntropy_:tG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sG(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return no((r,i,a)=>{const l=lb(i,[t],!0),c=Ve(De(i,"float32"),l);a([r,c]);const d=hn(Q(c,r));return{value:qe(d,[t]),gradFunc:(g,x)=>{const[b,w]=x,v=$n(g.shape,[t]);return[Q(re(g,v),Ve(De(b,"float32"),qs(w))),Q(re(g,v),Ve(qs(w),De(b,"float32")))]}}})(n,e)}function rG(n,e,t,s=0,r=lr.SUM_BY_NONZERO_WEIGHTS){let i=V(n,"onehotLabels","softmaxCrossEntropy");const a=V(e,"logits","softmaxCrossEntropy");let o=null;if(t!=null&&(o=V(t,"weights","softmaxCrossEntropy")),fr(i.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const c=Ze(s),d=Ze(1),p=Ze(i.shape[1]);i=Ce(Q(i,Ve(d,c)),Be(c,p))}const l=sG(i,a);return ro(l,o,r)}const iG=J({softmaxCrossEntropy_:rG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aG(n,e,t,s){const r=V(n,"indices","sparseFillEmptyRows","int32"),i=V(e,"values","sparseFillEmptyRows"),a=V(t,"denseShape","sparseFillEmptyRows","int32"),o=V(s,"defaultValue","sparseFillEmptyRows",i.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(i.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:r,values:i,denseShape:a,defaultValue:o},c=te.runKernel(w2,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const oG=J({sparseFillEmptyRows_:aG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lG(n,e,t){const s=V(n,"inputIndices","sparseReshape","int32"),r=V(e,"inputShape","sparseReshape","int32"),i=V(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(i.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const a={inputIndices:s,inputShape:r,newShape:i},o=te.runKernel(v2,a);return{outputIndices:o[0],outputShape:o[1]}}const uG=J({sparseReshape_:lG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cG(n,e,t){const s=V(n,"data","sparseSegmentMean"),r=V(e,"indices","sparseSegmentMean","int32"),i=V(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${i.shape}`);const a={data:s,indices:r,segmentIds:i};return te.runKernel(Gx,a)}const hG=J({sparseSegmentMean_:cG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dG(n,e,t){const s=V(n,"data","sparseSegmentSum"),r=V(e,"indices","sparseSegmentSum","int32"),i=V(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${i.shape}`);const a={data:s,indices:r,segmentIds:i};return te.runKernel(Hx,a)}const pG=J({sparseSegmentSum_:dG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fG(n,e,t,s,r,i,a,o){const l=V(n,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const c=V(e,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const d={separator:t,nGramWidths:s,leftPad:r,rightPad:i,padWidth:a,preserveShortSequences:o},p={data:l,dataSplits:c},m=te.runKernel(Yx,p,d);return{nGrams:m[0],nGramsSplits:m[1]}}const mG=J({stringNGrams_:fG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gG(n,e,t=!0){const s=V(n,"input","stringSplit","string"),r=V(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const i={skipEmpty:t},a={input:s,delimiter:r},o=te.runKernel(S2,a,i);return{indices:o[0],values:o[1],shape:o[2]}}const yG=J({stringSplit_:gG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xG(n,e){const t=V(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return te.runKernel(C2,r,s)}const bG=J({stringToHashBucketFast_:xG});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wG(n,e,t,s=!0){const r=V(n,"input","staticRegexReplace","string"),i={pattern:e,rewrite:t,replaceGlobal:s};return te.runKernel(Xx,{x:r},i)}const vG=J({staticRegexReplace_:wG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SG={fft:xb,ifft:Zp,rfft:bb,irfft:tS},CG={hammingWindow:KU,hannWindow:UR,frame:WR,stft:JU},js={flipLeftRight:sW,grayscaleToRGB:iW,resizeNearestNeighbor:HR,resizeBilinear:GR,rgbToGrayscale:oW,rotateWithOffset:uW,cropAndResize:tW,nonMaxSuppression:hW,nonMaxSuppressionAsync:bW,nonMaxSuppressionWithScore:vW,nonMaxSuppressionWithScoreAsync:CW,nonMaxSuppressionPadded:kW,nonMaxSuppressionPaddedAsync:IW,threshold:DW,transform:OW},jR={bandPart:zW,gramSchmidt:PW,qr:BW},$G={absoluteDifference:WW,computeWeightedLoss:ro,cosineDistance:HW,hingeLoss:qW,huberLoss:KW,logLoss:QW,meanSquaredError:JW,sigmoidCrossEntropy:nG,softmaxCrossEntropy:iG},kG={sparseFillEmptyRows:oG,sparseReshape:uG,sparseSegmentMean:hG,sparseSegmentSum:pG},NG={stringNGrams:mG,stringSplit:yG,stringToHashBucketFast:bG,staticRegexReplace:vG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IG=new Map,TG=new Map;class cd{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class pi{constructor(){this.classNameMap={}}static getMap(){return pi.instance==null&&(pi.instance=new pi),pi.instance}static register(e){pi.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Te(n,e,t){B(n.className!=null,()=>"Class being registered does not have the static className property defined."),B(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),B(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,r=e+">"+s;return pi.register(n),IG.set(r,n),TG.set(n,r),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ul extends cd{minimize(e,t=!1,s){const{value:r,grads:i}=this.computeGradients(e,s);if(s!=null){const a=s.map(o=>({name:o.name,tensor:i[o.name]}));this.applyGradients(a)}else this.applyGradients(i);return rt(i),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return ZB(e,t)}dispose(){this.iterations_!=null&&rt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ze(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ul,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qR extends ul{static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=te.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=te.registeredVariables[s],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:ce(()=>Dt(i).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:ce(()=>Dt(i).variable(a))});const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const l=this.accumulatedGrads[r].variable,c=this.accumulatedUpdates[r].variable;ce(()=>{const d=Ce(Q(l,this.rho),Q(Kt(o),1-this.rho)),p=Q(Be(Ss(Ce(c,this.epsilon)),Ss(Ce(l,this.epsilon))),o),m=Ce(Q(c,this.rho),Q(Kt(p),1-this.rho));l.assign(d),c.assign(m);const g=Ce(Q(p,-this.learningRate),i);i.assign(g)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(rt(this.accumulatedGrads.map(e=>e.variable)),rt(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XR extends ul{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=te.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:ce(()=>ad(i.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const o=this.accumulatedGrads[r].variable;ce(()=>{const l=Ce(o,Kt(a));o.assign(l);const c=Ce(Q(Be(a,Ss(Ce(l,te.backend.epsilon()))),-this.learningRate),i);i.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&rt(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KR extends ul{static get className(){return"Adam"}constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ce(()=>{this.accBeta1=Ze(t).variable(),this.accBeta2=Ze(s).variable()}),r==null&&(this.epsilon=te.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);ce(()=>{const s=Ve(1,this.accBeta1),r=Ve(1,this.accBeta2);t.forEach((i,a)=>{const o=te.registeredVariables[i],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${i}/m`,variable:ce(()=>Dt(o).variable(l))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${i}/v`,variable:ce(()=>Dt(o).variable(l))});const c=Array.isArray(e)?e[a].tensor:e[i];if(c==null)return;const d=this.accumulatedFirstMoment[a].variable,p=this.accumulatedSecondMoment[a].variable,m=Ce(Q(d,this.beta1),Q(c,1-this.beta1)),g=Ce(Q(p,this.beta2),Q(Kt(c),1-this.beta2)),x=Be(m,s),b=Be(g,r);d.assign(m),p.assign(g);const w=Ce(Q(Be(x,Ce(Ss(b),this.epsilon)),-this.learningRate),o);o.assign(w)}),this.accBeta1.assign(Q(this.accBeta1,this.beta1)),this.accBeta2.assign(Q(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&rt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&rt(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),ce(()=>{this.accBeta1.assign(to(this.beta1,this.iterations_+1)),this.accBeta2.assign(to(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YR extends ul{static get className(){return"Adamax"}constructor(e,t,s,r=null,i=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ce(()=>{this.iteration=Ze(0).variable(),this.accBeta1=Ze(t).variable()}),r==null&&(this.epsilon=te.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);ce(()=>{const s=Ve(1,this.accBeta1),r=Be(-this.learningRate,Ce(Q(this.iteration,this.decay),1));t.forEach((i,a)=>{const o=te.registeredVariables[i],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${i}/m`,variable:Dt(o).variable(l)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${i}/v`,variable:Dt(o).variable(l)});const c=Array.isArray(e)?e[a].tensor:e[i];if(c==null)return;const d=this.accumulatedFirstMoment[a].variable,p=this.accumulatedWeightedInfNorm[a].variable,m=Ce(Q(d,this.beta1),Q(c,1-this.beta1)),g=Q(p,this.beta2),x=Gn(c),b=so(g,x);d.assign(m),p.assign(b);const w=Ce(Q(Be(r,s),Be(m,Ce(b,this.epsilon))),o);o.assign(w)}),this.iteration.assign(Ce(this.iteration,1)),this.accBeta1.assign(Q(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&rt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&rt(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hS extends ul{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const a=te.registeredVariables[s];ce(()=>{const o=Ce(Q(this.c,i),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=us(Ze(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QR extends hS{static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=Ze(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=te.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:ce(()=>Dt(i).variable(!1))});const a=this.accumulations[r].variable,o=Array.isArray(e)?e[r].tensor:e[s];o!=null&&ce(()=>{let l;const c=Ce(Q(this.m,a),o);this.useNesterov?l=Ce(Q(this.c,Ce(o,Q(c,this.m))),i):l=Ce(Q(this.c,c),i),a.assign(c),i.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&rt(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZR extends ul{static get className(){return"RMSProp"}constructor(e,t=.9,s=0,r=null,i=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,r==null&&(this.epsilon=te.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=te.registeredVariables[s],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:ce(()=>Dt(i).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:ce(()=>Dt(i).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:ce(()=>Dt(i).variable(a))});const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const l=this.accumulatedMeanSquares[r].variable,c=this.accumulatedMoments[r].variable;ce(()=>{const d=Ce(Q(l,this.decay),Q(Kt(o),1-this.decay));if(this.centered){const p=this.accumulatedMeanGrads[r].variable,m=Ce(Q(p,this.decay),Q(o,1-this.decay)),g=Be(Q(o,this.learningRate),Ss(Ve(d,Ce(Kt(m),this.epsilon)))),x=Ce(Q(c,this.momentum),g);l.assign(d),p.assign(m),c.assign(x);const b=Ve(i,x);i.assign(b)}else{const p=Ce(Q(l,this.decay),Q(Kt(o),1-this.decay)),m=Ce(Q(c,this.momentum),Be(Q(o,this.learningRate),Ss(Ce(p,this.epsilon))));l.assign(p),c.assign(m);const g=Ve(i,m);i.assign(g)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&rt(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&rt(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&rt(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EG=[qR,XR,KR,YR,QR,ZR,hS];function RG(){for(const n of EG)Te(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AG="model",DG=".json",_G=".weights.bin";function GN(n){return new Promise(e=>setTimeout(e)).then(n)}class Su{constructor(e){if(!pe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Su.URL_SCHEME)&&(e=e.slice(Su.URL_SCHEME.length)),(e==null||e.length===0)&&(e=AG),this.modelJsonFileName=e+DG,this.weightDataFileName=e+_G}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Xi.join(e.weightData),s=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],i=AE(e,r),a=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=a,await GN(()=>o.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=s,await GN(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:dm(e)}}}}Su.URL_SCHEME="downloads://";class OG{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const s=new FileReader;s.onload=r=>{const i=JSON.parse(r.target.result),a=i.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(i.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const l=T2(i,c=>this.loadWeights(c));e(l)},s.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const t=[],s=[];for(const a of e)t.push(...a.weights),s.push(...a.paths);const r=this.checkManifestAndWeightFiles(e),i=s.map(a=>this.loadWeightsFile(a,r[a]));return Promise.all(i).then(a=>[t,a])}loadWeightsFile(e,t){return new Promise((s,r)=>{const i=new FileReader;i.onload=a=>{const o=a.target.result;s(o)},i.onerror=a=>r(`Failed to weights data from file of path '${e}'.`),i.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],s=this.weightsFiles.map(i=>_N(i.name)),r={};for(const i of e)i.paths.forEach(a=>{const o=_N(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),s.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);r[a]=this.weightsFiles[s.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const FG=n=>pe().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Su.URL_SCHEME)?zG(n.slice(Su.URL_SCHEME.length)):null;mn.registerSaveRouter(FG);function zG(n="model"){return new Su(n)}function LG(n){return new OG(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HN(n,e,t,s){a(n),t=t??0,s=s??1,o(t,s);let r=0;const i=l=>(l.then(c=>{const d=t+ ++r/n.length*(s-t);return e(d),c}),l);function a(l){B(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,c){B(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),B(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),B(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(n.map(i))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function JR(n,e){e==null&&(e={});const t=e.fetchFunc==null?pe().platform.fetch:e.fetchFunc,s=n.map(p=>t(p,e.requestInit,{isBinary:!0})),o=(e.onProgress==null?await Promise.all(s):await HN(s,e.onProgress,0,.5)).map(p=>p.arrayBuffer());return e.onProgress==null?await Promise.all(o):await HN(o,e.onProgress,.5,1)}function PG(n,e){var t;const s=e.fetchFunc==null?pe().platform.fetch:e.fetchFunc;let r=0,i;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async a=>{for(var o;r<n.length;){i||(i=(await s(n[r],e.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:c}=await i.read();if(l){r++,i=void 0,(o=e.onProgress)===null||o===void 0||o.call(e,r/n.length);continue}a.enqueue(c);return}a.close()}})}async function MG(n,e="",t,s){return eA(a=>JR(a,{requestInit:s}))(n,e,t)}function eA(n){return async(e,t="",s)=>{const r=e.map(()=>!1),i={},a=s!=null?s.map(()=>!1):[],o=[];if(e.forEach((g,x)=>{let b=0;g.weights.forEach(w=>{const v="quantization"in w?w.quantization.dtype:w.dtype,$=mu[v]*ue(w.shape),I=()=>{r[x]=!0,i[x]==null&&(i[x]=[]),i[x].push({manifestEntry:w,groupOffset:b,sizeBytes:$})};s!=null?s.forEach((N,E)=>{N===w.name&&(I(),a[E]=!0)}):I(),o.push(w.name),b+=$})}),!a.every(g=>g)){const g=s.filter((x,b)=>!a[b]);throw new Error(`Could not find weights in manifest with names: ${g.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}const l=r.reduce((g,x,b)=>(x&&g.push(b),g),[]),c=[];l.forEach(g=>{e[g].paths.forEach(x=>{const b=t+(t.endsWith("/")?"":"/")+x;c.push(b)})});const d=await n(c),p={};let m=0;return l.forEach(g=>{const x=e[g].paths.length,b=new Xi(d.slice(m,m+x));i[g].forEach(v=>{const $=b.slice(v.groupOffset,v.groupOffset+v.sizeBytes),I=IE($,[v.manifestEntry]);for(const N in I)p[N]=I[N]}),m+=x}),p}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BG="application/octet-stream",VG="application/json";class dS{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(B(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=pe().platform.fetch,B(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&B(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=AE(e,s);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:VG}),"model.json"),e.weightData!=null){const a=Xi.join(e.weightData);t.body.append("model.weights.bin",new Blob([a],{type:BG}),"model.weights.bin")}const i=await this.fetch(this.path,t);if(i.ok)return{modelArtifactsInfo:dm(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const s=t.modelTopology,r=t.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return T2(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),s=xv(e.weightsManifest),r=()=>PG(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=UG(t),i=this.weightPathPrefix||s,a=[],o=[];for(const l of e)for(const c of l.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(c)):a.push(i+c+r);return this.weightUrlConverter&&a.push(...await Promise.all(o)),a}async loadWeights(e){const t=await this.getWeightUrls(e),s=xv(e),r=await JR(t,this.loadOptions);return[s,r]}}dS.URL_SCHEME_REGEX=/^https?:\/\//;function UG(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function kv(n){return n.match(dS.URL_SCHEME_REGEX)!=null}const tA=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>kv(s)):t=kv(n),t)return pS(n,e)}return null};mn.registerSaveRouter(tA);mn.registerLoadRouter(tA);function pS(n,e){return new dS(n,e)}function WG(n,e){return pS(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fw{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class nA{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class GG{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function HG(n,e,t,s){const r=arguments;return new GG(sA(...r))}function sA(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new Fw(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Fw({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Fw({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s}))}function jG(n){return new nA(n)}function qG(n){return new nA(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rA=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Xi,browserFiles:LG,browserHTTPRequest:WG,concatenateArrayBuffers:RE,copyModel:qP,decodeWeights:IE,decodeWeightsStream:EE,encodeWeights:yv,fromMemory:HG,fromMemorySync:sA,getLoadHandlers:_P,getModelArtifactsForJSON:T2,getModelArtifactsForJSONSync:DE,getModelArtifactsInfoForJSON:dm,getSaveHandlers:_E,getWeightSpecs:xv,http:pS,isHTTPScheme:kv,listModels:HP,loadWeights:MG,moveModel:XP,registerLoadRouter:DP,registerSaveRouter:AP,removeModel:jP,weightsLoaderFactory:eA,withSaveHandler:jG,withSaveHandlerSync:qG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Kl,jN=!1;function XG(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,r=!1,i=!1,a=!1,o=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)i=!0;else if(n.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(Iy(ky,te.backendName)!=null){const x={pixels:n},b={numChannels:e};return te.runKernel(ky,x,b)}const[c,d]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let p;if(a)p=n.getContext("2d").getImageData(0,0,c,d).data;else if(s||t)p=n.data;else if(i||r||o){if(Kl==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Kl=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Kl=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Kl.canvas.width=c,Kl.canvas.height=d,Kl.drawImage(n,0,0,c,d),p=Kl.getImageData(0,0,c,d).data}let m;if(e===4)m=new Int32Array(p);else{const x=c*d;m=new Int32Array(x*e);for(let b=0;b<x;b++)for(let w=0;w<e;++w)m[b*e+w]=p[b*4+w]}return AR(m,[d,c,e],"int32")}function KG(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}async function fS(n,e){let t=V(n,"img","toPixels");if(!(n instanceof Ht)){const c=t;t=De(c,"int32"),c.dispose()}KG(t);const[s,r]=t.shape.slice(0,2),i=t.rank===2?1:t.shape[2],a=await t.data(),o=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let c=0;c<s*r;++c){const d=[0,0,0,255];for(let m=0;m<i;m++){const g=a[c*i+m];if(t.dtype==="float32"){if(g<0||g>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${g}.`)}else if(t.dtype==="int32"&&(g<0||g>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${g}.`);i===1?(d[0]=g*o,d[1]=g*o,d[2]=g*o):d[m]=g*o}const p=c*4;l[p+0]=Math.round(d[0]),l[p+1]=Math.round(d[1]),l[p+2]=Math.round(d[2]),l[p+3]=Math.round(d[3])}if(e!=null){jN||Iy(m2,te.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),jN=!0),e.width=r,e.height=s;const c=e.getContext("2d"),d=new ImageData(l,r,s);c.putImageData(d,0,0)}return t!==n&&t.dispose(),l}const iA=J({fromPixels_:XG});function Nb(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(ue(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,i=r[r.length-1];let a=1;for(let p=0;p<r.length-1;++p)a*=r[p];const o=n.shape,l=r.slice();l.pop();let c=1;for(let p=i;p<t;++p)c*=o[p],l.push(o[p]);const d=[...Qe(n.shape).map(p=>p/c),1].slice(0,i);return[l,a,c,d]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nv=-2,YG=-1;function Ib(n,e,t){const s=n.shape.length;B(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),B(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)B(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function QG(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function Tb(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function aA(n,e,t,s){const r=[...n];for(let i=r.length;i<s.length;i++)r.push(1);for(let i=0;i<t;i++)i===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function oA(n,e,t){return t<=n?t:t-(e-1)}function lA(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function ZG(n,e,t,s,r,i,a,o,l){const c=n.length;let d=new Array(c),p=new Array(c),m=new Array(c);if(e.length&&t>0){const g=e[0],x=t+1;d=uA(a,g,x,s,n),p=cA(o,g,x,r,n),m=aA(i,g,x,n)}else for(let g=0;g<c;g++)d[g]=dA(a,s,i,n,g,l),p[g]=pA(o,r,i,n,g,l),m[g]=hA(i,g,l);return{begin:d,end:p,strides:m}}function uA(n,e,t,s,r){const i=[...r],a=lA(t,e);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=0;else{const l=oA(e,t,o);let c=s[l];n&1<<l&&(c=0),i[o]=c}return i}function cA(n,e,t,s,r){const i=[...r],a=lA(t,e);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=Number.MAX_SAFE_INTEGER;else{const l=oA(e,t,o);let c=s[l];n&1<<l&&(c=Number.MAX_SAFE_INTEGER),i[o]=c}for(let o=0;o<i.length;o++){const l=r[o];i[o]<0&&(i[o]+=l),i[o]=pu(0,i[o],r[o])}return i}function hA(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function dA(n,e,t,s,r,i){let a=e[r];const o=t[r]||1;(n&1<<r||i&1<<r||a==null)&&(o>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=pu(0,a,l-1),a}function pA(n,e,t,s,r,i){let a=e[r];const o=t[r]||1;(n&1<<r||i&1<<r||a==null)&&(o>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),o>0?a=pu(0,a,l):a=pu(-1,a,l-1),a}function mS(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function gS(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function bm(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(a=>{B(a!==-1,()=>"slice() does not support negative begin indexing.")});let i;return t==null?i=new Array(r).fill(-1):typeof t=="number"?i=[t,...new Array(r-1).fill(-1)]:t.length<r?i=t.concat(new Array(r-t.length).fill(-1)):i=t,i=i.map((a,o)=>a>=0?a:(B(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${o}.`),n.shape[o]-s[o])),[s,i]}function Eb(n,e,t,s,r,i,a,o,l){let c;if(s==null?(c=new Array(e.length),c.fill(1)):c=s,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1;const p={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:c.slice(),beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let I=0;I<p.dims;I++)d&&(1<<I&o)!==0&&p.numAddAxisAfterEllipsis++,1<<I&a&&(d=!0);d||(p.ellipsisMask|=1<<p.dims,p.dims++);const m={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};JG(p,m);let g=!0,x=!0,b=!0;const w=[],v=[];for(let I=0;I<n.length;++I){if(m.strides[I]===0)throw Error(`strides[${I}] must be non-zero`);const N=!!(m.shrinkAxisMask&1<<I),E=n[I];if(E===-1){w.push(N?1:-1);continue}const _=[m.beginMask&1<<I,m.endMask&1<<I],z=[m.strides[I]>0?0:-1,m.strides[I]>0?E:E-1];if(N&&m.strides[I]<=0)throw Error("only stride 1 allowed on non-range indexing.");b=b&&m.strides[I]===1;const P=!!(m.beginMask&1<<I&&m.endMask&1<<I);if(m.beginValid&&m.endValid){if(N){const G=m.begin[I]<0?E+m.begin[I]:m.begin[I];if(m.begin[I]=G,m.end[I]=m.begin[I]+1,G<0||G>=E)throw Error(`slice index ${m.begin[I]} of dimension ${I} out of bounds.`)}else m.begin[I]=qN(m.begin[I],0,m.strides[I],E,_,z),m.end[I]=qN(m.end[I],1,m.strides[I],E,_,z);const D=m.strides[I]===1&&m.begin[I]===0&&m.end[I]===E;g=g&&D,x=x&&(I===0&&m.strides[I]===1||D)}else g=g&&m.strides[I]===1&&P,x=x&&(I===0&&m.strides[I]===1||P);let O,L=!1;if(m.beginValid&&m.endValid?(O=m.end[I]-m.begin[I],L=!0):N?(O=1,L=!0):P&&E>=0&&(m.strides[I]<0?O=-E:O=E,L=!0),L){let D;O===0||O<0!=m.strides[I]<0?D=0:D=Math.trunc(O/m.strides[I])+(O%m.strides[I]!==0?1:0),w.push(D)}else w.push(-1)}for(let I=0;I<m.finalShapeGatherIndices.length;++I){const N=m.finalShapeGatherIndices[I];N>=0?v.push(w[N]):N===Nv&&v.push(1)}return{finalShapeSparse:v.filter((I,N)=>m.finalShapeGatherIndices[N]!==Nv),finalShape:v,isIdentity:g,sliceDim0:x,isSimpleSlice:b,begin:m.begin,end:m.end,strides:m.strides}}function JG(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<r;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(Nv),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(YG),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function qN(n,e,t,s,r,i){if(r[e])return t>0?i[e]:i[e+1&1];{const a=n<0?s+n:n;return a<i[0]?i[0]:a>i[1]?i[1]:a}}const eH=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Ib,computeFlatOffset:gS,computeOutShape:Tb,getNormalizedAxes:ZG,isSliceContinous:mS,maskToAxes:QG,parseSliceParams:bm,sliceInfo:Eb,startForAxis:dA,startIndicesWithElidedDims:uA,stopForAxis:pA,stopIndicesWithElidedDims:cA,stridesForAxis:hA,stridesWithElidedDims:aA},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tH{static sgd(e){return new hS(e)}static momentum(e,t,s=!1){return new QR(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,i=!1){return new ZR(e,t,s,r,i)}static adam(e=.001,t=.9,s=.999,r=null){return new KR(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new qR(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,i=0){return new YR(e,t,s,r,i)}static adagrad(e,t=.1){return new XR(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dc=tH;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nH=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function fA(){return new Promise(n=>nH(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rb(n,e){const t=n[0].length;n.forEach((r,i)=>{B(r.length===t,()=>`Error in concat${t}D: rank of tensors[${i}] must be the same as the rank of the rest (${t})`)}),B(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,i)=>{for(let a=0;a<t;a++)B(a===e||r[a]===s[a],()=>`Error in concat${t}D: Shape of tensors[${i}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${i}.`)})}function ur(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Li;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Li||(Li={}));function mA(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let r=1;r<t.length;++r){const i=t[r],a=s[s.length-t.length+r],o=s[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+n}] = ${i} but shape[${r+n}] = ${o}`)}else s[a]=i}return s}function gA(n){const e={FIRST_DIM_SIZE:Li.FIRST_DIM_SIZE,VALUE_ROWIDS:Li.VALUE_ROWIDS,ROW_LENGTHS:Li.ROW_LENGTHS,ROW_SPLITS:Li.ROW_SPLITS,ROW_LIMITS:Li.ROW_LIMITS,ROW_STARTS:Li.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function yA(n){return n.length===0?0:n[0]===Li.FIRST_DIM_SIZE?n.length-1:n.length}function xA(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(t,s-1);++r){const i=n[r],a=e[r+1];if(i>=0&&a>=0&&i!==1&&i!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-n.length}] = ${i} but ragged tensor input.flatValues.shape[${r-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yS=30;function Ab(n){return n<=yS?n:cv(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Db(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _u(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const i=e.length;for(let a=0;a<i;++a)r=r.concat([n[a+1]/e[a],e[a]]);r=r.concat(n.slice(i+1))}return r}function Ou(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],i=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?i.push(a):r.push(a);s.push(...r),s.push(0),s.push(...i)}return s}function Fu(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let i=1;i<n.length;++i)i<=e.length?s?r.push(e[i-1]*n[i]):r.push(n[i]/e[i-1]):r.push(n[i]);return r}function _b(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function Ob(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wm=1.7580993408473768,vm=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fb=.3275911,zb=.254829592,Lb=-.284496736,Pb=1.421413741,Mb=-1.453152027,Bb=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wi(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function bA(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function wA(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function vA(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function xS(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function SA(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function CA(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const i=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(i),s[r]=Math.sin(i)}return{real:t,imag:s}}function $A(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),i=Math.sin(s);return{real:r,imag:i}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zw="->",sH=/->/g,XN=",",KN="...";function Vb(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(sH,"").length)/zw.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${zw}").`);const[s,r]=n.split(zw);B(s.indexOf(KN)===-1,()=>`The ellipsis notation ("${KN}") is not supported yet.`);const i=s.split(XN),a=i.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let m=0;m<r.length;++m){const g=r[m];if(!i.some(x=>x.indexOf(g)!==-1))throw new Error(`Output subscripts contain the label ${g} not present in the input subscripts.`);o.indexOf(g)===-1&&o.push(g)}for(let m=0;m<s.length;++m){const g=s[m];o.indexOf(g)===-1&&g!==XN&&o.push(g)}const l=new Array(i.length);for(let m=0;m<a;++m){if(new Set(i[m].split("")).size!==i[m].length)throw new Error(`Found duplicate axes in input component ${i[m]}. Support for duplicate axes in input is not implemented yet.`);l[m]=[];for(let g=0;g<i[m].length;++g)l[m].push(o.indexOf(i[m][g]))}const c=o.length,d=r.length,p=[];for(let m=d;m<c;++m)p.push(m);return{allDims:o,summedDims:p,idDims:l}}function Ub(n,e){let t=new Array(n);t.fill(-1);for(let r=0;r<e.length;++r)t[e[r]]=r;const s=[];for(let r=0;r<n;++r)t[r]===-1&&s.push(r);return t=t.filter(r=>r!==-1),{permutationIndices:t,expandDims:s}}function Wb(n,e,t){const s=new Array(n);for(let r=0;r<t.length;++r){const i=t[r].shape;for(let a=0;a<e[r].length;++a)s[e[r][a]]===void 0?s[e[r][a]]=i[a]:B(s[e[r][a]]===i[a],()=>`Expected dimension ${s[e[r][a]]} at axis ${a} of input shaped ${JSON.stringify(i)}, but got dimension ${i[a]}`)}}function Gb(n,e){const t=n,s=[];let r=0;n.length===0&&t.push(-1),r=n.length+1;for(let a=0;a<r;++a)s.push([]);const i=[];for(let a=0;a<t.length;++a){const o=t[a],l=rH(e,o);for(const c of l)i.indexOf(c)===-1&&(s[a].push(c),i.push(c))}return{path:t,steps:s}}function Hb(n){return n.every((e,t)=>e===t)}function rH(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function jb(n,e,t=0){let s=[];if(typeof e=="number")B(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((a,o)=>(o===-1&&(a+=1),a),0);B(r<=1,()=>"There should be only one negative value in split array.");const i=e.indexOf(-1);if(i!==-1){const a=e.reduce((o,l)=>l>0?o+l:o);e[i]=n.shape[t]-a}B(n.shape[t]===e.reduce((a,o)=>a+o),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kA(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function NA(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function IA(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TA(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function EA(n,e){return`size ${n} must be non-negative, not ${e}`}function RA(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function AA(n,e){const t=ue(n),s=ue(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function DA(n,e){const t=ue(n),s=ue(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iv(){return"segment ids must be >= 0"}function _A(){return"segment ids are not increasing"}function OA(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function FA(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zA(n,e){let t=!1,s;for(n<=yS?(s=n,t=!0):s=cv(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=cv(n,s+1);return s}function bS(n,e,t){const s=[],r=n.length;for(let i=0;i<r;i++)i!==e?s.push(n[i]):s.push(t);return s}function qb(n,e,t,s){const r=e.shape.length,i=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${i}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let p=0;p<s;++p)if(n.shape[p]!==e.shape[p])throw new Error(`x.shape[${p}]: ${n.shape[p]} should be equal to indices.shape[${p}]: ${e.shape[p]}.`);const a=n.shape[t],o=[];let l=1,c=1,d=1;for(let p=0;p<s;++p)o.push(n.shape[p]),l*=n.shape[p];for(let p=s;p<t;p++)o.push(n.shape[p]),c*=n.shape[p];for(let p=s;p<r;p++)o.push(e.shape[p]);for(let p=t+1;p<i;p++)o.push(n.shape[p]),d*=n.shape[p];return{batchSize:l,sliceSize:d,outerSize:c,dimSize:a,outputShape:o}}const iH=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:qb,computeOutShape:bS,segOpComputeOptimalWindowSize:zA},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gi(n){try{return n.map(e=>Bi(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function LA(n){return n.map(e=>Ya(e))}const aH=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:zb,ERF_A2:Lb,ERF_A3:Pb,ERF_A4:Mb,ERF_A5:Bb,ERF_P:Fb,PARALLELIZE_THRESHOLD:yS,get RowPartitionType(){return Li},SELU_SCALE:vm,SELU_SCALEALPHA:wm,applyActivation:Sb,assertAndGetBroadcastShape:it,assertAxesAreInnerMostDims:Mn,assertParamsConsistent:Rb,assignToTypedArray:SA,axesAreInnerMostDims:P2,calculateShapes:Sa,checkEinsumDimSizes:Wb,checkPadOnDimRoundingMode:Ks,combineLocations:pR,combineRaggedTensorToTensorShapes:mA,complexWithEvenIndex:wA,complexWithOddIndex:vA,computeConv2DInfo:on,computeConv3DInfo:Ki,computeDefaultPad:A2,computeDilation2DInfo:ol,computeOptimalWindowSize:Ab,computeOutAndReduceShapes:Dn,computeOutShape:ur,computePool2DInfo:As,computePool3DInfo:Hr,convertConv2DDataFormat:Rr,decodeEinsumEquation:Vb,eitherStridesOrDilationsAreOne:Zn,expandShapeToKeepDim:$n,exponent:$A,exponents:CA,fromStringArrayToUint8:LA,fromUint8ToStringArray:Gi,getAxesPermutation:Qt,getBroadcastDims:Yo,getComplexWithIndex:xS,getEinsumComputePath:Gb,getEinsumPermutation:Ub,getFusedBiasGradient:vb,getFusedDyActivation:wb,getImageCenter:Db,getInnerMostAxes:ln,getPermuted:Ou,getRaggedRank:yA,getReductionAxes:Qn,getReshaped:_u,getReshapedPermuted:Fu,getRowPartitionTypesHelper:gA,getSliceBeginCoords:_b,getSliceSize:Ob,getSparseFillEmptyRowsIndicesDenseShapeMismatch:kA,getSparseFillEmptyRowsNegativeIndexErrorMessage:NA,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:IA,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:RA,getSparseReshapeInputOutputMismatchErrorMessage:DA,getSparseReshapeInputOutputMultipleErrorMessage:AA,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:TA,getSparseReshapeNegativeOutputDimErrorMessage:EA,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:FA,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Iv,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:_A,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:OA,getUndoAxesPermutation:wa,isIdentityPermutation:Hb,log:qL,mergeRealAndImagArrays:Wi,prepareAndValidate:Nb,prepareSplitSize:jb,segment_util:iH,shouldFuse:Cb,slice_util:eH,splitRealAndImagArrays:bA,stridesOrDilationsArePositive:wu,tupleValuesAreOne:Xo,upcastType:hs,validateDefaultValueShape:xA,validateInput:sS,validateUpdateShape:DR,warn:Mr},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */RG();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PA={kernelName:hf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Q(n,ld(De(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oH={kernelName:hh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Kt(De(t,"float32")),r=Ss(Ve(Ze(1),s));return hn(Be(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lH={kernelName:dh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Ss(Ve(Kt(De(t,"float32")),1));return Be(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uH={kernelName:Eu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=it(t.shape,s.shape);return{a:()=>{let o=n;const l=Qn(t.shape,r);return l.length>0&&(o=qe(o,l)),re(o,t.shape)},b:()=>{let o=n;const l=Qn(s.shape,r);return l.length>0&&(o=qe(o,l)),re(o,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cH={kernelName:df,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,r)=>{t[r]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hH={kernelName:pf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Dt(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dH={kernelName:ff,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Dt(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pH={kernelName:ph,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Be(n,Ss(Ve(Ze(1),Kt(De(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fH={kernelName:fh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Ss(Ce(Ze(1),Kt(De(t,"float32"))));return Be(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mH={kernelName:yh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=it(t.shape,s.shape);return{a:()=>{const o=Ce(Kt(t),Kt(s));let l=Q(n,Be(s,o));const c=Qn(t.shape,r);return c.length>0&&(l=qe(l,c)),re(l,t.shape)},b:()=>{const o=Ce(Kt(t),Kt(s));let l=hn(Q(n,Be(t,o)));const c=Qn(s.shape,r);return c.length>0&&(l=qe(l,c)),re(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gH={kernelName:mh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Be(n,Ce(Kt(De(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yH={kernelName:gh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Be(n,Ve(Ze(1),Kt(De(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xH(n,e,t,s,r,i){const a=V(n,"dy","avgPool3dGrad"),o=V(e,"input","avgPool3dGrad");let l=a,c=o,d=!1;o.rank===4&&(d=!0,l=re(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),c=re(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),B(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),B(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Ks("avgPool3dGrad",r,i);const p={dy:l,input:c},m={filterSize:t,strides:s,pad:r,dimRoundingMode:i},g=te.runKernel(ax,p,m);return d?re(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const bH=J({avgPool3dGrad_:xH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wH={kernelName:gf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:o}=t;return{x:()=>bH(n,s,r,i,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vH(n,e,t,s,r){const i=V(n,"dy","avgPoolGrad"),a=V(e,"input","avgPoolGrad");B(a.rank===i.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`);let o=a,l=i,c=!1;a.rank===3&&(c=!0,o=re(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=re(i,[1,i.shape[0],i.shape[1],i.shape[2]])),B(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),B(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const d={dy:l,input:o},p={filterSize:t,strides:s,pad:r},m=te.runKernel(ix,d,p);return c?re(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const SH=J({avgPoolGrad_:vH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CH={kernelName:mf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:i,pad:a}=t;return{x:()=>SH(n,s,r,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H={kernelName:yf,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,r]=e,{transposeA:i,transposeB:a}=t;return!i&&!a?{a:()=>Ct(n,r,!1,!0),b:()=>Ct(s,n,!0,!1)}:!i&&a?{a:()=>Ct(n,r,!1,!1),b:()=>Ct(n,s,!0,!1)}:i&&!a?{a:()=>Ct(r,n,!1,!0),b:()=>Ct(s,n,!1,!1)}:{a:()=>Ct(r,n,!0,!0),b:()=>Ct(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kH={kernelName:xf,gradFunc:(n,e,t)=>{const{blockShape:s,crops:r}=t;return{x:()=>db(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NH={kernelName:HL,gradFunc:(n,e,t)=>{const s=t,r=s.inputShape,i=s.shape,a=Array.from(i);for(let l=r.length-1;l>=0;l--)if(r[l]===i[l])a[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const o=[];for(let l=0;l<a.length;l++)a[l]>1&&o.push(l);return{x:()=>qe(n,o,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IH={kernelName:xh,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TH={kernelName:bh,gradFunc:n=>({x:()=>Dt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EH={kernelName:wh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:r,clipValueMax:i}=t;return{x:()=>Rs(ma(ll(s,r),Au(s,i)),n,Dt(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RH={kernelName:bf,inputsToSave:["x"],gradFunc:PA.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AH={kernelName:wf,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(l=>l.shape),{axis:r}=t,i=pt(r,e[0].shape)[0],a=s.map(l=>l[i]);return kr(n,a,i).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DH={kernelName:vf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{dilations:i,strides:a,pad:o,dataFormat:l}=t;return B(Xo(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>_2(s.shape,n,r,a,o,l),filter:()=>lS(s,n,r.shape,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _H={kernelName:Sf,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=t;return{dy:()=>Ko(n,r,i,a,o,1,l),filter:()=>lS(n,s,r.shape,i,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OH(n,e,t,s,r){let i=n;n.rank===4&&(i=re(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=e;a.rank===4&&(a=re(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),B(i.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),B(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),B(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),B(i.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${t[3]}.`),B(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);const o={x:i,dy:a},l={strides:s,pad:r,filterShape:t};return te.runKernel(dx,o,l)}const FH=J({conv3DBackpropFilter_:OH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zH={kernelName:Cf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:i}=t;B(Xo(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[a,o]=e;return{x:()=>oR(a.shape,n,o,r,i),filter:()=>FH(a,n,o.shape,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LH={kernelName:vh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Q(hn(Z2(De(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PH={kernelName:Sh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Q(J2(De(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MH={kernelName:$f,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r,exclusive:i,reverse:a}=t;return{x:()=>{const o=Qt([r],s.rank);let l=z2(n,r,i,!a);return o!=null&&(l=At(l,o)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BH={kernelName:kf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:a}=t,o=s??[1,1];B(Xo(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,c]=e;return B(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),B(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),B(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),B(Zn(r,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`),Ks("depthwiseConv2d",i,a),{x:()=>VR(l.shape,n,c,r,i,o,a),filter:()=>BR(l,n,c.shape,r,i,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VH={kernelName:Nf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,i={x:s,filter:r,dy:n},a={x:s,filter:r,dy:n};return{x:()=>te.runKernel(Cy,i,t),filter:()=>te.runKernel($y,a,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UH={kernelName:$h,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>te.runKernel(Sx,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WH={kernelName:kh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=Q(qs(hn(Kt(t))),2/Math.sqrt(Math.PI));return{x:()=>Q(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GH={kernelName:Nh,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Q(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HH={kernelName:Tf,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>re(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jH={kernelName:Ih,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Q(n,qs(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qH={kernelName:Th,gradFunc:n=>({x:()=>Dt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XH={kernelName:Eh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=it(t.shape,s.shape);return{a:()=>{const o=Be(n,De(s,"float32")),l=Qn(t.shape,r);return l.length>0?re(qe(o,l),t.shape):o},b:()=>{let o=Q(n,De(t,"float32"));const l=Qn(s.shape,r);l.length>0&&(o=re(qe(o,l),s.shape));const c=Kt(s);return hn(Be(o,De(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KH={kernelName:Ef,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[r,i,a,o]=e,l=o??Ze(1),c=Qn(i.shape,r.shape),d=[];if(i.rank===1){for(let N=0;N<r.shape.length-1;++N)d.push(r.shape[N]);d.push(1)}const p=Ve(r,i),m=Q(n,l),g=K2(Ce(a,Ze(s))),x=Q(Q(Q(g,g),g),Ze(-.5));return{x:()=>i.rank===1?re(Q(Q(n,fi(re(g,[1,1,1,i.shape[0]]),d)),l),r.shape):re(Q(Q(n,g),l),r.shape),mean:()=>{let N=Q(Q(g,Ze(-1)),m);return i.rank===1&&(N=qe(N,c)),re(N,i.shape)},variance:()=>{let N=Q(Q(x,p),m);return i.rank===1&&(N=qe(N,c)),re(N,i.shape)},scale:()=>{const N=Q(p,g);let E=Q(n,N);return i.rank===1&&(E=qe(E,c)),re(E,i.shape)},offset:()=>{let N=n;return i.rank===1&&(N=qe(N,c)),re(N,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YH={kernelName:Rf,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,r]=e,{axis:i,batchDims:a}=t,o=pt(i,s.shape)[0],l=(c,d,p)=>()=>{const m=c.shape,g=d.size,x=m.slice(0,o),b=x.length,w=m.slice(i,m.length).slice(1),v=w.length,$=YN(0,b),I=YN(b+1,b+1+v),N=QN([x,[g],w]),E=re(p,N),_=re(d,[g]),z=QN([[b],$,I]),P=At(E,z);let O=iS(P,_,c.shape[o]);const L=wa(z);return O=At(O,L),O};if(a===1){const c=s.shape[0],d=s.split(c,0);return{x:()=>Nr(d.map((g,x)=>l(g,r.slice(x,1),n.slice(x,1))())).reshape(s.shape),indices:()=>r}}else return{x:l(s,r,n),indices:()=>r}}};function YN(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function QN(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QH={kernelName:Rh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>Dt(t),b:()=>Dt(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZH={kernelName:Ah,gradFunc:n=>({x:()=>De(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JH={kernelName:Dh,gradFunc:n=>({x:()=>Dt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e6={kernelName:_h,gradFunc:n=>({x:()=>Dt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t6={kernelName:Oh,gradFunc:n=>({x:()=>Dt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n6={kernelName:Df,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:r}=t,i=Ar(s,0);return{x:()=>Rs(i,n,Q(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s6={kernelName:zh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Be(n,Ce(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r6={kernelName:Fh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Be(n,De(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i6={kernelName:jL,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;return{logits:()=>{const a=qs(s);return Ve(n,Q(qe(n,r,!0),a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a6(n,e,t,s=5,r=1,i=1,a=.5){const o={x:n,y:e,dy:t},l={depthRadius:s,bias:r,alpha:i,beta:a};return te.runKernel(Rx,o,l)}const o6=J({localResponseNormalizationBackprop_:a6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6={kernelName:Pf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{depthRadius:i,bias:a,alpha:o,beta:l}=t;return{x:()=>o6(s,r,n,i,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MA(n,e,t,s){return e.rank<t.rank&&(e=re(e,$n(e.shape,s))),n.rank<t.rank&&(n=re(n,$n(n.shape,s))),{x:()=>Q(n,De(Vi(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZN={kernelName:Mf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:r}=s,i=e[0],a=e[1],o=pt(r,i.shape),l=MA(n,a,i,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u6={kernelName:Lh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>Q(n,De(ll(t,s),"float32")),b:()=>Q(n,De(Kp(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c6(n,e,t,s,r,i,a){const o=V(n,"dy","maxPool3dGrad"),l=V(e,"input","maxPool3dGrad"),c=V(t,"output","maxPool3dGrad");let d=o,p=l,m=c,g=!1;l.rank===4&&(g=!0,d=re(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=re(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),m=re(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),B(d.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`),B(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),B(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),Ks("maxPool3dGrad",i,a);const x={dy:d,input:p,output:m},b={filterSize:s,strides:r,pad:i,dimRoundingMode:a},w=te.runKernel(Dx,x,b);return g?re(w,[w.shape[1],w.shape[2],w.shape[3],w.shape[4]]):w}const h6=J({maxPool3dGrad_:c6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6={kernelName:Vf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=t;return{x:()=>h6(n,s,r,i,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p6(n,e,t,s,r,i,a){const o=V(n,"dy","maxPoolGrad"),l=V(e,"input","maxPoolGrad"),c=V(t,"output","maxPoolGrad");B(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),B(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),B(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Ks("maxPoolGrad",i,a);const d={dy:o,input:l,output:c},p={filterSize:s,strides:r,pad:i,dimRoundingMode:a};return te.runKernel(Ax,d,p)}const f6=J({maxPoolGrad_:p6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m6={kernelName:Bf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:i,strides:a,pad:o}=t;return{x:()=>f6(n,s,r,i,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g6={kernelName:Uf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t,i=pt(r,s.shape),o=Dn(s.shape,i)[1],l=ue(o);return{x:()=>{const d=s.shape.slice();i.forEach(g=>{d[g]=1});const p=re(n,d);return Be(Q(p,$r(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y6={kernelName:Wf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:r}=s,[i,a]=e,o=pt(r,i.shape),l=MA(n,a,i,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x6={kernelName:Ph,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>Q(n,De(Au(t,s),"float32")),b:()=>Q(n,De(Ar(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b6={kernelName:Gf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,i=r.map(a=>a[0]);return{x:()=>ct(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w6={kernelName:Mh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=it(t.shape,s.shape);return{a:()=>{const o=Qn(t.shape,r);return o.length>0?re(qe(n,o),t.shape):n},b:()=>{const o=Q(n,hn(ym(Be(t,s)))),l=Qn(s.shape,r);return l.length>0?re(qe(o,l),s.shape):o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v6={kernelName:Bh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=it(t.shape,s.shape);return{a:()=>{const o=Q(n,De(s,"float32")),l=Qn(t.shape,r);return l.length>0?re(qe(o,l),t.shape):o},b:()=>{const o=Q(n,De(t,"float32")),l=Qn(s.shape,r);return l.length>0?re(qe(o,l),s.shape):o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S6={kernelName:Hf,gradFunc:n=>({x:()=>hn(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C6={kernelName:Xf,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>Rn(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $6={kernelName:qf,gradFunc:n=>({x:()=>Dt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6={kernelName:Kf,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return Si(n,s).map(i=>()=>i)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JN={kernelName:Yf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,i=r.map(a=>a[0]);return{x:()=>ct(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N6={kernelName:Vh,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,r]=e,i=t,a=s,o=it(i.shape,a.shape);return{a:()=>{const d=De(a,"float32");let p=Q(n,Q(d,to(i,Ve(d,Ze(1)))));const m=Qn(i.shape,o);return m.length>0&&(p=qe(p,m)),re(p,i.shape)},b:()=>{const d=Ar(i,0),p=Rs(d,Ur(i),Dt(i));let m=Q(n,Q(r,p));const g=Qn(a.shape,o);return g.length>0&&(m=qe(m,g)),re(m,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I6={kernelName:Qf,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,r=Ar(t,0);return{x:()=>Rs(r,n,Q(n,s)),alpha:()=>{let i=Rs(r,Dt(n),Q(n,t));const a=Qn(s.shape,n.shape);return a.length>0&&(i=qe(i,a)),re(i,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T6(n,e,t){const s=n.shape.slice();s[t]=1;const r=re(e,s),i=Ay(n,t,!0,!1),a=Ay(n,t,!0,!0),o=Q(i,a);return Q(r,o)}function E6(n,e,t){const s=n.shape.length,r=s-t.length,i=Qt(t,s);let a=n;i!=null&&(a=At(n,i));const o=a.shape.slice(),c=o.splice(s-t.length,t.length).reduce((m,g)=>m*g,1);o.push(c);const d=a.reshape(o);let p=T6(d,e,r);if(p=p.reshape(a.shape),i!=null){const m=wa(i);p=At(p,m)}return p}const R6={kernelName:Zf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;let i=[];return r==null?i=s.shape.map((a,o)=>o):typeof r=="number"?i=[r]:i=r,{x:()=>E6(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6={kernelName:Ch,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=it(t.shape,s.shape);return{a:()=>{const o=Be(n,De(s,"float32")),l=Qn(t.shape,r);return l.length>0?re(qe(o,l),t.shape):o},b:()=>{let o=Q(n,De(t,"float32"));const l=Qn(s.shape,r);l.length>0&&(o=re(qe(o,l),s.shape));const c=Kt(s);return hn(Be(o,De(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6={kernelName:Uh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Be(n,hn(Kt(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _6={kernelName:Gh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=Q(Au(t,6),ld(t));return{x:()=>Q(n,De(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O6={kernelName:Wh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Q(n,De(ld(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F6={kernelName:Jf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>re(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z6={kernelName:tm,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>te.runKernel(Bx,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L6={kernelName:em,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>te.runKernel(Mx,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P6={kernelName:nm,gradFunc:(n,e,t)=>{const{dims:s}=t,r=pt(s,n.shape);return{x:()=>vi(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M6={kernelName:Hh,gradFunc:n=>({x:()=>Dt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B6={kernelName:jh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>hn(Be(n,Q(to(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V6={kernelName:sm,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>De(Dt(t),"float32"),t:()=>Q(n,De(t,n.dtype)),e:()=>Q(n,De(ub(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U6={kernelName:qh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Ar(t,Ze(0)),r=Ze(wm),i=Ze(vm),a=Q(n,i),o=Q(Q(n,r),qs(De(t,"float32")));return Rs(s,a,o)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W6={kernelName:Qh,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Q(n,Q(t,Ve(Ze(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G6={kernelName:Yh,gradFunc:n=>({x:()=>Dt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H6={kernelName:Xh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Q(rb(De(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j6={kernelName:Kh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Q(F2(De(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q6={kernelName:rm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:r,size:i}=t,a=s.shape,[o,l]=bm(s,r,i),c=[];for(let d=0;d<n.rank;d++)c.push([o[d],a[d]-o[d]-l[d]]);return{x:()=>Ui(n,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X6={kernelName:lm,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:r}=t,i=!0,a=Q(n,s);return{logits:()=>Ve(a,Q(qe(a,[r],i),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K6={kernelName:Zh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Q(n,Vr(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eI={kernelName:am,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:r}=t;return{x:()=>sb(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tI={kernelName:om,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>yn(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y6={kernelName:Jh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Be(n,Q(Ss(De(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q6={kernelName:qx,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Q(n,Q(De(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z6={kernelName:ed,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ze(2);return{a:()=>Q(n,Q(r,Ve(t,s))),b:()=>Q(n,Q(r,Ve(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J6={kernelName:id,gradFunc:n=>({x:()=>Dt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ej={kernelName:td,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=it(t.shape,s.shape);return{a:()=>{let o=n;const l=Qn(t.shape,r);return l.length>0&&(o=qe(o,l)),re(o,t.shape)},b:()=>{let o=n;const l=Qn(s.shape,r);return l.length>0&&(o=qe(o,l)),re(hn(o),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tj={kernelName:im,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,r=s.shape.slice(),{axis:i}=t;pt(i,s.shape).forEach(c=>{r[c]=1});const o=re(n,r),l=Q(o,$r(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nj={kernelName:nd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Be(n,Kt(rb(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sj={kernelName:sd,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Q(Ve(Ze(1),Kt(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rj={kernelName:rd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:r}=t;return{x:()=>{let a=Dt(s);if(s.rank===1)for(let o=0;o<r[0];++o)a=Ce(a,ct(n,[o*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let o=0;o<r[0];++o)for(let l=0;l<r[1];++l)a=Ce(a,ct(n,[o*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let o=0;o<r[0];++o)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)a=Ce(a,ct(n,[o*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let o=0;o<r[0];++o)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)for(let d=0;d<r[3];++d)a=Ce(a,ct(n,[o*s.shape[0],l*s.shape[1],c*s.shape[2],d*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ij={kernelName:lu,gradFunc:(n,e,t)=>{const s=t,{perm:r}=s,i=wa(r);return{x:()=>At(n,i)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aj={kernelName:um,gradFunc:(n,e,t)=>{const s=t,{axis:r}=s;return{value:()=>Nr(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oj={kernelName:cm,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>lj(n,t)}}};function lj(n,e){const t=so(e,Dt(e)),s=xm(n,t);let r=ll(e,Ze(0,"int32"));const i=s.rank-r.rank;for(let o=0;o<i;++o)r=Ln(r,o+1);r=ma(r,$r(s.shape,"bool"));const a=Dt(s);return Rs(r,s,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uj={kernelName:hm,gradFunc:n=>({x:()=>Dt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cj=[PA,oH,lH,uH,cH,hH,dH,pH,fH,mH,gH,yH,wH,CH,$H,kH,NH,IH,TH,EH,RH,AH,_H,DH,zH,LH,PH,MH,BH,VH,A6,UH,WH,GH,HH,jH,XH,qH,KH,YH,QH,ZH,JH,e6,t6,n6,s6,r6,i6,l6,ZN,ZN,u6,d6,m6,g6,y6,x6,b6,w6,v6,S6,C6,$6,k6,JN,JN,N6,I6,R6,D6,_6,O6,F6,z6,L6,P6,M6,B6,V6,U6,W6,G6,H6,j6,q6,X6,K6,eI,eI,tI,tI,Y6,Z6,Q6,J6,ej,tj,nj,sj,rj,ij,aj,oj,uj];for(const n of cj)XL(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.abs=function(){return this.throwIfDisposed(),Gn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.acos=function(){return this.throwIfDisposed(),UE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.acosh=function(){return this.throwIfDisposed(),WE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.add=function(n){return this.throwIfDisposed(),Ce(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.all=function(n,e){return this.throwIfDisposed(),R2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.any=function(n,e){return this.throwIfDisposed(),Ry(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.argMax=function(n){return this.throwIfDisposed(),bu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.argMin=function(n){return this.throwIfDisposed(),GE(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.asScalar=function(){return this.throwIfDisposed(),B(this.size===1,()=>"The array must have only 1 element."),re(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.asType=function(n){return this.throwIfDisposed(),De(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.as1D=function(){return this.throwIfDisposed(),re(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.as2D=function(n,e){return this.throwIfDisposed(),re(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),re(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),re(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.as5D=function(n,e,t,s,r){return this.throwIfDisposed(),re(this,[n,e,t,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.asin=function(){return this.throwIfDisposed(),HE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.asinh=function(){return this.throwIfDisposed(),jE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.atan=function(){return this.throwIfDisposed(),qE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.atan2=function(n){return this.throwIfDisposed(),XE(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.atanh=function(){return this.throwIfDisposed(),KE(this)};ve().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),nb(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),sb(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.batchNorm=function(n,e,t,s,r){return this.throwIfDisposed(),pm(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Hc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.cast=function(n){return this.throwIfDisposed(),De(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.ceil=function(){return this.throwIfDisposed(),tR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),dr(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof Ht&&(n=[n]),yn([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.conv1d=function(n,e,t,s,r,i){return this.throwIfDisposed(),D2(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.conv2dTranspose=function(n,e,t,s,r){return this.throwIfDisposed(),O2(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.conv2d=function(n,e,t,s,r,i){return this.throwIfDisposed(),Ko(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.cos=function(){return this.throwIfDisposed(),rb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.cosh=function(){return this.throwIfDisposed(),F2(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),Ay(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),z2(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),uR(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.depthwiseConv2d=function(n,e,t,s,r,i){return this.throwIfDisposed(),fm(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.dilation2d=function(n,e,t,s,r){return this.throwIfDisposed(),cR(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.divNoNan=function(n){return this.throwIfDisposed(),hR(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.div=function(n){return this.throwIfDisposed(),Be(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.dot=function(n){return this.throwIfDisposed(),dR(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.elu=function(){return this.throwIfDisposed(),mm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.equal=function(n){return this.throwIfDisposed(),Vi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.erf=function(){return this.throwIfDisposed(),L2(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),mR(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.exp=function(){return this.throwIfDisposed(),qs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.expandDims=function(n){return this.throwIfDisposed(),Ln(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.expm1=function(){return this.throwIfDisposed(),gR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.fft=function(){return this.throwIfDisposed(),xb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.flatten=function(){return this.throwIfDisposed(),re(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.floor=function(){return this.throwIfDisposed(),ym(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.floorDiv=function(n){return this.throwIfDisposed(),E2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.gather=function(n,e,t){return this.throwIfDisposed(),xm(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.greaterEqual=function(n){return this.throwIfDisposed(),ll(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.greater=function(n){return this.throwIfDisposed(),Ar(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.ifft=function(){return this.throwIfDisposed(),Zp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.irfft=function(){return this.throwIfDisposed(),tS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.isFinite=function(){return this.throwIfDisposed(),yR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.isInf=function(){return this.throwIfDisposed(),xR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.isNaN=function(){return this.throwIfDisposed(),bR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.leakyRelu=function(n){return this.throwIfDisposed(),ab(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.lessEqual=function(n){return this.throwIfDisposed(),Au(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.less=function(n){return this.throwIfDisposed(),Kp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),wR(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.logSigmoid=function(){return this.throwIfDisposed(),vR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.logSoftmax=function(n){return this.throwIfDisposed(),B2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),lb(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.log=function(){return this.throwIfDisposed(),Ur(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.log1p=function(){return this.throwIfDisposed(),ob(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.logicalAnd=function(n){return this.throwIfDisposed(),ma(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.logicalNot=function(){return this.throwIfDisposed(),ub(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.logicalOr=function(n){return this.throwIfDisposed(),V2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.logicalXor=function(n){return this.throwIfDisposed(),SR(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),Ct(this,n,e,t)};ve().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),cb(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.max=function(n,e){return this.throwIfDisposed(),xi(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.maximum=function(n){return this.throwIfDisposed(),so(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.mean=function(n,e){return this.throwIfDisposed(),vn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.min=function(n,e){return this.throwIfDisposed(),Xp(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.minimum=function(n){return this.throwIfDisposed(),Qo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),W2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.mod=function(n){return this.throwIfDisposed(),$R(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.mul=function(n){return this.throwIfDisposed(),Q(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.neg=function(){return this.throwIfDisposed(),hn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.norm=function(n,e,t){return this.throwIfDisposed(),gm(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.notEqual=function(n){return this.throwIfDisposed(),Qc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),G2(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.onesLike=function(){return this.throwIfDisposed(),Wr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.pad=function(n,e){return this.throwIfDisposed(),Ui(this,n,e)};ve().prototype.pool=function(n,e,t,s,r,i){return this.throwIfDisposed(),kR(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.pow=function(n){return this.throwIfDisposed(),to(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.prelu=function(n){return this.throwIfDisposed(),pb(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.prod=function(n,e){return this.throwIfDisposed(),NR(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.reciprocal=function(){return this.throwIfDisposed(),IR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.relu=function(){return this.throwIfDisposed(),va(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.relu6=function(){return this.throwIfDisposed(),q2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.reshapeAs=function(n){return this.throwIfDisposed(),re(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.reshape=function(n){return this.throwIfDisposed(),re(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),GR(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),HR(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.reverse=function(n){return this.throwIfDisposed(),vi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.rfft=function(){return this.throwIfDisposed(),bb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.round=function(){return this.throwIfDisposed(),X2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.rsqrt=function(){return this.throwIfDisposed(),K2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.selu=function(){return this.throwIfDisposed(),Y2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.separableConv2d=function(n,e,t,s,r,i){return this.throwIfDisposed(),Q2(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.sigmoid=function(){return this.throwIfDisposed(),Vr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.sign=function(){return this.throwIfDisposed(),TR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.sin=function(){return this.throwIfDisposed(),Z2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.sinh=function(){return this.throwIfDisposed(),J2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.slice=function(n,e){return this.throwIfDisposed(),ct(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.softmax=function(n){return this.throwIfDisposed(),yb(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.softplus=function(){return this.throwIfDisposed(),od(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),db(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.split=function(n,e){return this.throwIfDisposed(),kr(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.sqrt=function(){return this.throwIfDisposed(),Ss(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.square=function(){return this.throwIfDisposed(),Kt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.squaredDifference=function(n){return this.throwIfDisposed(),nS(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.squeeze=function(n){return this.throwIfDisposed(),Bt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof Ht?[this,n]:[this,...n];return Nr(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.step=function(n){return this.throwIfDisposed(),ld(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.stridedSlice=function(n,e,t,s,r,i,a,o){return this.throwIfDisposed(),ER(this,n,e,t,s,r,i,a,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.sub=function(n){return this.throwIfDisposed(),Ve(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.sum=function(n,e){return this.throwIfDisposed(),qe(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.tan=function(){return this.throwIfDisposed(),RR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.tanh=function(){return this.throwIfDisposed(),vu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.tile=function(n){return this.throwIfDisposed(),fi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.toBool=function(){return this.throwIfDisposed(),De(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.toFloat=function(){return this.throwIfDisposed(),De(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.toInt=function(){return this.throwIfDisposed(),De(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.topk=function(n,e){return this.throwIfDisposed(),_R(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.transpose=function(n){return this.throwIfDisposed(),At(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.unique=function(n){return this.throwIfDisposed(),OR(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),iS(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.unstack=function(n){return this.throwIfDisposed(),Si(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.where=function(n,e){return this.throwIfDisposed(),Rs(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ve().prototype.zerosLike=function(){return this.throwIfDisposed(),Dt(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class oa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,oa.prototype)}}class mi extends Error{constructor(e){super(e),Object.setPrototypeOf(this,mi.prototype)}}class ie extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ie.prototype)}}class bt extends Error{constructor(e){super(e),Object.setPrototypeOf(this,bt.prototype)}}class wS extends Error{constructor(e){super(e),Object.setPrototypeOf(this,wS.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class BA{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Cu(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function la(n,e){if(!n)throw new wS(e)}function nI(n,e){let t=0;for(const s of n)s===e&&t++;return t}function or(n){return n.length===1?n[0]:n}function qt(n){return Array.isArray(n)?n:[n]}function ja(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function tu(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let ui={};function vS(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function Tv(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>Tv(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:Tv(s))}}}function Sm(n,e={},t={},s="object",r=!1){if(typeof n=="string"){const i=n;let a;if(i in t)a=t[i];else if(i in ui)a=ui[i];else if(a=e[i],a==null)throw new ie(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const i=n;if(i.className==null||i.config==null)throw new ie(`${s}: Improper config format: ${JSON.stringify(i)}.
'className' and 'config' must set.`);const a=i.className;let o,l;if(a in t?[o,l]=t[a]:a in ui?[o,l]=ui.className:a in e&&([o,l]=e[a]),o==null)throw new ie(`Unknown ${s}: ${a}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const g of Object.keys(ui))c[g]=ui[g];for(const g of Object.keys(t))c[g]=t[g];const d=i.config;d.customObjects=c;const p=Object.assign({},ui);for(const g of Object.keys(t))ui[g]=t[g];Tv(i.config);const m=l(o,i.config,t,r);return ui=Object.assign({},p),m}else{const c=Object.assign({},ui);for(const p of Object.keys(t))ui[p]=t[p];const d=new o(i.config);return ui=Object.assign({},c),d}}}function hj(n,e){return n<e?-1:n>e?1:0}function Yg(n,e){return-1*hj(n,e)}function Go(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function dj(n){if(n==null)throw new ie(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function zu(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new ie(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function SS(n,e,t=0,s=1/0){return la(t>=0),la(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(r=>typeof r===e)}function cs(n,e){Array.isArray(n)?(B(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>cs(t,`element ${s+1} of ${e}`))):B(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${VA(n)}.`)}function VA(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>VA(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function pj(n,e,t){let s=t!=null?t():ar(),r;return(...a)=>{const o=t!=null?t():ar();return o-s<e||(s=o,r=n(...a)),r}}function UA(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let fj=0;function WA(){return fj++}const Qg={};function Xb(n=""){return n in Qg||(Qg[n]=0),Qg[n]+=1,n+Qg[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const mj=["channelsFirst","channelsLast"],gj=["nearest","bilinear"],yj=["valid","same","causal"],xj=["max","avg"],bj=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const _c=new Map;function _n(n){zu(mj,"DataFormat",n)}function wj(n){zu(gj,"InterpolationFormat",n)}function jr(n){zu(yj,"PaddingMode",n)}function GA(n){zu(xj,"PoolMode",n)}const Vp=[],sI="/";function uu(n,e){Vp.push(n);try{const t=e();return Vp.pop(),t}catch(t){throw Vp.pop(),t}}function vj(){return Vp.length===0?"":Vp.join(sI)+sI}function HA(n){if(!qA(n))throw new Error("Not a valid tensor name: '"+n+"'");return vj()+n}function jA(n){if(!qA(n))throw new Error("Not a valid tensor name: '"+n+"'");_c.has(n)||_c.set(n,0);const e=_c.get(n);if(_c.set(n,_c.get(n)+1),e>0){const t=`${n}_${e}`;return _c.set(t,1),t}else return n}const Sj=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function qA(n){return!!n.match(Sj)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Cj(n){return n===parseInt(n.toString(),10)}function Ho(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let r=e;r<t;++r)s*=n[r];return s}function Jc(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function Zo(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function Hi(n,e){if(e<n)throw new ie(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Lw;function Hn(){return Lw==null&&(Lw=gu().epsilon()),Lw}function ji(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function da(n,e){return De(n,e)}function Cm(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),re(n,t)}function $j(n,e){return ce(()=>{if(n.shape.length!==2)throw new ie(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=Cm(n,1);return Ev(t,[1,e,1])})}function kj(n){const e=[Ho(n.shape)];return re(n,e)}function Nj(n){if(n.rank<=1)throw new ie(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Ho(n.shape,1)];return re(n,e)}function cu(n,e,t){return ce(()=>{switch(n.rank){case 1:return mb(n,e,t);case 2:return eS(n,[e,0],[t,n.shape[1]]);case 3:return gb(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return Qp(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return ct(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return ct(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new ie(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Pw(n,e,t){return ce(()=>{switch(n.rank){case 1:return mb(n,e,t);case 2:return eS(n,[0,e],[n.shape[0],t]);case 3:return gb(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return Qp(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new ie(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Zg(n,e,t,s){return ce(()=>{switch(n.rank){case 1:return mb(n,e,t);case 2:switch(s){case 1:return cu(n,e,t);case 2:return Pw(n,e,t);default:throw new ie(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return cu(n,e,t);case 2:return gb(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return Pw(n,e,t);default:throw new ie(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return cu(n,e,t);case 2:return Qp(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return Qp(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return Pw(n,e,t);default:throw new ie(`The axis is not within the rank of the tensor ${s}`)}default:throw new ie(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function CS(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),yn(n,e)}function rI(n,e){switch(n.rank){case 1:return nR([n,e]);case 2:return sR([n,e],0);case 3:return rR([n,e],0);case 4:return iR([n,e],0);default:throw new ie(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function Ev(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new ie(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return fi(n,e)}function Kb(n,e=0,t=1,s,r){return j2(n,e,t,s,r)}function pa(n,e,t,s){if(n.rank<2||e.rank<2)throw new bt(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=n.shape.slice(-1)[0],i=e.shape.slice(-2)[0];if(r!==i)throw new bt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return $v({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Rv(n.rank,s,ji()):null,activation:t});{const r=n.shape.slice(),i=r.pop();n=re(n,[-1,i]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),c=[...a,o],d=Array.from({length:e.rank},(x,b)=>b===0?e.rank-2:b<=e.rank-2?b-1:b);e=re(At(e,d),[l,-1]);const p=[...r,...c];return re($v({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Rv(n.rank,s,ji()):null,activation:t}),p)}}function XA(n,e,t){return ce(()=>(Array.isArray(e)?e=Pn(e,"int32"):e=De(e,"int32"),xm(n,e,t)))}function $m(n){return Q(n,n)}function Rv(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new ie(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?re(e,[1,s[0],1,1,1]):re(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?re(e,[1,1,1,1,s[0]]):re(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?re(e,[1,s[0],1,1]):re(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?re(e,[1,1,1,s[0]]):re(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?re(e,[1,s[0],1]):re(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?re(e,[1,1,s[0]]):re(e,[1].concat(s))}else if(n<3)return e;throw new ie(`Unsupported input rank by biasAdd: ${e.rank}`)}function Yi(n,e,t){return ce(()=>(t==null&&(t=ji()),_n(t),Ce(n,Rv(n.rank,e,t))))}function Ij(n,e=1){if(e!==1)throw new bt(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return mm(n)}function Tj(n){return ce(()=>Be(n,Ce(Gn(n),1)))}function KA(n,e,t,s){return ce(()=>LR(n,e,t,s))}function Ej(n){return ce(()=>{const e=Ce(.5,Q(.2,n));return dr(e,0,1)})}function km(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Rj=["fanIn","fanOut","fanAvg"],Aj=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Dj(n){zu(Rj,"FanMode",n)}function _j(n){zu(Aj,"Distribution",n)}class Ci extends cd{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class YA extends Ci{apply(e,t){return Rn(e,t)}}YA.className="Zeros";Te(YA);class $S extends Ci{apply(e,t){return $r(e,t)}}$S.className="Ones";Te($S);class QA extends Ci{constructor(e){if(super(),typeof e!="object")throw new ie(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new ie(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return ce(()=>Q(Ze(this.value),$r(e,t)))}getConfig(){return{value:this.value}}}QA.className="Constant";Te(QA);class ZA extends Ci{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Du(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ZA.className="RandomUniform";Te(ZA);class JA extends Ci{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new bt(`randomNormal does not support dType ${t}.`);return Kb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}JA.className="RandomNormal";Te(JA);class e3 extends Ci{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new bt(`truncatedNormal does not support dType ${t}.`);return rS(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}e3.className="TruncatedNormal";Te(e3);class t3 extends Ci{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return ce(()=>{if(e.length!==2||e[0]!==e[1])throw new ie("Identity matrix initializer can only be used for 2D square matrices.");return Q(this.gain,M2(e[0]))})}getConfig(){return{gain:this.gain}}}t3.className="Identity";Te(t3);function Oj(n,e="channelsLast"){let t,s;if(_n(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const r=Ho(n,2);t=n[1]*r,s=n[0]*r}else if(e==="channelsLast"){const r=Ho(n,0,n.length-2);t=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=Ho(n);t=Math.sqrt(r),s=Math.sqrt(r)}return[t,s]}class Ir extends Ci{constructor(e){if(super(),e.scale<0)throw new ie(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,Dj(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,_j(this.distribution),this.seed=e.seed}apply(e,t){const s=Oj(e),r=s[0],i=s[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,r):this.mode==="fanOut"?a/=Math.max(1,i):a/=Math.max(1,(r+i)/2),this.distribution==="normal"){const o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new bt(`${this.getClassName()} does not support dType ${t}.`);return rS(e,0,o,t,this.seed)}else{const o=Math.sqrt(3*a);return Du(e,-o,o,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ir.className="VarianceScaling";Te(Ir);class kS extends Ir{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Ir.className}}kS.className="GlorotUniform";Te(kS);class NS extends Ir{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Ir.className}}NS.className="GlorotNormal";Te(NS);class IS extends Ir{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Ir.className}}IS.className="HeNormal";Te(IS);class TS extends Ir{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Ir.className}}TS.className="HeUniform";Te(TS);class ES extends Ir{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Ir.className}}ES.className="LeCunNormal";Te(ES);class RS extends Ir{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Ir.className}}RS.className="LeCunUniform";Te(RS);class n3 extends Ci{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return ce(()=>{if(e.length<2)throw new bt("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const s=ue(e.slice(0,-1)),r=e[e.length-1],i=s*r;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);const a=[Math.max(r,s),Math.min(r,s)],o=Kb(a,0,1,t,this.seed),l=jR.qr(o,!1);let c=l[0];const p=l[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return c=Q(c,p.sign()),s<r&&(c=c.transpose()),Q(Ze(this.gain),c.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}n3.className="Orthogonal";Te(n3);const iI={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function aI(n,e={}){return Sm(n,pi.getMap().classNameMap,e,"initializer")}function gn(n){return vS(n)}function pn(n){if(typeof n=="string"){const e=n in iI?iI[n]:n;if(e==="GlorotNormal")return new NS;if(e==="GlorotUniform")return new kS;if(e==="HeNormal")return new IS;if(e==="HeUniform")return new TS;if(e==="LeCunNormal")return new ES;if(e==="LeCunUniform")return new RS;{const t={};return t.className=e,t.config={},aI(t)}}else return n instanceof Ci?n:aI(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Av(n){return Array.isArray(n)&&Array.isArray(n[0])}function Dy(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function ht(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new ie(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function Pt(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new ie(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _y(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const oI="Variable";class Fj{constructor(e,t="float32",s=oI,r=!0,i=null){this.dtype=t??"float32",this.shape=e.shape,this.id=WA(),s=s??oI,this.originalName=HA(s),this.name=jA(this.originalName),this.trainable_=r,this.constraint=i,this.val=FR(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),zj(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function zj(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function Dv(n){return n.map(e=>e.read())}function AS(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class jn{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class ga{constructor(e,t,s,r,i,a,o){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=r,this.callArgs=i,this.outputTensorIndex=o,this.id=WA(),a!=null&&(this.originalName=HA(a),this.name=jA(this.originalName)),this.rank=t.length}}let Lj=0;class Yb{constructor(e,t){this.callArgs=t,this.id=Lj++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Pj=0;class vt extends cd{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Pj++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=ja(s)+"_"+Xb(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let i=null;e.batchSize!=null&&(i=e.batchSize),s=[i].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new mi(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ie(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return or(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return or(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new oa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new oa(`Layer ${this.name} is not connected, no input to return.`);return or(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new oa(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new oa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return or(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=qt(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=qt(this.inputSpec);if(t.length!==s.length)throw new ie(`Layer ${this.name} expects ${s.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const i=t[r],a=s[r];if(a==null)continue;const o=i.rank;if(a.ndim!=null&&o!==a.ndim)throw new ie(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${o}`);if(a.maxNDim!=null&&o>a.maxNDim)throw new ie(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${o}`);if(a.minNDim!=null&&o<a.minNDim)throw new ie(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${o}.`);if(a.dtype!=null&&i.dtype!==a.dtype)throw new ie(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${i.dtype}.`);if(a.axes){const l=i.shape;for(const c in a.axes){const d=Number(c),p=a.axes[c],m=d>=0?l[d]:l[l.length+d];if(p!=null&&[p,null].indexOf(m)===-1)throw new ie(`Input ${r} is incompatible with layer ${this.name}: expected axis ${d} of input shape to have value ${p} but got shape ${l}.`)}}if(a.shape!=null)for(let l=0;l<a.shape.length;++l){const c=a.shape[l],d=i.shape[l];if(c!=null&&d!=null&&c!==d)throw new ie(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${i.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=qt(e),r=Vj(e),i=Uj(e);if(r===i)throw new ie("Arguments to apply() must be all SymbolicTensors or all Tensors");return uu(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const a=[];for(const o of qt(e))a.push(o.shape);this.build(or(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&i&&(this._refCount=1)}if(this.assertInputCompatibility(e),i){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const o=qt(a),l=[];for(let c of o)s.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(a=or(l),this.activityRegularizer!=null)throw new bt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=Mj(e),o=this.computeOutputShape(a);let l;const c=Bj(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?l=o.map((d,p)=>new ga(c,d,this,qt(e),t,this.name,p)):l=new ga(c,o,this,qt(e),t,this.name),this.addInboundNode(e,l,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new bt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new oa(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new oa(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new mi(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return _y(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Dv(e?this.trainableWeights:this.weights)}setWeights(e){ce(()=>{const t=this.weights;if(t.length!==e.length)throw new ie(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],r=Dv(t);for(let i=0;i<r.length;++i){const a=r[i],o=t[i],l=e[i];if(!yt(a.shape,l.shape))throw new ie(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);s.push([o,l])}AS(s)})}addWeight(e,t,s,r,i,a,o,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new ie(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=l!=null?l():pn("zeros"));const c=r.apply(t,s),d=new Fj(c,s,e,a,o);return c.dispose(),i!=null&&this.addLoss(()=>i.apply(d.read())),a==null&&(a=!0),a?this._trainableWeights.push(d):this._nonTrainableWeights.push(d),d}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=qt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,s){if(!this.supportsMasking)return;const r=this.computeMask(e,s),i=qt(t),a=qt(r);if(i.length!==a.length)throw new Error(`${this.name} outputs ${i.length} tensors but ${i.length} masks for those tensors`);for(let o=0;o<i.length;o++)i[o].kerasMask=a[o]}addInboundNode(e,t,s,r,i,a,o=null){const l=qt(e);t=qt(t),s=qt(s),r=qt(r),i=Dy(i),a=Dy(a);const c=[],d=[],p=[];for(const m of l)c.push(m.sourceLayer),d.push(m.nodeIndex),p.push(m.tensorIndex);new Yb({outboundLayer:this,inboundLayers:c,nodeIndices:d,tensorIndices:p,inputTensors:l,outputTensors:t,inputMasks:s,outputMasks:r,inputShapes:i,outputShapes:a},o);for(let m=0;m<t.length;m++)t[m].sourceLayer=this,t[m].nodeIndex=this.inboundNodes.length-1,t[m].tensorIndex=m}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Mj(n){n=qt(n);const e=[];for(const t of n)e.push(t.shape);return or(e)}function Bj(n){return"float32"}function s3(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let i=0;i<s.inboundLayers.length;i++){const a=s.inputTensors[i],o=s.inboundLayers[i],l=s.nodeIndices[i],c=s3(a,o,l);for(const d of c)r.indexOf(d)===-1&&r.push(d)}return r}}}function Vj(n){let e=!0;for(const t of qt(n))if(!(t instanceof ga)){e=!1;break}return e}function Uj(n){let e=!0;for(const t of qt(n))if(t instanceof ga){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Nm extends vt{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Xb("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new ie("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new ie("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new ie("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const r=new ga(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Yb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ie(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Nm.className="InputLayer";Te(Nm);function Wj(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new ie("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new Nm({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gj(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return De(e,n.dtype)}catch{throw new ie(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class Bo{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Bo)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=Gj(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new ie(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ga){if(this.id2Value[e.id]==null)throw new ie(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new ie(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ga){if(this.id2Value[e.id]==null)throw new ie(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new ie(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&rt(this.id2Mask)}}const Oy=new BA,Fy=new BA;function Hj(n){Oy!=null&&Oy.setMaxEntries(n),Fy!=null&&Fy.setMaxEntries(n)}function zp(n,e,t,s){const r=t==null?!1:t.training,i=Array.isArray(n),a=i?n:[n],o=a.map(x=>x.name),l=[],c=e.names();for(const x of o)c.indexOf(x)!==-1?l.push(e.getValue(x)):l.push(null);const d=o.join(",")+"|"+e.names().sort().join(",");let p=Oy.get(d),m;if(p==null){const x=jj(a,e);p=x.sorted,m=x.recipientCounts,Oy.put(d,p),Fy.put(d,m)}m={},r||Object.assign(m,Fy.get(d));const g=new Bo(e);for(let x=0;x<p.length;++x){const b=p[x],w=b.sourceLayer;if(w instanceof Nm)continue;const v=[],$=[],I=[];let N=!1;for(const O of b.inputs){const L=g.getValue(O),D=g.getMask(O);v.push(L),$.push(D),D!=null&&(N=!0),r||(m[O.name]--,m[O.name]===0&&!e.hasKey(O)&&o.indexOf(O.name)===-1&&!L.isDisposed&&O.sourceLayer.stateful!==!0&&I.push(L))}N&&(t=t||{},t.mask=$[0]);const E=qt(w.apply(v,t));let _=null;w.supportsMasking&&(_=w.computeMask(v,$));const z=Xj(b),P=Array.isArray(z)?z:[z];for(let O=0;O<P.length;++O){g.hasKey(P[O])||g.add(P[O],E[O],Array.isArray(_)?_[0]:_);const L=o.indexOf(P[O].name);L!==-1&&(l[L]=E[O])}r||rt(I)}return g.disposeMasks(),i?l:l[0]}function jj(n,e){B(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const r=lI(n[0],e);t=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of n){const{sorted:a,recipientMap:o}=lI(i,e);for(const l of a)r.has(l.name)||(t.push(l),r.add(l.name));for(const l in o)s[l]==null&&(s[l]=new Set),o[l].forEach(c=>s[l].add(c))}}return{sorted:t,recipientCounts:qj(s)}}function qj(n){const e={};for(const t in n)e[t]=n[t].size;return e}function lI(n,e){const t=new Set,s=[],r={};for(const o of e.names())t.add(o);const i=[],a=[];for(i.push(n);i.length>0;){const o=i[i.length-1];if(t.has(o.name)){i.pop();continue}const l=a[a.length-1]===i.length-1;if(o.inputs.length===0||l)i.pop(),s.push(o),t.add(o.name),l&&a.pop();else{a.push(i.length-1);for(const c of o.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(o.name),!t.has(c.name)&&i.push(c)}}return{sorted:s,recipientMap:r}}function Xj(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kj=pe();Kj.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,Hj);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function DS(n,e){return ce(()=>Ss(qe(Q(n,n),e,!0)))}class Im extends cd{getConfig(){return{}}}class r3 extends Im{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return ce(()=>{const t=DS(e,this.axis),s=dr(t,0,this.maxValue);return Q(e,Be(s,Ce(Hn(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}r3.className="MaxNorm";Te(r3);class i3 extends Im{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return ce(()=>Be(e,Ce(Hn(),DS(e,this.axis))))}getConfig(){return{axis:this.axis}}}i3.className="UnitNorm";Te(i3);class a3 extends Im{apply(e){return va(e)}}a3.className="NonNeg";Te(a3);class o3 extends Im{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return ce(()=>{const t=DS(e,this.axis),s=Ce(Q(this.rate,dr(t,this.minValue,this.maxValue)),Q(1-this.rate,t));return Q(e,Be(s,Ce(Hn(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}o3.className="MinMaxNorm";Te(o3);const uI={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Xn(n){return vS(n)}function cI(n,e={}){return Sm(n,pi.getMap().classNameMap,e,"constraint")}function Kn(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in uI?uI[n]:n,config:{}};return cI(t)}else return n instanceof Im?n:cI(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Yl(n){if(n==null)return;const e=[],t=[],s=[];for(const r in n){const i=n[r];if(typeof i!="number"){const a=i;e.push(a.data()),t.push(r),s.push(a)}}if(e.length>0){const r=await Promise.all(e);for(let i=0;i<r.length;++i)n[t[i]]=r[i][0];rt(s)}}function l3(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var hI;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(hI||(hI={}));const Yj=125;class Jp{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Qj{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Zj extends Jp{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const r in t){const i=t[r];if(typeof i=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+i*s;else{let a;r in this.totals?a=this.totals[r]:this.totals[r]=0;const o=ce(()=>Ce(this.totals[r],Q(i,s)));this.totals[r]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:ce(()=>{const r=Q(Be(1,this.seen),this.totals[s]);t[s]=r,this.totals[s].dispose(),us(t[s])}))}}class Jj extends Jp{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const i in this.history){const a=this.history[i];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){const l=a[o];e.push(l.data()),t.push(i),s.push(o)}}const r=await Promise.all(e);for(let i=0;i<r.length;++i)this.history[t[i]][s[i]].dispose(),this.history[t[i]][s[i]]=r[i][0]}}class e5 extends Jp{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||fA,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=Yj),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");lv(this.yieldEvery)&&(this.maybeWait=pj(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const r=[];this.yield!=null&&(await Yl(s),r.push(this.yield(e,t,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Yl(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await Yl(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Yl(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await Yl(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):lv(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Yl(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Yl(e),await this.trainEnd(e))}}function u3(n,e){return n==null&&(n={}),n instanceof Jp?[n]:Array.isArray(n)&&n[0]instanceof Jp?n:qt(n).map(s=>new e5(s,e))}class hi{constructor(){}static registerCallbackConstructor(e,t){B(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),hi.checkForDuplicate(t),hi.constructors[e]==null&&(hi.constructors[e]=[]),hi.constructors[e].push(t)}static checkForDuplicate(e){for(const t in hi.constructors)hi.constructors[+t].forEach(r=>{if(r===e)throw new ie("Duplicate callback constructor.")})}static clear(){hi.constructors={}}static createCallbacks(e){const t=[];for(const s in hi.constructors){const r=+s;e>=r&&t.push(...hi.constructors[r])}return t.map(s=>new s)}}hi.constructors={};function c3(n,e,t,s,r,i,a,o,l){const c=new Jj,d=[new Zj,...hi.createCallbacks(e)];n!=null&&d.push(...n),d.push(c);const p=new Qj(d);return p.setParams({epochs:t,initialEpoch:s,samples:r,steps:i,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:p,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Za(n,e={},t=!1){return Sm(n,pi.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zy(n,e){return ce(()=>{n.dtype!=="float32"&&(n=De(n,"float32"));const t=qe($m(n),e,!0),s=ad(t.shape,Hn()),r=Ss(so(t,s));return Be(n,r)})}function Qb(n,e){return ce(()=>vn($m(Ve(e,n)),-1))}function _S(n,e){return ce(()=>vn(Gn(Ve(e,n)),-1))}function OS(n,e){return ce(()=>{const t=Ve(n,e),s=dr(Gn(n),Hn(),Number.MAX_VALUE),r=Gn(Be(t,s));return Q(100,vn(r,-1))})}function t5(n,e){return ce(()=>{const t=dr(e,Hn(),Number.MAX_VALUE),s=Ur(Ce(1,t)),r=dr(n,Hn(),Number.MAX_VALUE),i=Ur(Ce(1,r));return vn($m(Ve(s,i)),-1)})}function n5(n,e){return ce(()=>{const t=so(0,Ve(1,Q(n,e)));return vn($m(t),-1)})}function s5(n,e){return ce(()=>{const t=so(0,Ve(1,Q(n,e)));return vn(t,-1)})}function r5(n,e){return ce(()=>{const t=qe(Q(n,e),-1),s=xi(Q(Ve(1,n),e),-1);return so(0,Ce(1,Ve(s,t)))})}function i5(n,e){return ce(()=>{const t=Math.log(2),s=Ve(e,n),r=Ve(Ce(s,od(Q(-2,s))),t);return vn(r,-1)})}function ef(n,e,t=!1){return ce(()=>{if(t)e=yb(e);else{const s=qe(e,e.shape.length-1,!0);e=Be(e,s)}return e=dr(e,Hn(),1-Hn()),hn(qe(Q(De(n,"float32"),Ur(e)),e.shape.length-1))})}function Ly(n,e,t=!1){return ce(()=>{const s=De(ym(kj(n)),"int32");e=dr(e,Hn(),1-Hn());const r=e.shape,i=re(G2(s,r[r.length-1]),r);return ef(i,e,t)})}function a5(n,e){if(!yt(n.shape,e.shape))throw new ie(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return ce(()=>{const t=va(e),s=hn(Gn(e));return Ce(Ve(t,Q(e,n)),ob(qs(s)))})}function Zb(n,e){return ce(()=>{let t;return t=dr(e,Hn(),1-Hn()),t=Ur(Be(t,Ve(1,t))),vn(a5(n,t),-1)})}function o5(n,e){return ce(()=>{const t=dr(n,Hn(),1),s=dr(e,Hn(),1);return qe(Q(n,Ur(Be(t,s))),-1)})}function l5(n,e){return ce(()=>{const t=Ur(Ce(Hn(),e));return vn(Ve(e,Q(n,t)),-1)})}function h3(n,e){return ce(()=>{const t=zy(n,-1),s=zy(e,-1),r=Q(t,s);return hn(qe(r,-1))})}const Py={meanSquaredError:Qb,meanAbsoluteError:_S,meanAbsolutePercentageError:OS,meanSquaredLogarithmicError:t5,squaredHinge:n5,hinge:s5,categoricalHinge:r5,logcosh:i5,categoricalCrossentropy:ef,sparseCategoricalCrossentropy:Ly,binaryCrossentropy:Zb,kullbackLeiblerDivergence:o5,poisson:l5,cosineProximity:h3};function Mw(n){if(typeof n=="string"){if(n in Py)return Py[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ie(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function d3(n,e){return ce(()=>{const t=Q(.5,Wr(e)),s=da(Ar(e,t),n.dtype);return vn(Vi(n,s),-1)})}function p3(n,e){return ce(()=>da(Vi(bu(n,-1),bu(e,-1)),"float32"))}function u5(n,e){return ce(()=>De(qe(ma(Vi(n,1),Vi(e,1))),"float32"))}function c5(n,e){return ce(()=>De(qe(ma(Vi(n,0),Vi(e,1))),"float32"))}function h5(n,e){return ce(()=>{const t=u5(n,e),s=c5(n,e),r=Ce(t,s);return De(Rs(Ar(r,0),Be(t,r),0),"float32")})}function d5(n,e){return Zb(n,e)}function p5(n,e){return n.rank===e.rank&&(n=Bt(n,[n.rank-1])),e=bu(e,-1),e.dtype!==n.dtype&&(e=De(e,n.dtype)),De(Vi(n,e),"float32")}const f5=Qb,m5=Qb,g5=_S,y5=_S,x5=OS,b5=OS,f3=ef,w5=h3,m3=Ly,My={binaryAccuracy:d3,categoricalAccuracy:p3,precision:h5,categoricalCrossentropy:f3,sparseCategoricalCrossentropy:m3,mse:f5,MSE:m5,mae:g5,MAE:y5,mape:x5,MAPE:b5,cosine:w5};function v5(n){if(typeof n=="string"&&n in My)return My[n];if(typeof n!="string"&&n!=null)return n;throw new ie(`Unknown metric ${n}`)}function Jg(n){if(la(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(Py))if(Py[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(My))if(My[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function S5(n){const e={Adagrad:()=>Dc.adagrad(.01),Adadelta:()=>Dc.adadelta(1,.95,Hn()),Adam:()=>Dc.adam(.001,.9,.999,Hn()),Adamax:()=>Dc.adamax(.002,.9,.999,Hn(),0),RMSProp:()=>Dc.rmsprop(.001,.9,0,Hn()),SGD:()=>Dc.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new ie(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const dI=1*1024*1024;function pI(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!_v(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>dI&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${dI}.`)}}function _v(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!_v(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!_v(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function C5(n,e,t,s=console.log){const r=k5(n),i=["Layer (type)","Input Shape","Output shape","Param #"];r?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(d=>Math.floor(e*d)));let a;if(!r){i.push("Receives inputs"),a=[];for(const d in n.nodesByDepth)a.push(...n.nodesByDepth[d])}s("_".repeat(e)),By(i,t,s),s("=".repeat(e));const o=n.layers;for(let d=0;d<o.length;++d)r?N5(o[d],t,s):I5(o[d],t,a,s),s((d===o.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const l=$5(n),c=_y(n.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(e))}function $5(n){let e;return n.collectedTrainableWeights!=null?e=_y(n.collectedTrainableWeights):e=_y(n.trainableWeights),e}function k5(n){let e=!0;const t=[],s=[];for(const r in n.nodesByDepth)t.push(n.nodesByDepth[r]);for(const r of t){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of n.layers){let i=!1;for(const a of r.inboundNodes)if(s.indexOf(a)!==-1)if(i){e=!1;break}else i=!0;if(!e)break}return e}function By(n,e,t=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);t(s)}function N5(n,e,t){let s,r;try{r=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const i=n.name,a=n.getClassName(),o=[`${i} (${a})`,r,s,n.countParams().toString()];By(o,e,t)}function I5(n,e,t,s){let r,i;try{i=n.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{i="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const a=[];for(const p of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(p)===-1))for(let m=0;m<p.inboundLayers.length;++m){const g=p.inboundLayers[m].name,x=p.nodeIndices[m],b=p.tensorIndices[m];a.push(`${g}[${x}][${b}]`)}const o=n.name,l=n.getClassName(),c=a.length===0?"":a[0],d=[`${o} (${l})`,i,r,n.countParams().toString(),c];By(d,e,s);for(let p=1;p<a.length;++p)By(["","","","",a[p]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function g3(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function Ov(n,e){if(n===null)return null;if(typeof n=="string")return tu(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const i=n[r];g3(e,r,i)?t.push(i):t.push(Ov(i,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")t[s]=r;else{const i=tu(s);t[i]=Ov(r,i)}}return t}}function Fv(n,e){if(n==null)return null;if(typeof n=="string")return ja(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const i=n[r];g3(e,r,i)?t.push(i):t.push(Fv(i,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s],i=ja(s);(s==="name"||s==="className")&&typeof r=="string"?t[i]=r:t[i]=Fv(r,s)}return t}}/** @license See the LICENSE file. */const y3="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const T5=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class Fi extends vt{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const $=this.getClassName().toLowerCase();this.name=Xb($)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Go(this.inputs).length!==this.inputs.length)throw new ie(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map($=>$.name)}`);Go(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map($=>$.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const $ of this.outputs){const I=$.sourceLayer,N=$.nodeIndex,E=$.tensorIndex;this.outputLayers.push(I),this.outputLayersNodeIndices.push(N),this.outputLayersTensorIndices.push(E)}for(const $ of this.inputs){const I=$.sourceLayer,N=$.nodeIndex,E=$.tensorIndex;la(N===0,"input layer has >1 nodes"),la(E===0,"input layer has >1 tensors"),this.inputLayers.push(I),this.inputLayersNodeIndices.push(N),this.inputLayersTensorIndices.push(E)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let $=0;$<this.inputLayers.length;$++){const I=this.inputLayers[$];if(!(I instanceof Nm))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${$} (0-based) originates from layer type ${I.getClassName()}.`);this.inputNames.push(I.name),this.feedInputShapes.push(I.batchInputShape),this.feedInputNames.push(I.name)}for(const $ of this.outputLayers)this.outputNames.push($.name);this.internalInputShapes=this.inputs.map($=>$.shape),this.internalOutputShapes=this.outputs.map($=>$.shape);const t={},s={},r={},i={},a={},o=[],l=($,I,N,E,_,z)=>{(E==null||_==null||z==null)&&(E=$.sourceLayer,_=$.nodeIndex,z=$.tensorIndex);const P=E.inboundNodes[_];if(N.indexOf(P)!==-1)throw new mi(`The tensor ${$.name} at layer "${E.name}" is part of a cycle.`);if(I.indexOf(P)!==-1)return;this.containerNodes.add(Fi.nodeKey(E,_)),E.id in a||(a[E.id]=Object.keys(a).length),N.indexOf(P)===-1&&N.push(P);const O=P.inboundLayers.length;for(let L=0;L<O;L++){const D=P.inputTensors[L],G=P.inboundLayers[L],q=P.nodeIndices[L],ee=P.tensorIndices[L];l(D,I,N,G,q,ee)}for(I.push(P);N.indexOf(P)>=0;)N.splice(N.indexOf(P),1);o.push(P)},c=[],d=[];for(const $ of this.outputs)l($,c,d);const p=o.slice().reverse();for(const $ of p){s[$.id]=$,$.id in t||(t[$.id]=0);let I=t[$.id];const N=r[$.outboundLayer.id]==null?0:r[$.outboundLayer.id];I=Math.max(I,N),r[$.outboundLayer.id]=I,i[$.outboundLayer.id]=$.outboundLayer,t[$.id]=I;for(let E=0;E<$.inboundLayers.length;E++){const _=$.inboundLayers[E],z=$.nodeIndices[E],P=_.inboundNodes[z],O=t[P.id]==null?0:t[P.id];t[P.id]=Math.max(I+1,O),s[P.id]=P}}const m={};for(const $ in t){const I=t[$];I in m||(m[I]=[]),m[I].push(s[$])}const g={};for(const $ in r){const I=r[$];I in g||(g[I]=[]),g[I].push(i[$])}let x=Object.keys(g).map($=>parseInt($,10)).sort(Yg);this.layers=[];for(const $ of x){const I=g[$];I.sort((N,E)=>{const _=a[N.id],z=a[E.id];return _<z?-1:_>z?1:0});for(const N of I)N instanceof Fi&&this.internalContainerRefs.push(N),this.layers.push(N)}this.layersByDepth=g,x=Object.keys(m).map($=>parseInt($,10)).sort(Yg);const b=this.inputs.slice(),w=[];for(const $ of x)for(const I of m[$]){const N=I.outboundLayer;if(N!=null){for(const E of I.inputTensors)if(b.indexOf(E)===-1)throw new mi(`Graph disconnected: cannot obtain value for tensor ${E} at layer "${N.name}". The following previous layers were accessed without issue: ${w}`);for(const E of I.outputTensors)b.push(E);w.push(N.name)}}this.nodesByDepth=m;const v=this.layers.map($=>$.name);for(const $ of v){const I=v.filter(N=>N===$).length;if(I!==1)throw new mi(`The name "${$}" is used ${I} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(v))}this.outboundNodes=[],this.inboundNodes=[],new Yb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map($=>null),outputMasks:this.outputs.map($=>null),inputShapes:this.inputs.map($=>$.shape),outputShapes:this.outputs.map($=>$.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ie("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let r=0;const i=T5(e);i&&this.parseWeights(e);for(const o of this.layers)for(const[l,c]of o.weights.entries()){const d=i?`${c.name.split("/").slice(0,-1).join("/")+"/"}${l}`:c.originalName;if(s[d]!=null)throw new ie(`Duplicate weight name: ${d}`);s[d]=c,r++}const a=[];for(const o in e){let l=o;if(s[o]==null){const c=o.split("/");l=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(s[l]!=null)a.push([s[l],e[o]]);else if(t)throw new ie(`Provided weight data has no target variable: ${o}`);delete s[l]}if(t){const o=[];for(const l in s)o.push(l);if(o.length>0)throw new ie(`${o.length} of ${r} weights are not set: ${o}`)}AS(a)}parseWeights(e){for(const t in Object.keys(e)){const s=t.split("/"),r=["vars","layer_checkpoint_dependencies"],i=s.map(a=>a.startsWith("_")?a.slice(1):a).filter(a=>!r.includes(a)).join("/");i!==t&&(e[i]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${y3}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=Fv(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return ce(()=>{e=qt(e);const s=new Bo;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return zp(this.outputs,s,t)})}computeMask(e,t){return ce(()=>{e=qt(e);let s;return t==null?s=Cu(null,e.length):s=qt(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=Dy(e);if(t.length!==this.inputLayers.length)throw new ie(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let o=0;o<t.length;o++){const l=this.inputLayers[o],c=t[o],d=l.name+"_0_0";s[d]=c}const r=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Yg);if(r.length>1)for(const o of r){const l=this.nodesByDepth[o];for(const c of l){const d=c.outboundLayer;if(this.inputLayers.map(b=>b.id).indexOf(d.id)!==-1)continue;const p=[];for(let b=0;b<c.inboundLayers.length;b++){const w=c.inboundLayers[b],v=c.nodeIndices[b],$=c.tensorIndices[b],I=`${w.name}_${v}_${$}`,N=s[I];p.push(N)}const m=d.computeOutputShape(or(p)),g=Dy(m),x=d.inboundNodes.indexOf(c);for(let b=0;b<g.length;b++){const w=`${d.name}_${x}_${b}`;s[w]=g[b]}}}const i=[],a=[];for(let o=0;o<this.outputLayers.length;o++){const l=this.outputLayers[o],c=this.outputLayersNodeIndices[o],d=this.outputLayersTensorIndices[o],p=`${l.name}_${c}_${d}`;a.push(p)}for(let o=0;o<a.length;o++){const l=a[o];la(l in s),i.push(s[l])}return or(i)}runInternalGraph(e,t){t==null&&(t=Cu(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],d=e[l],p=t[l];s[c.id]=[d,p]}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Yg);for(const l of r){const c=this.nodesByDepth[l];for(const d of c){const p=d.outboundLayer,m=d.inputTensors,g=d.outputTensors,x=new Array;for(const b of m)b.id in s&&x.push(s[b.id]);if(x.length===m.length){let b={},w,v,$,I;if(d.callArgs!=null&&(b=d.callArgs),x.length===1){const[N,E]=x[0];b.mask==null&&(b.mask=E),$=qt(p.call(N,b)),I=qt(p.computeMask(N,E)),w=[N],v=[E]}else w=x.map(N=>N[0]),v=x.map(N=>N[1]),b.mask==null&&(b.mask=v),$=qt(p.call(w,b)),I=qt(p.computeMask(w,v));if(p.activityRegularizer)throw new bt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let N=0;N<g.length;++N){const E=g[N],_=$[N],z=I[N];s[E.id]=[_,z]}}}}const i=[],a=[],o=[];for(const l of this.outputs){la(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[c,d]=s[l.id];o.push(c.shape),i.push(c),a.push(d)}return[i,a,o]}buildNodeConversionMap(e){const t={};let s;for(const r of this.layers){s=r instanceof Fi?1:0;for(let i=0;i<r.inboundNodes.length;i++){const a=Fi.nodeKey(r,i);this.containerNodes.has(a)&&(t[a]=s,s+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new ie("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new ie(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new ie(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return ce(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const r=Fi.nodeKey(t,s);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const a of this.layers){const o=a.getClassName(),l=a.getConfig(),c=[];for(let p=0;p<a.inboundNodes.length;p++){const m=a.inboundNodes[p],g=Fi.nodeKey(a,p);let x={};if(this.containerNodes.has(g)){if(m.callArgs)try{JSON.stringify(m.callArgs),x=m.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),x={}}if(m.inboundLayers.length>0){const b=[];for(let w=0;w<m.inboundLayers.length;w++){const v=m.inboundLayers[w],$=m.nodeIndices[w],I=m.tensorIndices[w],N=Fi.nodeKey(v,$);let E=t[N];E==null&&(E=0),b.push([v.name,E,I,x])}c.push(b)}}}const d={};d.name=a.name,d.className=o,d.config=l,d.inboundNodes=c,s.push(d)}e.layers=s;const r=[];for(let a=0;a<this.inputLayers.length;a++){const o=this.inputLayers[a],l=this.inputLayersNodeIndices[a],c=Fi.nodeKey(o,l);if(!this.containerNodes.has(c))continue;let d=t[c];d==null&&(d=0);const p=this.inputLayersTensorIndices[a];r.push([o.name,d,p])}e.inputLayers=r;const i=[];for(let a=0;a<this.outputLayers.length;a++){const o=this.outputLayers[a],l=this.outputLayersNodeIndices[a],c=Fi.nodeKey(o,l);if(!this.containerNodes.has(c))continue;let d=t[c];d==null&&(d=0);const p=this.outputLayersTensorIndices[a];i.push([o.name,d,p])}return e.outputLayers=i,e}static fromConfig(e,t,s={},r=!1){const i={},a={};function o(w,v){w.name in a?a[w.name].push(v):a[w.name]=[v]}function l(w,v){const $=[];let I;for(const N of v){const E=N[0],_=N[1],z=N[2];if(I=N[3]==null?{}:N[3],!(E in i)){o(w,v);return}const P=i[E];if(P.inboundNodes.length<=_){o(w,v);return}const O=P.inboundNodes[_];$.push(O.outputTensors[z])}$.length>0&&w.apply(or($),I)}function c(w){const v=w.name,$=Za(w,t.customObjects!=null?t.customObjects:{});$.setFastWeightInitDuringBuild(r),i[v]=$,w.inboundNodes.forEach(N=>{if(!(N instanceof Array))throw new ie(`Corrupted configuration, expected array for nodeData: ${N}`);o($,N)})}const d=t.name,p=t.layers;for(const w of p)c(w);for(;!dj(a);)for(const w of p){const v=i[w.name];if(v.name in a){const $=a[v.name];delete a[v.name];for(const I of $)l(v,I)}}const m=[],g=[],x=t.inputLayers;for(const w of x){const v=w[0],$=w[1],I=w[2];la(v in i);const E=i[v].inboundNodes[$].outputTensors;m.push(E[I])}const b=t.outputLayers;for(const w of b){const v=w[0],$=w[1],I=w[2];la(v in i);const E=i[v].inboundNodes[$].outputTensors;g.push(E[I])}return new e({inputs:m,outputs:g,name:d})}get stateful(){if(this._stateful)throw new ie("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ce(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function E5(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return e.forEach(i=>{i in n?r.push(n[i]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function x3(n,e){return E5(n,e,"classWeight")}async function b3(n,e,t,s){if(t!=null){const r=ce(()=>{if(n.shape.length===1)return Qa(n);if(n.shape.length===2){if(n.shape[1]>1)return bu(n,1);if(n.shape[1]===1)return re(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),i=Array.from(await r.data());rt(r);const a=[];return i.forEach(o=>{if(t[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);a.push(t[o])}),Pn(a,"float32")}else return null}function R5(n,e){return Q(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const A5=32;function w3(n,e){let t,s;const r=e;t=r.xs,s=r.ys,B(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const i=fI("input",n.inputNames,t),a=fI("output",n.outputNames,s),o=i[0].shape[0];B(i.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),B(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<i.length;l++)B(i[l].shape[0]===o,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);for(let l=0;l<a.length;l++)B(a[l].shape[0]===o,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);return{xs:i,ys:a}}function fI(n,e,t){if(t instanceof Ht)return[t];if(Array.isArray(t))return B(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const r of e){if(t[r]==null)throw new ie(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(t[r])}return s}}function D5(n){if(n.length===3)throw new bt("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function _5(n,e,t){const s=t.batchesPerEpoch!=null;if(B(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),B(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),B(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),B(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),B(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=t.validationData!=null;let i,a;if(r)if(mI(t.validationData))B(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const w=D5(t.validationData);i=w.xs,a=w.ys}const o=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let c;r?c=l.slice().concat(l.map(w=>"val_"+w)):c=l.slice();const d=u3(t.callbacks,t.yieldEvery),p=t.verbose==null?1:t.verbose,{callbackList:m,history:g}=c3(d,p,t.epochs,null,null,O5(e,t),null,r,c);m.setModel(n),n.history=g,await m.onTrainBegin(),n.stopTraining_=!1;let x=t.initialEpoch==null?0:t.initialEpoch,b=await e.iterator();for(;x<t.epochs;){const w={};await m.onEpochBegin(x);let v=0,$=0;for(s||(b=await e.iterator());!s||v<t.batchesPerEpoch;){const I=await b.next();if(s&&I.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${v} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(I.value!=null){const{xs:N,ys:E}=w3(n,I.value),_={};_.batch=$,_.size=N[0].shape[0],await m.onBatchBegin($,_);const z=[];if(t.classWeight!=null){const L=x3(t.classWeight,n.outputNames);for(let D=0;D<L.length;++D)z.push(await b3(E[D],null,L[D]))}const P=N.concat(E).concat(z),O=o(P);rt(P);for(let L=0;L<l.length;++L){const D=l[L],G=O[L];_[D]=G,us(G)}await m.onBatchEnd($,_),l3(_),$++,v++}if(s?v>=t.batchesPerEpoch:I.done){if(r){let N;mI(t.validationData)?N=qt(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):N=qt(n.evaluate(i,a,{batchSize:t.validationBatchSize==null?A5:t.validationBatchSize,verbose:0}));for(let E=0;E<n.metricsNames.length;++E)w[`val_${n.metricsNames[E]}`]=N[E]}break}if(n.stopTraining_)break}if(await m.onEpochEnd(x,w),x++,n.stopTraining_)break}return await m.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function O5(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function mI(n){return typeof n.iterator=="function"}function F5(n){return typeof n.next=="function"}async function z5(n,e,t){t=t||{};const s=t.batches!=null,r=n.testFunction;let i=[];if(t.verbose>0)throw new bt("Verbose mode is not implemented yet.");B(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const a=F5(e)?e:await e.iterator();let o=0,l=0;for(;!s||l<t.batches;){const c=await a.next();if(i=ce(()=>{if(c.value){const{xs:d,ys:p}=w3(n,c.value),m=d.concat(p),g=ce(()=>r(m));if(rt(m),l===0)for(let b=0;b<g.length;++b)i.push(Ze(0));const x=m[0].shape[0];for(let b=0;b<g.length;++b){const w=g[b],v=i[b];i[b]=ce(()=>Ce(i[b],Q(x,w))),l>0&&rt(v)}rt(g),o+=x,++l}return i}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<i.length;++c){const d=i[c];i[c]=Be(i[c],o),rt(d)}return or(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Bw(n){B(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function Rp(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>cu(s,e,t-e)):cu(n,e,t-e)}function zv(n,e){return ce(()=>n==null?null:Array.isArray(n)?n.map(t=>zv(t,e)):XA(n,e.dtype==="int32"?e:De(e,"int32")))}function Vw(n,e){const t=[];let s=0,r=null;for(;s<n;)r=s+e,r>=n&&(r=n),t.push([s,r]),s=r;return t}function v3(n){const e=[];n instanceof Ht&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(Cm(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function Oi(n,e){if(n==null)return;const t=[];if(e instanceof Ht)t.push(e.id);else if(Array.isArray(e))e.forEach(r=>t.push(r.id));else if(e!=null)for(const r in e){const i=e[r];t.push(i.id)}const s=[];if(n instanceof Ht)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{t.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const i=n[r];t.indexOf(i.id)===-1&&s.push(i)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function L5(n){return n instanceof Ht}function Lv(n){return Array.isArray(n)}function gI(n){return!L5(n)&&!Lv(n)}function yI(n,e,t,s=!0,r=""){if(e==null||e.length===0){if(n!=null){let a=!1;if(Lv(n)&&n.length>0)a=!0;else if(gI(n)){for(const o in n)if(n.hasOwnProperty(o)){a=!0;break}}else a=!0;if(a)throw new ie(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(a=>null);let i;if(gI(n)){n=n,i=[];for(const a of e){if(n[a]==null)throw new ie(`No data provided for "${a}". Need data for each key in: ${e}`);i.push(n[a])}}else if(Lv(n)){if(n=n,n.length!==e.length)throw new ie(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);i=n}else{if(n=n,e.length>1)throw new ie(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);i=[n]}if(i=v3(i),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const o=i[a];if(o.shape.length!==t[a].length)throw new ie(`Error when checking ${r}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<t[a].length;++l){if(l===0&&!s)continue;const c=o.shape[l],d=t[a][l];if(d!=null&&d>=0&&c!==d)throw new ie(`${r} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${r} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return i}function P5(n,e,t){const s=Go(n.map(i=>i.shape[0]));s.sort();const r=Go(e.map(i=>i.shape[0]));if(r.sort(),s.length>1)throw new ie(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(i=>i.shape))}`);if(r.length>1)throw new ie(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(i=>i.shape))}`);if(s.length>0&&r.length>0&&!yt(s,r))throw new ie(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function M5(n,e,t){const s=[Qb,Zb,ef];for(let r=0;r<n.length;++r){const i=n[r],a=e[r],o=t[r];if(a!=null){if(a===ef&&i.shape[i.shape.length-1]===1)throw new ie(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(a)!==-1){const l=i.shape.slice(1),c=o.slice(1);for(let d=0;d<l.length;++d){const p=l[d],m=c[d];if(m!=null&&p!==m)throw new ie(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function xI(n,e,t,s=!0,r=""){let i;if(Array.isArray(n)){if(n.length!==e.length)throw new ie(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);i=n}else{if(e.length>1)throw new ie(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);i=[n]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const o=i[a];if(o.shape.length!==t[a].length)throw new ie(`Error when checking ${r}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<t[a].length;++l){if(l===0&&!s)continue;const c=o.shape[l],d=t[a][l];if(d!=null&&d!==c)throw new ie(`Error when checking ${r}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function B5(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let i=t.hasOwnProperty(r)?t[r]:[];Array.isArray(i)||(i=[i]),s.push(i)}return s}}const V5="layers-model";class jc extends Fi{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new ie("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");C5(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=S5(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ul))throw new ie("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new ie(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Mw(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ie(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>Mw(o))}else{const a=Mw(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const o=this.internalOutputShapes[a],l=this.outputNames[a];this.feedOutputNames.push(l),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],uu("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const r=B5(e.metrics,this.outputNames),i=(a,o,l)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([l,a])};uu("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const o=r[a];(c=>{const d="";let p,m,g;for(const x of c){if(typeof x=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(x)!==-1){const w=this.internalOutputShapes[a];w[w.length-1]===1||this.lossFunctions[a]===Zb?["accuracy","acc"].indexOf(x)!==-1?m=d3:["crossentropy","ce"].indexOf(x)!==-1&&(m=d5):this.lossFunctions[a]===Ly?["accuracy","acc"].indexOf(x)!==-1?m=p5:["crossentropy","ce"].indexOf(x)!==-1&&(m=m3):["accuracy","acc"].indexOf(x)!==-1?m=p3:["crossentropy","ce"].indexOf(x)!==-1&&(m=f3);let v;["accuracy","acc"].indexOf(x)!==-1?v="acc":["crossentropy","ce"].indexOf(x)!==-1&&(v="ce"),g=m,p=d+v}else g=v5(x),p=d+Jg(x);let b;uu(p,()=>{b=g}),i(a,p,b)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const r=s.batchSize==null?32:s.batchSize;Bw(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const o=a[0].concat(a[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,o,r,s.verbose,s.steps);return or(c)}finally{Oi(a[0],e),Oi(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),z5(this,e,t)}checkNumSamples(e,t,s,r="steps"){let i;if(s!=null){if(i=null,t!=null)throw new ie(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?i=e[0].shape[0]:i=e.shape[0];else throw new ie(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return i}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new ie("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),r=s?t:[t],i=this.retrieveSymbolicTensors(r),a=new Bo;if(e instanceof Ht&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ie(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)a.add(this.inputs[l],e[l])}else for(const l of this.inputs){const c=e[l.name];if(c==null)throw new ie(`No value is provided for the model's input ${l.name}`);a.add(l,c)}const o=zp(i,a);return s?o:o[0]}retrieveSymbolicTensors(e){const t=Cu(null,e.length);let s=e.length;for(const r of this.layers){const i=Array.isArray(r.output)?r.output:[r.output],a=i.map(o=>o.name);for(let o=0;o<e.length;++o){const l=a.indexOf(e[o]);if(l!==-1&&(t[o]=i[l],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw t.forEach((i,a)=>{i==null&&r.push(e[a])}),new ie(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,s=!1){return ce(()=>{const r=this.checkNumSamples(e);if(s)throw new bt("Verbose predictLoop() is not implemented yet.");const i=Vw(r,t),a=this.outputs.map(o=>[]);for(let o=0;o<i.length;++o)ce(()=>{const c=i[o][0],d=i[o][1],p=Rp(e,c,d),m=[];if(Array.isArray(p))for(let x=0;x<p.length;++x)m.push({key:this.inputs[x],value:p[x]});else m.push({key:this.inputs[0],value:p});const g=new Bo(m);return zp(this.outputs,g)}).forEach((c,d)=>a[d].push(c));return or(a.map(o=>yn(o,0)))})}predict(e,t={}){const s=v3(e);xI(s,this.inputNames,this.feedInputShapes,!1);try{const r=t.batchSize==null?32:t.batchSize;return Bw(r),this.predictLoop(s,r)}finally{Oi(s,e)}}predictOnBatch(e){xI(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,r){if(this.optimizer_==null)throw new mi("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let a=0;a<this.feedOutputShapes.length;++a){const o=this.feedOutputShapes[a];this.feedLossFns[a]===Ly?i.push(o.slice(0,o.length-1).concat([1])):i.push(o)}if(e=yI(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=yI(t,this.feedOutputNames,i,!1,"target"),P5(e,t),M5(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new ie(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,r,i=!0,a){const[o,l]=this.standardizeUserDataXY(e,t,i,a);if(s!=null)throw new Error("sample weight is not supported yet.");let c=null;if(r!=null){const d=x3(r,this.outputNames);c=[];for(let p=0;p<d.length;++p)c.push(await b3(l[p],null,d[p]))}return[o,l,c]}testLoop(e,t,s,r=0,i){return ce(()=>{const a=this.checkNumSamples(t,s,i,"steps"),o=[];if(r>0)throw new bt("Verbose mode is not implemented yet.");if(i!=null)throw new bt("steps mode in testLoop() is not implemented yet");{const l=Vw(a,s),c=Pn(Hi(0,a));for(let d=0;d<l.length;++d){const p=l[d][0],m=l[d][1],g=cu(c,p,m-p),x=zv(t,g),b=e(x);if(d===0)for(let w=0;w<b.length;++w)o.push(Ze(0));for(let w=0;w<b.length;++w){const v=b[w];o[w]=Ce(o[w],Q(m-p,v))}}for(let d=0;d<o.length;++d)o[d]=Be(o[d],a)}return o})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const r=e[s];let i=r;if(nI(e,r)>1){const a=nI(e.slice(0,s),r);i+=`_${a}`}t.push(i)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{const p=[];for(let b=0;b<this.inputs.length;++b)p.push({key:this.inputs[b],value:s[b]});const m=new Bo(p),g=zp(this.outputs,m,{training:!0});let x;for(let b=0;b<this.lossFunctions.length;++b){const w=this.lossFunctions[b];let v=w(r[b],g[b]);i[b]!=null&&(v=R5(v,i[b]));const $=vn(v);t.push($),b===0?x=v:x=Ce(x,v)}for(let b=0;b<this.metricsTensors.length;++b){let w;if(this.outputs.length>1&&b<this.outputs.length)w=t[b];else{const v=this.metricsTensors[b][0],$=this.metricsTensors[b][1];w=vn(v(r[$],g[$]))}us(w),a.push(w)}return x=vn(x),this.calculateLosses().forEach(b=>{x=Ce(x,b)}),x},l=this.collectedTrainableWeights.map(p=>p.read());return[this.optimizer_.minimize(o,!0,l)].concat(a)}}makeTestFunction(){this.testFunction=e=>ce(()=>{const t=[];let s;const r=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let c=0;c<this.inputs.length;++c)a.push({key:this.inputs[c],value:r[c]});const o=new Bo(a),l=zp(this.outputs,o);for(let c=0;c<this.lossFunctions.length;++c){const d=this.lossFunctions[c],p=vn(d(i[c],l[c]));c===0?s=p:s=Ce(s,p),t.push(s)}for(let c=0;c<this.metricsTensors.length;++c){const d=this.metricsTensors[c][0],p=this.metricsTensors[c][1],m=vn(d(i[p],l[p]));t.push(m)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,i,a,o,l,c,d,p,m;try{const g=s.batchSize==null?32:s.batchSize;Bw(g);const b=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,!1,g);r=b[0],i=b[1],m=b[2];let w=!1,v;if(s.validationData!=null&&s.validationData.length>0){if(w=!0,s.validationData.length===2)l=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new bt("validationData including sample weights is not supported yet."):new ie(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const L=await this.standardizeUserData(l,c,null,null,!0,g);d=L[0],p=L[1],v=d.concat(p)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){w=!0;const O=Math.floor(r[0].shape[0]*(1-s.validationSplit)),L=r[0].shape[0];d=Rp(r,O,L),a=r,r=Rp(r,0,O),p=Rp(i,O,L),o=i,i=Rp(i,0,O),v=d.concat(p)}else s.validationSteps!=null&&(w=!0);const $=r.concat(i).concat(m);this.checkTrainableWeightsConsistency();const I=this.makeTrainFunction(),N=this.getDedupedMetricsNames();let E,_;w?(this.makeTestFunction(),E=this.testFunction,_=N.slice().concat(N.map(O=>"val_"+O))):(E=null,v=[],_=N.slice());const z=u3(s.callbacks,s.yieldEvery);return await this.fitLoop(I,$,N,g,s.epochs,s.verbose,z,E,v,s.shuffle,_,s.initialEpoch,null,null)}finally{this.isTraining=!1,Oi(r,e),Oi(i,t),Oi(a,e),Oi(o,t),Oi(d,l),Oi(p,c),m!=null&&rt(m)}}async fitLoop(e,t,s,r,i,a,o,l,c,d,p,m,g,x){r==null&&(r=32),i==null&&(i=1),d==null&&(d=!0),m==null&&(m=0);let b=!1;if(l!=null&&c!=null&&(b=!0),x!=null&&(b=!0,g==null))throw new ie("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const w=this.checkNumSamples(t,r,g,"steps_per_epoch");let v;w!=null&&(v=Hi(0,w)),a==null&&(a=1);const{callbackList:$,history:I}=c3(o,a,i,m,w,g,r,b,p);$.setModel(this),this.history=I,await $.onTrainBegin(),this.stopTraining_=!1;for(let N=m;N<i;++N){await $.onEpochBegin(N);const E={};if(g!=null)throw new bt("stepsPerEpoch mode is not implemented yet.");{if(d==="batch")throw new bt("batch shuffling is not implemneted yet");d&&_L(v);const _=Pn(v),z=Vw(w,r);for(let P=0;P<z.length;++P){const O={};if(await $.onBatchBegin(P,O),ce(()=>{const L=z[P][0],D=z[P][1],G=cu(_,L,D-L);O.batch=P,O.size=D-L;const q=zv(t,G),ee=e(q);for(let Z=0;Z<s.length;++Z){const H=s[Z],oe=ee[Z];O[H]=oe,us(oe)}if(P===z.length-1&&b){const Z=this.testLoop(l,c,r);for(let H=0;H<s.length;++H){const oe=s[H],se=Z[H];us(se),E["val_"+oe]=se}}}),await $.onBatchEnd(P,O),l3(O),this.stopTraining_)break}_.dispose()}if(await $.onEpochEnd(N,E),this.stopTraining_)break}return await $.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return _5(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),r=s[0],i=s[1],o=this.makeTrainFunction()(r.concat(i)),l=[];for(const c of o){const d=await c.data();l.push(d[0])}return rt(o),Oi(s[0],e),Oi(s[1],t),or(l)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,i=this.getWeights(s);for(let a=0;a<r.length;++a)s&&!r[a].trainable||t.push({name:r[a].originalName,tensor:i[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=RN().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-RN().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=ja(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>ja(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const r of t)if(typeof s[r]=="string")e[r]=ja(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ja(Jg(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ja(Jg(e)));{const e={};for(const t in this.metrics)e[t]=ja(Jg(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ov(e.optimizer_config),s=Za(t);let r;if(typeof e.loss=="string")r=tu(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(a=>tu(a));else if(e.loss!=null){r={};for(const a in e.loss)r[a]=tu(e.loss[a])}let i;if(Array.isArray(e.metrics))i=e.metrics.map(a=>tu(a));else if(e.metrics!=null){i={};for(const a in e.metrics)i[a]=tu(e.metrics[a])}this.compile({loss:r,metrics:i,optimizer:s})}async save(e,t){if(typeof e=="string"){const c=_E(e);if(c.length===0)throw new ie(`Cannot find any save handlers for URL '${e}'`);if(c.length>1)throw new ie(`Found more than one (${c.length}) save handlers for URL '${e}'`);e=c[0]}if(e.save==null)throw new ie("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await yv(this.getNamedWeights(t)),o={modelTopology:this.toJSON(null,!1),format:V5,generatedBy:`TensorFlow.js tfjs-layers v${y3}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:d,specs:p}=await yv(await this.optimizer.getWeights(),c);s.specs.push(...p),s.data=RE([s.data,d])}return this.userDefinedMetadata!=null&&(pI(this.userDefinedMetadata,this.name,!0),o.userDefinedMetadata=this.userDefinedMetadata),o.weightData=s.data,o.weightSpecs=s.specs,e.save(o)}setUserDefinedMetadata(e){pI(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}jc.className="Model";Te(jc);class S3 extends jc{}S3.className="Functional";Te(S3);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class tf extends jc{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Xb("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new ie(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof tf||e instanceof jc;let s;if(t){if(s=e,s.outputs.length!==1)throw new ie("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new ie("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new ie("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=Wj({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new ie(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new ie("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=s3(this.outputs[0])}this.inboundNodes=[],new Yb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Cu(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Pt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new jc({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new mi("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new mi("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new mi("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new mi("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},r=!1){let i,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new ie("Legacy serialization format not supported yet.");i=t}else B(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=t.layers,delete t.layers,a=t;const o=new e(a);if(!(o instanceof tf))throw new bt(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const l of i){const d=Za(l,void 0,r);r&&d.setFastWeightInitDuringBuild(!0),o.add(d)}return o}set stopTraining(e){if(this.model==null)throw new ie("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new ie("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}tf.className="Sequential";Te(tf);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Ds=class extends cd{getConfig(){return{}}};class C3 extends Ds{apply(e,t=1){return Ij(e,t)}}C3.className="elu";Te(C3);class $3 extends Ds{apply(e){return Y2(e)}}$3.className="selu";Te($3);class k3 extends Ds{apply(e){return va(e)}}k3.className="relu";Te(k3);class N3 extends Ds{apply(e){return ce(()=>Qo(6,va(e)))}}N3.className="relu6";Te(N3);class I3 extends Ds{apply(e){return e}}I3.className="linear";Te(I3);class T3 extends Ds{apply(e){return Vr(e)}}T3.className="sigmoid";Te(T3);class E3 extends Ds{apply(e){return Ej(e)}}E3.className="hardSigmoid";Te(E3);class R3 extends Ds{apply(e){return od(e)}}R3.className="softplus";Te(R3);class A3 extends Ds{apply(e){return Tj(e)}}A3.className="softsign";Te(A3);class D3 extends Ds{apply(e){return vu(e)}}D3.className="tanh";Te(D3);let FS=class extends Ds{apply(e,t=-1){return yb(e,t)}};FS.className="softmax";Te(FS);class _3 extends Ds{apply(e,t=-1){return B2(e,t)}}_3.className="logSoftmax";Te(_3);class O3 extends Ds{apply(e){return ce(()=>ce(()=>{const t=Math.sqrt(2),s=Q(.5,Ce(1,L2(Be(e,t))));return Q(e,s)}))}}O3.className="gelu";Te(O3);class F3 extends Ds{apply(e){return ce(()=>Q(.5,Q(e,Ce(1,vu(Q(Ss(Be(2,Math.PI)),Ce(e,Q(.044715,to(e,3)))))))))}}F3.className="gelu_new";Te(F3);class z3 extends Ds{apply(e){return ce(()=>Q(e,vu(od(e))))}}z3.className="mish";Te(z3);class L3 extends Ds{apply(e,t=1){return ce(()=>Q(Vr(Q(e,t)),e))}}L3.className="swish";Te(L3);function Jo(n){return n.getClassName()}function Uw(n,e={}){return Sm(n,pi.getMap().classNameMap,e,"activation")}function el(n){if(n==null){const e={};return e.className="linear",e.config={},Uw(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},Uw(e)}else return n instanceof Ds?n:Uw(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function U5(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class P3 extends cd{}class M3 extends P3{constructor(e){super(),U5(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return ce(()=>{let t=Rn([1]);return this.hasL1&&(t=Ce(t,qe(Q(this.l1,Gn(e))))),this.hasL2&&(t=Ce(t,qe(Q(this.l2,$m(e))))),re(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}M3.className="L1L2";Te(M3);const bI={l1l2:"L1L2"};function tn(n){return vS(n)}function wI(n,e={}){return Sm(n,pi.getMap().classNameMap,e,"regularizer")}function fn(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in bI?bI[n]:n,config:{}};return wI(t)}else return n instanceof P3?n:wI(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class B3 extends vt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=ht(e);let s=va(e);return this.maxValue!=null&&(s=dr(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}B3.className="ReLU";Te(B3);class V3 extends vt{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=ht(e);return ab(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}V3.className="LeakyReLU";Te(V3);class U3 extends vt{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=pn(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=fn(e.alphaRegularizer),this.alphaConstraint=Kn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new ie(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Pt(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new jn({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=ht(e),pb(e,this.alpha.read())}getConfig(){const e={alphaInitializer:gn(this.alphaInitializer),alphaRegularizer:tn(this.alphaRegularizer),alphaConstraint:Xn(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}U3.className="PReLU";Te(U3);let W3=class extends vt{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new bt(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=ht(e);return mm(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};W3.className="ELU";Te(W3);class G3 extends vt{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=ht(e);return Q(s,De(Ar(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}G3.className="ThresholdedReLU";Te(G3);class H3 extends vt{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new FS().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return ce(()=>{let s=ht(e);const r=t.mask;if(r!=null){const i=Q(Ve($r(s.shape),De(r,s.dtype)),Ze(-1e9));s=Ce(s,i)}return this.axis instanceof Array?this.axis.length>1?qs(Ve(s,lb(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}H3.className="Softmax";Te(H3);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qc(n,e,t){if(typeof n=="number")return Cu(n,e);if(n.length!==e)throw new ie(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const r=n[s];if(!Cj(r))throw new ie(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function Mi(n,e,t,s,r=1){if(n==null)return n;const i=e+(e-1)*(r-1);let a;return t==="same"?a=n:a=n-i+1,Math.floor((a+s-1)/s)}function ua(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+Zo([t-e,0]);else if(s==="same")n=n*e;else throw new ie(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zS(n,e){return ce(()=>(_n(e),e==="channelsFirst"?At(n,[0,2,3,1]):n))}function j3(n,e){return ce(()=>(_n(e),e==="channelsFirst"?At(n,[0,2,3,4,1]):n))}function W5(n,e,t,s=1,r="valid",i,a=1){return ce(()=>{if(i==null&&(i=ji()),_n(i),n.shape.length!==3)throw new ie(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new ie(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new ie(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(i==="channelsFirst"&&(n=At(n,[0,2,1])),r==="causal")throw new bt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=D2(n,e,s,r==="same"?"same":"valid","NWC",a);return t!=null&&(o=Yi(o,t)),o})}function vI(n,e,t,s=[1,1],r="valid",i,a,o=null){return ce(()=>{if(i==null&&(i=ji()),_n(i),n.rank!==3&&n.rank!==4)throw new ie(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new ie(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=zS(n,i);if(r==="causal")throw new bt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=MR({x:l,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:o}),i==="channelsFirst"&&(l=At(l,[0,3,1,2])),l})}function G5(n,e,t,s=[1,1,1],r="valid",i,a){return ce(()=>{if(i==null&&(i=ji()),_n(i),n.rank!==4&&n.rank!==5)throw new ie(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new ie(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let o=j3(n,i);if(r==="causal")throw new bt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=aR(o,e,s,r==="same"?"same":"valid","NDHWC",a),t!=null&&(o=Yi(o,t)),i==="channelsFirst"&&(o=At(o,[0,4,1,2,3])),o})}class Jb extends vt{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Jb.verifyArgs(t),this.rank=e,cs(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new bt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=qc(t.kernelSize,e,"kernelSize"),this.strides=qc(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,jr(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,_n(this.dataFormat),this.activation=el(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=pn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Kn(t.biasConstraint),this.biasRegularizer=fn(t.biasRegularizer),this.activityRegularizer=fn(t.activityRegularizer),this.dilationRate=qc(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new ie(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new ie(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new ie(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(la("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!SS(e.kernelSize,"number",1,3))throw new ie(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Jo(this.activation),useBias:this.useBias,biasInitializer:gn(this.biasInitializer),biasRegularizer:tn(this.biasRegularizer),activityRegularizer:tn(this.activityRegularizer),biasConstraint:Xn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class hd extends Jb{constructor(e,t){super(e,t),this.kernel=null,hd.verifyArgs(t),this.filters=t.filters,cs(this.filters,"filters"),this.kernelInitializer=pn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Kn(t.kernelConstraint),this.kernelRegularizer=fn(t.kernelRegularizer)}build(e){e=Pt(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new ie(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return ce(()=>{e=ht(e);let s;const r=this.bias==null?null:this.bias.read(),i=UA(this.activation.getClassName());if(i!=null&&this.rank===2)s=vI(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,i);else{if(this.rank===1)s=W5(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=vI(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=G5(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new bt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=Pt(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let i=0;i<s.length;++i){const a=Mi(s[i],this.kernelSize[i],this.padding,this.strides[i],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[i]);t.push(a)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:gn(this.kernelInitializer),kernelRegularizer:tn(this.kernelRegularizer),kernelConstraint:Xn(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new ie(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Tm extends hd{constructor(e){super(2,e),Tm.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!SS(e.kernelSize,"number",1,2))throw new ie(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Tm.className="Conv2D";Te(Tm);class Em extends hd{constructor(e){super(3,e),Em.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new ie(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Em.className="Conv3D";Te(Em);class q3 extends Tm{constructor(e){if(super(e),this.inputSpec=[new jn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new ie(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Pt(e),e.length!==4)throw new ie("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new ie("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new jn({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return ce(()=>{let s=ht(e);if(s.shape.length!==4)throw new ie(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);const l=r[a],c=r[o],d=this.kernelSize[0],p=this.kernelSize[1],m=this.strides[0],g=this.strides[1],x=ua(l,m,d,this.padding),b=ua(c,g,p,this.padding),w=[i,x,b,this.filters];this.dataFormat!=="channelsLast"&&(s=At(s,[0,2,3,1]));let v=O2(s,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(v=At(v,[0,3,1,2])),this.bias!=null&&(v=Yi(v,this.bias.read(),this.dataFormat)),this.activation!=null&&(v=this.activation.apply(v)),v})}computeOutputShape(e){e=Pt(e);const t=e.slice();let s,r,i;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3):(s=3,r=1,i=2);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return t[s]=this.filters,t[r]=ua(t[r],l,a,this.padding),t[i]=ua(t[i],c,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}q3.className="Conv2DTranspose";Te(q3);class X3 extends Em{constructor(e){if(super(e),this.inputSpec=[new jn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new ie(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Pt(e),e.length!==5)throw new ie("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new ie("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new jn({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return ce(()=>{let s=ht(e);if(s.shape.length!==5)throw new ie(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let a,o,l;this.dataFormat==="channelsFirst"?(l=2,a=3,o=4):(l=1,a=2,o=3);const c=r[l],d=r[a],p=r[o],m=this.kernelSize[0],g=this.kernelSize[1],x=this.kernelSize[2],b=this.strides[0],w=this.strides[1],v=this.strides[2],$=ua(c,b,m,this.padding),I=ua(d,w,g,this.padding),N=ua(p,v,x,this.padding),E=[i,$,I,N,this.filters];this.dataFormat!=="channelsLast"&&(s=At(s,[0,2,3,4,1]));let _=lR(s,this.kernel.read(),E,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(_=At(_,[0,4,1,2,3])),this.bias!==null&&(_=Yi(_,this.bias.read(),this.dataFormat)),this.activation!==null&&(_=this.activation.apply(_)),_})}computeOutputShape(e){e=Pt(e);const t=e.slice();let s,r,i,a;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3,a=4):(s=4,r=1,i=2,a=3);const o=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],d=this.strides[0],p=this.strides[1],m=this.strides[2];return t[s]=this.filters,t[r]=ua(t[r],d,o,this.padding),t[i]=ua(t[i],p,l,this.padding),t[a]=ua(t[a],m,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}X3.className="Conv3DTranspose";Te(X3);class K3 extends hd{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new ie("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new ie("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new ie(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=pn(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=fn(t.depthwiseRegularizer),this.depthwiseConstraint=Kn(t.depthwiseConstraint),this.pointwiseInitializer=pn(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=fn(t.pointwiseRegularizer),this.pointwiseConstraint=Kn(t.pointwiseConstraint)}build(e){if(e=Pt(e),e.length<this.rank+2)throw new ie(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new ie(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],r=this.kernelSize.concat([s,this.depthMultiplier]),i=[];for(let o=0;o<this.rank;++o)i.push(1);i.push(s*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new jn({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return ce(()=>{e=ht(e);let s;if(this.rank===1)throw new bt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=At(e,[0,2,3,1])),s=Q2(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Yi(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=At(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=gn(this.depthwiseInitializer),e.pointwiseInitializer=gn(this.pointwiseInitializer),e.depthwiseRegularizer=tn(this.depthwiseRegularizer),e.pointwiseRegularizer=tn(this.pointwiseRegularizer),e.depthwiseConstraint=Xn(this.depthwiseConstraint),e.pointwiseConstraint=Xn(this.pointwiseConstraint),e}}K3.className="SeparableConv";class Y3 extends K3{constructor(e){super(2,e)}}Y3.className="SeparableConv2D";Te(Y3);class e0 extends hd{constructor(e){super(1,e),e0.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!SS(e.kernelSize,"number",1,1))throw new ie(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}e0.className="Conv1D";Te(e0);class Q3 extends vt{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ce(()=>{if(e=ht(e),this.dataFormat==="channelsLast"){const s=Zg(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Zg(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Zg(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Zg(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Q3.className="Cropping2D";Te(Q3);class Z3 extends vt{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,_n(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,wj(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return ce(()=>{let s=ht(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=At(s,[0,2,3,1]);const i=this.size[0]*r[2],a=this.size[1]*r[3],o=this.interpolation==="nearest"?js.resizeNearestNeighbor(s,[i,a]):js.resizeBilinear(s,[i,a]);return At(o,[0,3,1,2])}else{const i=this.size[0]*r[1],a=this.size[1]*r[2];return this.interpolation==="nearest"?js.resizeNearestNeighbor(s,[i,a]):js.resizeBilinear(s,[i,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Z3.className="UpSampling2D";Te(Z3);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function H5(n,e,t=[1,1],s="valid",r,i){return ce(()=>{r==null&&(r=ji()),_n(r);let a=zS(n,r);if(n.rank!==4)throw new ie(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new ie(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=fm(a,e,t,s==="same"?"same":"valid","NHWC",i),r==="channelsFirst"&&(a=At(a,[0,3,1,2])),a})}class J3 extends Jb{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=pn(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Kn(e.depthwiseConstraint),this.depthwiseRegularizer=fn(e.depthwiseRegularizer)}build(e){if(e=Pt(e),e.length<4)throw new ie(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new ie(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ce(()=>{e=ht(e);let s=H5(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Yi(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=Pt(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,i=Mi(t,this.kernelSize[0],this.padding,this.strides[0]),a=Mi(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,i,a]:[e[0],i,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=gn(this.depthwiseInitializer),e.depthwiseRegularizer=tn(this.depthwiseRegularizer),e.depthwiseConstraint=Xn(this.depthwiseRegularizer),e}}J3.className="DepthwiseConv2D";Te(J3);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function eD(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new ie("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(i){return i==null||Array.isArray(i)?i:[i]}return e=r(e),t=r(t),{inputs:n,initialState:e,constants:t}}function tD(n,e,t,s=!1,r,i,a=!1,o=!1){return ce(()=>{const l=e.shape.length;if(l<3)throw new ie(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(Hi(2,l));e=At(e,c),a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=De(De(r,"bool"),"float32"),r.rank===l-1&&(r=Ln(r,-1)),r=At(r,c)),s&&(e=vi(e,0),r!=null&&(r=vi(r,0)));const d=[];let p,m=t;const g=e.shape[0],x=Si(e);let b;r!=null&&(b=Si(r));for(let v=0;v<g;++v){const $=x[v],I=ce(()=>n($,m));if(r==null)p=I[0],m=I[1];else{const N=ce(()=>{const E=b[v],_=Ve(Wr(E),E),z=Ce(Q(I[0],E),Q(m[0],_)),P=m.map((O,L)=>Ce(Q(I[1][L],E),Q(O,_)));return{output:z,newStates:P}});p=N.output,m=N.newStates}o&&d.push(p)}let w;return o&&(w=Nr(d,1)),[p,w,m]})}class cl extends vt{constructor(e){super(e);let t;if(e.cell==null)throw new ie("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new MS({cells:e.cell}):t=e.cell,t.stateSize==null)throw new ie("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new jn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Hi(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Av(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const i=[];for(const a of t)i.push([e[0],a]);return[r].concat(i)}else return r}computeMask(e,t){return ce(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const r=this.states.map(i=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new bt("Constants support is not implemented in RNN yet.");Av(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new jn({shape:[t,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!yt(this.stateSpec.map(a=>a.shape[a.shape.length-1]),i))throw new ie(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(a=>new jn({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){ce(()=>{if(!this.stateful)throw new oa("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new ie("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Rn([s,r])):this.states_=[Rn([s,this.cell.stateSize])];else if(e==null)rt(this.states_),this.keptStates!=null&&(rt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Rn([s,r])):this.states_[0]=Rn([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ie(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):rt(this.states_);for(let r=0;r<this.states_.length;++r){const i=e[r],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,o=[s,a];if(!yt(i.shape,o))throw new ie(`State ${r} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[r]=i}}this.states_=this.states_.map(r=>us(r.clone()))})}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const i=eD(e,s,r,this.numConstants);e=i.inputs,s=i.initialState,r=i.constants;let a=[],o=[];if(s!=null){t.initialState=s,a=a.concat(s),this.stateSpec=[];for(const c of s)this.stateSpec.push(new jn({shape:c.shape}));o=o.concat(this.stateSpec)}if(r!=null&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof ga){const c=[e].concat(a),d=this.inputSpec.concat(o),p=this.inputSpec;this.inputSpec=d;const m=super.apply(c,t);return this.inputSpec=p,m}else return super.apply(e,t)}call(e,t){return ce(()=>{const s=t==null?null:t.mask,r=t==null?null:t.training;let i=t==null?null:t.initialState;e=ht(e),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==a)throw new ie(`RNN Layer has ${a} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:r},c=tD((x,b)=>{const w=this.cell.call([x].concat(b),o);return[w[0],w.slice(1)]},e,i,this.goBackwards,s,null,this.unroll,this.returnSequences),d=c[0],p=c[1],m=c[2];this.stateful&&this.resetStates(m,r);const g=this.returnSequences?p:d;return this.returnState?[g].concat(m):g})}getInitialState(e){return ce(()=>{let t=Rn(e.shape);return t=qe(t,[1,2]),t=Cm(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?Ev(t,[1,s]):t):this.cell.stateSize>1?[Ev(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===cl.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const r=t.cell,i=Za(r,s);return new e(Object.assign(t,{cell:i}))}}cl.className="RNN";Te(cl);class t0 extends vt{}class LS extends t0{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,cs(this.units,"units"),this.activation=el(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=pn(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pn(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pn(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=fn(e.kernelRegularizer),this.recurrentRegularizer=fn(e.recurrentRegularizer),this.biasRegularizer=fn(e.biasRegularizer),this.kernelConstraint=Kn(e.kernelConstraint),this.recurrentConstraint=Kn(e.recurrentConstraint),this.biasConstraint=Kn(e.biasConstraint),this.dropout=Jc([1,Zo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Jc([1,Zo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Pt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ce(()=>{if(e=e,e.length!==2)throw new ie(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=tl({ones:()=>Wr(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=tl({ones:()=>Wr(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let i;const a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?i=pa(Q(e,a),this.kernel.read()):i=pa(e,this.kernel.read()),this.bias!=null&&(i=Yi(i,this.bias.read())),o!=null&&(s=Q(s,o));let l=Ce(i,pa(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Jo(this.activation),useBias:this.useBias,kernelInitializer:gn(this.kernelInitializer),recurrentInitializer:gn(this.recurrentInitializer),biasInitializer:gn(this.biasInitializer),kernelRegularizer:tn(this.kernelRegularizer),recurrentRegularizer:tn(this.recurrentRegularizer),biasRegularizer:tn(this.biasRegularizer),activityRegularizer:tn(this.activityRegularizer),kernelConstraint:Xn(this.kernelConstraint),recurrentConstraint:Xn(this.recurrentConstraint),biasConstraint:Xn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}LS.className="SimpleRNNCell";Te(LS);class nD extends cl{constructor(e){e.cell=new LS(e),super(e)}call(e,t){return ce(()=>{this.cell.dropoutMask!=null&&(rt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(rt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}static fromConfig(e,t){return new e(t)}}nD.className="SimpleRNN";Te(nD);class PS extends t0{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ie("GRUCell does not support reset_after parameter set to true.");this.units=e.units,cs(this.units,"units"),this.activation=el(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=el(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=pn(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pn(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pn(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=fn(e.kernelRegularizer),this.recurrentRegularizer=fn(e.recurrentRegularizer),this.biasRegularizer=fn(e.biasRegularizer),this.kernelConstraint=Kn(e.kernelConstraint),this.recurrentConstraint=Kn(e.recurrentConstraint),this.biasConstraint=Kn(e.biasConstraint),this.dropout=Jc([1,Zo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Jc([1,Zo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Pt(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ce(()=>{if(e=e,e.length!==2)throw new ie(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=tl({ones:()=>Wr(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=tl({ones:()=>Wr(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,c;0<this.dropout&&this.dropout<1&&(e=Q(e,i[0]));let d=pa(e,this.kernel.read());this.useBias&&(d=Yi(d,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Q(r,a[0]));const p=this.recurrentKernel.read(),[m,g]=kr(p,[2*this.units,this.units],p.rank-1),x=pa(r,m),[b,w,v]=kr(d,3,d.rank-1),[$,I]=kr(x,2,x.rank-1);o=this.recurrentActivation.apply(Ce(b,$)),l=this.recurrentActivation.apply(Ce(w,I));const N=pa(Q(l,r),g);c=this.activation.apply(Ce(v,N));const E=Ce(Q(o,r),Q(Ce(1,hn(o)),c));return[E,E]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Jo(this.activation),recurrentActivation:Jo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:gn(this.kernelInitializer),recurrentInitializer:gn(this.recurrentInitializer),biasInitializer:gn(this.biasInitializer),kernelRegularizer:tn(this.kernelRegularizer),recurrentRegularizer:tn(this.recurrentRegularizer),biasRegularizer:tn(this.biasRegularizer),activityRegularizer:tn(this.activityRegularizer),kernelConstraint:Xn(this.kernelConstraint),recurrentConstraint:Xn(this.recurrentConstraint),biasConstraint:Xn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}PS.className="GRUCell";Te(PS);class sD extends cl{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new PS(e),super(e)}call(e,t){return ce(()=>{this.cell.dropoutMask!=null&&(rt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(rt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}sD.className="GRU";Te(sD);class n0 extends t0{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,cs(this.units,"units"),this.activation=el(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=el(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=pn(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pn(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pn(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=fn(e.kernelRegularizer),this.recurrentRegularizer=fn(e.recurrentRegularizer),this.biasRegularizer=fn(e.biasRegularizer),this.kernelConstraint=Kn(e.kernelConstraint),this.recurrentConstraint=Kn(e.recurrentConstraint),this.biasConstraint=Kn(e.biasConstraint),this.dropout=Jc([1,Zo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Jc([1,Zo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Pt(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,a=this.units;r=new(t=class extends Ci{apply(l,c){const d=i.apply([a]),p=new $S().apply([a]),m=i.apply([a*2]);return rI(rI(d,p),m)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ce(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new ie(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const i=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=tl({ones:()=>Wr(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=tl({ones:()=>Wr(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=this.recurrentDropoutMask;let l,c,d,p;0<this.dropout&&this.dropout<1&&(e=Q(e,a[0]));let m=pa(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Q(r,o[0])),m=Ce(m,pa(r,this.recurrentKernel.read())),this.useBias&&(m=Yi(m,this.bias.read()));const[g,x,b,w]=kr(m,4,m.rank-1);l=this.recurrentActivation.apply(g),c=this.recurrentActivation.apply(x),d=Ce(Q(c,i),Q(l,this.activation.apply(b))),p=this.recurrentActivation.apply(w);const v=Q(p,this.activation.apply(d));return[v,v,d]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Jo(this.activation),recurrentActivation:Jo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:gn(this.kernelInitializer),recurrentInitializer:gn(this.recurrentInitializer),biasInitializer:gn(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:tn(this.kernelRegularizer),recurrentRegularizer:tn(this.recurrentRegularizer),biasRegularizer:tn(this.biasRegularizer),activityRegularizer:tn(this.activityRegularizer),kernelConstraint:Xn(this.kernelConstraint),recurrentConstraint:Xn(this.recurrentConstraint),biasConstraint:Xn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}n0.className="LSTMCell";Te(n0);class rD extends cl{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new n0(e),super(e)}call(e,t){return ce(()=>{this.cell.dropoutMask!=null&&(rt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(rt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}rD.className="LSTM";Te(rD);class MS extends t0{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ce(()=>{e=e;let s=e.slice(1);const r=[];for(const o of this.cells.slice().reverse())Array.isArray(o.stateSize)?r.push(s.splice(0,o.stateSize.length)):r.push(s.splice(0,1));r.reverse();const i=[];let a;for(let o=0;o<this.cells.length;++o){const l=this.cells[o];s=r[o],o===0?a=[e[0]].concat(s):a=[a[0]].concat(s),a=l.call(a,t),i.push(a.slice(1))}s=[];for(const o of i.slice().reverse())s.push(...o);return[a[0]].concat(s)})}build(e){Av(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,r)=>{uu(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=i=>({className:i.getClassName(),config:i.getConfig()}),r={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,s={}){const r=[];for(const i of t.cells)r.push(Za(i,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Dv(e)}setWeights(e){const t=[];for(const s of this.cells){const r=s.weights.length,i=e.splice(r);for(let a=0;a<s.weights.length;++a)t.push([s.weights[a],i[a]])}AS(t)}}MS.className="StackedRNNCells";Te(MS);function tl(n){const{ones:e,rate:t,training:s=!1,count:r=1,dropoutFunc:i}=n,a=()=>i!=null?i(e(),t):KA(e(),t),o=()=>km(a,e,s);return!r||r<=1?us(o().clone()):Array(r).fill(void 0).map(o).map(c=>us(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var j5=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]]);return t};class iD extends cl{constructor(e){if(e.unroll)throw new bt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new bt("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new jn({ndim:5})]}call(e,t){return ce(()=>{if(this.cell.dropoutMask!=null&&(rt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(rt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ie("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ce(()=>{const{stateSize:t}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)],a=Rn(i);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){ce(()=>{if(!this.stateful)throw new oa("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)];if(s[0]==null)throw new ie("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Rn(i)):this.states_=[Rn(i)];else if(e==null)rt(this.states_),this.keptStates!=null&&(rt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Rn(i)):this.states_[0]=Rn(i);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ie(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):rt(this.states_);for(let o=0;o<this.states_.length;++o){const l=e[o],c=i;if(!yt(l.shape,c))throw new ie(`State ${o} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[o]=l}}this.states_=this.states_.map(o=>us(o.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:r,padding:i,strides:a,dilationRate:o}=this.cell,l=t==="channelsFirst",c=e[l?3:2],d=e[l?4:3],p=Mi(c,r[0],i,a[0],o[0]),m=Mi(d,r[1],i,a[1],o[1]);return[...e.slice(0,2),...l?[s,p,m]:[p,m,s]]}}iD.className="ConvRNN2D";class BS extends n0{constructor(e){const{filters:t,kernelSize:s,strides:r,padding:i,dataFormat:a,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,cs(this.filters,"filters"),this.kernelSize=qc(s,2,"kernelSize"),this.kernelSize.forEach(l=>cs(l,"kernelSize")),this.strides=qc(r||1,2,"strides"),this.strides.forEach(l=>cs(l,"strides")),this.padding=i||"valid",jr(this.padding),this.dataFormat=a||"channelsLast",_n(this.dataFormat),this.dilationRate=qc(o||1,2,"dilationRate"),this.dilationRate.forEach(l=>cs(l,"dilationRate"))}build(e){var t;e=Pt(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new ie(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],i=4,a=this.kernelSize.concat([r,this.filters*i]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,d=this.filters;l=new(t=class extends Ci{apply(m,g){const x=c.apply([d]),b=$r([d]),w=c.apply([d*2]);return CS([x,b,w])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ce(()=>{if(e.length!==3)throw new ie(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,r=e[0],i=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=tl({ones:()=>Wr(r),rate:this.dropout,training:s,count:o,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(W,ne,ge)=>!ne||!ne[ge]?W:Q(ne[ge],W);let d=c(r,l,0),p=c(r,l,1),m=c(r,l,2),g=c(r,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=tl({ones:()=>Wr(i),rate:this.recurrentDropout,training:s,count:o,dropoutFunc:this.dropoutFunc}));const x=this.recurrentDropoutMask;let b=c(i,x,0),w=c(i,x,1),v=c(i,x,2),$=c(i,x,3);const I=3,[N,E,_,z]=kr(this.kernel.read(),o,I),[P,O,L,D]=this.useBias?kr(this.bias.read(),o):[null,null,null,null];d=this.inputConv(d,N,P,this.padding),p=this.inputConv(p,E,O,this.padding),m=this.inputConv(m,_,L,this.padding),g=this.inputConv(g,z,D,this.padding);const[G,q,ee,Z]=kr(this.recurrentKernel.read(),o,I);b=this.recurrentConv(b,G),w=this.recurrentConv(w,q),v=this.recurrentConv(v,ee),$=this.recurrentConv($,Z);const H=this.recurrentActivation.apply(Ce(d,b)),oe=this.recurrentActivation.apply(Ce(p,w)),se=Ce(Q(oe,a),Q(H,this.activation.apply(Ce(m,v)))),de=Q(this.recurrentActivation.apply(Ce(g,$)),this.activation.apply(se));return[de,de,se]})}getConfig(){const e=super.getConfig(),{units:t}=e,s=j5(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),r)}inputConv(e,t,s,r){const i=Ko(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Yi(i,s,this.dataFormat):i}recurrentConv(e,t){return Ko(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}BS.className="ConvLSTM2DCell";Te(BS);class aD extends iD{constructor(e){const t=new BS(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}aD.className="ConvLSTM2D";Te(aD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class VS extends vt{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return s}call(e,t){return ce(()=>{this.invokeCallHook(e,t);const s=ht(e);if(0<this.rate&&this.rate<1){const r=t.training==null?!1:t.training,i=this.getNoiseShape(s);return km(()=>KA(s,this.rate,i,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}VS.className="Dropout";Te(VS);class oD extends VS{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}oD.className="SpatialDropout1D";Te(oD);class lD extends vt{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,cs(this.units,"units"),this.activation=el(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=pn(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=pn(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Kn(e.kernelConstraint),this.biasConstraint=Kn(e.biasConstraint),this.kernelRegularizer=fn(e.kernelRegularizer),this.biasRegularizer=fn(e.biasRegularizer),this.activityRegularizer=fn(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Pt(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Pt(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return ce(()=>{this.invokeCallHook(e,t);const s=ht(e),r=UA(this.activation.getClassName());let i;return r!=null?i=pa(s,this.kernel.read(),r,this.bias?this.bias.read():null):(i=pa(s,this.kernel.read()),this.bias!=null&&(i=Yi(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){const e={units:this.units,activation:Jo(this.activation),useBias:this.useBias,kernelInitializer:gn(this.kernelInitializer),biasInitializer:gn(this.biasInitializer),kernelRegularizer:tn(this.kernelRegularizer),biasRegularizer:tn(this.biasRegularizer),activityRegularizer:tn(this.activityRegularizer),kernelConstraint:Xn(this.kernelConstraint),biasConstraint:Xn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}lD.className="Dense";Te(lD);class uD extends vt{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Pt(e);for(const t of e.slice(1))if(t==null)throw new ie(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ho(e,1)]}call(e,t){return ce(()=>{this.invokeCallHook(e,t);let s=ht(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let i=2;i<s.rank;++i)r.push(i);r.push(1),s=At(s,r)}return Nj(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}uD.className="Flatten";Te(uD);class cD extends vt{constructor(e){super(e),this.supportsMasking=!0,this.activation=el(e.activation)}call(e,t){return ce(()=>{this.invokeCallHook(e,t);const s=ht(e);return this.activation.apply(s)})}getConfig(){const e={activation:Jo(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}cD.className="Activation";Te(cD);class hD extends vt{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ce(()=>(e=ht(e),$j(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}hD.className="RepeatVector";Te(hD);class dD extends vt{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",r=t.slice();let i=1,a=null;for(let l=0;l<r.length;++l){const c=r[l];if(this.isUnknown(c))if(a===null)a=l;else throw new ie("Can only specifiy one unknown dimension.");else i*=c}const o=Ho(e);if(a!==null){if(i===0||o%i!==0)throw new ie(s);r[a]=o/i}else if(o!==i)throw new ie(s);return r}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ce(()=>{this.invokeCallHook(e,t);const s=ht(e),r=s.shape,i=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return re(s,i)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}dD.className="Reshape";Te(dD);class pD extends vt{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Hi(1,e.dims.length+1);if(!yt(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new jn({ndim:this.dims.length+1})]}computeOutputShape(e){e=Pt(e);const t=e.slice();return this.dims.forEach((s,r)=>{t[r+1]=e[s]}),t}call(e,t){return At(ht(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}pD.className="Permute";Te(pD);class fD extends vt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=ht(e);return Ry(Qc(s,this.maskValue),-1)}call(e,t){return ce(()=>{this.invokeCallHook(e,t);const s=ht(e),a=Ry(Qc(s,this.maskValue),-1,!0);return Q(s,De(a,s.dtype))})}}fD.className="Masking";Te(fD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class mD extends vt{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(qt(e.inputLength))}this.inputDim=e.inputDim,cs(this.inputDim,"inputDim"),this.outputDim=e.outputDim,cs(this.outputDim,"outputDim"),this.embeddingsInitializer=pn(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=fn(e.embeddingsRegularizer),this.activityRegularizer=fn(e.activityRegularizer),this.embeddingsConstraint=Kn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ce(()=>this.maskZero?(e=ht(e),Qc(e,Dt(e))):null)}computeOutputShape(e){if(e=Pt(e),this.inputLength==null)return[...e,this.outputDim];const t=qt(this.inputLength);if(t.length!==e.length-1)throw new ie(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<t.length;++r){const i=t[r],a=e[r+1];if(i!=null&&a!=null&&i!==a)throw new ie(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);i==null&&(t[s]=a),s++}}return[e[0],...t,this.outputDim]}call(e,t){return ce(()=>{this.invokeCallHook(e,t);let s=ht(e);s.dtype!=="int32"&&(s=da(s,"int32"));const r=XA(this.embeddings.read(),re(s,[s.size]));return re(r,Pt(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:gn(this.embeddingsInitializer),embeddingsRegularizer:tn(this.embeddingsRegularizer),activityRegularizer:tn(this.activityRegularizer),embeddingsConstraint:Xn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}mD.className="Embedding";Te(mD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Lu extends vt{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new bt}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const i=e[e.length-t.length+r],a=t[r];if(i==null||a==null||i<0||a<0)s.push(null);else if(i===1)s.push(a);else if(a===1)s.push(i);else{if(i!==a)throw new ie("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(i)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Pt(e)]),e=e,e.length<2)throw new ie(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const i of e)i!=null&&i[0]!==null&&t.push(i[0]);if(t=Go(t),t.length>1)throw new ie(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let i=1;i<e.length;++i){const a=e[i]==null?null:e[i].slice(1);s=this.computeElementwiseOpOutputShape(s,a)}const r=e.map(i=>i.length);e.indexOf(null)===-1&&Go(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ce(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(i=>i.rank);if(r.indexOf(null)===-1){const i=Zo(r);for(let a of e){const o=a.rank;for(let l=0;l<i-o;++l)a=Cm(a,1);s.push(a)}return this.mergeFunction(s)}else{let i=!1;for(const l of e){const c=l.rank;if(c==null){const d=l.shape,p=d[0],m=d.slice(1).concat([p]);let g=re(l,[p].concat(Ho(d.slice(1))));g=At(g,[1,0]),g=re(g,m),s.push(g),i=!0}else if(c>1){const d=Hi(1,c).concat([0]);s.push(At(l,d)),i=!0}else s.push(l)}let a=this.mergeFunction(s);const o=a.rank;if(i){if(o==null){const l=a.shape,c=l.length,d=l[c-1],p=[d].concat(l.slice(0,l.length-1));a=re(At(re(a,[-1,d]),[1,0]),p)}else if(o>1){const l=[o-1].concat(Hi(0,o-1));a=At(a,l)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){const i=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,i)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=Go(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return ce(()=>{if(t==null)return null;if(!Array.isArray(t))throw new ie("`mask` should be an Array");if(!Array.isArray(e))throw new ie("`inputs` should be an Array");if(t.length!==e.length)throw new ie(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:Ln(r,0));let s=t[0];for(let r=1;r<t.length-1;++r)s=ma(s,t[r]);return s})}}class gD extends Lu{constructor(e){super(e)}mergeFunction(e){return ce(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Ce(t,e[s]);return t})}}gD.className="Add";Te(gD);class yD extends Lu{constructor(e){super(e)}mergeFunction(e){return ce(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Q(t,e[s]);return t})}}yD.className="Multiply";Te(yD);class xD extends Lu{constructor(e){super(e)}mergeFunction(e){return ce(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Ce(t,e[s]);return Q(1/e.length,t)})}}xD.className="Average";Te(xD);class bD extends Lu{constructor(e){super(e)}mergeFunction(e){return ce(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=so(t,e[s]);return t})}}bD.className="Maximum";Te(bD);class wD extends Lu{constructor(e){super(e)}mergeFunction(e){return ce(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Qo(t,e[s]);return t})}}wD.className="Minimum";Te(wD);class vD extends Lu{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new ie("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(r!=null){t=!1;break}if(t)return;const s=[];for(let r=0;r<e.length;++r){const i=e[r].slice();i.splice(this.axis,1);let a=!1;for(const o of s)if(yt(o,i)){a=!0;break}a||s.push(i)}if(s.length>1)throw new ie("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ce(()=>CS(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new ie("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const i of t.slice(1)){if(s[r]==null||i[r]==null){s[r]=null;break}s[r]+=i[r]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new ie("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ie("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ie(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return ce(()=>{let s=!0;if(t.forEach(a=>{if(a!=null){s=!1;return}}),s)return null;const r=[];for(let a=0;a<e.length;++a)t[a]==null?r.push(De(Wr(e[a]),"bool")):t[a].rank<e[a].rank?r.push(Ln(t[a],-1)):r.push(t[a]);const i=yn(r,this.axis);return R2(i,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}vD.className="Concatenate";Te(vD);function Ap(n,e){for(;n<0;)n+=e;return n}function q5(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new bt("batchDot is not implemented for tensors of 4D or higher rank yet");if(B(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),B(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new bt("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;t==null&&(t=[s-1,r-2]);const i=t;return ce(()=>{let a;if(s>r){a=s-r;const l=[];for(let c=0;c<a;++c)l.push(1);e=re(e,e.shape.concat(l))}else if(r>s){a=r-s;const l=[];for(let c=0;c<a;++c)l.push(1);n=re(n,n.shape.concat(l))}else a=0;let o;if(n.shape.length===2&&e.shape.length===2)i[0]===i[1]?o=qe(Q(n,e),i[0]):o=qe(Q(At(n,[1,0]),e),i[1]);else{const l=i[0]!==n.shape.length-1,c=i[1]===e.shape.length-1;o=Ct(n,e,l,c)}if(a>0){let l;s>r?l=s+r-3:l=s-1;const c=[];for(let d=l;d<l+a;++d)c.push(d);o=Bt(o,c)}return o.shape.length===1&&(o=Ln(o,1)),o})}class SD extends Lu{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){B(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new bt("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);if(t[r[0]]!==s[r[1]])throw new ie(`Dimension incompatibility: ${t[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new ie(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((i,a)=>Ap(i,e[a].shape.length)):r=[Ap(this.axes,t.shape.length),Ap(this.axes,s.shape.length)],this.normalize&&(t=zy(t,r[0]),s=zy(s,r[1])),q5(t,s,r)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[Ap(this.axes,e.length),Ap(this.axes,t.length)],s}computeOutputShape(e){B(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new bt("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);t.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const i=t.concat(s);return i.length===1&&i.push(1),i}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}SD.className="Dot";Te(SD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class CD extends vt{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ce(()=>{this.invokeCallHook(e,t);const s=ht(e);return km(()=>Ce(Kb(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}CD.className="GaussianNoise";Te(CD);class $D extends vt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ce(()=>{this.invokeCallHook(e,t);const s=ht(e);return this.rate>0&&this.rate<1?km(()=>{const i=Math.sqrt(this.rate/(1-this.rate));return Q(s,Kb(s.shape,1,i))},()=>s,t.training||!1):s})}}$D.className="GaussianDropout";Te($D);class kD extends vt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||ht(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ce(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return km(()=>{const i=ht(e),o=-1.6732632423543772*1.0507009873554805;let l=ll(Du(s),this.rate);l=da(l,"float32");const c=((1-this.rate)*(1+this.rate*o**2))**-.5,d=-c*o*this.rate,p=Ce(Q(i,l),Q(Ce(l,-1),o));return Ce(Q(p,c),d)},()=>ht(e),t.training||!1)}return e})}}kD.className="AlphaDropout";Te(kD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function nf(n,e,t,s,r,i=.001){let a;if(n.rank===2)a=QE(n,e,t,s,r,i);else if(n.rank===3)a=ZE(n,e,t,s,r,i);else if(n.rank===4)a=JE(n,e,t,s,r,i);else throw new bt(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return a}function X5(n,e,t,s,r=.001){return ce(()=>{const i=hb(n,s),a=i.mean,o=i.variance;return[nf(n,a,o,t,e,r),a,o]})}function K5(n,e,t,s,r=.001){return ce(()=>{const i=hb(n,s),a=i.mean,o=i.variance,l=[];for(const x of Hi(0,n.rank))s.indexOf(x)!==-1?l.push(1):l.push(n.shape[x]);const c=re(a,l),d=re(o,l),p=e==null?null:re(e,l),m=t==null?null:re(t,l);return[nf(n,c,d,m,p,r),a,o]})}function Y5(n,e,t,s,r=.001){return yt(s.slice().sort(),Hi(0,n.rank-1))?X5(n,e,t,s,r):K5(n,e,t,s,r)}class ND extends vt{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=pn(e.betaInitializer||"zeros"),this.gammaInitializer=pn(e.gammaInitializer||"ones"),this.movingMeanInitializer=pn(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=pn(e.movingVarianceInitializer||"ones"),this.betaConstraint=Kn(e.betaConstraint),this.gammaConstraint=Kn(e.gammaConstraint),this.betaRegularizer=fn(e.betaRegularizer),this.gammaRegularizer=fn(e.gammaRegularizer)}build(e){e=Pt(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new ie(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new jn({ndim:e.length,axes:{[t]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ce(()=>{const s=t.training==null?!1:t.training,r=ht(e),i=r.shape,a=i.length,o=Hi(0,a),l=this.axis>=0?this.axis:this.axis+a;o.splice(l,1);const c=Cu(1,a);c[l]=i[l];const d=o.slice();d.sort();const p=!yt(d,Hi(0,a).slice(0,a-1)),m=()=>{if(p){const $=re(this.movingMean.read(),c),I=re(this.movingVariance.read(),c),N=this.center?re(this.beta.read(),c):null,E=this.scale?re(this.gamma.read(),c):null;return nf(r,$,I,N,E,this.epsilon)}else return nf(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return m();const[g,x,b]=Y5(r,this.gamma.read(),this.beta.read(),o,this.epsilon),w=($,I,N)=>{ce(()=>{const E=1-N,_=$.read(),z=Q(Ve(_,I),E);$.write(Ve(_,z))})};return(()=>{w(this.movingMean,x,this.momentum),w(this.movingVariance,b,this.momentum)})(),g})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:gn(this.betaInitializer),gammaInitializer:gn(this.gammaInitializer),movingMeanInitializer:gn(this.movingMeanInitializer),movingVarianceInitializer:gn(this.movingVarianceInitializer),betaRegularizer:tn(this.betaRegularizer),gammaRegularizer:tn(this.gammaRegularizer),betaConstraint:Xn(this.betaConstraint),gammaConstraint:Xn(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ND.className="BatchNormalization";Te(ND);class ID extends vt{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=pn(e.betaInitializer||"zeros"),this.gammaInitializer=pn(e.gammaInitializer||"ones"),this.betaRegularizer=fn(e.betaRegularizer),this.gammaRegularizer=fn(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Pt(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=t);for(const i of this.axis)if(i<0||i>=t)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==Go(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(i=>e[i]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const s=ht(e),r=s.shape,i=r.length;return ce(()=>{let{mean:o,variance:l}=hb(s,this.axis,!0);const c=Cu(1,i);for(const b of this.axis)c[b]=r[b];const d=b=>b!=null&&b.shape.length!==i?re(b,c):b;let p=this.scale?d(this.gamma.read()):null,m=this.center?d(this.beta.read()):null;const g=[],x=[];for(let b=0;b<i;++b)this.axis.indexOf(b)!==-1?(g.push(r[b]),x.push(1)):(g.push(1),x.push(r[b]));return o=fi(o,g),l=fi(l,g),p!=null&&(p=fi(p,x)),m!=null&&(m=fi(m,x)),nf(s,o,l,m,p,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:gn(this.betaInitializer),gammaInitializer:gn(this.gammaInitializer),betaRegularizer:tn(this.betaRegularizer),gammaRegularizer:tn(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}ID.className="LayerNormalization";Te(ID);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Q5(n,e,t){return ce(()=>{if(n.rank!==4)throw new ie(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new ie("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=ji()),t!=="channelsLast"&&t!=="channelsFirst")throw new ie(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Ui(n,s)})}class TD extends vt{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?ji():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new ie(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new ie(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new ie(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new jn({ndim:4})]}computeOutputShape(e){e=Pt(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return ce(()=>Q5(ht(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}TD.className="ZeroPadding2D";Te(TD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function s0(n,e,t,s,r,i){return ce(()=>{_n(r),GA(i),jr(s),t==null&&(t=[1,1]),s==null&&(s="valid"),r==null&&(r=ji()),i==null&&(i="max"),n=zS(n,r);let a;const o=s==="same"?"same":"valid";return i==="max"?a=cb(n,e,t,o):a=nb(n,e,t,o),r==="channelsFirst"&&(a=At(a,[0,3,1,2])),a})}function ED(n,e,t,s,r,i){return ce(()=>{_n(r),GA(i),jr(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),r==null&&(r=ji()),i==null&&(i="max"),n=j3(n,r);let a;const o=s==="same"?"same":"valid";return i==="max"?a=CR(n,e,t,o):a=YE(n,e,t,o),r==="channelsFirst"&&(a=At(a,[0,4,1,2,3])),a})}class RD extends vt{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new ie(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(cs(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new ie(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);cs(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,jr(this.padding),this.inputSpec=[new jn({ndim:3})]}computeOutputShape(e){e=Pt(e);const t=Mi(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ce(()=>{this.invokeCallHook(e,t),e=Cm(ht(e),2);const s=this.poolingFunction(ht(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Bt(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class AD extends RD{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return _n(i),jr(r),s0(e,t,s,r,i,"max")}}AD.className="MaxPooling1D";Te(AD);class DD extends RD{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return _n(i),jr(r),s0(e,t,s,r,i,"avg")}}DD.className="AveragePooling1D";Te(DD);class _D extends vt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new ie(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];cs(this.poolSize,"poolSize"),cs(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,_n(this.dataFormat),jr(this.padding),this.inputSpec=[new jn({ndim:4})]}computeOutputShape(e){e=Pt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Mi(t,this.poolSize[0],this.padding,this.strides[0]),s=Mi(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return ce(()=>(this.invokeCallHook(e,t),this.poolingFunction(ht(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class OD extends _D{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return _n(i),jr(r),s0(e,t,s,r,i,"max")}}OD.className="MaxPooling2D";Te(OD);class FD extends _D{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return _n(i),jr(r),s0(e,t,s,r,i,"avg")}}FD.className="AveragePooling2D";Te(FD);class zD extends vt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new ie(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];cs(this.poolSize,"poolSize"),cs(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,_n(this.dataFormat),jr(this.padding),this.inputSpec=[new jn({ndim:5})]}computeOutputShape(e){e=Pt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Mi(t,this.poolSize[0],this.padding,this.strides[0]),s=Mi(s,this.poolSize[1],this.padding,this.strides[1]),r=Mi(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return ce(()=>(this.invokeCallHook(e,t),this.poolingFunction(ht(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class LD extends zD{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return _n(i),jr(r),ED(e,t,s,r,i,"max")}}LD.className="MaxPooling3D";Te(LD);class PD extends zD{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return _n(i),jr(r),ED(e,t,s,r,i,"avg")}}PD.className="AveragePooling3D";Te(PD);class MD extends vt{constructor(e){super(e),this.inputSpec=[new jn({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new bt}}class BD extends MD{constructor(e){super(e||{})}call(e,t){return ce(()=>{const s=ht(e);return vn(s,1)})}}BD.className="GlobalAveragePooling1D";Te(BD);class VD extends MD{constructor(e){super(e||{})}call(e,t){return ce(()=>{const s=ht(e);return xi(s,1)})}}VD.className="GlobalMaxPooling1D";Te(VD);class UD extends vt{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,_n(this.dataFormat),this.inputSpec=[new jn({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new bt}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class WD extends UD{call(e,t){return ce(()=>{const s=ht(e);return this.dataFormat==="channelsLast"?vn(s,[1,2]):vn(s,[2,3])})}}WD.className="GlobalAveragePooling2D";Te(WD);class GD extends UD{call(e,t){return ce(()=>{const s=ht(e);return this.dataFormat==="channelsLast"?xi(s,[1,2]):xi(s,[2,3])})}}GD.className="GlobalMaxPooling2D";Te(GD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class HD extends vt{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const r=t.layer,i=Za(r,s);delete t.layer;const a={layer:i};return Object.assign(a,t),new e(a)}}class jD extends HD{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Pt(e),e.length<3)throw new ie(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Pt(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,t){return ce(()=>(e=ht(e),tD((a,o)=>[ht(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}jD.className="TimeDistributed";Te(jD);function Z5(n){zu(bj,"BidirectionalMergeMode",n)}const J5="concat";class qD extends HD{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=Za(s),t.goBackwards=t.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Za(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?J5:e.mergeMode,Z5(this.mergeMode),e.weights)throw new bt("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,r,i;return this.returnState&&(i=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(i).concat(i.slice()):[s].concat(i).concat(i.slice()):or(r)}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const i=eD(e,s,r,this.numConstants);if(e=i.inputs,s=i.initialState,r=i.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,t);const a=[],o=[];if(s!=null){const c=s.length;if(c%2>0)throw new ie("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,a.push(...s);const d=s.map(p=>new jn({shape:p.shape}));this.forwardLayer.stateSpec=d.slice(0,c/2),this.backwardLayer.stateSpec=d.slice(c/2),o.push(...d)}if(r!=null)throw new bt("Support for constants in Bidirectional layers is not implemented yet.");const l=a[0]instanceof ga;for(const c of a)if(c instanceof ga!==l)throw new ie("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[e].concat(a),d=this.inputSpec.concat(o),p=this.inputSpec;this.inputSpec=d;const m=super.apply(c,t);return this.inputSpec=p,m}else return super.apply(e,t)}call(e,t){return ce(()=>{const s=t.initialState;let r,i;if(s==null)r=this.forwardLayer.call(e,t),i=this.backwardLayer.call(e,t);else{const l=s.slice(0,s.length/2),c=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),i=this.backwardLayer.call(e,Object.assign(t,{initialState:c}))}let a;this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(i.slice(1))),r=r[0],i=i[0]),this.returnSequences&&(i=vi(i,1));let o;return this.mergeMode==="concat"?o=CS([r,i]):this.mergeMode==="sum"?o=Ce(r,i):this.mergeMode==="ave"?o=Q(.5,Ce(r,i)):this.mergeMode==="mul"?o=Q(r,i):this.mergeMode==null&&(o=[r,i]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){uu(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),uu(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const i=this.forwardLayer.states.map(a=>null);return Array.isArray(s)?s.concat(i).concat(i):[s].concat(i).concat(i)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=Za(t.layer);if(delete t.layer,t.numConstants!=null)throw new bt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=s,new e(r)}}qD.className="Bidirectional";Te(qD);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class XD extends vt{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ce(()=>(e=ht(e),e.dtype!=="float32"&&(e=da(e,"float32")),Ce(Q(e,this.scale),this.offset)))}}XD.className="Rescaling";Te(XD);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:eq,cropAndResize:tq}=js;class KD extends vt{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,r,i,a,o,l){return ce(()=>{let c,d=!1;const p=t/a,m=s/o,g=(r+t)/a,x=(i+s)/o,b=[p,m,g,x],w=[];e.rank===3?(d=!0,c=Nr([e])):c=e;for(let E=0;E<c.shape[0];E++)w.push(b);const v=Pi(w,[w.length,4]),$=Zc(0,w.length,1,"int32"),N=tq(c,v,$,[r,i],"nearest");return da(d?ht(Si(N)):N,l)})}upsize(e,t,s,r){return ce(()=>{const i=eq(e,[t,s]);return da(i,r)})}call(e,t){return ce(()=>{const s=ht(e),r=s.dtype,i=s.shape,a=i[i.length-3],o=i[i.length-2];let l=0;a!==this.height&&(l=Math.floor((a-this.height)/2));let c=0;return o!==this.width&&(c=Math.floor((o-this.width)/2),c===0&&(c=1)),l>=0&&c>=0?this.centerCrop(s,l,c,this.height,this.width,a,o,r):this.upsize(e,this.height,this.width,r)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Pt(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}KD.className="CenterCrop";Te(KD);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function nq(n,e,t,s){let r=ht(n);if(r.dtype!=="int32"&&(r=da(r,"int32")),e==="int")return r;const i=r.shape;if(r.rank===0&&(r=Ln(r,-1)),e==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=Ln(r,-1)),r.rank>2)throw new ie(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${i} which would result in output rank ${r.rank}.`);const a=["multiHot","oneHot"].includes(e),o=r;let l;if(typeof s<"u"&&e==="count"?l=Cv(o,s,t,a):l=Cv(o,[],t,a),e!=="tfIdf")return l;if(s)return Q(l,s);throw new ie("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class YD extends vt{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Pt(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return ce(()=>{e=ht(e),e.dtype!=="int32"&&(e=da(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new ie(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=ht(t.countWeights)}const r=xi(e),i=Xp(e),a=Ar(this.numTokens,r).bufferSync().get(0),o=ll(i,0).bufferSync().get(0);if(!(a&&o))throw new ie(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return nq(e,this.outputMode,this.numTokens,s)})}}YD.className="CategoryEncoding";Te(YD);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const sq=["bilinear","nearest"],SI=new Set(sq);class QD extends vt{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(SI.has(e.interpolation))this.interpolation=e.interpolation;else throw new ie(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Pt(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ce(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return js.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return js.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...SI]} are supported`)})}}QD.className="Resizing";Te(QD);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ZD{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}ZD.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class JD extends vt{constructor(e){super(e),this.randomGenerator=new ZD(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}JD.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const rq=["bilinear","nearest"],CI=new Set(rq);class e_ extends JD{constructor(e){super(e);const{factor:t,interpolation:s="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new ie(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new ie(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new ie(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(CI.has(s))this.interpolation=s;else throw new ie(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Pt(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return ce(()=>{const s=ht(e);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=Du([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let i=this.widthFactor.dataSync()[0]*r;i=Math.round(i);const a=[this.imgHeight,i];switch(this.interpolation){case"bilinear":return js.resizeBilinear(e,a);case"nearest":return js.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...CI]} are supported`)}})}}e_.className="RandomWidth";Te(e_);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iq=pe();iq.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var vr;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(vr||(vr={}));var $I;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})($I||($I={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aq={};function t_(n){return aq[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R(n,e,t,s,r){const i=e.inputParams[n];if(i&&i.inputIndexStart!==void 0){const o=i.inputIndexStart,l=i.inputIndexEnd===0?void 0:i.inputIndexEnd===void 0?o+1:i.inputIndexEnd,c=o<0?e.inputNames.length+o:o;if(i.type==="tensor")return bs(e.inputNames[c],t,s,r);if(i.type==="tensors"){const m=e.inputs.slice(o,l);return e.inputNames.slice(o,l).filter((x,b)=>{var w;return((w=m[b])===null||w===void 0?void 0:w.op)!=="NoOp"}).map(x=>bs(x,t,s,r))}const d=bs(e.inputNames[c],t,s,r),p=d.dataSync();return i.type==="number"?p[0]:yi(d.shape,p)}const a=e.attrParams[n];return a&&a.value}function bs(n,e,t,s){const[r,i]=Sr(n,t);if(s!=null){const o=s.getHashTableHandleByName(r);if(o!=null)return o}const a=t.currentContextIds.find(o=>!!e[Vy(r,o)]);return a!==void 0?e[Vy(r,a)][i]:void 0}function kI(n,e,t){return e[Vy(n,t.currentContextId)]}function qa(n,e){const[t,s,r]=Sr(n,e);return[Vy(t,e&&e.currentContextId),s,r]}function Vy(n,e){return e?`${n}-${e}`:n}function Sr(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const i=e.parseNodeNameCache.get(n);if(i!=null)return i}const s=n.split(":");let r;if(s.length===1)r=[n,0,void 0];else{const i=s[0],a=s.length===3?s[1]:void 0,o=Number(s[s.length-1]);r=[i,o,a]}return t&&e.parseNodeNameCache.set(n,r),r}function by(n,e,t){let s=R("pad",n,e,t);if(s==="explicit"){s=R("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)r[i][0]=s[i*2],r[i][1]=s[i*2+1];return r}return s}function Xa(n){return n.kept?n:Qa(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oq=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],lq=Object.freeze(Object.defineProperty({__proto__:null,json:oq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uq=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],cq=Object.freeze(Object.defineProperty({__proto__:null,json:uq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hq=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],dq=Object.freeze(Object.defineProperty({__proto__:null,json:hq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pq=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],fq=Object.freeze(Object.defineProperty({__proto__:null,json:pq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mq=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],gq=Object.freeze(Object.defineProperty({__proto__:null,json:mq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yq=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],xq=Object.freeze(Object.defineProperty({__proto__:null,json:yq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bq=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],wq=Object.freeze(Object.defineProperty({__proto__:null,json:bq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vq=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Sq=Object.freeze(Object.defineProperty({__proto__:null,json:vq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cq=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],$q=Object.freeze(Object.defineProperty({__proto__:null,json:Cq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kq=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Nq=Object.freeze(Object.defineProperty({__proto__:null,json:kq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iq=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],Tq=Object.freeze(Object.defineProperty({__proto__:null,json:Iq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eq=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Rq=Object.freeze(Object.defineProperty({__proto__:null,json:Eq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aq=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Dq=Object.freeze(Object.defineProperty({__proto__:null,json:Aq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _q=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Oq=Object.freeze(Object.defineProperty({__proto__:null,json:_q},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fq=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],zq=Object.freeze(Object.defineProperty({__proto__:null,json:Fq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lq=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Pq=Object.freeze(Object.defineProperty({__proto__:null,json:Lq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mq=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Bq=Object.freeze(Object.defineProperty({__proto__:null,json:Mq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vq=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Uq=Object.freeze(Object.defineProperty({__proto__:null,json:Vq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wq=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Gq=Object.freeze(Object.defineProperty({__proto__:null,json:Wq},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NI{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[lq,cq,dq,fq,gq,xq,wq,Sq,$q,Nq,Tq,Rq,Dq,Oq,zq,Pq,Bq,Uq,Gq],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,t={}){const s=e.node,r=[],i=[],a=[],o=s.reduce((b,w)=>(b[w.name]=this.mapNode(w),w.op.startsWith("Placeholder")?r.push(b[w.name]):w.op==="Const"?i.push(b[w.name]):(w.input==null||w.input.length===0)&&a.push(b[w.name]),b),{});let l=[];const c=[];let d={},p={};t!=null&&(d=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));const m=Object.keys(o);m.forEach(b=>{const w=o[b];w.inputNames.forEach((v,$)=>{const[I,,N]=qa(v),E=o[I];if(E.outputs!=null){const _=E.outputs.indexOf(N);if(_!==-1){const z=`${I}:${_}`;w.inputNames[$]=z}}w.inputs.push(E),E.children.push(w)})}),Object.keys(p).length===0?m.forEach(b=>{const w=o[b];w.children.length===0&&c.push(w)}):Object.keys(p).forEach(b=>{const[w]=qa(b),v=o[w];v!=null&&(v.signatureKey=p[b],c.push(v))}),Object.keys(d).length>0?Object.keys(d).forEach(b=>{const[w]=qa(b),v=o[w];v&&(v.signatureKey=d[b],l.push(v))}):l=r;let g={};e.library!=null&&e.library.function!=null&&(g=e.library.function.reduce((b,w)=>(b[w.signature.name]=this.mapFunction(w),b),{}));const x={nodes:o,inputs:l,outputs:c,weights:i,placeholders:r,signature:t,functions:g};return a.length>0&&(x.initNodes=a),x}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=t_(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((r,i)=>(r[i.name]={type:i.type,inputIndexStart:i.start,inputIndexEnd:i.end},r),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((r,i)=>{const a=i.type;let o;switch(i.type){case"string":o=Pv(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Pv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"string[]":o=Hv(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Hv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number":o=Bv(e.attr,i.tfName,i.defaultValue||0),o===void 0&&i.tfDeprecatedName&&(o=Bv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number[]":o=Gv(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Gv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool":o=Mv(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Mv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool[]":o=qv(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=qv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape":o=Wv(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Wv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape[]":o=jv(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=jv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype":o=Vv(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Vv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype[]":o=Uv(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=Uv(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"func":o=II(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=II(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${i.type} for op: ${e.op}`)}return r[i.name]={value:o,type:a},r},{})),s}mapFunction(e){const t=e.nodeDef,s=[],r=[];let i={};t!=null&&(i=t.reduce((p,m)=>(p[m.name]=this.mapNode(m),m.op==="Const"&&r.push(p[m.name]),p),{}));const a=[],o=[];e.signature.inputArg.forEach(p=>{const[m]=qa(p.name),g={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:US(p.type),type:"dtype"}},children:[]};g.signatureKey=p.name,a.push(g),i[m]=g}),Object.keys(i).forEach(p=>{const m=i[p];m.inputNames.forEach((g,x)=>{const[b,,w]=qa(g),v=i[b];if(v.outputs!=null){const $=v.outputs.indexOf(w);if($!==-1){const I=`${b}:${$}`;m.inputNames[x]=I}}m.inputs.push(v),v.children.push(m)})});const c=e.ret;e.signature.outputArg.forEach(p=>{const[m,g]=qa(c[p.name]),x=i[m];x!=null&&(x.defaultOutput=g,o.push(x))});const d=this.mapArgsToSignature(e);return{nodes:i,inputs:a,outputs:o,weights:r,placeholders:s,signature:d}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function Hq(n){const e=pe().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function n_(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):Hq(n);return e?t:t.toLowerCase()}function Pv(n,e,t,s=!1){const r=n[e];return r!=null?n_(r.s,s):t}function Mv(n,e,t){const s=n[e];return s?s.b:t}function Bv(n,e,t){const s=n[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:t;return typeof r=="number"?r:parseInt(r,10)}function US(n){switch(typeof n=="string"&&(n=vr[n]),n){case vr.DT_FLOAT:case vr.DT_HALF:return"float32";case vr.DT_INT32:case vr.DT_INT64:case vr.DT_INT8:case vr.DT_UINT8:return"int32";case vr.DT_BOOL:return"bool";case vr.DT_DOUBLE:return"float32";case vr.DT_STRING:return"string";case vr.DT_COMPLEX64:case vr.DT_COMPLEX128:return"complex64";default:return null}}function II(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function Vv(n,e,t){const s=n[e];return s&&s.type?US(s.type):t}function Uv(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>US(r)):t}function s_(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Wv(n,e,t){const s=n[e];return s&&s.shape?s_(s.shape):t}function Gv(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):t}function Hv(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(i=>n_(i,s)):t}function jv(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>s_(r)):t}function qv(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jq{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,i)=>(r[i]=this.getAttr(i),r),{}))}getInput(e){return bs(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return bs(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return Bv(this.node.rawAttrs,e,t);if(s.s!=null)return Pv(this.node.rawAttrs,e,t);if(s.b!=null)return Mv(this.node.rawAttrs,e,t);if(s.shape!=null)return Wv(this.node.rawAttrs,e,t);if(s.type!=null)return Vv(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return Gv(this.node.rawAttrs,e,t);if(s.list.s!=null)return Hv(this.node.rawAttrs,e,t);if(s.list.shape!=null)return jv(this.node.rawAttrs,e,t);if(s.list.b!=null)return qv(this.node.rawAttrs,e,t);if(s.list.type!=null)return Uv(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cs=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:NE,abs:Gn,acos:UE,acosh:WE,add:Ce,addN:uM,all:R2,any:Ry,argMax:bu,argMin:GE,asin:HE,asinh:jE,atan:qE,atan2:XE,atanh:KE,avgPool:nb,avgPool3d:YE,basicLSTMCell:DM,batchNorm:pm,batchNorm2d:QE,batchNorm3d:ZE,batchNorm4d:JE,batchToSpaceND:sb,bincount:eR,bitwiseAnd:VM,booleanMaskAsync:kU,broadcastArgs:WM,broadcastTo:Hc,buffer:dt,cast:De,ceil:tR,clipByValue:dr,clone:Qa,complex:jo,concat:yn,concat1d:nR,concat2d:sR,concat3d:rR,concat4d:iR,conv1d:D2,conv2d:Ko,conv2dTranspose:O2,conv3d:aR,conv3dTranspose:lR,cos:rb,cosh:F2,cosineWindow:oS,cumprod:Ay,cumsum:z2,denseBincount:Cv,depthToSpace:uR,depthwiseConv2d:fm,diag:dB,dilation2d:cR,div:Be,divNoNan:hR,dot:dR,dropout:LR,einsum:Vc,elu:mm,enclosingPowerOfTwo:PR,ensureShape:SB,equal:Vi,erf:L2,euclideanNorm:mR,exp:qs,expandDims:Ln,expm1:gR,eye:M2,fft:xb,fill:ad,floor:ym,floorDiv:E2,fused:qU,gather:xm,gatherND:FU,greater:Ar,greaterEqual:ll,ifft:Zp,imag:ib,image:js,inTopKAsync:MU,irfft:tS,isFinite:yR,isInf:xR,isNaN:bR,leakyRelu:ab,less:Kp,lessEqual:Au,linalg:jR,linspace:XB,localResponseNormalization:wR,log:Ur,log1p:ob,logSigmoid:vR,logSoftmax:B2,logSumExp:lb,logicalAnd:ma,logicalNot:ub,logicalOr:V2,logicalXor:SR,losses:$G,lowerBound:c4,matMul:Ct,max:xi,maxPool:cb,maxPool3d:CR,maxPoolWithArgmax:f4,maximum:so,mean:vn,meshgrid:y4,min:Xp,minimum:Qo,mirrorPad:W2,mod:$R,moments:hb,movingAverage:TU,mul:Q,multiRNNCell:C4,multinomial:k4,neg:hn,norm:gm,notEqual:Qc,oneHot:G2,ones:$r,onesLike:Wr,op:J,outerProduct:R4,pad:Ui,pad1d:_4,pad2d:F4,pad3d:L4,pad4d:M4,pool:kR,pow:to,prelu:pb,print:VE,prod:NR,raggedGather:q4,raggedRange:K4,raggedTensorToTensor:Q4,rand:J4,randomGamma:vV,randomNormal:j2,randomStandardNormal:$V,randomUniform:Du,randomUniformInt:IV,range:Zc,real:Yp,reciprocal:IR,relu:va,relu6:q2,reshape:re,reverse:vi,reverse1d:OV,reverse2d:zV,reverse3d:PV,reverse4d:BV,rfft:bb,round:X2,rsqrt:K2,scalar:Ze,scatterND:RU,searchSorted:U2,selu:Y2,separableConv2d:Q2,setdiff1dAsync:jV,sigmoid:Vr,sign:TR,signal:CG,sin:Z2,sinh:J2,slice:ct,slice1d:mb,slice2d:eS,slice3d:gb,slice4d:Qp,softmax:yb,softplus:od,spaceToBatchND:db,sparse:kG,sparseToDense:_U,spectral:SG,split:kr,sqrt:Ss,square:Kt,squaredDifference:nS,squeeze:Bt,stack:Nr,step:ld,stridedSlice:ER,string:NG,sub:Ve,sum:qe,tan:RR,tanh:vu,tensor:Pi,tensor1d:Pn,tensor2d:bi,tensor3d:AR,tensor4d:dU,tensor5d:pU,tensor6d:fU,tensorScatterUpdate:gU,tile:fi,topk:_R,transpose:At,truncatedNormal:rS,unique:OR,unsortedSegmentSum:iS,unstack:Si,upperBound:SU,variable:FR,where:Rs,whereAsync:zR,zeros:Rn,zerosLike:Dt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qq=(n,e,t,s=Cs)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(R("a",n,e,t),R("b",n,e,t))];case"AddN":return[s.addN(R("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(R("a",n,e,t),R("b",n,e,t))];case"Mul":return[s.mul(R("a",n,e,t),R("b",n,e,t))];case"RealDiv":case"Div":return[s.div(R("a",n,e,t),R("b",n,e,t))];case"DivNoNan":return[s.divNoNan(R("a",n,e,t),R("b",n,e,t))];case"FloorDiv":return[s.floorDiv(R("a",n,e,t),R("b",n,e,t))];case"Sub":return[s.sub(R("a",n,e,t),R("b",n,e,t))];case"Minimum":return[s.minimum(R("a",n,e,t),R("b",n,e,t))];case"Maximum":return[s.maximum(R("a",n,e,t),R("b",n,e,t))];case"Pow":return[s.pow(R("a",n,e,t),R("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(R("a",n,e,t),R("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xq=(n,e,t,s=Cs)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(R("x",n,e,t))];case"Acos":return[s.acos(R("x",n,e,t))];case"Acosh":return[s.acosh(R("x",n,e,t))];case"Asin":return[s.asin(R("x",n,e,t))];case"Asinh":return[s.asinh(R("x",n,e,t))];case"Atan":return[s.atan(R("x",n,e,t))];case"Atan2":return[s.atan2(R("x",n,e,t),R("y",n,e,t))];case"Atanh":return[s.atanh(R("x",n,e,t))];case"Ceil":return[s.ceil(R("x",n,e,t))];case"Complex":return[s.complex(R("real",n,e,t),R("imag",n,e,t))];case"Cos":return[s.cos(R("x",n,e,t))];case"Cosh":return[s.cosh(R("x",n,e,t))];case"Elu":return[s.elu(R("x",n,e,t))];case"Erf":return[s.erf(R("x",n,e,t))];case"Exp":return[s.exp(R("x",n,e,t))];case"Expm1":return[s.expm1(R("x",n,e,t))];case"Floor":return[s.floor(R("x",n,e,t))];case"Log":return[s.log(R("x",n,e,t))];case"Log1p":return[s.log1p(R("x",n,e,t))];case"Imag":return[s.imag(R("x",n,e,t))];case"Neg":return[s.neg(R("x",n,e,t))];case"Reciprocal":return[s.reciprocal(R("x",n,e,t))];case"Real":return[s.real(R("x",n,e,t))];case"Relu":return[s.relu(R("x",n,e,t))];case"Round":return[s.round(R("x",n,e,t))];case"Selu":return[s.selu(R("x",n,e,t))];case"Sigmoid":return[s.sigmoid(R("x",n,e,t))];case"Sin":return[s.sin(R("x",n,e,t))];case"Sign":return[s.sign(R("x",n,e,t))];case"Sinh":return[s.sinh(R("x",n,e,t))];case"Softplus":return[s.softplus(R("x",n,e,t))];case"Sqrt":return[s.sqrt(R("x",n,e,t))];case"Square":return[s.square(R("x",n,e,t))];case"Tanh":return[s.tanh(R("x",n,e,t))];case"Tan":return[s.tan(R("x",n,e,t))];case"ClipByValue":return[s.clipByValue(R("x",n,e,t),R("clipValueMin",n,e,t),R("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(R("x",n,e,t))];case"Rsqrt":return[s.rsqrt(bs(n.inputNames[0],e,t))];case"LeakyRelu":return[s.leakyRelu(R("x",n,e,t),R("alpha",n,e,t))];case"Prelu":return[s.prelu(R("x",n,e,t),R("alpha",n,e,t))];case"IsNan":return[s.isNaN(bs(n.inputNames[0],e,t))];case"IsInf":return[s.isInf(bs(n.inputNames[0],e,t))];case"IsFinite":return[s.isFinite(bs(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function di(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){B(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const r=n[s],i=e[s];B(r<0||i<0||r===i,()=>t+` Shapes ${n} and ${e} must match`)}}}function TI(n){return!(typeof n=="number"||n.some(e=>e<0))}function Dp(n,e,t){let s=Xv(n,t);const r=!TI(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(i=>{s=Xv(i.shape,s)}),!TI(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Xv(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const r=n[s],i=e[s];if(r>=0&&i>=0&&r!==i)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=r>=0?r:i}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kq{constructor(e,t,s,r,i,a,o){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=i,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ze(0),us(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),di(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,us(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return Pi([],[0].concat(this.elementShape));const s=this.readMany(e);return di(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),Nr(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Pi([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return di(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),yn(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,Si(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(l=>(s+=l,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const i=s===0?0:t.size/s,a=[];ce(()=>{t=re(t,[1,s,i]);for(let l=0;l<e.length;++l){const d=[0,l===0?0:r[l-1],0],p=[1,e[l],i];a[l]=re(ct(t,d,p),this.elementShape)}return a});const o=[];for(let l=0;l<e.length;l++)o[l]=l;this.writeMany(o,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $u{get id(){return this.idTensor.id}constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e!=null&&e.forEach(i=>{if(s!==i.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${i.dtype}`);di(t,i.shape,"TensorList shape mismatch: "),us(i)}),this.idTensor=Ze(0),this.maxNumElements=r,us(this.idTensor)}copy(){return new $u([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);di(e,this.elementShape,"TensorList shape mismatch: ");const r=Dp(this.elementShape,this.tensors,e);return ce(()=>{const i=this.tensors.map(a=>re(a,r));return Nr(i,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=Dp(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,di(r.shape,e,"TensorList shape mismatch: "),re(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(di(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");us(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new $u([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);di(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Dp(this.elementShape,this.tensors,t);return re(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);di(this.elementShape,t.shape,"TensorList shape mismatch: "),us(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);di(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Dp(this.elementShape,this.tensors,s);return e.length===0?Pi([],[0].concat(r)):ce(()=>{const i=e.map(a=>re(this.tensors[a],r));return Nr(i,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);di(this.elementShape,t,"TensorList shape mismatch: ");const s=Dp(this.elementShape,this.tensors,t);return this.size()===0?Pi([],[0].concat(s)):ce(()=>{const r=this.tensors.map(i=>re(i,s));return yn(r,0)})}}function Yq(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const r=n.shape.slice(1);di(r,e,"TensorList shape mismatch: ");const i=Si(n);return new $u(i,e,s)}function Qq(n,e,t,s){return new $u([],n,e,s)}function Zq(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const i=new $u([],t,n.dtype,s),a=Si(n,0);return e.forEach((o,l)=>{i.setItem(o,a[l])}),i}function Jq(n,e,t){let s=0;const r=e.map(d=>(s+=d,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const i=n.shape.slice(1),a=Xv(i,t),o=s===0?0:n.size/s,l=ce(()=>{const d=[];n=re(n,[1,s,o]);for(let p=0;p<e.length;++p){const g=[0,p===0?0:r[p-1],0],x=[1,e[p],o];d[p]=re(ct(n,g,x),a)}return n.dispose(),d}),c=new $u([],t,n.dtype,e.length);for(let d=0;d<l.length;d++)c.setItem(d,l[d]);return c}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e8=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=R("thenBranch",n,e,t),r=R("elseBranch",n,e,t),i=R("cond",n,e,t),a=R("args",n,e,t);return(await i.data())[0]?t.functionMap[s].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[r].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=R("body",n,e,t),r=R("cond",n,e,t),i=R("args",n,e,t),a=await t.functionMap[r].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap),o=i.map(d=>d.id);let l=await a[0].data();a.forEach(d=>{!d.kept&&o.indexOf(d.id)===-1&&d.dispose()});let c=i;for(;l[0];){const d=c;c=await t.functionMap[s].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);const p=c.map(g=>g.id);d.forEach(g=>{!g.kept&&o.indexOf(g.id)===-1&&p.indexOf(g.id)===-1&&g.dispose()});const m=await t.functionMap[r].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);l=await m[0].data(),m.forEach(g=>{!g.kept&&o.indexOf(g.id)===-1&&p.indexOf(g.id)===-1&&g.dispose()})}return c}case"LoopCond":{const s=R("pred",n,e,t);return[Xa(s)]}case"Switch":{const s=R("pred",n,e,t);let r=R("data",n,e,t);return r.kept||(r=Xa(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>bs(r,e,t)!==void 0);if(s){const r=bs(s,e,t);return[Xa(r)]}return}case"Enter":{const s=R("frameName",n,e,t),r=R("tensor",n,e,t);return t.enterFrame(s),[Xa(r)]}case"Exit":{const s=R("tensor",n,e,t);return t.exitFrame(),[Xa(s)]}case"NextIteration":{const s=R("tensor",n,e,t);return t.nextIteration(),[Xa(s)]}case"TensorArrayV3":{const s=R("size",n,e,t),r=R("dtype",n,e,t),i=R("elementShape",n,e,t),a=R("dynamicSize",n,e,t),o=R("clearAfterRead",n,e,t),l=R("identicalElementShapes",n,e,t),c=R("name",n,e,t),d=new Kq(c,r,s,i,l,a,o);return t.addTensorArray(d),[d.idTensor,Ze(1)]}case"TensorArrayWriteV3":{const s=R("tensorArrayId",n,e,t),r=R("index",n,e,t),i=R("tensor",n,e,t),a=t.getTensorArray(s.id);return a.write(r,i),[a.idTensor]}case"TensorArrayReadV3":{const s=R("tensorArrayId",n,e,t),r=R("index",n,e,t);return[t.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=R("tensorArrayId",n,e,t),r=R("indices",n,e,t),i=R("dtype",n,e,t);return[t.getTensorArray(s.id).gather(r,i)]}case"TensorArrayScatterV3":{const s=R("tensorArrayId",n,e,t),r=R("indices",n,e,t),i=R("tensor",n,e,t),a=t.getTensorArray(s.id);return a.scatter(r,i),[a.idTensor]}case"TensorArrayConcatV3":{const s=R("tensorArrayId",n,e,t),r=t.getTensorArray(s.id),i=R("dtype",n,e,t);return[r.concat(i)]}case"TensorArraySplitV3":{const s=R("tensorArrayId",n,e,t),r=R("tensor",n,e,t),i=R("lengths",n,e,t),a=t.getTensorArray(s.id);return a.split(i,r),[a.idTensor]}case"TensorArraySizeV3":{const s=R("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return[Ze(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=R("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=R("tensorListId",n,e,t),r=R("index",n,e,t),i=R("tensor",n,e,t),a=t.getTensorList(s.id);return a.setItem(r,i),[a.idTensor]}case"TensorListGetItem":{const s=R("tensorListId",n,e,t),r=R("index",n,e,t),i=R("elementShape",n,e,t),a=R("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(r,i,a)]}case"TensorListScatterV2":case"TensorListScatter":{const s=R("indices",n,e,t),r=R("tensor",n,e,t),i=R("elementShape",n,e,t),a=R("numElements",n,e,t),o=Zq(r,s,i,a);return t.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=R("elementShape",n,e,t),r=R("elementDType",n,e,t);let i;n.op==="TensorListReserve"?i="numElements":i="maxNumElements";const a=R(i,n,e,t),o=n.op==="TensorListReserve"?-1:a,l=Qq(s,r,a,o);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=R("tensorListId",n,e,t),r=R("indices",n,e,t),i=R("elementShape",n,e,t),a=R("elementDType",n,e,t);return[t.getTensorList(s.id).gather(r,a,i)]}case"TensorListStack":{const s=R("tensorListId",n,e,t),r=R("elementShape",n,e,t),i=R("elementDType",n,e,t),a=R("numElements",n,e,t);return[t.getTensorList(s.id).stack(r,i,a)]}case"TensorListFromTensor":{const s=R("tensor",n,e,t),r=R("elementShape",n,e,t),i=R("elementDType",n,e,t),a=Yq(s,r,i);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=R("tensorListId",n,e,t),r=t.getTensorList(s.id),i=R("dtype",n,e,t),a=R("elementShape",n,e,t);return[r.concat(i,a)]}case"TensorListPushBack":{const s=R("tensorListId",n,e,t),r=R("tensor",n,e,t),i=t.getTensorList(s.id);return i.pushBack(r),[i.idTensor]}case"TensorListPopBack":{const s=R("tensorListId",n,e,t),r=R("elementShape",n,e,t),i=R("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(r,i)]}case"TensorListSplit":{const s=R("tensor",n,e,t),r=R("elementShape",n,e,t),i=R("lengths",n,e,t),a=Jq(s,i,r);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{const s=R("tensorListId",n,e,t),r=t.getTensorList(s.id);return[Ze(r.size(),"int32")]}case"TensorListResize":{const s=R("tensorListId",n,e,t),r=R("size",n,e,t),a=t.getTensorList(s.id).resize(r);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EI(n,e,t){const[s,r]=R("fusedOps",n,e,t),i=s==="biasadd",a=!i,o=r==="prelu",l=s==="fusedbatchnorm",c=R("numArgs",n,e,t);if(i){if(o&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const d=R("strides",n,e,t),p=by(n,e,t),m=R("dataFormat",n,e,t).toUpperCase(),g=R("dilations",n,e,t);let[x,b]=R("args",n,e,t);a&&(b=x,x=void 0);const w=R("leakyreluAlpha",n,e,t);return{stride:d,pad:p,dataFormat:m,dilations:g,biasArg:x,preluArg:b,activationFunc:r,leakyreluAlpha:w}}const t8=(n,e,t,s=Cs)=>{switch(n.op){case"Conv1D":{const r=R("stride",n,e,t),i=R("pad",n,e,t),a=R("dataFormat",n,e,t).toUpperCase(),o=R("dilation",n,e,t);return[s.conv1d(R("x",n,e,t),R("filter",n,e,t),r,i,a,o)]}case"Conv2D":{const r=R("strides",n,e,t),i=by(n,e,t),a=R("dataFormat",n,e,t).toUpperCase(),o=R("dilations",n,e,t);return[s.conv2d(R("x",n,e,t),R("filter",n,e,t),[r[1],r[2]],i,a,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:c,activationFunc:d,leakyreluAlpha:p}=EI(n,e,t);return[s.fused.conv2d({x:R("x",n,e,t),filter:R("filter",n,e,t),strides:[r[1],r[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:c,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:c,activationFunc:d,leakyreluAlpha:p}=EI(n,e,t);return[s.fused.depthwiseConv2d({x:R("x",n,e,t),filter:R("filter",n,e,t),strides:[r[1],r[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:c,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=R("outputShape",n,e,t),i=R("strides",n,e,t),a=by(n,e,t);return[s.conv2dTranspose(R("x",n,e,t),R("filter",n,e,t),r,[i[1],i[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=R("strides",n,e,t),i=by(n,e,t),a=R("dilations",n,e,t),o=R("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(R("input",n,e,t),R("filter",n,e,t),[r[1],r[2]],i,o,[a[1],a[2]])]}case"Conv3D":{const r=R("strides",n,e,t),i=R("pad",n,e,t),a=R("dataFormat",n,e,t).toUpperCase(),o=R("dilations",n,e,t);return[s.conv3d(R("x",n,e,t),R("filter",n,e,t),[r[1],r[2],r[3]],i,a,[o[1],o[2],o[3]])]}case"AvgPool":{const r=R("strides",n,e,t),i=R("pad",n,e,t),a=R("kernelSize",n,e,t);return[s.avgPool(R("x",n,e,t),[a[1],a[2]],[r[1],r[2]],i)]}case"MaxPool":{const r=R("strides",n,e,t),i=R("pad",n,e,t),a=R("kernelSize",n,e,t);return[s.maxPool(R("x",n,e,t),[a[1],a[2]],[r[1],r[2]],i)]}case"MaxPoolWithArgmax":{const r=R("strides",n,e,t),i=R("pad",n,e,t),a=R("kernelSize",n,e,t),o=R("includeBatchInIndex",n,e,t),{result:l,indexes:c}=s.maxPoolWithArgmax(R("x",n,e,t),[a[1],a[2]],[r[1],r[2]],i,o);return[l,c]}case"AvgPool3D":{const r=R("strides",n,e,t),i=R("pad",n,e,t),a=R("kernelSize",n,e,t);return[s.avgPool3d(R("x",n,e,t),[a[1],a[2],a[3]],[r[1],r[2],r[3]],i)]}case"MaxPool3D":{const r=R("strides",n,e,t),i=R("pad",n,e,t),a=R("kernelSize",n,e,t);return[s.maxPool3d(R("x",n,e,t),[a[1],a[2],a[3]],[r[1],r[2],r[3]],i)]}case"Dilation2D":{const r=R("strides",n,e,t),i=R("pad",n,e,t),a=R("dilations",n,e,t),o=r[1],l=r[2],c=a[1],d=a[2];return[s.dilation2d(R("x",n,e,t),R("filter",n,e,t),[o,l],i,[c,d],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n8=(n,e,t,s=Cs)=>{switch(n.op){case"Fill":{const r=R("shape",n,e,t),i=R("dtype",n,e,t),a=R("value",n,e,t);return[s.fill(r,a,i)]}case"LinSpace":{const r=R("start",n,e,t),i=R("stop",n,e,t),a=R("num",n,e,t);return[s.linspace(r,i,a)]}case"Multinomial":{const r=R("logits",n,e,t),i=R("numSamples",n,e,t),a=R("seed",n,e,t);return[s.multinomial(r,i,a)]}case"OneHot":{const r=R("indices",n,e,t),i=R("depth",n,e,t),a=R("onValue",n,e,t),o=R("offValue",n,e,t),l=R("dtype",n,e,t);return[s.oneHot(r,i,a,o,l)]}case"Ones":return[s.ones(R("shape",n,e,t),R("dtype",n,e,t))];case"OnesLike":return[s.onesLike(R("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(R("shape",n,e,t),R("dtype",n,e,t),R("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(R("shape",n,e,t),R("minval",n,e,t),R("maxval",n,e,t),R("dtype",n,e,t))];case"RandomUniformInt":return[s.randomUniformInt(R("shape",n,e,t),R("minval",n,e,t),R("maxval",n,e,t),R("seed",n,e,t))];case"Range":{const r=R("start",n,e,t),i=R("stop",n,e,t),a=R("step",n,e,t);return[s.range(r,i,a,R("dtype",n,e,t))]}case"TruncatedNormal":{const r=R("shape",n,e,t),i=R("mean",n,e,t),a=R("stdDev",n,e,t),o=R("seed",n,e,t);return[s.truncatedNormal(r,i,a,R("dtype",n,e,t),o)]}case"Zeros":return[s.zeros(R("shape",n,e,t),R("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(R("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ww(n,e,t){const s=R("boxes",n,e,t),r=R("scores",n,e,t),i=R("maxOutputSize",n,e,t),a=R("iouThreshold",n,e,t),o=R("scoreThreshold",n,e,t),l=R("softNmsSigma",n,e,t);return{boxes:s,scores:r,maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}}const s8=async(n,e,t,s,r=Cs)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:c,softNmsSigma:d}=Ww(n,e,t),p=await r.image.nonMaxSuppressionWithScoreAsync(i,a,o,l,c,d);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:c}=Ww(n,e,t),d=R("padToMaxOutputSize",n,e,t),p=await r.image.nonMaxSuppressionPaddedAsync(i,a,o,l,c,d);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:c}=Ww(n,e,t);return[await r.image.nonMaxSuppressionAsync(i,a,o,l,c)]}case"Where":{const i=r.cast(R("condition",n,e,t),"bool"),a=[await r.whereAsync(i)];return i.dispose(),a}case"ListDiff":return r.setdiff1dAsync(R("x",n,e,t),R("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r8=(n,e,t,s=Cs)=>{switch(n.op){case"LowerBound":{const r=R("sortedSequence",n,e,t),i=R("values",n,e,t);return[s.lowerBound(r,i)]}case"TopKV2":{const r=R("x",n,e,t),i=R("k",n,e,t),a=R("sorted",n,e,t),o=s.topk(r,i,a);return[o.values,o.indices]}case"UpperBound":{const r=R("sortedSequence",n,e,t),i=R("values",n,e,t);return[s.upperBound(r,i)]}case"Unique":{const r=R("x",n,e,t),i=s.unique(r);return[i.values,i.indices]}case"UniqueV2":{const r=R("x",n,e,t),i=R("axis",n,e,t),a=s.unique(r,i);return[a.values,a.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i8=(n,e,t,s=Cs)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const r=R("default",n,e,t);return[bs(n.name,e,t)||r];case"Placeholder":return[bs(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const d=R("x",n,e,t);return[Xa(d)]}case"IdentityN":return R("x",n,e,t).map(d=>Xa(d));case"Snapshot":const i=R("x",n,e,t);return[Xa(i)];case"Shape":return[s.tensor1d(R("x",n,e,t).shape,"int32")];case"ShapeN":return R("x",n,e,t).map(d=>s.tensor1d(d.shape));case"Size":return[s.scalar(R("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(R("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const a=R("x",n,e,t),o=R("data",n,e,t),l=R("message",n,e,t),c=R("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let d=0;d<o.length;d++)console.log(Array.prototype.slice.call(o[d].dataSync()).slice(0,c));return[a];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a8{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ze(0),this.tensorMap=new Map,us(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ze(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),ce(()=>{const r=Si(t),i=s.length,a=r.length;B(i===a,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${a} elements.`);for(let o=0;o<i;o++){const l=s[o],c=r[o];us(c),this.tensorMap.set(l,c)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return ce(()=>{const r=[];for(let i=0;i<s.length;i++){const a=s[i],o=this.findWithDefault(a,t);r.push(o)}return Nr(r)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o8=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(n.name);if(r!=null)return[r];{const i=R("keyDType",n,e,t),a=R("valueDType",n,e,t),o=new a8(i,a);return s.addHashTable(n.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=R("tableHandle",n,e,t,s),i=R("keys",n,e,t),a=R("values",n,e,t);return[await s.getHashTableById(r.id).import(i,a)]}case"LookupTableFind":case"LookupTableFindV2":{const r=R("tableHandle",n,e,t,s),i=R("keys",n,e,t),a=R("defaultValue",n,e,t);return[await s.getHashTableById(r.id).find(i,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=R("tableHandle",n,e,t,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l8=(n,e,t,s=Cs)=>{switch(n.op){case"ResizeBilinear":{const r=R("images",n,e,t),i=R("size",n,e,t),a=R("alignCorners",n,e,t),o=R("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(r,[i[0],i[1]],a,o)]}case"ResizeNearestNeighbor":{const r=R("images",n,e,t),i=R("size",n,e,t),a=R("alignCorners",n,e,t),o=R("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(r,[i[0],i[1]],a,o)]}case"CropAndResize":{const r=R("image",n,e,t),i=R("boxes",n,e,t),a=R("boxInd",n,e,t),o=R("cropSize",n,e,t),l=R("method",n,e,t),c=R("extrapolationValue",n,e,t);return[s.image.cropAndResize(r,i,a,o,l,c)]}case"ImageProjectiveTransformV3":{const r=R("images",n,e,t),i=R("transforms",n,e,t),a=R("outputShape",n,e,t),o=R("fillValue",n,e,t),l=R("interpolation",n,e,t),c=R("fillMode",n,e,t);return[s.image.transform(r,i,l.toLowerCase(),c.toLowerCase(),o,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u8=(n,e,t,s=Cs)=>{switch(n.op){case"Equal":return[s.equal(R("a",n,e,t),R("b",n,e,t))];case"NotEqual":return[s.notEqual(R("a",n,e,t),R("b",n,e,t))];case"Greater":return[s.greater(R("a",n,e,t),R("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(R("a",n,e,t),R("b",n,e,t))];case"Less":return[s.less(R("a",n,e,t),R("b",n,e,t))];case"LessEqual":return[s.lessEqual(R("a",n,e,t),R("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(R("a",n,e,t),R("b",n,e,t))];case"LogicalNot":return[s.logicalNot(R("a",n,e,t))];case"LogicalOr":return[s.logicalOr(R("a",n,e,t),R("b",n,e,t))];case"Select":case"SelectV2":return[s.where(R("condition",n,e,t),R("a",n,e,t),R("b",n,e,t))];case"BitwiseAnd":return[s.bitwiseAnd(R("a",n,e,t),R("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c8=(n,e,t,s=Cs)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(R("a",n,e,t),R("b",n,e,t),R("transposeA",n,e,t),R("transposeB",n,e,t))];case"Einsum":return[s.einsum(R("equation",n,e,t),...R("tensors",n,e,t))];case"Transpose":return[s.transpose(R("x",n,e,t),R("perm",n,e,t))];case"_FusedMatMul":const[r,i]=R("fusedOps",n,e,t),a=r==="biasadd",o=i==="prelu",l=R("numArgs",n,e,t),c=R("leakyreluAlpha",n,e,t);if(a){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[d,p]=R("args",n,e,t);return[s.fused.matMul({a:R("a",n,e,t),b:R("b",n,e,t),transposeA:R("transposeA",n,e,t),transposeB:R("transposeB",n,e,t),bias:d,activation:i,preluActivationWeights:p,leakyreluAlpha:c})];case"MatrixBandPart":return[s.linalg.bandPart(R("a",n,e,t),R("numLower",n,e,t),R("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h8=(n,e,t,s=Cs)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(R("x",n,e,t),R("axis",n,e,t),R("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(R("x",n,e,t),R("mean",n,e,t),R("variance",n,e,t),R("offset",n,e,t),R("scale",n,e,t),R("epsilon",n,e,t))];case"FusedBatchNormV3":return[s.batchNorm(R("x",n,e,t),R("mean",n,e,t),R("variance",n,e,t),R("offset",n,e,t),R("scale",n,e,t),R("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(R("x",n,e,t),R("radius",n,e,t),R("bias",n,e,t),R("alpha",n,e,t),R("beta",n,e,t))];case"Softmax":return[s.softmax(R("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(R("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d8=(n,e,t,s=Cs)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:i}=s.raggedGather(R("paramsNestedSplits",n,e,t),R("paramsDenseValues",n,e,t),R("indices",n,e,t),R("outputRaggedRank",n,e,t));return r.concat(i)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:i}=s.raggedRange(R("starts",n,e,t),R("limits",n,e,t),R("splits",n,e,t));return[r,i]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(R("shape",n,e,t),R("values",n,e,t),R("defaultValue",n,e,t),R("rowPartitionTensors",n,e,t),R("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p8=(n,e,t,s=Cs)=>{switch(n.op){case"Max":{const o=R("axis",n,e,t),l=R("keepDims",n,e,t);return[s.max(R("x",n,e,t),o,l)]}case"Mean":{const o=R("axis",n,e,t),l=R("keepDims",n,e,t);return[s.mean(R("x",n,e,t),o,l)]}case"Min":{const o=R("axis",n,e,t),l=R("keepDims",n,e,t);return[s.min(R("x",n,e,t),o,l)]}case"Sum":{const o=R("axis",n,e,t),l=R("keepDims",n,e,t);return[s.sum(R("x",n,e,t),o,l)]}case"All":{const o=R("axis",n,e,t),l=R("keepDims",n,e,t);return[s.all(R("x",n,e,t),o,l)]}case"Any":{const o=R("axis",n,e,t),l=R("keepDims",n,e,t);return[s.any(R("x",n,e,t),o,l)]}case"ArgMax":{const o=R("axis",n,e,t);return[s.argMax(R("x",n,e,t),o)]}case"ArgMin":{const o=R("axis",n,e,t);return[s.argMin(R("x",n,e,t),o)]}case"Prod":{const o=R("axis",n,e,t),l=R("keepDims",n,e,t);return[s.prod(R("x",n,e,t),o,l)]}case"Cumprod":{const o=R("axis",n,e,t),l=R("exclusive",n,e,t),c=R("reverse",n,e,t);return[s.cumprod(R("x",n,e,t),o,l,c)]}case"Cumsum":{const o=R("axis",n,e,t),l=R("exclusive",n,e,t),c=R("reverse",n,e,t);return[s.cumsum(R("x",n,e,t),o,l,c)]}case"Bincount":const r=R("x",n,e,t),i=R("weights",n,e,t),a=R("size",n,e,t);return[s.bincount(r,i,a)];case"DenseBincount":{const o=R("x",n,e,t),l=R("weights",n,e,t),c=R("size",n,e,t),d=R("binaryOutput",n,e,t);return[s.denseBincount(o,l,c,d)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f8=(n,e,t,s=Cs)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=R("n",n,e,t),i=R("axis",n,e,t);let a=R("tensors",n,e,t);return a=a.slice(0,r),[s.concat(a,i)]}case"Gather":{const r=R("x",n,e,t),i=R("indices",n,e,t);return[s.gather(r,s.cast(i,"int32"),0)]}case"GatherV2":{const r=R("axis",n,e,t),i=R("batchDims",n,e,t),a=R("x",n,e,t),o=R("indices",n,e,t);return[s.gather(a,s.cast(o,"int32"),r,i)]}case"Reverse":{const r=R("dims",n,e,t),i=[];for(let o=0;o<r.length;o++)r[o]&&i.push(o);const a=R("x",n,e,t);return[s.reverse(a,i)]}case"ReverseV2":{const r=R("axis",n,e,t),i=R("x",n,e,t);return[s.reverse(i,r)]}case"Slice":{const r=R("begin",n,e,t),i=R("size",n,e,t);return[s.slice(R("x",n,e,t),r,i)]}case"StridedSlice":{const r=R("begin",n,e,t),i=R("end",n,e,t),a=R("strides",n,e,t),o=R("beginMask",n,e,t),l=R("endMask",n,e,t),c=R("ellipsisMask",n,e,t),d=R("newAxisMask",n,e,t),p=R("shrinkAxisMask",n,e,t),m=R("x",n,e,t);return[s.stridedSlice(m,r,i,a,o,l,c,d,p)]}case"Pack":return ce(()=>{const r=R("axis",n,e,t),i=R("tensors",n,e,t),a=i[0].shape,o=s.squeeze(i[0]).shape,l=i.map(c=>{const d=yt(c.shape,a);if(!d&&!yt(s.squeeze(c).shape,o))throw new Error("the input tensors shape does not match");return d?c:s.reshape(c,a)});return[s.stack(l,r)]});case"Unpack":{const r=R("axis",n,e,t),i=R("tensor",n,e,t);return s.unstack(i,r)}case"Tile":{const r=R("reps",n,e,t);return[s.tile(R("x",n,e,t),r)]}case"Split":case"SplitV":{const r=R("axis",n,e,t),i=R("numOrSizeSplits",n,e,t),a=R("x",n,e,t);return s.split(a,i,r)}case"ScatterNd":{const r=R("indices",n,e,t),i=R("values",n,e,t),a=R("shape",n,e,t);return[s.scatterND(r,i,a)]}case"GatherNd":{const r=R("x",n,e,t),i=R("indices",n,e,t);return[s.gatherND(r,i)]}case"SparseToDense":{const r=R("sparseIndices",n,e,t),i=R("outputShape",n,e,t),a=R("sparseValues",n,e,t),o=R("defaultValue",n,e,t);return[s.sparseToDense(r,a,i,a.dtype===o.dtype?o:s.cast(o,a.dtype))]}case"TensorScatterUpdate":{const r=R("indices",n,e,t),i=R("values",n,e,t),a=R("tensor",n,e,t);return[s.tensorScatterUpdate(a,r,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m8=(n,e,t,s=Cs)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:i,emptyRowIndicator:a,reverseIndexMap:o}=s.sparse.sparseFillEmptyRows(R("indices",n,e,t),R("values",n,e,t),R("denseShape",n,e,t),R("defaultValue",n,e,t));return[r,i,a,o]}case"SparseReshape":{const{outputIndices:r,outputShape:i}=s.sparse.sparseReshape(R("inputIndices",n,e,t),R("inputShape",n,e,t),R("newShape",n,e,t));return[r,i]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(R("data",n,e,t),R("indices",n,e,t),R("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(R("data",n,e,t),R("indices",n,e,t),R("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g8=(n,e,t,s=Cs)=>{switch(n.op){case"FFT":return[s.fft(R("x",n,e,t))];case"IFFT":return[s.ifft(R("x",n,e,t))];case"RFFT":return[s.rfft(R("x",n,e,t))];case"IRFFT":return[s.irfft(R("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y8=(n,e,t,s=Cs)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(R("input",n,e,t),R("pattern",n,e,t),R("rewrite",n,e,t),R("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:r,nGramsSplits:i}=s.string.stringNGrams(R("data",n,e,t),R("dataSplits",n,e,t),R("separator",n,e,t),R("nGramWidths",n,e,t),R("leftPad",n,e,t),R("rightPad",n,e,t),R("padWidth",n,e,t),R("preserveShortSequences",n,e,t));return[r,i]}case"StringSplit":{const{indices:r,values:i,shape:a}=s.string.stringSplit(R("input",n,e,t),R("delimiter",n,e,t),R("skipEmpty",n,e,t));return[r,i,a]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(R("input",n,e,t),R("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x8=(n,e,t,s=Cs)=>{switch(n.op){case"Cast":return[s.cast(R("x",n,e,t),R("dtype",n,e,t))];case"ExpandDims":{const r=R("axis",n,e,t);return[s.expandDims(R("x",n,e,t),r)]}case"Squeeze":{const r=R("axis",n,e,t);return[s.squeeze(R("x",n,e,t),r)]}case"Reshape":return[s.reshape(R("x",n,e,t),R("shape",n,e,t))];case"EnsureShape":return[s.ensureShape(R("x",n,e,t),R("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(R("x",n,e,t),R("padding",n,e,t),R("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(R("x",n,e,t),R("padding",n,e,t),R("constantValue",n,e,t))];case"SpaceToBatchND":{const r=R("blockShape",n,e,t),i=R("paddings",n,e,t);return[s.spaceToBatchND(R("x",n,e,t),r,i)]}case"BatchToSpaceND":{const r=R("blockShape",n,e,t),i=R("crops",n,e,t);return[s.batchToSpaceND(R("x",n,e,t),r,i)]}case"DepthToSpace":{const r=R("blockSize",n,e,t),i=R("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(R("x",n,e,t),r,i)]}case"BroadcastTo":return[s.broadcastTo(R("x",n,e,t),R("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(R("s0",n,e,t),R("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RI(n,e,t,s,r=ce){const i=((a,o,l)=>{switch(a.category){case"arithmetic":return r(()=>qq(a,o,l));case"basic_math":return r(()=>Xq(a,o,l));case"control":return e8(a,o,l);case"convolution":return r(()=>t8(a,o,l));case"creation":return r(()=>n8(a,o,l));case"dynamic":return s8(a,o,l);case"evaluation":return r(()=>r8(a,o,l));case"image":return r(()=>l8(a,o,l));case"graph":return r(()=>i8(a,o,l));case"logical":return r(()=>u8(a,o,l));case"matrices":return r(()=>c8(a,o,l));case"normalization":return r(()=>h8(a,o,l));case"ragged":return r(()=>d8(a,o,l));case"reduction":return r(()=>p8(a,o,l));case"slice_join":return r(()=>f8(a,o,l));case"sparse":return r(()=>m8(a,o,l));case"spectral":return r(()=>g8(a,o,l));case"string":return r(()=>y8(a,o,l));case"transformation":return r(()=>x8(a,o,l));case"hash_table":return o8(a,o,l,s);case"custom":const c=t_(a.op);if(c&&c.customExecutor)return c.customExecutor(new jq(a,o,l));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return fu(i)?i.then(a=>[].concat(a)):[].concat(i)}class AI{constructor(e={},t={},s={},r={},i){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=i,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DI(n,e,t,s){const r=new Set,i=[];let a=null,o=null;const l=new Set,c=new Set(Object.keys(n).map(m=>Sr(m)[0]));s=s||[];const d=new Set(s.map(m=>Sr(m.name)[0])),p=[...e];for(;p.length>0;){const m=p.pop();if((nu(m)||N8(m)||I8(m))&&a==null&&(a=m,o=a.children.map(g=>g.name).filter(g=>r.has(g))),r.add(m.name),t[m.name]==null&&!c.has(m.name)&&!d.has(m.name)){if(m.inputs.length===0){i.push(m.name);continue}m.inputs.forEach(g=>{l.has(g.name)||(l.add(g.name),p.push(g))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:i,dynamicNode:a,syncInputs:o}}function b8(n,e){const{usedNodes:t,inputs:s}=e,r=Object.keys(s).map(w=>Sr(w)[0]).map(w=>n.nodes[w]),i=n.initNodes||[],a=w=>t.has(typeof w=="string"?w:w.name);function o(w){return[...new Map(w.map(v=>[v.name,v])).values()]}const l=o([...r,...n.weights,...i]).filter(a),c=o([...l,...Object.values(n.nodes)]).filter(a),d=new Map(c.map(w=>[w.name,w])),p={};for(const w of c){p[w.name]=p[w.name]||0;for(const v of w.children)a(v)||(p[v.name]=Number.POSITIVE_INFINITY),p[v.name]=(p[v.name]||0)+1}const m=Object.entries(p).filter(([,w])=>w===0).map(([w])=>w),g=[...m];for(;m.length>0;){const w=m.pop(),v=d.get(w);for(const $ of v.children.filter(a))--p[$.name]===0&&(g.push($.name),m.push($.name))}const x=g.map(w=>d.get(w)),b=w8(x,l);return v8(b,l),b}function w8(n,e){const t=new Map(n.map(a=>[a.name,a])),s=e.map(a=>a.name),r=new Set(s);for(;s.length>0;){const a=s.pop(),o=t.get(a);for(const l of o.children)!t.has(l.name)||r.has(l.name)||(r.add(l.name),s.push(l.name))}return n.filter(a=>r.has(a.name))}class ey extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function v8(n,e){const t=new Map(n.map((o,l)=>[o.name,l])),s=new Set(e.map(o=>o.name)),r=o=>s.has(typeof o=="string"?o:o.name),i=new Set(n.map(o=>o.name)),a=o=>i.has(typeof o=="string"?o:o.name);for(const o of n){for(const l of o.children.filter(a)){if(!t.has(l.name))throw new ey(`Child ${l.name} of node ${o.name} is unreachable.`);if(t.get(o.name)>t.get(l.name))throw new ey(`Node ${o.name} is scheduled to run after its child ${l.name}.`)}if(!r(o))for(const l of o.inputs){if(!t.has(l.name))throw new ey(`Input ${l.name} of node ${o.name} is unreachable.`);if(t.get(l.name)>t.get(o.name))throw new ey(`Node ${o.name} is scheduled to run before its input ${l.name}.`)}}}function S8(n){const e=new Map(n.map((o,l)=>[o.name,l])),t=Number.MAX_SAFE_INTEGER,s=n.map((o,l)=>nu(o)?t:l),r=o=>{const l=s[e.get(o.name)];return l??-1},i=n.map((o,l)=>o.children.map(r).reduce((c,d)=>Math.max(c,d),s[l])),a=new Map;for(let o=0;o<n.length;++o){const l=i[o];if(l===t)continue;const c=n[o],d=n[l];a.has(d.name)||a.set(d.name,[]),a.get(d.name).push(c)}return a}const C8=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),$8=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),k8=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function nu(n){return C8.has(n.op)}function N8(n){return $8.has(n.op)}function I8(n){return k8.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uy{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new Uy(e.functions[s],this)})}getCompilationKey(e,t){const s=e.map(i=>i.name).sort(),r=t.map(i=>i.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const s=DI(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:i,syncInputs:a}=s;if(i!=null)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const c=t.map(p=>p.name),d=Object.keys(e);throw new Error(`Cannot compute the outputs [${c}] from the provided inputs [${d}]. Missing the following inputs: [${r}]`)}const o=b8(this.graph,s),l=S8(o);return{orderedNodes:o,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return us(t),t}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(m=>this.graph.nodes[Sr(m)[0]]),i=t.map(m=>Sr(m)[0]),a=new Set(i);let o=i.map(m=>this.graph.nodes[m]);o.length===0&&(o=this._outputs);const l=this.getCompilationKey(r,o);let c=this.compiledMap.get(l);c==null&&(c=this.compile(e,o),this.compiledMap.set(l,c));try{this.keepIntermediateTensors=pe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}const d={},p={};return ce(()=>{const m=new AI(this.weightMap,d,p,this.functionExecutorMap,this.parseNodeNameCache),g=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(v=>{const[$,I]=Sr(v,m),N=[];N[I]=e[v],g[$]=N,this.keepIntermediateTensors&&(this.clonedTensorsMap[$]=this.cloneTensorList(N))});const x=this.getFrozenTensorIds(g),{orderedNodes:b,nodeLiveUntilMap:w}=c;for(const v of b){if(g[v.name])continue;const $=RI(v,g,m,this._resourceManager);if(fu($))throw new Error(`The execution of the op '${v.op}' returned a promise. Please use model.executeAsync() instead.`);g[v.name]=$,this.keepIntermediateTensors&&(this.clonedTensorsMap[v.name]=this.cloneTensorList($)),this.checkTensorForDisposalWithNodeLiveUntilInfo(v,g,m,x,a,w.get(v.name))}return this.parent==null&&m.dispose(x),t.map(v=>bs(v,g,m))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,i,a,o){if(!(nu(t)||a.has(e))){for(const l of s[e])l!=null&&(o[l.id]=(o[l.id]||0)+t.children.length);for(const l of t.inputs){if(nu(l))continue;const c=kI(l.name,s,r);if(c!=null)for(const d of c){if(!d||d.kept||i.has(d.id))continue;const p=o[d.id];p===1?(d.dispose(),delete o[d.id]):p!=null&&o[d.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,s,r,i,a){function o(l){return nu(l)||i.has(l.name)}if(!(nu(e)||a==null))for(const l of a){if(o(l))continue;const c=kI(l.name,t,s);for(const d of c)!d||d.kept||r.has(d.id)||d.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,s=!1,r={},i={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=pe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}const a=new AI(this.weightMap,r,i,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,a,t,s),l=t.map(m=>bs(m,o,a)),c=l.map(m=>m.id),d=Object.keys(e).map(m=>e[m].id),p=new Set([...c,...d,...this.weightIds]);return Object.values(o).forEach(m=>{m.forEach(g=>{g&&!g.isDisposed&&!p.has(g.id)&&g.dispose()})}),this.parent==null&&a.dispose(p),l}async executeFunctionAsync(e,t,s){const r=e.reduce((i,a,o)=>(i[this.inputs[o].name]=a,i),{});return this._executeAsync(r,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,r){const i=Object.keys(e),a=i.map(N=>this.graph.nodes[Sr(N)[0]]),o=s.map(N=>Sr(N)[0]),l=new Set(o);let c=o.map(N=>this.graph.nodes[N]);c.length===0&&(c=this._outputs);const{usedNodes:d,missingInputs:p,dynamicNode:m,syncInputs:g}=DI(e,c,this.weightMap,this._initNodes),x=[...a,...this.graph.weights,...this._initNodes||[]].map(N=>({node:N,contexts:t.currentContext})),b=Object.assign({},this.weightMap);Object.keys(e).forEach(N=>{const[E,_]=Sr(N),z=[];z[_]=e[N],b[E]=z});const w={},v=this.getFrozenTensorIds(b),$={};for(;x.length>0;){const N=this.processStack(a,x,t,b,$,v,l,w,d);await Promise.all(N)}m==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const I=c.filter(N=>!nu(N)&&!bs(N.name,b,t)).map(N=>N.name);if(I.length>0){let N="";throw m!=null&&(N=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${g}]`),new Error(`Cannot compute the outputs [${I}] from the provided inputs [${i}]. Consider providing the following inputs: [${p}]. ${N}`)}return b}processStack(e,t,s,r,i,a,o,l,c){const d=[];for(;t.length>0;){const p=t.pop();s.currentContext=p.contexts;let m="";if(p.node.op==="Enter"&&R("isConstant",p.node,r,s)&&([m]=qa(p.node.name,s)),r[p.node.name]==null){const g=RI(p.node,r,s,this._resourceManager);m||([m]=qa(p.node.name,s));const x=s.currentContext;fu(g)?d.push(g.then(b=>(r[m]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(b)),s.currentContext=x,this.checkTensorForDisposal(m,p.node,r,s,a,o,l),this.processChildNodes(p.node,t,s,r,i,c),b))):(r[m]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(g)),this.checkTensorForDisposal(m,p.node,r,s,a,o,l),this.processChildNodes(p.node,t,s,r,i,c))}else this.processChildNodes(p.node,t,s,r,i,c)}return d}processChildNodes(e,t,s,r,i,a){e.children.forEach(o=>{const[l]=qa(o.name,s);i[l]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(c=>!!bs(c,r,s))&&(i[l]=!0,t.push({contexts:s.currentContext,node:o})):o.inputNames.every(c=>!!bs(c,r,s))&&(i[l]=!0,t.push({contexts:s.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=Sr(t),i=this.graph.nodes[r];if(i.attrParams.shape&&i.attrParams.shape.value){const a=i.attrParams.shape.value,o=a.length===s.shape.length&&s.shape.every((l,c)=>a[c]===-1||a[c]===l);B(o,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${a}], but was [${s.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&B(s.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const r={};for(const i in e){const a=(s=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||s===void 0?void 0:s[i];a!=null?r[a.name]=e[i]:r[i]=e[i]}return r}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=Sr(s);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,r;const i=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[t];return i!=null?i.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=Sr(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class T8{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E8="?tfjs-format=file",R8="model.json";class A8{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},s=rA){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,t==null&&(this.loadOptions={}),this.resourceManager=new T8}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return fu(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await EE(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const s=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const i=this.artifacts.userDefinedMetadata;i.signature!=null&&(r=i.signature),i.structuredOutputKeys!=null&&(this.structuredOutputKeys=i.structuredOutputKeys)}if(this.signature=r,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new Uy(NI.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const i=NI.Instance.transformGraph(e.modelInitializer);this.initializer=new Uy(i),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Ht?[e]:e,s={};return t.forEach((r,i)=>s[this.structuredOutputKeys[i]]=r),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,t){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var t;if(!(e instanceof Ht)&&!Array.isArray(e)){const i=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(i!=null)for(const a in i){const o=i[a];o.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[o.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((i,a)=>{var o,l,c;const d=(c=(l=(o=this.signature)===null||o===void 0?void 0:o.inputs)===null||l===void 0?void 0:l[a])===null||c===void 0?void 0:c.resourceId;return d!=null?i[a]=this.resourceIdToCapturedInput[d]:i[a]=e[r++],i},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let r=0;r<s.length;r++){const i=s[r],a=t[i];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&rt(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function eh(n,e={},t=rA){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=D8(n));const s=new A8(n,e,t);return await s.load(),s}function D8(n){return n.endsWith("/")||(n=n+"/"),`${n}${R8}${E8}`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var _I;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(_I||(_I={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xe(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&B(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _8=aS;class r0 extends nx{nextDataId(){return r0.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new u2(this,os())}write(e,t,s){this.firstUse&&(this.firstUse=!1,pe().get("IS_NODE")&&Mr(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&uh(s[0])){const i=s.map(a=>Ya(a));r=this.write(i,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r,i){this.data.set(e,{values:t,dtype:r,refCount:i})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),i=this.readSync(s.imag.dataId);return Wi(r,i)}return uy(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Bi(r));return dt(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return dt(e.shape,e.dtype,t)}makeOutput(e,t,s){return os().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=ar();return e(),{kernelMs:ar()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Xe([e],"where");const t=this.readSync(e.dataId);return _8(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}r0.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r_(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const O8=n=>{const{x:e}=n.inputs,t=n.backend;Xe(e,"abs");let s=new Float32Array(ue(e.shape));const r=t.data.get(e.dataId).values;return s=r_(r),t.makeOutput(s,e.shape,e.dtype)},F8={kernelName:hf,backendName:"cpu",kernelFunc:O8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function On(n){return(e,t,s,r,i)=>{const a=it(e,t),o=a.length,l=Qe(a),c=ue(a),d=Yn(i,c),p=e.length,m=t.length,g=Qe(e),x=Qe(t),b=Yo(e,a),w=Yo(t,a);if(b.length+w.length===0)for(let v=0;v<d.length;++v)d[v]=n(s[v%s.length],r[v%r.length]);else for(let v=0;v<d.length;++v){const $=ch(v,o,l),I=$.slice(-p);b.forEach(z=>I[z]=0);const N=ha(I,p,g),E=$.slice(-m);w.forEach(z=>E[z]=0);const _=ha(E,m,x);d[v]=n(s[N],r[_])}return[d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cr(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,o=t.makeTensorInfo(s.shape,"complex64"),l=t.data.get(o.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",i),imag:t.makeTensorInfo(r.shape,"float32",a)},o}const z8={kernelName:cx,backendName:"cpu",kernelFunc:Cr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wy(n,e,t="float32"){if(t==="complex64"){const r=Wy(n,e,"float32"),i=Wy(n,e,"float32");return Cr({inputs:{real:r,imag:i},backend:n})}const s=vs(ue(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ya(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const L8={kernelName:Ah,backendName:"cpu",kernelFunc:ya};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ku(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,i=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,i)}const P8={kernelName:Px,backendName:"cpu",kernelFunc:ku};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i_(n,e,t,s){if(s==="int32"){const r=Int32Array.from(n);return[e,"int32",r]}if(s==="bool"){const r=Ru([0],t),[i,a]=On((o,l)=>o!==l?1:0)(e,[],n,r,"bool");return[a,"bool",i]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function nl(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return ya({inputs:{x:r},backend:t});const d=Wy(t,r.shape,r.dtype),p=nl({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),m=Cr({inputs:{real:p,imag:d},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),m}if(r.dtype==="complex64"){const d=ku({inputs:{input:r},backend:t}),p=nl({inputs:{x:d},backend:t,attrs:{dtype:i}});return t.disposeIntermediateTensorInfo(d),p}if(!d2(r.dtype,i)){const d=ya({inputs:{x:r},backend:t});return{dataId:d.dataId,shape:d.shape,dtype:i}}const a=t.data.get(r.dataId).values,[o,l,c]=i_(a,r.shape,r.dtype,i);return t.makeTensorInfo(o,l,c)}const M8={kernelName:xh,backendName:"cpu",kernelFunc:nl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jn(n,e,t,s){return t==null?({inputs:r,backend:i})=>{const{a,b:o}=r,l=i;Xe([a,o],n);const c=l.data.get(a.dataId).values,d=l.data.get(o.dataId).values,p=a.dtype==="string"?Gi(c):c,m=a.dtype==="string"?Gi(d):d,g=s||a.dtype,[x,b]=e(a.shape,o.shape,p,m,g);return l.makeTensorInfo(b,g,x)}:({inputs:r,backend:i})=>{const{a,b:o}=r,l=i;if(a.dtype==="complex64"||o.dtype==="complex64"){const c=nl({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),d=l.data.get(c.dataId),p=d.complexTensorInfos.real,m=d.complexTensorInfos.imag,g=l.data.get(p.dataId).values,x=l.data.get(m.dataId).values,b=nl({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),w=l.data.get(b.dataId),v=w.complexTensorInfos.real,$=w.complexTensorInfos.imag,I=l.data.get(v.dataId).values,N=l.data.get($.dataId).values,[E,_,z]=t(a.shape,o.shape,g,x,I,N),P=l.makeTensorInfo(z,"float32",E),O=l.makeTensorInfo(z,"float32",_),L=Cr({inputs:{real:P,imag:O},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(b),l.disposeIntermediateTensorInfo(P),l.disposeIntermediateTensorInfo(O),L}else{const c=l.data.get(a.dataId).values,d=l.data.get(o.dataId).values,p=s||a.dtype,[m,g]=e(a.shape,o.shape,c,d,p);return l.makeTensorInfo(g,p,m)}}}function WS(n){return(e,t,s,r,i,a)=>{const o=it(e,t),l=ue(o),c=o.length,d=Qe(o),p=Yn("float32",l),m=Yn("float32",l),g=Yo(e,o),x=Yo(t,o),b=Wi(s,r),w=Wi(i,a),v=e.length,$=Qe(e),I=t.length,N=Qe(t);if(g.length+x.length===0)for(let E=0;E<p.length;E++){const _=E%b.length,z=E%w.length,P=n(b[_*2],b[_*2+1],w[z*2],w[z*2+1]);p[E]=P.real,m[E]=P.imag}else for(let E=0;E<p.length;E++){const _=ch(E,c,d),z=_.slice(-v);g.forEach(G=>z[G]=0);const P=ha(z,v,$),O=_.slice(-I);x.forEach(G=>O[G]=0);const L=ha(O,I,N),D=n(b[P*2],b[P*2+1],w[L*2],w[L*2+1]);p[E]=D.real,m[E]=D.imag}return[p,m,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a_=On((n,e)=>n+e),B8=WS((n,e,t,s)=>({real:n+t,imag:e+s})),th=Jn(Eu,a_,B8),V8={kernelName:Eu,backendName:"cpu",kernelFunc:th};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GS(n,e,t,s,r){const i=ue(s),a=vs(r,t);for(let o=0;o<n.length;o++){const l=n[o];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(i>0?a[l]+=e[o]:a[l]+=1)}return a}function o_(n,e,t,s=!1){const r=n.shape[0],i=n.shape[1],a=dt([r,t],e.dtype);for(let o=0;o<r;o++)for(let l=0;l<i;l++){const c=n.get(o,l);if(c<0)throw new Error("Input x must be non-negative!");c>=t||(s?a.set(1,o,c):e.size>0?a.set(a.get(o,c)+e.get(o,l),o,c):a.set(a.get(o,c)+1,o,c))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l_=On((n,e)=>n&e),U8=Jn(lx,l_),W8={kernelName:lx,backendName:"cpu",kernelFunc:U8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ca(n){return(e,t,s)=>{const r=Sn(t,e.length);for(let i=0;i<e.length;++i)r[i]=n(e[i],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xt(n,e,t){const s=Ca(e);return hl(n,s,t)}function hl(n,e,t){return({inputs:s,attrs:r,backend:i})=>{const{x:a}=s;Xe(a,n);const o=i,l=o.data.get(a.dataId).values;let c;if(a.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");c=Gi(l)}else c=l;const d=t||a.dtype,p=e(c,d,r);return o.makeTensorInfo(a.shape,d,p)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u_=Ca(n=>Math.ceil(n)),G8=hl(bh,u_),H8={kernelName:bh,backendName:"cpu",kernelFunc:G8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c_(n,e,t,s){const r=Sn(t,ue(e));if(s&&t!=="string"){let i=0;n.forEach(a=>{const o=ue(a.shape);r.set(a.vals,i),i+=o})}else{let i=0;n.forEach(a=>{const o=t==="string"?Gi(a.vals):a.vals;let l=0;for(let c=0;c<a.shape[0];++c){const d=c*e[1]+i;for(let p=0;p<a.shape[1];++p)r[d+p]=o[l++]}i+=a.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h_=On((n,e)=>n===e?1:0),d_=Jn(If,h_,null,"bool"),j8={kernelName:If,backendName:"cpu",kernelFunc:d_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p_=Ca(n=>Math.exp(n)),f_=hl(Nh,p_,"float32"),q8={kernelName:Nh,backendName:"cpu",kernelFunc:f_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m_=Ca(n=>Math.expm1(n)),X8=hl(Ih,m_),K8={kernelName:Ih,backendName:"cpu",kernelFunc:X8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g_=Ca(n=>Math.floor(n)),Y8=hl(Th,g_),Q8={kernelName:Th,backendName:"cpu",kernelFunc:Y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y_=On((n,e)=>Math.floor(n/e)),Z8=Jn(Eh,y_,null,"int32"),J8={kernelName:Eh,backendName:"cpu",kernelFunc:Z8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x_(n,e,t,s,r,i,a,o,l){const c=dt([s,i],t);for(let d=0;d<s;d++){const p=[];let m=0;for(let g=0;g<r;g++){const x=n[d*r+g];m+=x*a[g],p.push(x)}if(m<0||m>=l/i)throw new Error(`Invalid indices: ${p} does not index into ${o}`);for(let g=0;g<i;g++)c.values[d*i+g]=e.get(...e.indexToLoc(m*i+g))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b_(n,e,t){const s=dt(t,n.dtype);for(let r=0;r<s.size;++r){const a=s.indexToLoc(r).slice(),o=a[0],l=a[2],c=e.locToIndex([o,l]);a[2]=e.values[c];const d=n.locToIndex(a);0<=d&&d<n.values.length&&(s.values[r]=n.values[d])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w_=On((n,e)=>n>e?1:0),eX=Jn(Af,w_,null,"bool"),tX={kernelName:Af,backendName:"cpu",kernelFunc:eX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v_=On((n,e)=>n>=e?1:0),nX=Jn(Rh,v_,null,"bool"),sX={kernelName:Rh,backendName:"cpu",kernelFunc:nX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S_=On((n,e)=>n<e?1:0),rX=Jn(_f,S_,null,"bool"),iX={kernelName:_f,backendName:"cpu",kernelFunc:rX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C_=On((n,e)=>n<=e?1:0),aX=Jn(Of,C_,null,"bool"),oX={kernelName:Of,backendName:"cpu",kernelFunc:aX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $_(n,e,t){const s=(e-n)/(t-1),r=vs(t,"float32");r[0]=n;for(let i=1;i<r.length;i++)r[i]=r[i-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k_=Ca(n=>Math.log(n)),lX=hl(Fh,k_),uX={kernelName:Fh,backendName:"cpu",kernelFunc:lX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N_(n,e,t,s){const r=Yn(s,ue(t));for(let i=0;i<r.length;++i){const a=i*e;let o=n[a];for(let l=0;l<e;++l){const c=n[a+l];(Number.isNaN(c)||c>o)&&(o=c)}r[i]=o}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I_=On((n,e)=>Math.max(n,e)),cX=Jn(Lh,I_),hX={kernelName:Lh,backendName:"cpu",kernelFunc:cX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T_=On((n,e)=>Math.min(n,e)),dX=Jn(Ph,T_),pX={kernelName:Ph,backendName:"cpu",kernelFunc:dX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HS=On((n,e)=>n*e),fX=WS((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),i0=Jn(Bh,HS,fX),mX={kernelName:Bh,backendName:"cpu",kernelFunc:i0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E_(n,e,t){const s=rl(-1,t);return HS([],e,s,n,t)}function gX(n){const{inputs:e,backend:t}=n,{x:s}=e;Xe(s,"neg");const r=t.data.get(s.dataId).values,[i,a]=E_(r,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,i)}const yX={kernelName:Hf,backendName:"cpu",kernelFunc:gX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R_=On((n,e)=>n!==e?1:0),xX=Jn(jf,R_,null,"bool"),bX={kernelName:jf,backendName:"cpu",kernelFunc:xX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jS(n,e,t,s,r){const i=e.length,a=ue(e),o=Qe(e),l=Qe(r),c=Yn(t,ue(r));for(let d=0;d<a;++d){const p=ch(d,i,o),m=new Array(p.length);for(let x=0;x<m.length;x++)m[x]=p[s[x]];const g=ha(m,i,l);c[g]=n[d]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pr(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:i}=t;Xe(r,"transpose");const a=r.shape.length,o=new Array(a);for(let p=0;p<o.length;p++)o[p]=r.shape[i[p]];const l=s.data.get(r.dataId).values,c=jS(l,r.shape,r.dtype,i,o);return{dataId:s.write(c,o,r.dtype),shape:o,dtype:r.dtype}}const wX={kernelName:lu,backendName:"cpu",kernelFunc:pr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_(n,e,t,s){const[r,i]=Dn(n,s),a=hs(e,"int32"),o=vs(ue(r),a),l=ue(i);for(let c=0;c<o.length;++c){const d=c*l;let p=1;for(let m=0;m<l;++m)p*=t[d+m];o[c]=p}return{outVals:o,outShape:r,outDtype:a}}function vX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s;Xe(r,"prod");const o=r.shape.length,l=pt(i,r.shape),c=Qt(l,o);let d=l,p=r;const m=[];c!=null&&(p=pr({inputs:{x:r},backend:t,attrs:{perm:c}}),m.push(p),d=ln(d.length,o));const g=t.data.get(p.dataId).values,{outVals:x,outShape:b,outDtype:w}=A_(p.shape,p.dtype,g,d);let v=b;return a&&(v=$n(b,l)),m.forEach($=>t.disposeIntermediateTensorInfo($)),t.makeTensorInfo(v,w,x)}const SX={kernelName:Zf,backendName:"cpu",kernelFunc:vX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CX(n,e,t){n.forEach((s,r)=>{if(s<0||s>=t){const i=ch(r,e.length,Qe(e)).join(",");throw new Error(`indices[${i}] = ${s} is not in [0, ${t})`)}})}function $X(n,e){for(let t=0;t<n.length;++t){const s=n[t],r=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let i=1;i<s.length;++i)if(s[i-1]>s[i])throw new Error("Ragged splits must be sorted in ascending order")}}function kX(n,e,t,s){const r=[];let i=0;const a=e.length-1+t.length,o=new Array(a).fill(null).map(()=>[0]);$X(t,s);let l=1;for(let c=0;c<e.length-1;++c){l*=e[c];const d=e[c+1];for(let p=1;p<l+1;++p)o[c].push(p*d)}for(let c=0;c<n.length;++c){let d=n[c],p=n[c]+1;for(let m=0;m<t.length;++m){const g=t[m],x=m+e.length-1;if(x>=0){const b=o[x],w=b[b.length-1]-g[d];for(let v=d;v<p;++v)o[x].push(g[v+1]+w)}d=g[d],p=g[p]}p!==d&&(r.push([d,p]),i+=p-d)}return{outSplits:o,valueSlices:r,numValues:i}}function NX(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,r=Sn("int32",s);e.push(r),n[t].forEach((i,a)=>r[a]=i)}return e}function OI(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function IX(n,e,t,s,r,i){const a=OI(e,2)[1],o=OI(i,2)[1];let l=0;for(const c of t)for(let d=c[0];d<c[1];++d){for(let p=0;p<s;++p)r[l*o+p]=n[d*a+p];++l}}function TX(n,e,t,s,r){const i=e.slice();i[0]=r;const a=Sn(t,ue(i)),o=n.length,l=o===0?0:o/e[0];return IX(n,e,s,l,a,i),[a,i]}function D_(n,e,t,s,r,i,a,o){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(CX(i,a,l),s.length===0)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:d,valueSlices:p,numValues:m}=kX(i,a,n,c),g=NX(d),x=TX(t,s,r,p,m);return[g,x[0],x[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FI=2147483647;function __(n,e,t,s,r,i,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=e.length===0,l=r.length===0,c=a.length===0,d=[];o||d.push(e[0]),l||d.push(r[0]),c||d.push(a[0]);for(let w=1;w<d.length;++w)if(d[w]!==d[w-1])throw new Error("starts, limits, and deltas must have the same shape");const p=d.length===0?1:d[0],m=Sn("int32",p+1);m[0]=0;for(let w=0;w<p;++w){const v=o?n[0]:n[w],$=l?s[0]:s[w],I=c?i[0]:i[w];if(I===0)throw new Error("Requires delta != 0");let N;if(I>0&&$<v||I<0&&$>v)N=0;else if(N=Math.ceil(Math.abs(($-v)/I)),N>FI)throw new Error(`Requires ((limit - start) / delta) <= ${FI}`);m[w+1]=m[w]+N}const g=m[p],x=Sn(t,g);let b=0;for(let w=0;w<p;++w){const v=m[w+1]-m[w];let $=o?n[0]:n[w];const I=c?i[0]:i[w];for(let N=0;N<v;++N)x[b++]=$,$+=I}return[m,x]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ci=Li;class Gy{constructor(e,t,s,r,i,a,o,l,c,d){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=r,this.valuesDType=i,this.defaultValue=a,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=gA(d),this.raggedRank=yA(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===ci.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===ci.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case ci.VALUE_ROWIDS:return Gy.getMaxWidthValueRowID(t);case ci.ROW_SPLITS:return Gy.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${ci[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let r=0;r<t-1;++r){const i=e[r+1]-e[r];i>s&&(s=i)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,r=e[0],i=0;for(let a=1;a<t;++a){const o=e[a];o!==r&&(r=o,i=Math.max(a-s,i),s=a)}return Math.max(t-s,i)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return LI(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;xA(s,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=mA(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let o=1;o<=this.raggedRank;++o)a[o]<0&&(a[o]=this.getMaxWidth(o));return a}calculateFirstParentOutputIndex(e,t,s){const r=Math.min(e,s),i=[];let a=0;for(let o=0;o<r;++o,a+=t)i.push(a);for(let o=r;o<e;++o)i.push(-1);return B(i.length===e,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(e,t,s,r){const i=e.length,a=[];for(let o=0;o<i-1;++o){const l=e[o+1]-e[o];let c=Math.min(r,l),d=t[o];d===-1&&(c=0);for(let p=0;p<c;++p)a.push(d),d+=s;for(let p=0;p<l-c;++p)a.push(-1)}if(i>0&&a.length!==e[i-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,s,r){const i=e.length,a=[];if(i===0)return[];let o=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let c=t[l];a.push(c);for(let d=1;d<i;++d){const p=e[d];if(p===l)c>=0&&(++o,o<r?c+=s:c=-1);else{if(o=0,l=p,p>=t.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${t.length}`);c=t[p]}a.push(c)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,s,r){const i=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case ci.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,t,s,r);case ci.ROW_SPLITS:if(i.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(i,t,s,r);default:throw new Error(`Unsupported partition type: ${ci[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case ci.FIRST_DIM_SIZE:return e[0];case ci.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case ci.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${ci[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const i=LI(s,!1),a=Sn(this.valuesDType,ue(i));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(t,r[0],s[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,r[c],s[c]);this.setOutput(this.raggedRank,l,a,i)}return[i,a]}setOutput(e,t,s,r){if(s.length===0)return;const i=this.values,a=s;let o=r.slice();o=o.slice(e+1);const l=ue(o),c=t.length;let d=this.defaultValue;if(d.length!==l&&d.length!==1){const x=this.defaultValueShape;ce(()=>{const b=re(d,x);d=Hc(b,o).dataSync()})}let p=0,m=0,g=0;for(let x=0;x<=c;++x){let b=x<c?t[x]:-1;if(b===g){++g;continue}if(m<g){const w=i.subarray(p*l),v=a.subarray(m*l),$=(g-m)*l;zI(v,w,$)}if(x>=c){const w=s.length;b=Math.floor(w/l)}if(b>g)if(this.defaultValue.length===1)a.subarray(g*l,b*l).fill(this.defaultValue[0]),g=b;else for(;b>g;){const w=a.slice(g*l);zI(w,d,l),++g}b<0?(p=x+1,m=g):(p=x,m=g,g=m+1)}}}function zI(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function LI(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function O_(n,e,t,s,r,i,a,o,l,c){return new Gy(n,e,t,s,r,i,a,o,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F_(n,e,t,s){const r=n===e,i=n<e&&t<0,a=e<n&&t>1;if(r||i||a)return vs(0,s);const o=Math.abs(Math.ceil((e-n)/t)),l=vs(o,s);e<n&&t===1&&(t=-1),l[0]=n;for(let c=1;c<l.length;c++)l[c]=l[c-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z_=Ca(n=>1/Math.sqrt(n)),EX=hl(jh,z_),RX={kernelName:jh,backendName:"cpu",kernelFunc:EX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function au(n,e,t,s,r,i,a,o,l,c){const d=[s/r,r],p=n.values,m=e.values;if(s===0)return dt(t,e.dtype);const g=l instanceof qn?l:dt(d,e.dtype);typeof l=="string"||typeof l=="number"?g.values.fill(l):typeof l=="boolean"&&g.values.fill(+l);for(let x=0;x<i;x++){const b=[];let w=0;for(let v=0;v<a;v++){const $=p[x*a+v];b.push($),w+=$*o[v]}if(w<0||w>=s/r)throw new Error(`Invalid indices: ${b} does not index into ${t}`);for(let v=0;v<r;v++)c?g.values[w*r+v]+=m[x*r+v]:g.values[w*r+v]=e.rank===0?m[0]:m[x*r+v]}return g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AX=Ca(n=>1/(1+Math.exp(-n))),L_=Xt(Qh,n=>1/(1+Math.exp(-n))),DX={kernelName:Qh,backendName:"cpu",kernelFunc:L_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P_(n,e,t,s,r){const i=mS(s,e,t),a=ue(t),o=Qe(s);if(i){const p=gS(e,o);return r==="string"?n.slice(p,p+a):n.subarray(p,p+a)}const l=r==="string"?Gi(n):n,c=dt(s,r,l),d=dt(t,r);for(let p=0;p<d.size;++p){const m=d.indexToLoc(p),g=m.map((x,b)=>x+e[b]);d.set(c.get(...g),...m)}return r==="string"?LA(d.values):d.values}function Nu(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,size:a}=s;Xe(r,"slice");const[o,l]=bm(r,i,a);Ib(r,o,l);const c=t.data.get(r.dataId).values,d=P_(c,o,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,d)}const _X={kernelName:rm,backendName:"cpu",kernelFunc:Nu};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M_(n,e,t,s,r,i,a){const o=e[0],l=i[0],c=new Array(l),d=new Array(o),p=e[1];if(l===0){if(o!==0)throw new Error(kA(o));const w=Sn(t,0),v=Sn(r,0);return[w,[0,p],v,c,d]}let m=!0,g=0;const x=new Array(l).fill(0);for(let w=0;w<o;++w){const v=n[w*p];if(v<0)throw new Error(NA(w,v));if(v>=l)throw new Error(IA(w,v,l));++x[v],m=m&&v>=g,g=v}let b=!0;for(let w=0;w<l;++w){const v=x[w]===0;c[w]=v,b=b&&!v,x[w]=Math.max(x[w],1),w>0&&(x[w]+=x[w-1])}if(b&&m){const w=n,v=s;for(let $=0;$<o;++$)d[$]=$;return[w,[o,p],v,c,d]}else{const w=x[l-1],v=Sn(t,w*p),$=Sn(r,w),I=new Array(l).fill(0);for(let N=0;N<o;++N){const E=n[N*p],_=I[E],z=(E===0?0:x[E-1])+_;I[E]++;for(let P=0;P<p;++P)v[z*p+P]=n[N*p+P];$[z]=s[N],d[N]=z}for(let N=0;N<l;++N)if(I[N]===0){const _=N===0?0:x[N-1];v[_*p+0]=N;for(let z=1;z<p;++z)v[_*p+z]=0;$[_]=a}return[v,[w,p],$,c,d]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B_(n,e,t,s,r){const i=ue(s),a=e[0],o=r.length,l=[];let c=1,d=-1;for(let w=0;w<o;++w){const v=r[w];if(v===-1){if(d!==-1)throw new Error(TA(d,w));d=w,l.push(1)}else{if(v<0)throw new Error(EA(w,v));c*=v,l.push(v)}}if(d!==-1){if(c<=0)throw new Error(RA());const w=Math.trunc(i/c);if(c*w!==i)throw new Error(AA(s,l));l[d]=w}if(ue(l)!==i)throw new Error(DA(s,l));const m=s.length,g=[];if(m>0){g[m-1]=1;for(let w=m-2;w>=0;--w)g[w]=g[w+1]*s[w+1]}const x=[];if(o>0){x[o-1]=1;for(let w=o-2;w>=0;--w)x[w]=x[w+1]*l[w+1]}const b=Sn(t,a*o);for(let w=0;w<a;++w){let v=0;for(let $=0;$<m;++$)v+=n[w*m+$]*g[$];for(let $=0;$<o;++$)b[w*o+$]=Math.trunc(v/x[$]),v%=x[$]}return[b,[a,o],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qS(n,e,t,s,r,i=!1,a=0){const o=s.length,l=[e[0],n.length/e[0]],c=l[1],p=o>0?r[o-1]+1:0;if(p<0)throw new Error(Iv());const m=e.slice();m[0]=p;const g=m.reduce((I,N)=>I*N,1),x=Sn(t,g);if(o===0)return p>0&&x.fill(a),[x,m];if(p<=0)throw new Error(Iv());let b=0,w=1,v=0,$=r[b];for(;;){let I=0;if(w<o){if(I=r[w],$===I){++w;continue}if($>=I)throw new Error(_A())}if($<0||$>=p)throw new Error(OA($,p));$>v&&x.fill(a,v*c,$*c);for(let N=b;N<w;++N){const E=s[N];if(E<0||E>=l[0])throw new Error(FA(N,s[N],l[0]));for(let _=0;_<c;_++)x[$*c+_]+=n[E*c+_]}if(i)for(let N=0;N<c;N++)x[$*c+N]/=w-b;if(b=w,++w,v=$+1,$=I,w>o)break}return v<p&&x.fill(a,v*c,p*c),[x,m]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OX=Ca(n=>Math.sqrt(n)),FX=Xt(Jh,n=>Math.sqrt(n)),zX={kernelName:Jh,backendName:"cpu",kernelFunc:FX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V_=On((n,e)=>{const t=n-e;return t*t}),LX=Jn(ed,V_),PX={kernelName:ed,backendName:"cpu",kernelFunc:LX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U_=Ca((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:r}=e;return n.replace(new RegExp(t,s?"g":""),r)}),MX=hl(Xx,U_),BX={kernelName:Xx,backendName:"cpu",kernelFunc:MX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W_(n,e,t,s){const r=dt(n,e.dtype);for(let i=0;i<r.size;i++){const a=r.indexToLoc(i),o=new Array(a.length);for(let l=0;l<o.length;l++)o[l]=a[l]*t[l]+s[l];r.set(e.get(...o),...a)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VX{constructor(e,t,s,r,i,a){this.separator=Ya(e),this.nGramWidths=t,this.leftPad=Ya(s),this.rightPad=Ya(r),this.padWidth=i,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,r,i,a){for(let o=0;o<i;++o){const l=this.getPadWidth(a),c=Math.max(0,l-o),d=Math.max(0,l-(i-(o+1))),p=a-(c+d),m=t+(c>0?0:o-l);let g=0;g+=c*this.leftPad.length;for(let $=0;$<p;++$)g+=e[m+$].length;g+=d*this.rightPad.length;const x=c+d+p-1;g+=x*this.separator.length,s[r+o]=new Uint8Array(g);const b=s[r+o];let w=0;const v=$=>$.forEach(I=>b[w++]=I);for(let $=0;$<c;++$)v(this.leftPad),v(this.separator);for(let $=0;$<p-1;++$)v(e[m+$]),v(this.separator);if(p>0){v(e[m+p-1]);for(let $=0;$<d;++$)v(this.separator),v(this.rightPad)}else{for(let $=0;$<d-1;++$)v(this.rightPad),v(this.separator);v(this.rightPad)}}}compute(e,t){const s=e.length,r=t.length;if(r>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<r;++c){let d=t[c]>=l;if(d=d&&t[c]<=s,!d)throw new Error(`Invalid split value ${t[c]}, must be in [${l}, ${s}]`);l=t[c]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const i=r-1,a=Sn("int32",r);if(s===0||r===0){const l=new Array(s);for(let c=0;c<=i;++c)a[c]=0;return[l,a]}a[0]=0;for(let l=1;l<=i;++l){const c=t[l]-t[l-1];let d=0;this.nGramWidths.forEach(p=>{d+=this.getNumNGrams(c,p)}),this.preserveShort&&c>0&&d===0&&(d=1),a[l]=a[l-1]+d}const o=new Array(a[i]);for(let l=0;l<i;++l){const c=t[l];let d=a[l];if(this.nGramWidths.forEach(p=>{const m=t[l+1]-t[l],g=this.getNumNGrams(m,p);this.createNGrams(e,c,o,d,g,p),d+=g}),this.preserveShort&&d===a[l]){const p=t[l+1]-t[l];if(p===0)continue;const m=p+2*this.padWidth;this.createNGrams(e,c,o,d,1,m)}}return[o,a]}}function G_(n,e,t,s,r,i,a,o){return new VX(t,s,r,i,a,o).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UX(n,e,t,s){if(!n.length)return;if(e.length===0){for(let i=0;i<n.length;++i)s.push(n.subarray(i,i+1));return}if(e.length===1){const i=e[0];let a=n.indexOf(i);for(;a!==-1;){const o=n.subarray(0,a);(!t||o.length!==0)&&s.push(o),n=n.subarray(a+1),a=n.indexOf(i)}(!t||n.length!==0)&&s.push(n);return}let r=0;for(let i=0;i<n.length+1;i++)if(i===n.length||e.indexOf(n[i])!==-1){const a=n.subarray(r,i);(!t||a.length!==0)&&s.push(a),r=i+1}}function H_(n,e,t){const s=n.length,r=[];let i=0,a=0;const o=new Array(s);for(let m=0;m<s;++m){const g=r.length;UX(n[m],e,t,r);const x=r.length-g;o[m]=x,i+=x,a=Math.max(a,x)}const l=Sn("int32",i*2),c=new Array(i),d=[s,a];let p=0;for(let m=0;m<s;++m)for(let g=0;g<o[m];++g)l[p*2]=m,l[p*2+1]=g,c[p]=r[p],++p;return[l,c,d]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j_(n,e){const t=Sn("int32",n.length);for(let s=0;s<n.length;++s)t[s]=tP(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q_=On((n,e)=>n-e),WX=WS((n,e,t,s)=>({real:n-t,imag:e-s})),XS=Jn(td,q_,WX),GX={kernelName:td,backendName:"cpu",kernelFunc:XS};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X_(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=dt(t,n.dtype);for(let r=0;r<s.values.length;++r){const i=s.indexToLoc(r),a=new Array(n.rank);for(let l=0;l<a.length;l++)a[l]=i[l]%n.shape[l];const o=n.locToIndex(a);s.values[r]=n.values[o]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lp=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function K_(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const o=s-t+1,l=e-t+1,c=Math.log(o),d=.5*Math.exp(2*c/3),p=.5*Math.sqrt(c*d*(o-d)/o)*Math.sign(l-o/2),m=Math.max(t,Math.floor(e-l*d/o+p)),g=Math.min(s,Math.floor(e+(o-l)*d/o+p));K_(n,e,m,g)}const r=n[e];let i=t,a=s;for(Pc(n,t,e),Lp(n[s],r)>0&&Pc(n,t,s);i<a;){for(Pc(n,i,a),i++,a--;Lp(n[i],r)<0;)i=i+1;for(;Lp(n[a],r)>0;)a=a-1}Lp(n[t],r)===0?Pc(n,t,a):(a=a+1,Pc(n,a,s)),a<=e&&(t=a+1),e<=a&&(s=a-1)}}function Y_(n,e,t,s,r){const i=e[e.length-1],[a,o]=[n.length/i,i],l=Yn(t,a*s),c=Yn("int32",a*s);for(let p=0;p<a;p++){const m=p*o,g=n.subarray(m,m+o);let x=new Array(g.length);g.forEach(($,I)=>x[I]={value:$,index:I}),s<x.length&&(K_(x,s),x=x.slice(0,s)),r&&x.sort(Lp);const b=p*s,w=l.subarray(b,b+s),v=c.subarray(b,b+s);for(let $=0;$<s;$++)w[$]=x[$].value,v[$]=x[$].index}const d=e.slice();return d[d.length-1]=s,[dt(d,t,l),dt(d,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q_(n,e,t,s){const r=pt(e,t)[0],i=[1,t[0],1];for(let x=0;x<r;x++)i[0]*=t[x];i[1]=t[r];for(let x=r+1;x<t.length;x++)i[2]*=t[x];const a=new Map,o=new Int32Array(t[r]),l=new qn(i,s,n),c=[],d=i[0]===1&&i[2]===1;for(let x=0;x<t[r];x++){let b;if(d)b=n[x].toString();else{const v=[];for(let $=0;$<i[0];$++)for(let I=0;I<i[2];I++)v.push(l.get($,x,I));b=v.join(",")}const w=a.get(b);if(w!=null)o[x]=w;else{const v=a.size;a.set(b,v),o[x]=v,c.push(x)}}const p=i.slice();p[1]=a.size;const m=new qn(p,s);c.forEach((x,b)=>{for(let w=0;w<i[0];w++)for(let v=0;v<i[2];v++)m.set(l.get(w,x,v),w,b,v)});const g=t.slice();return g[r]=p[1],{outputValues:m.values,outputShape:g,indices:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z_=Object.freeze(Object.defineProperty({__proto__:null,addImpl:a_,bincountImpl:GS,bincountReduceImpl:o_,bitwiseAndImpl:l_,castImpl:i_,ceilImpl:u_,concatImpl:c_,equalImpl:h_,expImpl:p_,expm1Impl:m_,floorDivImpl:y_,floorImpl:g_,gatherNdImpl:x_,gatherV2Impl:b_,greaterEqualImpl:v_,greaterImpl:w_,lessEqualImpl:C_,lessImpl:S_,linSpaceImpl:$_,logImpl:k_,maxImpl:N_,maximumImpl:I_,minimumImpl:T_,multiplyImpl:HS,negImpl:E_,notEqualImpl:R_,prodImpl:A_,raggedGatherImpl:D_,raggedRangeImpl:__,raggedTensorToTensorImpl:O_,rangeImpl:F_,rsqrtImpl:z_,scatterImpl:au,sigmoidImpl:AX,simpleAbsImpl:r_,sliceImpl:P_,sparseFillEmptyRowsImpl:M_,sparseReshapeImpl:B_,sparseSegmentReductionImpl:qS,sqrtImpl:OX,squaredDifferenceImpl:V_,staticRegexReplaceImpl:U_,stridedSliceImpl:W_,stringNGramsImpl:G_,stringSplitImpl:H_,stringToHashBucketFastImpl:j_,subImpl:q_,tileImpl:X_,topKImpl:Y_,transposeImpl:jS,uniqueImpl:Q_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */N2("cpu",()=>new r0,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J_=Xt($h,n=>n>=0?n:Math.exp(n)-1),HX={kernelName:$h,backendName:"cpu",kernelFunc:J_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eO(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:i}=s;Xe([r],"leakyRelu");const a=ue(r.shape),o=t.data.get(r.dataId).values,l=Yn("float32",a);for(let c=0;c<o.length;c++)l[c]=o[c]<0?i*o[c]:o[c];return t.makeTensorInfo(r.shape,"float32",l)}const jX={kernelName:Df,backendName:"cpu",kernelFunc:eO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qX=On((n,e)=>n<0?e*n:n);function tO(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;Xe([s,r],"prelu");const i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,[o,l]=qX(s.shape,r.shape,i,a,"float32");return t.makeTensorInfo(l,"float32",o)}const XX={kernelName:Qf,backendName:"cpu",kernelFunc:tO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nO=Xt(Wh,n=>Math.max(0,n)),KX={kernelName:Wh,backendName:"cpu",kernelFunc:nO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sO=Xt(Gh,n=>Math.min(Math.max(0,n),6)),YX={kernelName:Gh,backendName:"cpu",kernelFunc:sO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hy(n,e,t,s,r){if(t==="linear")return ya({inputs:{x:e},backend:n});if(t==="relu")return nO({inputs:{x:e},backend:n});if(t==="elu")return J_({inputs:{x:e},backend:n});if(t==="relu6")return sO({inputs:{x:e},backend:n});if(t==="prelu")return tO({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return eO({inputs:{x:e},backend:n,attrs:{alpha:r}});if(t==="sigmoid")return L_({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function an(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:i}=s,a=ue(r.shape),o=h2(i,a),l=ue(o);B(a===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const c=t.data.get(r.dataId);if(c.complexTensorInfos!=null){const d=c.complexTensorInfos.real,p=c.complexTensorInfos.imag;d.shape=o,p.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const QX={kernelName:Jf,backendName:"cpu",kernelFunc:an};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rO(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i}=e,{transposeA:a,transposeB:o}=s;Xe([r,i],"matMul");const l=r.shape.length,c=i.shape.length,d=a?r.shape[l-2]:r.shape[l-1],p=o?i.shape[c-1]:i.shape[c-2],m=a?r.shape[l-1]:r.shape[l-2],g=o?i.shape[c-2]:i.shape[c-1],x=r.shape.slice(0,-2),b=i.shape.slice(0,-2),w=ue(x),v=ue(b),I=it(r.shape.slice(0,-2),i.shape.slice(0,-2)).concat([m,g]);B(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`);const N=a?[w,d,m]:[w,m,d],E=o?[v,g,p]:[v,p,g],_=an({inputs:{x:r},backend:t,attrs:{shape:N}}),z=an({inputs:{x:i},backend:t,attrs:{shape:E}}),P=a?_.shape[1]:_.shape[2],O=a?_.shape[2]:_.shape[1],L=o?z.shape[1]:z.shape[2],D=Math.max(w,v),G=t.data.get(_.dataId).values,q=t.data.get(z.dataId).values,ee=Qe(_.shape),Z=Qe(z.shape),[H,oe,se]=a?[ee[0],1,ee[1]]:[ee[0],ee[1],1],[de,W,ne]=o?[1,Z[1],Z[0]]:[Z[1],1,Z[0]],ge=O*L,me=dt([D,O,L],_.dtype),xe=me.values,$e=t.blockSize;for(let Ne=0;Ne<D;Ne++){const Me=Ne%w,Fe=Ne%v;for(let Pe=0;Pe<O;Pe+=$e){const He=Math.min(Pe+$e,O);for(let tt=0;tt<L;tt+=$e){const $t=Math.min(tt+$e,L);for(let nt=0;nt<P;nt+=$e){const mt=Math.min(nt+$e,P);for(let _t=Pe;_t<He;_t++)for(let kt=tt;kt<$t;kt++){let Wt=0;for(let Mt=nt;Mt<mt;Mt++){const Os=G[Me*H+_t*oe+Mt*se],dn=q[Mt*de+kt*W+Fe*ne];Wt+=Os*dn}xe[Ne*ge+(_t*L+kt)]+=Wt}}}}}return t.disposeIntermediateTensorInfo(_),t.disposeIntermediateTensorInfo(z),t.makeTensorInfo(I,me.dtype,me.values)}const ZX={kernelName:yf,backendName:"cpu",kernelFunc:rO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JX(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:c,activation:d,leakyreluAlpha:p}=s;let m,g,x;const b=[];m=rO({inputs:{a:r,b:i},attrs:{transposeA:l,transposeB:c},backend:t}),a&&(g=th({inputs:{a:m,b:a},backend:t}),b.push(m),m=g),d&&(x=Hy(t,m,d,o,p),b.push(m),m=x);for(const v of b)t.disposeIntermediateTensorInfo(v);return m}const eK={kernelName:Wp,backendName:"cpu",kernelFunc:JX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tK=Xt(hh,n=>Math.acos(n)),nK={kernelName:hh,backendName:"cpu",kernelFunc:tK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sK=Xt(dh,n=>Math.acosh(n)),rK={kernelName:dh,backendName:"cpu",kernelFunc:sK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iK(n){const{inputs:e,backend:t}=n,s=e;Xe(e,"addN");const r=s.map(o=>t.data.get(o.dataId).values),i=dt(s[0].shape,s[0].dtype),a=i.values;for(let o=0;o<s.length;o++){const l=r[o];for(let c=0;c<a.length;c++)a[c]+=l[c]}return t.makeTensorInfo(i.shape,i.dtype,i.values)}const aK={kernelName:df,backendName:"cpu",kernelFunc:iK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s;Xe(r,"all");const o=pt(i,r.shape);let l=o;const c=Qt(l,r.shape.length);let d=r;c!=null&&(d=pr({inputs:{x:r},backend:t,attrs:{perm:c}}),l=ln(l.length,r.shape.length)),Mn("all",l,d.shape.length);const[p,m]=Dn(d.shape,l),g=ue(m),x=vs(ue(p),d.dtype),b=t.data.get(d.dataId).values;for(let v=0;v<x.length;++v){const $=v*g;let I=b[$];for(let N=0;N<g;++N){const E=b[$+N];I=I&&E}x[v]=I}c!=null&&t.disposeIntermediateTensorInfo(d);const w=t.makeTensorInfo(p,d.dtype,x);if(a){const v=$n(p,o),$=an({inputs:{x:w},backend:t,attrs:{shape:v}});return t.disposeIntermediateTensorInfo(w),$}return w}const lK={kernelName:sx,backendName:"cpu",kernelFunc:oK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s;Xe(r,"any");const o=pt(i,r.shape);let l=o;const c=Qt(l,r.shape.length);let d=r;c!=null&&(d=pr({inputs:{x:r},backend:t,attrs:{perm:c}}),l=ln(l.length,r.shape.length)),Mn("any",l,d.shape.length);const[p,m]=Dn(d.shape,l),g=ue(m),x=vs(ue(p),d.dtype),b=t.data.get(d.dataId).values;for(let v=0;v<x.length;++v){const $=v*g;let I=b[$];for(let N=0;N<g;++N){const E=b[$+N];I=I||E}x[v]=I}c!=null&&t.disposeIntermediateTensorInfo(d);const w=t.makeTensorInfo(p,d.dtype,x);if(a){const v=$n(p,o),$=an({inputs:{x:w},backend:t,attrs:{shape:v}});return t.disposeIntermediateTensorInfo(w),$}return w}const cK={kernelName:rx,backendName:"cpu",kernelFunc:uK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;Xe(r,"argMax");let a=pt(i,r.shape);const o=Qt(a,r.shape.length);let l=r;const c=[];o!=null&&(l=pr({inputs:{x:r},backend:t,attrs:{perm:o}}),c.push(l),a=ln(a.length,l.shape.length)),a=[a[0]],Mn("argMax",a,l.shape.length);const[d,p]=Dn(l.shape,a),m=ue(d),g=vs(m,"int32"),x=ue(p),b=t.data.get(l.dataId).values;for(let w=0;w<g.length;++w){const v=w*x;let $=b[v],I=0;for(let N=0;N<x;++N){const E=b[v+N];E>$&&($=E,I=N)}g[w]=I}return c.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(d,"int32",g)}const dK={kernelName:pf,backendName:"cpu",kernelFunc:hK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;Xe(r,"argMin");let a=pt(i,r.shape);const o=Qt(a,r.shape.length);let l=r;const c=[];o!=null&&(l=pr({inputs:{x:r},backend:t,attrs:{perm:o}}),c.push(l),a=ln(a.length,l.shape.length)),a=[a[0]],Mn("argMin",a,l.shape.length);const[d,p]=Dn(l.shape,a),m=ue(d),g=vs(m,"int32"),x=ue(p),b=t.data.get(l.dataId).values;for(let w=0;w<g.length;++w){const v=w*x;let $=b[v],I=0;for(let N=0;N<x;++N){const E=b[v+N];E<$&&($=E,I=N)}g[w]=I}return c.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(d,"int32",g)}const fK={kernelName:ff,backendName:"cpu",kernelFunc:pK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mK=Xt(ph,n=>Math.asin(n)),gK={kernelName:ph,backendName:"cpu",kernelFunc:mK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yK=Xt(fh,n=>Math.asinh(n)),xK={kernelName:fh,backendName:"cpu",kernelFunc:yK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bK=Xt(mh,n=>Math.atan(n)),wK={kernelName:mh,backendName:"cpu",kernelFunc:bK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vK=On((n,e)=>Math.atan2(n,e)),SK=Jn(yh,vK),CK={kernelName:yh,backendName:"cpu",kernelFunc:SK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $K=Xt(gh,n=>Math.atanh(n)),kK={kernelName:gh,backendName:"cpu",kernelFunc:$K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KS(n,e,t,s,r,i){const a=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,m=r.padInfo.top,g=r.padInfo.left,x=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=dt(r.outShape,t),w=b.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3],$=r.outShape[2]*r.outShape[3],I=r.outShape[3];for(let N=0;N<r.batchSize;++N){const E=N*v,_=N*s[0];for(let z=0;z<r.inChannels;++z)for(let P=0;P<r.outHeight;++P){const O=P*a-m,L=Math.max(0,O),D=Math.min(r.inHeight,d+O),G=E+P*$;for(let q=0;q<r.outWidth;++q){const ee=q*o-g,Z=Math.max(0,ee),H=Math.min(r.inWidth,p+ee);let oe=x,se=0,de=0;for(let ne=L;ne<D;ne+=l){const ge=_+ne*s[1];for(let me=Z;me<H;me+=c){const xe=ge+me*s[2],$e=n[xe+z];i==="max"&&$e>oe?oe=$e:i==="avg"&&(se+=$e,de++)}if(isNaN(oe))break}const W=G+q*I+z;w[W]=i==="avg"?se/de:oe}}}return b}function iO(n,e,t,s,r=!1,i=!1){const a=dt(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,d=s.dilationWidth,p=s.effectiveFilterHeight,m=s.effectiveFilterWidth,g=s.padInfo.top,x=s.padInfo.left,b=dt(e,t,n);for(let w=0;w<s.batchSize;++w)for(let v=0;v<s.inChannels;++v)for(let $=0;$<s.outHeight;++$){const I=$*o-g;let N=I;for(;N<0;)N+=c;const E=Math.min(s.inHeight,p+I);for(let _=0;_<s.outWidth;++_){const z=_*l-x;let P=z;for(;P<0;)P+=d;const O=Math.min(s.inWidth,m+z);let L=Number.NEGATIVE_INFINITY,D=-1;for(let G=N;G<E;G+=c){const q=G-I;for(let ee=P;ee<O;ee+=d){const Z=ee-z,H=b.get(w,G,ee,v);H>L&&(L=H,r?D=i?((w*s.inHeight+G)*s.inWidth+ee)*s.inChannels+v:(G*s.inWidth+ee)*s.inChannels+v:D=q*m+Z)}}a.set(D,w,$,_,v)}}return a}function aO(n,e,t,s,r,i){const a=r.strideDepth,o=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,d=r.dilationHeight,p=r.dilationWidth,m=r.effectiveFilterDepth,g=r.effectiveFilterHeight,x=r.effectiveFilterWidth,b=r.padInfo.front,w=r.padInfo.top,v=r.padInfo.left,$=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,I=dt(r.outShape,t),N=I.values,E=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],_=r.outShape[2]*r.outShape[3]*r.outShape[4],z=r.outShape[3]*r.outShape[4],P=r.outShape[4];for(let O=0;O<r.batchSize;++O){const L=O*E,D=O*s[0];for(let G=0;G<r.inChannels;++G)for(let q=0;q<r.outDepth;++q){const ee=q*a-b;let Z=ee;for(;Z<0;)Z+=c;const H=Math.min(r.inDepth,m+ee),oe=L+q*_;for(let se=0;se<r.outHeight;++se){const de=se*o-w;let W=de;for(;W<0;)W+=d;const ne=Math.min(r.inHeight,g+de),ge=oe+se*z;for(let me=0;me<r.outWidth;++me){const xe=me*l-v;let $e=xe;for(;$e<0;)$e+=p;const Ne=Math.min(r.inWidth,x+xe),Me=ge+me*P;let Fe=$,Pe=0,He=0;for(let $t=Z;$t<H;$t+=c){const nt=D+$t*s[1];for(let mt=W;mt<ne;mt+=d){const _t=nt+mt*s[2];for(let kt=$e;kt<Ne;kt+=p){const Wt=_t+kt*s[3],Mt=n[Wt+G];if(i==="max"&&Mt>Fe?Fe=Mt:i==="avg"&&(Pe+=Mt,He++),isNaN(Fe))break}if(isNaN(Fe))break}if(isNaN(Fe))break}const tt=Me+G;N[tt]=i==="avg"?Pe/Math.max(He,1):Fe}}}}return I}function NK(n,e){const t=dt(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,x=e.padInfo.left;for(let b=0;b<e.batchSize;++b)for(let w=0;w<e.inChannels;++w)for(let v=0;v<e.outDepth;++v){const $=v*s-m;let I=$;for(;I<0;)I+=a;const N=Math.min(e.inDepth,c+$);for(let E=0;E<e.outHeight;++E){const _=E*r-g;let z=_;for(;z<0;)z+=o;const P=Math.min(e.inHeight,d+_);for(let O=0;O<e.outWidth;++O){const L=O*i-x;let D=L;for(;D<0;)D+=l;const G=Math.min(e.inWidth,p+L);let q=Number.NEGATIVE_INFINITY,ee=-1;for(let Z=I;Z<N;Z+=a){const H=Z-$;for(let oe=z;oe<P;oe+=o){const se=oe-_;for(let de=D;de<G;de+=l){const W=de-L,ne=n.get(b,Z,oe,de,w);ne>=q&&(q=ne,ee=H*d*p+se*d+W)}}}t.set(ee,b,v,E,O,w)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Xe(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,c=1;B(Zn(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const d=As(r.shape,i,a,c,o,l);let p;if(d.filterWidth===1&&d.filterHeight===1&&yt(d.inShape,d.outShape))p=ya({inputs:{x:r},backend:t});else{const m=t.data.get(r.dataId).values,g=Qe(r.shape),x=KS(m,r.shape,r.dtype,g,d,"avg");p=t.makeTensorInfo(d.outShape,r.dtype,x.values)}return p}const TK={kernelName:mf,backendName:"cpu",kernelFunc:IK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:c}=s;Xe(r,"avgPool3d");const d=Hr(r.shape,i,a,1,o,l,c),p=t.data.get(r.dataId).values,m=aO(p,r.shape,r.dtype,Qe(r.shape),d,"avg");return t.makeTensorInfo(m.shape,"float32",m.values)}const RK={kernelName:gf,backendName:"cpu",kernelFunc:EK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AK(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:c}=s;Xe([r,i],"avgPool3DGrad");const d=Hr(i.shape,a,o,1,l,c),p=d.strideDepth,m=d.strideHeight,g=d.strideWidth,x=d.filterDepth,b=d.filterHeight,w=d.filterWidth,v=d.dilationDepth,$=d.dilationHeight,I=d.dilationWidth,N=d.effectiveFilterDepth,E=d.effectiveFilterHeight,_=d.effectiveFilterWidth,z=N-1-d.padInfo.front,P=_-1-d.padInfo.left,O=E-1-d.padInfo.top,L=dt(i.shape,"float32"),D=1/(x*b*w),G=t.bufferSync(r);for(let q=0;q<d.batchSize;++q)for(let ee=0;ee<d.inChannels;++ee)for(let Z=0;Z<d.inDepth;++Z)for(let H=0;H<d.inHeight;++H)for(let oe=0;oe<d.inWidth;++oe){const se=Z-z,de=H-O,W=oe-P;let ne=0;for(let ge=0;ge<N;ge+=v){const me=(se+ge)/p;if(!(me<0||me>=d.outDepth||Math.floor(me)!==me))for(let xe=0;xe<E;xe+=$){const $e=(de+xe)/m;if(!($e<0||$e>=d.outHeight||Math.floor($e)!==$e))for(let Ne=0;Ne<_;Ne+=I){const Me=(W+Ne)/g;if(Me<0||Me>=d.outWidth||Math.floor(Me)!==Me)continue;const Fe=G.get(q,me,$e,Me,ee);ne+=Fe}}}L.set(ne*D,q,Z,H,oe,ee)}return t.makeTensorInfo(L.shape,L.dtype,L.values)}const DK={kernelName:ax,backendName:"cpu",kernelFunc:AK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _K(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,a=i;Xe([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:c}=s,d=As(a.shape,o,l,1,c),p=d.strideHeight,m=d.strideWidth,g=d.filterHeight,x=d.filterWidth,b=d.dilationHeight,w=d.dilationWidth,v=d.effectiveFilterHeight,$=d.effectiveFilterWidth,I=$-1-d.padInfo.left,N=v-1-d.padInfo.top,E=dt(a.shape,"float32"),_=1/(g*x),z=t.data.get(r.dataId).values,P=dt(r.shape,"float32",z);for(let O=0;O<d.batchSize;++O)for(let L=0;L<d.inChannels;++L)for(let D=0;D<d.inHeight;++D)for(let G=0;G<d.inWidth;++G){const q=D-N,ee=G-I;let Z=0;for(let H=0;H<v;H+=b){const oe=(q+H)/p;if(!(oe<0||oe>=d.outHeight||Math.floor(oe)!==oe))for(let se=0;se<$;se+=w){const de=(ee+se)/m;if(de<0||de>=d.outWidth||Math.floor(de)!==de)continue;const W=P.get(O,oe,de,L);Z+=W}}E.set(Z*_,O,D,G,L)}return t.makeTensorInfo(E.shape,E.dtype,E.values)}const OK={kernelName:ix,backendName:"cpu",kernelFunc:_K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:i,offset:a,mean:o,variance:l}=e;B(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),B(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),B(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Xe([r,o,l,i,a],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);const d=t.data.get(r.dataId).values,p=t.data.get(o.dataId).values,m=t.data.get(l.dataId).values,g=i?t.data.get(i.dataId).values:new Float32Array([1]),x=a?t.data.get(a.dataId).values:new Float32Array([0]),b=new Float32Array(d.length),w=x.length,v=g.length,$=m.length,I=p.length;let N=0,E=0,_=0,z=0;for(let P=0;P<d.length;++P)b[P]=x[N++]+(d[P]-p[E++])*g[_++]/Math.sqrt(m[z++]+c),N>=w&&(N=0),E>=I&&(E=0),_>=v&&(_=0),z>=$&&(z=0);return t.makeTensorInfo(r.shape,r.dtype,b)}const zK={kernelName:Ef,backendName:"cpu",kernelFunc:FK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,crops:a}=s;Xe([r],"batchToSpaceND");const o=i.reduce((v,$)=>v*$),l=_u(r.shape,i,o),c=Ou(l.length,i.length),d=Fu(r.shape,i,o),p=_b(a,i.length),m=Ob(d,a,i.length),g=an({inputs:{x:r},backend:t,attrs:{shape:l}}),x=pr({inputs:{x:g},backend:t,attrs:{perm:c}}),b=an({inputs:{x},backend:t,attrs:{shape:d}}),w=Nu({inputs:{x:b},backend:t,attrs:{begin:p,size:m}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),w}const PK={kernelName:xf,backendName:"cpu",kernelFunc:LK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:a}=s,o=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,c=GS(o,l,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,c)}const BK={kernelName:ox,backendName:"cpu",kernelFunc:MK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VK(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,o=it(Array.from(i),Array.from(a));return t.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const UK={kernelName:ux,backendName:"cpu",kernelFunc:VK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WK=Xt(wh,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),GK={kernelName:wh,backendName:"cpu",kernelFunc:WK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HK=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(ue(e.shape)),r=t.data.get(e.dataId),i=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,o=t.data.get(i.dataId).values,l=t.data.get(a.dataId).values;for(let c=0;c<o.length;c++){const d=o[c],p=l[c];s[c]=Math.hypot(d,p)}return t.makeOutput(s,e.shape,"float32")},jK={kernelName:bf,backendName:"cpu",kernelFunc:HK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nh(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,i=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,i)}const qK={kernelName:Tx,backendName:"cpu",kernelFunc:nh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sh(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,i=pt(r,e[0].shape)[0],a=e.map(b=>b.shape);Rb(a,i);let o=ur(e.map(b=>b.shape),i);if(ue(o)===0)return t.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(b=>ue(b.shape)>0);if(l.length===1)return ya({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const b=l.map(N=>ku({inputs:{input:N},backend:t})),w=l.map(N=>nh({inputs:{input:N},backend:t})),v=sh({inputs:b,backend:t,attrs:{axis:i}}),$=sh({inputs:w,backend:t,attrs:{axis:i}}),I=Cr({inputs:{real:v,imag:$},backend:t});return b.forEach(N=>t.disposeIntermediateTensorInfo(N)),w.forEach(N=>t.disposeIntermediateTensorInfo(N)),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo($),I}const c=l.map(b=>{const v=[-1,ue(b.shape.slice(i))];return an({inputs:{x:b},backend:t,attrs:{shape:v}})}),d=c.map(b=>({vals:t.data.get(b.dataId).values,shape:b.shape}));o=ur(c.map(b=>b.shape),1);const p=c[0].shape[0]===1,m=c_(d,o,e[0].dtype,p),g=ur(l.map(b=>b.shape),i),x=t.makeTensorInfo(g,e[0].dtype,m);return c.forEach(b=>t.disposeIntermediateTensorInfo(b)),x}const XK={kernelName:wf,backendName:"cpu",kernelFunc:sh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oO(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:c,dimRoundingMode:d}=s;Xe([r,i],"conv2d");const p=Rr(l),m=on(r.shape,i.shape,a,c,o,d,!1,p),g=m.filterHeight,x=m.filterWidth,b=m.dilationHeight,w=m.dilationWidth,v=m.padInfo.left,$=m.padInfo.top,I=m.dataFormat==="channelsLast",N=new qn(m.outShape,r.dtype),E=Qe(r.shape),_=Qe(i.shape),z=E[0],P=I?E[1]:E[2],O=I?E[2]:1,L=I?1:E[1],D=N.strides[0],G=I?N.strides[1]:N.strides[2],q=I?N.strides[2]:1,ee=I?1:N.strides[1],Z=t.data.get(r.dataId).values,H=t.data.get(i.dataId).values,oe=N.values;for(let se=0;se<m.batchSize;++se){const de=se*z,W=se*D;for(let ne=0;ne<m.outHeight;++ne){const ge=W+ne*G,me=ne*m.strideHeight-$;for(let xe=0;xe<g;++xe){const $e=me+xe*b;if($e<0||$e>=m.inHeight)continue;const Ne=xe*_[0],Me=de+$e*P;for(let Fe=0;Fe<m.outWidth;++Fe){const Pe=ge+Fe*q,He=Fe*m.strideWidth-v;for(let tt=0;tt<x;++tt){const $t=He+tt*w;if($t<0||$t>=m.inWidth)continue;const nt=Ne+tt*_[1],mt=Me+$t*O;let _t=nt;for(let kt=0;kt<m.inChannels;++kt){const Wt=Z[mt+kt*L];for(let Mt=0;Mt<m.outChannels;++Mt)oe[Pe+Mt*ee]+=Wt*H[_t+Mt];_t+=m.outChannels}}}}}}return t.makeTensorInfo(N.shape,N.dtype,oe)}const KK={kernelName:vf,backendName:"cpu",kernelFunc:oO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:c,filterShape:d}=s;Xe([r,i],"conv2dBackpropFilter");const p=Rr(l),m=on(r.shape,d,a,1,o,c,!1,p),{strideHeight:g,strideWidth:x,filterHeight:b,filterWidth:w}=m,v=m.dataFormat==="channelsLast",$=new qn(m.filterShape,"float32"),I=m.padInfo.left,N=m.padInfo.top,E=t.data.get(r.dataId).values,_=t.data.get(i.dataId).values,z=new qn(r.shape,r.dtype,E),P=new qn(i.shape,i.dtype,_);for(let O=0;O<b;++O){const L=Math.max(0,Math.ceil((N-O)/g)),D=Math.min(m.outHeight,(m.inHeight+N-O)/g);for(let G=0;G<w;++G){const q=Math.max(0,Math.ceil((I-G)/x)),ee=Math.min(m.outWidth,(m.inWidth+I-G)/x);for(let Z=0;Z<m.inChannels;++Z)for(let H=0;H<m.outChannels;++H){let oe=0;for(let se=0;se<m.batchSize;++se)for(let de=L;de<D;++de){const W=O+de*g-N;for(let ne=q;ne<ee;++ne){const ge=G+ne*x-I;v?oe+=z.get(se,W,ge,Z)*P.get(se,de,ne,H):oe+=z.get(se,Z,W,ge)*P.get(se,H,de,ne)}}$.set(oe,O,G,Z,H)}}}return t.makeTensorInfo($.shape,$.dtype,$.values)}const QK={kernelName:hx,backendName:"cpu",kernelFunc:YK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZK(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:c,dimRoundingMode:d}=s;Xe([r,i],"conv2dBackpropInput");const p=Qe(i.shape),m=Qe(r.shape);let g=Rr(c);const x=on(a,i.shape,o,1,l,d,!1,g),b=new qn(x.inShape,"float32"),w=b.values,v=t.data.get(r.dataId).values,$=t.data.get(i.dataId).values,[I,N,E]=p,{batchSize:_,filterHeight:z,filterWidth:P,inChannels:O,inHeight:L,inWidth:D,outChannels:G,outHeight:q,outWidth:ee,strideHeight:Z,strideWidth:H}=x;g=x.dataFormat;const oe=z-1-x.padInfo.top,se=P-1-x.padInfo.left,de=g==="channelsLast",W=b.strides[0],ne=de?b.strides[1]:b.strides[2],ge=de?b.strides[2]:1,me=de?1:b.strides[1],xe=m[0],$e=de?m[1]:m[2],Ne=de?m[2]:1,Me=de?1:m[1];for(let Fe=0;Fe<_;++Fe)for(let Pe=0;Pe<O;++Pe)for(let He=0;He<L;++He){const tt=He-oe,$t=Math.max(0,Math.ceil(tt/Z)),nt=Math.min(q,(z+tt)/Z);for(let mt=0;mt<D;++mt){const _t=mt-se,kt=Math.max(0,Math.ceil(_t/H)),Wt=Math.min(ee,(P+_t)/H);let Mt=0;for(let dn=$t;dn<nt;++dn){const Qs=dn*Z-tt;for(let es=kt;es<Wt;++es){const Xr=es*H-_t,jt=xe*Fe+$e*dn+Ne*es,mr=I*(z-1-Qs)+N*(P-1-Xr)+E*Pe;for(let Fs=0;Fs<G;++Fs){const Zs=v[jt+Me*Fs],Js=$[mr+Fs];Mt+=Zs*Js}}}const Os=W*Fe+ne*He+ge*mt+me*Pe;w[Os]=Mt}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const JK={kernelName:Sf,backendName:"cpu",kernelFunc:ZK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s;Xe([r,i],"conv3d");const c=Ki(r.shape,i.shape,a,l,o),{filterDepth:d,filterHeight:p,filterWidth:m,dilationDepth:g,dilationHeight:x,dilationWidth:b,padInfo:w}=c,v=w.front,$=w.left,I=w.top,N=new qn(c.outShape,r.dtype),E=t.data.get(r.dataId).values,_=t.data.get(i.dataId).values,z=N.values,P=Qe(r.shape),O=Qe(i.shape);for(let L=0;L<c.batchSize;++L){const D=L*P[0],G=L*N.strides[0];for(let q=0;q<c.outDepth;++q){const ee=G+q*N.strides[1],Z=q*c.strideDepth-v;for(let H=0;H<d;++H){const oe=Z+H*g;if(oe<0||oe>=c.inDepth)continue;const se=H*O[0],de=D+oe*P[1];for(let W=0;W<c.outHeight;++W){const ne=ee+W*N.strides[2],ge=W*c.strideHeight-I;for(let me=0;me<p;++me){const xe=ge+me*x;if(xe<0||xe>=c.inHeight)continue;const $e=se+me*O[1],Ne=de+xe*P[2];for(let Me=0;Me<c.outWidth;++Me){const Fe=ne+Me*c.outChannels,Pe=Me*c.strideWidth-$;for(let He=0;He<m;++He){const tt=Pe+He*b;if(tt<0||tt>=c.inWidth)continue;const $t=$e+He*O[2],nt=Ne+tt*c.inChannels;let mt=$t;for(let _t=0;_t<c.inChannels;++_t){const kt=E[nt+_t];for(let Wt=0;Wt<c.outChannels;++Wt)z[Fe+Wt]+=kt*_[mt+Wt];mt+=c.outChannels}}}}}}}}return t.makeTensorInfo(N.shape,N.dtype,N.values)}const t7={kernelName:Cf,backendName:"cpu",kernelFunc:e7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:a,pad:o,filterShape:l}=s;Xe([r,i],"conv3dBackpropFilterV2");const c=Qe(r.shape),d=Qe(i.shape),p=Ki(r.shape,l,a,1,o),m=p.strideDepth,g=p.strideHeight,x=p.strideWidth,b=p.filterDepth,w=p.filterHeight,v=p.filterWidth,$=new qn(p.filterShape,"float32"),I=$.values,[N,E,_,z]=$.strides,P=t.data.get(i.dataId).values,[O,L,D,G]=d,q=t.data.get(r.dataId).values,[ee,Z,H,oe]=c,se=p.padInfo.front,de=p.padInfo.left,W=p.padInfo.top;for(let ne=0;ne<b;++ne){const ge=Math.max(0,Math.ceil((se-ne)/m)),me=Math.min(p.outDepth,(p.inDepth+se-ne)/m),xe=ne*N;for(let $e=0;$e<w;++$e){const Ne=Math.max(0,Math.ceil((W-$e)/g)),Me=Math.min(p.outHeight,(p.inHeight+W-$e)/g),Fe=$e*E+xe;for(let Pe=0;Pe<v;++Pe){const He=Math.max(0,Math.ceil((de-Pe)/x)),tt=Math.min(p.outWidth,(p.inWidth+de-Pe)/x),$t=Pe*_+Fe;for(let nt=0;nt<p.inChannels;++nt){const mt=nt*z+$t;for(let _t=0;_t<p.outChannels;++_t){let kt=0;for(let Wt=0;Wt<p.batchSize;++Wt){const Mt=Wt*ee,Os=Wt*O;for(let dn=ge;dn<me;++dn){const es=(ne+dn*m-se)*Z+Mt,Xr=dn*L+Os;for(let jt=Ne;jt<Me;++jt){const Fs=($e+jt*g-W)*H+es,Zs=jt*D+Xr;for(let Js=He;Js<tt;++Js){const oo=(Pe+Js*x-de)*oe+Fs,lo=Js*G+Zs;kt+=q[oo+nt]*P[lo+_t]}}}}I[mt+_t]=kt}}}}}return t.makeTensorInfo($.shape,$.dtype,$.values)}const s7={kernelName:dx,backendName:"cpu",kernelFunc:n7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r7(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{pad:a,strides:o,inputShape:l}=s;Xe([r],"conv3dBackpropInputV2");const c=Qe(r.shape),d=Qe(i.shape),p=Ki(l,i.shape,o,1,a),m=new qn(p.inShape,"float32"),g=m.values,[x,b,w,v]=m.strides,$=t.data.get(r.dataId).values,[I,N,E,_]=c,z=t.data.get(i.dataId).values,[P,O,L,D]=d,{batchSize:G,filterDepth:q,filterHeight:ee,filterWidth:Z,inChannels:H,inDepth:oe,inHeight:se,inWidth:de,outChannels:W,outDepth:ne,outHeight:ge,outWidth:me,strideDepth:xe,strideHeight:$e,strideWidth:Ne}=p,Me=q-1-p.padInfo.front,Fe=ee-1-p.padInfo.top,Pe=Z-1-p.padInfo.left;for(let He=0;He<G;++He)for(let tt=0;tt<H;++tt)for(let $t=0;$t<oe;++$t){const nt=$t-Me,mt=Math.max(0,Math.ceil(nt/xe)),_t=Math.min(ne,(q+nt)/xe);for(let kt=0;kt<se;++kt){const Wt=kt-Fe,Mt=Math.max(0,Math.ceil(Wt/$e)),Os=Math.min(ge,(ee+Wt)/$e);for(let dn=0;dn<de;++dn){const Qs=dn-Pe,es=Math.max(0,Math.ceil(Qs/Ne)),Xr=Math.min(me,(Z+Qs)/Ne);let jt=0;for(let mr=mt;mr<_t;++mr){const Fs=mr*xe-nt;for(let Zs=Mt;Zs<Os;++Zs){const Js=Zs*$e-Wt;for(let Qi=es;Qi<Xr;++Qi){const oo=Qi*Ne-Qs,lo=I*He+N*mr+E*Zs+_*Qi,Hu=P*(q-1-Fs)+O*(ee-1-Js)+L*(Z-1-oo)+D*tt;for(let zs=0;zs<W;++zs){const ts=$[lo+zs],ju=z[Hu+zs];jt+=ts*ju}}}}g[x*He+b*$t+w*kt+v*dn+tt]=jt}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const i7={kernelName:px,backendName:"cpu",kernelFunc:r7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a7=Xt(vh,n=>Math.cos(n)),o7={kernelName:vh,backendName:"cpu",kernelFunc:a7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l7=Xt(Sh,n=>Math.cosh(n)),u7={kernelName:Sh,backendName:"cpu",kernelFunc:l7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c7(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:c}=s,[d,p,m,g]=r.shape,x=i.shape[0],[b,w]=o,v=dt([x,b,w,g],"float32"),$=t.data.get(i.dataId).values,I=t.data.get(a.dataId).values,N=t.data.get(r.dataId).values,E=Qe(r.shape),_=Qe(v.shape);for(let z=0;z<x;z++){const P=z*4,O=$[P],L=$[P+1],D=$[P+2],G=$[P+3],q=I[z];if(q>=d)continue;const ee=b>1?(D-O)*(p-1)/(b-1):0,Z=w>1?(G-L)*(m-1)/(w-1):0;for(let H=0;H<b;H++){const oe=b>1?O*(p-1)+H*ee:.5*(O+D)*(p-1);if(oe<0||oe>p-1){for(let se=0;se<w;se++)for(let de=0;de<g;de++){const W=de+se*_[2]+H*_[1]+z*_[0];v.values[W]=c}continue}if(l==="bilinear"){const se=Math.floor(oe),de=Math.ceil(oe),W=oe-se;for(let ne=0;ne<w;ne++){const ge=w>1?L*(m-1)+ne*Z:.5*(L+G)*(m-1);if(ge<0||ge>m-1){for(let Ne=0;Ne<g;Ne++){const Me=Ne+ne*_[2]+H*_[1]+z*_[0];v.values[Me]=c}continue}const me=Math.floor(ge),xe=Math.ceil(ge),$e=ge-me;for(let Ne=0;Ne<g;Ne++){let Me=Ne+me*E[2]+se*E[1]+q*E[0];const Fe=N[Me];Me=Ne+xe*E[2]+se*E[1]+q*E[0];const Pe=N[Me];Me=Ne+me*E[2]+de*E[1]+q*E[0];const He=N[Me];Me=Ne+xe*E[2]+de*E[1]+q*E[0];const tt=N[Me],$t=Fe+(Pe-Fe)*$e,nt=He+(tt-He)*$e;Me=Ne+ne*_[2]+H*_[1]+z*_[0],v.values[Me]=$t+(nt-$t)*W}}}else for(let se=0;se<w;++se){const de=w>1?L*(m-1)+se*Z:.5*(L+G)*(m-1);if(de<0||de>m-1){for(let ge=0;ge<g;ge++){const me=ge+se*_[2]+H*_[1]+z*_[0];v.values[me]=c}continue}const W=Math.round(de),ne=Math.round(oe);for(let ge=0;ge<g;ge++){const me=ge+W*E[2]+ne*E[1]+q*E[0],xe=ge+se*_[2]+H*_[1]+z*_[0];v.values[xe]=N[me]}}}}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const h7={kernelName:mx,backendName:"cpu",kernelFunc:c7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;Xe(r,"cumprod");const l=Qt([i],r.shape.length);let c=r;l!=null&&(c=pr({inputs:{x:r},backend:t,attrs:{perm:l}}));const d=ln(1,r.shape.length)[0];if(d!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${d}`);const p=hs(c.dtype,"int32"),m=p2(ue(c.shape),p),g=t.data.get(c.dataId).values,x=c.shape[c.shape.length-1],b=o?(v,$)=>v+x-$-1:(v,$)=>v+$;for(let v=0;v<g.length;v+=x)for(let $=0;$<x;$++){const I=b(v,$);if($===0)m[I]=a?1:g[I];else{const N=b(v,$-1);m[I]=a?g[N]*m[N]:g[I]*m[N]}}const w=t.makeTensorInfo(c.shape,p,m);if(l!=null){const v=wa(l),$=pr({inputs:{x:w},backend:t,attrs:{perm:v}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(c),$}return w}const p7={kernelName:fx,backendName:"cpu",kernelFunc:d7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;Xe(r,"cumsum");const l=Qt([i],r.shape.length);let c=r;l!=null&&(c=pr({inputs:{x:r},backend:t,attrs:{perm:l}}));const d=ln(1,r.shape.length)[0];if(d!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${d}`);const p=hs(c.dtype,"int32"),m=vs(ue(c.shape),p),g=t.data.get(c.dataId).values,x=c.shape[c.shape.length-1],b=o?(v,$)=>v+x-$-1:(v,$)=>v+$;for(let v=0;v<g.length;v+=x)for(let $=0;$<x;$++){const I=b(v,$);if($===0)m[I]=a?0:g[I];else{const N=b(v,$-1);m[I]=a?g[N]+m[N]:g[I]+m[N]}}const w=t.makeTensorInfo(c.shape,p,m);if(l!=null){const v=wa(l),$=pr({inputs:{x:w},backend:t,attrs:{perm:v}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(c),$}return w}const m7={kernelName:$f,backendName:"cpu",kernelFunc:f7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:a,binaryOutput:o}=s;if(r.shape.length===1){const l=t.data.get(r.dataId).values,c=t.data.get(i.dataId).values,d=GS(l,c,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,d)}else if(r.shape.length===2){const l=t.bufferSync(r),c=t.bufferSync(i),d=o_(l,c,a,o);return t.makeTensorInfo(d.shape,i.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const y7={kernelName:gx,backendName:"cpu",kernelFunc:g7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:i,dataFormat:a}=s;B(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const o=r.shape[0],l=r.shape[1],c=r.shape[2],d=r.shape[3],p=l*i,m=c*i,g=d/(i*i),x=t.data.get(r.dataId).values,b=new Float32Array(o*p*m*g);let w=0;for(let v=0;v<o;++v)for(let $=0;$<p;++$){const I=Math.floor($/i),N=$%i;for(let E=0;E<m;++E){const _=Math.floor(E/i),z=E%i,P=(N*i+z)*g;for(let O=0;O<g;++O){const D=O+P+d*(_+c*(I+l*v));b[w++]=x[D]}}}return t.makeTensorInfo([o,p,m,g],r.dtype,b)}const b7={kernelName:yx,backendName:"cpu",kernelFunc:x7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lO(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:c}=s;Xe([r,i],"depthwiseConv2DNative");const d=Qe(r.shape),p=Qe(i.shape);let m=l;m==null&&(m=[1,1]),B(Zn(a,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${m}'`);const g=on(r.shape,i.shape,a,m,o,c,!0),{filterHeight:x,filterWidth:b,dilationHeight:w,dilationWidth:v,padInfo:$}=g,I=$.left,N=$.top,E=g.outChannels/g.inChannels,_=new qn(g.outShape,r.dtype),z=t.data.get(r.dataId).values,P=t.data.get(i.dataId).values,O=_.values;for(let L=0;L<g.batchSize;++L){const D=L*d[0],G=L*_.strides[0];for(let q=0;q<g.outHeight;++q){const ee=G+q*_.strides[1],Z=q*g.strideHeight-N;for(let H=0;H<x;++H){const oe=Z+H*w;if(oe<0||oe>=g.inHeight)continue;const se=H*p[0],de=D+oe*d[1];for(let W=0;W<g.outWidth;++W){const ne=ee+W*_.strides[2],ge=W*g.strideWidth-I;for(let me=0;me<b;++me){const xe=ge+me*v;if(xe<0||xe>=g.inWidth)continue;const $e=se+me*p[1],Ne=de+xe*g.inChannels;let Me=ne,Fe=$e;for(let Pe=0;Pe<g.inChannels;++Pe){const He=z[Ne+Pe];for(let tt=0;tt<E;++tt)O[Me+tt]+=He*P[Fe+tt];Me+=E,Fe+=E}}}}}}return t.makeTensorInfo(_.shape,_.dtype,_.values)}const w7={kernelName:kf,backendName:"cpu",kernelFunc:lO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v7(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:c,filterShape:d}=s;Xe([r,i],"depthwiseConv2dNativeBackpropFilter");const p=on(r.shape,d,a,o,l,c,!0),{strideHeight:m,strideWidth:g,filterHeight:x,filterWidth:b}=p,w=new qn(p.filterShape,"float32"),v=p.padInfo.left,$=p.padInfo.top,I=p.outChannels/p.inChannels,N=t.data.get(r.dataId).values,E=new qn(r.shape,r.dtype,N),_=t.data.get(i.dataId).values,z=new qn(i.shape,i.dtype,_);for(let P=0;P<x;++P){const O=Math.max(0,Math.ceil(($-P)/m)),L=Math.min(p.outHeight,(p.inHeight+$-P)/m);for(let D=0;D<b;++D){const G=Math.max(0,Math.ceil((v-D)/g)),q=Math.min(p.outWidth,(p.inWidth+v-D)/g);for(let ee=0;ee<p.outChannels;++ee){const Z=Math.trunc(ee/I),H=ee%I;let oe=0;for(let se=0;se<p.batchSize;++se)for(let de=O;de<L;++de){const W=P+de*m-$;for(let ne=G;ne<q;++ne){const ge=D+ne*g-v;oe+=E.get(se,W,ge,Z)*z.get(se,de,ne,ee)}}w.set(oe,P,D,Z,H)}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const S7={kernelName:xx,backendName:"cpu",kernelFunc:v7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C7(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:c,inputShape:d}=s;Xe([r,i],"depthwiseConv2DNativeBackpropInput");const p=Qe(r.shape),m=Qe(i.shape),g=on(d,i.shape,a,o,l,c,!0),x=new qn(g.inShape,"float32"),b=x.values,[w,v,$]=x.strides,I=t.data.get(r.dataId).values,[N,E,_]=p,z=t.data.get(i.dataId).values,[P,O,L]=m,{batchSize:D,filterHeight:G,filterWidth:q,inChannels:ee,inHeight:Z,inWidth:H,outChannels:oe,outHeight:se,outWidth:de,strideHeight:W,strideWidth:ne}=g,ge=G-1-g.padInfo.top,me=q-1-g.padInfo.left,xe=oe/ee;for(let $e=0;$e<D;++$e)for(let Ne=0;Ne<ee;++Ne)for(let Me=0;Me<Z;++Me){const Fe=Me-ge,Pe=Math.max(0,Math.ceil(Fe/W)),He=Math.min(se,(G+Fe)/W);for(let tt=0;tt<H;++tt){const $t=tt-me,nt=Math.max(0,Math.ceil($t/ne)),mt=Math.min(de,(q+$t)/ne);let _t=0;for(let kt=Pe;kt<He;++kt){const Wt=kt*W-Fe;for(let Mt=nt;Mt<mt;++Mt){const Os=Mt*ne-$t,dn=N*$e+E*kt+_*Mt,Qs=P*(G-1-Wt)+O*(q-1-Os)+L*Ne;for(let es=0;es<xe;++es){const Xr=Ne*xe+es,jt=I[dn+Xr],mr=z[Qs+es];_t+=jt*mr}}}b[w*$e+v*Me+$*tt+Ne]=_t}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const $7={kernelName:bx,backendName:"cpu",kernelFunc:C7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k7(n){const{inputs:e,backend:t}=n,{x:s}=e,r=ue(s.shape),i=t.data.get(s.dataId).values,a=dt([r,r],s.dtype),o=a.values;for(let c=0;c<i.length;c++)o[c*r+c]=i[c];const l=[...s.shape,...s.shape];return t.makeTensorInfo(l,a.dtype,a.values)}const N7={kernelName:wx,backendName:"cpu",kernelFunc:k7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I7={kernelName:Nf,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:i,pad:a,dilations:o}=t,l=e,c=l.data.get(s.dataId).values,d=s.shape.length,p=l.data.get(r.dataId).values,m=r.shape.length,{batchSize:g,inHeight:x,inWidth:b,inChannels:w,outHeight:v,outWidth:$,padInfo:I,strideHeight:N,strideWidth:E,filterHeight:_,filterWidth:z,dilationHeight:P,dilationWidth:O,outShape:L}=ol(s.shape,r.shape,i,a,"NHWC",o),D=ue(L),G=L.length,q=Sn(s.dtype,D);for(let Z=0;Z<g;++Z)for(let H=0;H<v;++H){const oe=H*N-I.top;for(let se=0;se<$;++se){const de=se*E-I.left;for(let W=0;W<w;++W){let ne=Number.MIN_SAFE_INTEGER;for(let me=0;me<_;++me){const xe=oe+me*P;if(xe>=0&&xe<x)for(let $e=0;$e<z;++$e){const Ne=de+$e*O;if(Ne>=0&&Ne<b){const Me=ha([Z,xe,Ne,W],d,Qe(s.shape)),Fe=ha([me,$e,W],m,Qe(r.shape)),Pe=c[Me]+p[Fe];Pe>ne&&(ne=Pe)}}}const ge=ha([Z,H,se,W],G,Qe(L));q[ge]=ne}}}return{dataId:l.write(Ru(q,s.dtype),L,s.dtype),shape:L,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T7={kernelName:$y,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:i}=n,{strides:a,pad:o,dilations:l}=t,c=e,d=yi(s.shape,c.data.get(s.dataId).values),p=yi(r.shape,c.data.get(r.dataId).values),{batchSize:m,inHeight:g,inWidth:x,inChannels:b,outHeight:w,outWidth:v,padInfo:$,strideHeight:I,strideWidth:N,filterHeight:E,filterWidth:_,dilationHeight:z,dilationWidth:P,outShape:O}=ol(s.shape,r.shape,a,o,"NHWC",l);B(i.rank===O.length,()=>`Error in ${$y}, dy must have the same rank as output ${O.length}, but got ${i.rank}`);const L=yi(O,c.data.get(i.dataId).values),D=lE(r.shape,r.dtype);for(let q=0;q<m;++q)for(let ee=0;ee<w;++ee){const Z=ee*I-$.top;for(let H=0;H<v;++H){const oe=H*N-$.left;for(let se=0;se<b;++se){let de=Number.MIN_SAFE_INTEGER,W=0,ne=0;for(let ge=0;ge<E;++ge){const me=Z+ge*z;if(me>=0&&me<g)for(let xe=0;xe<_;++xe){const $e=oe+xe*P;if($e>=0&&$e<x){const Ne=d[q][me][$e][se]+p[ge][xe][se];Ne>de&&(de=Ne,W=ge,ne=xe)}}}D[W][ne][se]+=L[q][ee][H][se]}}}return{dataId:c.write(Ru(D,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E7={kernelName:Cy,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:i}=n,{strides:a,pad:o,dilations:l}=t,c=e,d=yi(s.shape,c.data.get(s.dataId).values),p=yi(r.shape,c.data.get(r.dataId).values),{batchSize:m,inHeight:g,inWidth:x,inChannels:b,outHeight:w,outWidth:v,padInfo:$,strideHeight:I,strideWidth:N,filterHeight:E,filterWidth:_,dilationHeight:z,dilationWidth:P,outShape:O}=ol(s.shape,r.shape,a,o,"NHWC",l);B(i.rank===O.length,()=>`Error in ${Cy}, dy must have the same rank as output ${O.length}, but got ${i.rank}`);const L=yi(O,c.data.get(i.dataId).values),D=lE(s.shape,s.dtype);for(let q=0;q<m;++q)for(let ee=0;ee<w;++ee){const Z=ee*I-$.top;for(let H=0;H<v;++H){const oe=H*N-$.left;for(let se=0;se<b;++se){let de=Number.MIN_SAFE_INTEGER,W=Z<0?0:Z,ne=oe<0?0:oe;for(let ge=0;ge<E;++ge){const me=Z+ge*z;if(me>=0&&me<g)for(let xe=0;xe<_;++xe){const $e=oe+xe*P;if($e>=0&&$e<x){const Ne=d[q][me][$e][se]+p[ge][xe][se];Ne>de&&(de=Ne,W=me,ne=$e)}}}D[q][W][ne][se]+=L[q][ee][H][se]}}}return{dataId:c.write(Ru(D,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R7(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:i,options:a}=s,{contextOptions:o,imageOptions:l}=a||{},c=(l==null?void 0:l.alpha)||1,d=(o==null?void 0:o.contextType)||"2d";if(d!=="2d")throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const p=i.getContext(d,(o==null?void 0:o.contextAttributes)||{});if(p==null)throw new Error(`Could not get the context with ${d} type.`);const[m,g]=r.shape.slice(0,2),x=r.shape.length===2?1:r.shape[2],b=t.data.get(r.dataId).values,w=r.dtype==="float32"?255:1,v=new Uint8ClampedArray(g*m*4);for(let I=0;I<m*g;++I){const N=[0,0,0,255*c];for(let _=0;_<x;_++){const z=b[I*x+_];if(r.dtype==="float32"){if(z<0||z>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${z}.`)}else if(r.dtype==="int32"&&(z<0||z>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${z}.`);x===1?(N[0]=z*w,N[1]=z*w,N[2]=z*w):N[_]=z*w}const E=I*4;v[E+0]=Math.round(N[0]),v[E+1]=Math.round(N[1]),v[E+2]=Math.round(N[2]),v[E+3]=Math.round(N[3])}i.width=g,i.height=m;const $=new ImageData(v,g,m);return p.putImageData($,0,0),r}const A7={kernelName:m2,backendName:"cpu",kernelFunc:R7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rm(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s;Xe(r,"sum");let o;r.dtype==="bool"?o=nl({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):o=ya({inputs:{x:r},backend:t});const l=o.shape.length,c=pt(i,o.shape),d=Qt(c,l);let p=c,m=o;d!=null&&(m=pr({inputs:{x:o},backend:t,attrs:{perm:d}}),p=ln(p.length,l)),Mn("sum",p,m.shape.length);const[g,x]=Dn(m.shape,p),b=hs(m.dtype,"int32");let w=Wy(t,g,b);const v=ue(x),$=t.data.get(w.dataId).values,I=t.data.get(m.dataId).values;for(let N=0;N<$.length;++N){const E=N*v;let _=0;for(let z=0;z<v;++z)_+=I[E+z];$[N]=_}if(a){const N=$n(w.shape,c),E=w;w=an({inputs:{x:w},backend:t,attrs:{shape:N}}),t.disposeIntermediateTensorInfo(E)}return t.disposeIntermediateTensorInfo(o),d!=null&&t.disposeIntermediateTensorInfo(m),w}const D7={kernelName:im,backendName:"cpu",kernelFunc:Rm};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _7(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,i=e,{allDims:a,summedDims:o,idDims:l}=Vb(r,i.length);Wb(a.length,l,i);const{path:c,steps:d}=Gb(o,l),p=d.length;let m=null,g=a.length;const x=[];for(let b=0;b<p;++b){for(const w of d[b]){const{permutationIndices:v,expandDims:$}=Ub(g,l[w]);let I;Hb(v)?I=i[w]:(I=pr({inputs:{x:i[w]},backend:t,attrs:{perm:v}}),x.push(I));const N=I.shape.slice();for(let E=0;E<$.length;++E)N.splice($[E],0,1);yt(I.shape,N)||(I=an({inputs:{x:I},backend:t,attrs:{shape:N}}),x.push(I)),m===null?m=I:(m=i0({inputs:{a:I,b:m},backend:t}),x.push(m))}b<p-1&&(c[b]>=0&&(m=Rm({inputs:{x:m},backend:t,attrs:{axis:c[b]-(a.length-g),keepDims:!1}}),x.push(m)),g--)}for(const b of x)b!==m&&t.disposeIntermediateTensorInfo(b);return m}const O7={kernelName:vx,backendName:"cpu",kernelFunc:_7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F7(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;Xe([s,r],"eluGrad");const i=new Float32Array(ue(r.shape)),a=t.data.get(r.dataId).values,o=t.data.get(s.dataId).values;for(let l=0;l<a.length;++l){const c=a[l];c>=0?i[l]=o[l]:i[l]=o[l]*(c+1)}return t.makeTensorInfo(r.shape,"float32",i)}const z7={kernelName:Sx,backendName:"cpu",kernelFunc:F7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L7=Fb,P7=zb,M7=Lb,B7=Pb,V7=Mb,U7=Bb,W7=Xt(kh,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+L7*t);return e*(1-((((U7*s+V7)*s+B7)*s+M7)*s+P7)*s*Math.exp(-t*t))}),G7={kernelName:kh,backendName:"cpu",kernelFunc:W7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jy(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:i}=s,a=r.shape.length,o=r.shape.slice();let l=i;return i<0&&(B(-(a+1)<=i,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+i+1),o.splice(l,0,1),an({inputs:{x:r},backend:t,attrs:{shape:o}})}const H7={kernelName:Tf,backendName:"cpu",kernelFunc:jy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j7=On((n,e)=>n/e),YS=Jn(Ch,j7),Kv={kernelName:Ch,backendName:"cpu",kernelFunc:YS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uO(n,e,t){const s=n.shape,r=s[0],i=s[1],a=t.data.get(n.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,c=[r,i],d=ue(c),p=Yn("float32",d),m=Yn("float32",d);for(let w=0;w<r;w++){const v=Nu({inputs:{x:o},backend:t,attrs:{begin:[w,0],size:[1,i]}}),$=Nu({inputs:{x:l},backend:t,attrs:{begin:[w,0],size:[1,i]}}),I=Cr({inputs:{real:v,imag:$},backend:t}),{real:N,imag:E}=q7(I,e,t),_=Wi(N,E);for(let z=0;z<i;z++){const P=xS(_,z);p[w*i+z]=P.real,m[w*i+z]=P.imag}t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo($),t.disposeIntermediateTensorInfo(I)}const g=t.makeTensorInfo(c,"float32",p),x=t.makeTensorInfo(c,"float32",m),b=Cr({inputs:{real:g,imag:x},backend:t});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),b}function q7(n,e,t){const s=ue(n.shape),r=t.data.get(n.dataId),i=t.data.get(r.complexTensorInfos.real.dataId).values,a=t.data.get(r.complexTensorInfos.imag.dataId).values;if(X7(s)){const o=Yv(i,a,s,e,t),l=[n.shape[0],n.shape[1]];if(e){const c=t.makeTensorInfo(l,"float32",o.real),d=t.makeTensorInfo(l,"float32",o.imag),p=t.makeTensorInfo([],"float32",rl(s,"float32")),m=ya({inputs:{x:p},backend:t}),g=Kv.kernelFunc({inputs:{a:c,b:p},backend:t}),x=Kv.kernelFunc({inputs:{a:d,b:m},backend:t}),b=t.data.get(g.dataId).values,w=t.data.get(x.dataId).values;return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),{real:b,imag:w}}return o}else{const o=Wi(i,a),l=K7(o,s,e);return bA(l)}}function X7(n){return(n&n-1)===0}function Yv(n,e,t,s,r){if(t===1)return{real:n,imag:e};const i=Wi(n,e),a=t/2,o=wA(i),l=o.real,c=o.imag,d=[l.length],p=r.makeTensorInfo(d,"float32",l),m=r.makeTensorInfo(d,"float32",c),g=Cr({inputs:{real:p,imag:m},backend:r}),x=vA(i),b=x.real,w=x.imag,v=[b.length],$=r.makeTensorInfo(v,"float32",b),I=r.makeTensorInfo(v,"float32",w),N=Cr({inputs:{real:$,imag:I},backend:r}),E=Yv(l,c,a,s,r),_=E.real,z=E.imag,P=[_.length],O=r.makeTensorInfo(P,"float32",_),L=r.makeTensorInfo(P,"float32",z),D=Cr({inputs:{real:O,imag:L},backend:r}),G=Yv(b,w,a,s,r),q=G.real,ee=G.imag,Z=[q.length],H=r.makeTensorInfo(Z,"float32",q),oe=r.makeTensorInfo(Z,"float32",ee),se=Cr({inputs:{real:H,imag:oe},backend:r}),de=CA(t,s),W=[de.real.length],ne=r.makeTensorInfo(W,"float32",de.real),ge=r.makeTensorInfo(W,"float32",de.imag),me=Cr({inputs:{real:ne,imag:ge},backend:r}),xe=i0({inputs:{a:me,b:se},backend:r}),$e=th({inputs:{a:D,b:xe},backend:r}),Ne=XS({inputs:{a:D,b:xe},backend:r}),Me=ku({inputs:{input:$e},backend:r}),Fe=ku({inputs:{input:Ne},backend:r}),Pe=nh({inputs:{input:$e},backend:r}),He=nh({inputs:{input:Ne},backend:r}),tt=sh({inputs:[Me,Fe],backend:r,attrs:{axis:0}}),$t=sh({inputs:[Pe,He],backend:r,attrs:{axis:0}}),nt=r.data.get(tt.dataId).values,mt=r.data.get($t.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(I),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(se),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(ge),r.disposeIntermediateTensorInfo(me),r.disposeIntermediateTensorInfo(xe),r.disposeIntermediateTensorInfo($e),r.disposeIntermediateTensorInfo(Ne),r.disposeIntermediateTensorInfo(Me),r.disposeIntermediateTensorInfo(Pe),r.disposeIntermediateTensorInfo(Fe),r.disposeIntermediateTensorInfo(He),r.disposeIntermediateTensorInfo(tt),r.disposeIntermediateTensorInfo($t),{real:nt,imag:mt}}function K7(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let i=0,a=0;for(let o=0;o<e;o++){const l=$A(r*o,e,t),c=xS(n,o);i+=c.real*l.real-c.imag*l.imag,a+=c.real*l.imag+c.imag*l.real}t&&(i/=e,a/=e),SA(s,i,a,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y7(n){const{inputs:e,backend:t}=n,{input:s}=e,r=ue(s.shape),i=s.shape[s.shape.length-1],a=r/i,o=an({inputs:{x:s},backend:t,attrs:{shape:[a,i]}}),l=uO(o,!1,t),c=an({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),c}const Q7={kernelName:Cx,backendName:"cpu",kernelFunc:Y7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QS(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:i}=t,a=i||Tu(r),o=Sn(a,ue(s));return J7(o,r,a),e.makeTensorInfo(s,a,o)}const Z7={kernelName:$x,backendName:"cpu",kernelFunc:QS};function J7(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eY={kernelName:kx,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,i=Yn(s.dtype,ue(s.shape)),[a,o,l,c]=s.shape,d=r.data.get(s.dataId).values;for(let m=0;m<a;m++){const g=m*l*o*c;for(let x=0;x<o;x++){const b=x*(l*c);for(let w=0;w<l;w++){const v=w*c;for(let $=0;$<c;$++){const I=Math.round(l-w-1),N=g+b+v+$;let E=d[N];if(I>=0&&I<l){const _=I*c,z=g+b+_+$;E=d[z]}i[N]=E}}}}return{dataId:r.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:c,dataFormat:d,dilations:p,dimRoundingMode:m,activation:g,leakyreluAlpha:x}=s;let b=oO({inputs:{x:r,filter:i},backend:t,attrs:{strides:l,pad:c,dataFormat:d,dilations:p,dimRoundingMode:m}});if(a){const w=b;if(d==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const v=an({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});b=th({inputs:{a:b,b:v},backend:t}),t.disposeIntermediateTensorInfo(v)}else b=th({inputs:{a:b,b:a},backend:t});t.disposeIntermediateTensorInfo(w)}if(g){const w=b;if(d==="NCHW"&&g==="prelu"&&o.shape.length===1&&o.shape[0]!==1){const v=an({inputs:{x:o},backend:t,attrs:{shape:[o.shape[0],1,1]}});b=Hy(t,b,g,v,x),t.disposeIntermediateTensorInfo(v)}else b=Hy(t,b,g,o,x);t.disposeIntermediateTensorInfo(w)}return b}const nY={kernelName:Gp,backendName:"cpu",kernelFunc:tY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:c,dataFormat:d,dilations:p,dimRoundingMode:m,activation:g,leakyreluAlpha:x}=s;let b=lO({inputs:{x:r,filter:i},backend:t,attrs:{strides:l,pad:c,dataFormat:d,dilations:p,dimRoundingMode:m}});if(a){const w=b;b=th({inputs:{a:b,b:a},backend:t}),t.disposeIntermediateTensorInfo(w)}if(g){const w=b;b=Hy(t,b,g,o,x),t.disposeIntermediateTensorInfo(w)}return b}const rY={kernelName:Hp,backendName:"cpu",kernelFunc:sY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,i=ue(s.shape),a=r.shape,o=a[a.length-1],[l,c,d,p]=Nb(s,r);if(c===0)return t.makeTensorInfo(l,s.dtype,[]);const m=t.data.get(r.dataId).values,g=t.bufferSync(s),x=x_(m,g,s.dtype,c,o,d,p,s.shape,i);return t.makeTensorInfo(l,s.dtype,x.values)}const aY={kernelName:Nx,backendName:"cpu",kernelFunc:iY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:i}=e,{axis:a,batchDims:o}=s;Xe([r,i],"gatherV2");const l=pt(a,r.shape)[0],c=t.data.get(i.dataId).values,d=r.shape[l];for(let N=0;N<c.length;++N){const E=c[N];B(E<=d-1&&E>=0,()=>`GatherV2: the index value ${E} is not in [0, ${d-1}]`)}let p=o;o==null&&(p=0);const m=ue(i.shape),g=qb(r,i,l,p),x=an({inputs:{x:r},backend:t,attrs:{shape:[g.batchSize,g.outerSize,g.dimSize,g.sliceSize]}}),b=an({inputs:{x:i},backend:t,attrs:{shape:[g.batchSize,m/g.batchSize]}}),w=[g.batchSize,g.outerSize,m/g.batchSize,g.sliceSize],v=t.bufferSync(b),$=t.bufferSync(x),I=b_($,v,w);return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),t.makeTensorInfo(g.outputShape,I.dtype,I.values)}const lY={kernelName:Rf,backendName:"cpu",kernelFunc:oY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uY(n){const{inputs:e,backend:t}=n,{input:s}=e,r=ue(s.shape),i=s.shape[s.shape.length-1],a=r/i,o=an({inputs:{x:s},backend:t,attrs:{shape:[a,i]}}),l=uO(o,!0,t),c=an({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),c}const cY={kernelName:Ix,backendName:"cpu",kernelFunc:uY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hY=Xt(Dh,n=>Number.isFinite(n)?1:0,"bool"),dY={kernelName:Dh,backendName:"cpu",kernelFunc:hY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pY=Xt(_h,n=>Math.abs(n)===1/0?1:0,"bool"),fY={kernelName:_h,backendName:"cpu",kernelFunc:pY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mY=Xt(Oh,n=>Number.isNaN(n)?1:0,"bool"),gY={kernelName:Oh,backendName:"cpu",kernelFunc:mY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yY(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:i}=t,a=$_(s,r,i);return e.makeTensorInfo([a.length],"float32",a)}const xY={kernelName:Ex,backendName:"cpu",kernelFunc:yY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bY=Xt(zh,n=>Math.log1p(n)),wY={kernelName:zh,backendName:"cpu",kernelFunc:bY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vY=On((n,e)=>n&&e),SY=Jn(Ff,vY,null,"bool"),CY={kernelName:Ff,backendName:"cpu",kernelFunc:SY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Y=Xt(zf,n=>n?0:1,"bool"),kY={kernelName:zf,backendName:"cpu",kernelFunc:$Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NY=On((n,e)=>n||e),IY=Jn(Lf,NY,null,"bool"),TY={kernelName:Lf,backendName:"cpu",kernelFunc:IY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=s;Xe(r,"LRN");const c=r.shape[3],d=c-1,p=t.data.get(r.dataId).values,m=ue(r.shape),g=new Float32Array(m);function x(b){const w=b%c;let v=b-w+Math.max(0,w-i);const $=b-w+Math.min(w+i,d);let I=0;for(;v<=$;v++){const N=p[v];I+=N*N}return I}for(let b=0;b<m;b++){const w=x(b),v=p[b]*Math.pow(a+o*w,-l);g[b]=v}return t.makeTensorInfo(r.shape,r.dtype,g)}const RY={kernelName:Pf,backendName:"cpu",kernelFunc:EY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:c,beta:d}=s;Xe(a,"LRNGrad");const p=ue(a.shape),m=a.shape[3],g=t.data.get(a.dataId).values,x=t.data.get(r.dataId).values,b=t.data.get(i.dataId).values,w=new Float32Array(p),v=p;for(let $=0;$<v;$++){const I=$%m,N=$-I+Math.max(0,I-o),E=$-I+Math.min(m,I+o+1);let _=0;for(let z=N;z<E;z++)_+=Math.pow(x[z],2);_=c*_+l;for(let z=N;z<E;z++){let P=-2*c*d*x[z]*b[$]/_;$===z&&(P+=Math.pow(_,-d)),P*=g[$],w[z]+=P}}return t.makeTensorInfo(a.shape,r.dtype,w)}const DY={kernelName:Rx,backendName:"cpu",kernelFunc:AY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cO(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:i,keepDims:a}=s,o=t;let l=r.shape;const c=l.length,d=pt(i,l);let p=d;const m=Qt(p,c);let g=o.data.get(r.dataId).values;if(m!=null){const N=new Array(c);for(let E=0;E<N.length;E++)N[E]=l[m[E]];g=jS(g,l,r.dtype,m,N),p=ln(p.length,c),l=N}Xe(r,"max"),Mn("max",p,c);const[x,b]=Dn(l,p),w=ue(b),v=N_(g,w,x,r.dtype),$=o.write(v,x,r.dtype);let I=x;return a&&(I=$n(x,d)),{dataId:$,shape:I,dtype:r.dtype}}const _Y={kernelName:Mf,backendName:"cpu",kernelFunc:cO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Xe(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,c=1;B(Zn(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const d=As(r.shape,i,a,c,o,l);let p;if(d.filterWidth===1&&d.filterHeight===1&&yt(d.inShape,d.outShape))p=ya({inputs:{x:r},backend:t});else{const m=t.data.get(r.dataId).values,g=Qe(r.shape),x=KS(m,r.shape,r.dtype,g,d,"max");p=t.makeTensorInfo(d.outShape,r.dtype,x.values)}return p}const FY={kernelName:Bf,backendName:"cpu",kernelFunc:OY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:c}=s;Xe(r,"maxPool3d");const d=Hr(r.shape,i,a,1,o,l,c),p=t.data.get(r.dataId).values,m=aO(p,r.shape,r.dtype,Qe(r.shape),d,"max");return t.makeTensorInfo(m.shape,"float32",m.values)}const LY={kernelName:Vf,backendName:"cpu",kernelFunc:zY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PY(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:c}=s;Xe([r,i],"maxPool3DGrad");const d=Hr(i.shape,a,o,1,l,c),p=t.bufferSync(i),m=NK(p,d),g=d.strideDepth,x=d.strideHeight,b=d.strideWidth,w=d.dilationDepth,v=d.dilationHeight,$=d.dilationWidth,I=d.effectiveFilterDepth,N=d.effectiveFilterHeight,E=d.effectiveFilterWidth,_=I-1-d.padInfo.front,z=E-1-d.padInfo.left,P=N-1-d.padInfo.top,O=dt(i.shape,"float32"),L=t.bufferSync(r);for(let D=0;D<d.batchSize;++D)for(let G=0;G<d.inChannels;++G)for(let q=0;q<d.inDepth;++q)for(let ee=0;ee<d.inHeight;++ee)for(let Z=0;Z<d.inWidth;++Z){const H=q-_,oe=ee-P,se=Z-z;let de=0;for(let W=0;W<I;W+=w){const ne=(H+W)/g;if(!(ne<0||ne>=d.outDepth||Math.floor(ne)!==ne))for(let ge=0;ge<N;ge+=v){const me=(oe+ge)/x;if(!(me<0||me>=d.outHeight||Math.floor(me)!==me))for(let xe=0;xe<E;xe+=$){const $e=(se+xe)/b;if($e<0||$e>=d.outWidth||Math.floor($e)!==$e)continue;const Ne=I*N*E-1-m.get(D,ne,me,$e,G),Me=W*N*E+ge*E+xe,Fe=Ne===Me?1:0;if(Fe===0)continue;const Pe=L.get(D,ne,me,$e,G);de+=Pe*Fe}}}O.set(de,D,q,ee,Z,G)}return t.makeTensorInfo(O.shape,O.dtype,O.values)}const MY={kernelName:Dx,backendName:"cpu",kernelFunc:PY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BY(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i,output:a}=e,o=i;Xe([i,a],"maxPoolGrad");const{filterSize:l,strides:c,pad:d,dimRoundingMode:p}=s,m=As(o.shape,l,c,1,d,p),g=t.data.get(o.dataId).values,x=dt(m.outShape,o.dtype,iO(g,o.shape,o.dtype,m).values),b=m.strideHeight,w=m.strideWidth,v=m.dilationHeight,$=m.dilationWidth,I=m.effectiveFilterHeight,N=m.effectiveFilterWidth,E=N-1-m.padInfo.left,_=I-1-m.padInfo.top,z=dt(o.shape,"float32"),P=t.data.get(r.dataId).values,O=dt(r.shape,"float32",P);for(let L=0;L<m.batchSize;++L)for(let D=0;D<m.inChannels;++D)for(let G=0;G<m.inHeight;++G)for(let q=0;q<m.inWidth;++q){const ee=G-_,Z=q-E;let H=0;for(let oe=0;oe<I;oe+=v){const se=(ee+oe)/b;if(!(se<0||se>=m.outHeight||Math.floor(se)!==se))for(let de=0;de<N;de+=$){const W=(Z+de)/w;if(W<0||W>=m.outWidth||Math.floor(W)!==W)continue;const ne=I*N-1-x.get(L,se,W,D),ge=oe*N+de,me=ne===ge?1:0;if(me===0)continue;const xe=O.get(L,se,W,D);H+=xe*me}}z.set(H,L,G,q,D)}return t.makeTensorInfo(z.shape,z.dtype,z.values)}const VY={kernelName:Ax,backendName:"cpu",kernelFunc:BY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UY(n,e,t,s,r){const i=Qe(e),a=KS(n,e,t,i,r,"max"),o=iO(n,e,t,r,!0,s);return[a.values,o.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WY={kernelName:_x,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=e,l=t;Xe(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values,d=As(s.shape,r,i,[1,1],a),[p,m]=UY(c,s.shape,s.dtype,o,d),g=l.write(p,d.outShape,s.dtype),x=l.write(m,d.outShape,s.dtype);return[{dataId:g,shape:d.outShape,dtype:s.dtype},{dataId:x,shape:d.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s,o=pt(i,r.shape),c=Dn(r.shape,o)[1],d=ue(c),p=[],m=t.makeTensorInfo([],"float32",new Float32Array([d]));p.push(m);const g=nl({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});p.push(g);const x=YS({inputs:{a:g,b:m},backend:t});p.push(x);const b=Rm({inputs:{x},backend:t,attrs:{axis:i,keepDims:a}});return p.forEach(w=>t.disposeIntermediateTensorInfo(w)),b}const HY={kernelName:Uf,backendName:"cpu",kernelFunc:GY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s;Xe(r,"min");const o=pt(i,r.shape);let l=o;const c=Qt(l,r.shape.length);let d=r;c!=null&&(d=pr({inputs:{x:r},backend:t,attrs:{perm:c}}),l=ln(l.length,r.shape.length)),Mn("min",l,d.shape.length);const[p,m]=Dn(d.shape,l),g=ue(m),x=vs(ue(p),d.dtype),b=t.data.get(d.dataId).values;for(let v=0;v<x.length;++v){const $=v*g;let I=b[$];for(let N=0;N<g;++N){const E=b[$+N];(Number.isNaN(E)||E<I)&&(I=E)}x[v]=I}c!=null&&t.disposeIntermediateTensorInfo(d);const w=t.makeTensorInfo(p,d.dtype,x);if(a){const v=$n(p,o),$=an({inputs:{x:w},backend:t,attrs:{shape:v}});return t.disposeIntermediateTensorInfo(w),$}return w}const qY={kernelName:Wf,backendName:"cpu",kernelFunc:jY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:i,mode:a}=s;Xe(r,"mirrorPad");const o=i.map((I,N)=>I[0]+r.shape[N]+I[1]),l=i.map(I=>I[0]),c=i.map((I,N)=>I[0]+r.shape[N]),d=a==="reflect"?0:1,p=t.data.get(r.dataId).values,m=r.shape.length,g=Qe(r.shape),x=ue(o),b=o.length,w=Qe(o),v=Yn(r.dtype,x);for(let I=0;I<x;I++){let N=ch(I,b,w);for(let _=0;_<b;_++)N[_]<l[_]?N[_]=l[_]*2-N[_]-d:N[_]>=c[_]&&(N[_]=(c[_]-1)*2-N[_]+d);N=N.map((_,z)=>_-l[z]);const E=ha(N,m,g);v[I]=p[E]}return{dataId:t.write(v,o,r.dtype),shape:o,dtype:r.dtype}}const KY={kernelName:Gf,backendName:"cpu",kernelFunc:XY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YY=On((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),QY=Jn(Mh,YY),ZY={kernelName:Mh,backendName:"cpu",kernelFunc:QY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hO(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:i}=s,a=r.shape.length;let o=i;if(o===-1&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=pt([o],r.shape),c=cO({inputs:{x:r},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),d=$n(c.shape,l),p=an({inputs:{x:c},backend:t,attrs:{shape:d}}),m=XS({inputs:{a:r,b:p},backend:t}),g=f_({inputs:{x:m},backend:t}),x=Rm({inputs:{x:g},backend:t,attrs:{axis:l,keepDims:!1}}),b=an({inputs:{x},backend:t,attrs:{shape:d}}),w=YS({inputs:{a:g,b},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),w}const JY={kernelName:lm,backendName:"cpu",kernelFunc:hO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e9(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:i,seed:a,normalized:o}=s;Xe(r,"multinomial");const l=o?r:hO({inputs:{logits:r},backend:t,attrs:{dim:-1}}),c=l.shape[0],d=l.shape[1],p=t.data.get(l.dataId).values,m=[c,i],g=vs(ue(m),"int32");for(let x=0;x<c;++x){const b=x*d,w=new Float32Array(d-1);w[0]=p[b];for(let I=1;I<w.length;++I)w[I]=w[I-1]+p[b+I];const v=fb.alea(a.toString()),$=x*i;for(let I=0;I<i;++I){const N=v();g[$+I]=w.length;for(let E=0;E<w.length;E++)if(N<w[E]){g[$+I]=E;break}}}return o||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(m,"int32",g)}const t9={kernelName:Ox,backendName:"cpu",kernelFunc:e9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n9=$b;function s9(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s;Xe(r,"NonMaxSuppression");const c=t.data.get(r.dataId).values,d=t.data.get(i.dataId).values,{selectedIndices:p}=n9(c,d,a,o,l);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}const r9={kernelName:Fx,backendName:"cpu",kernelFunc:s9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i9=uS;function a9(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:c}=s;Xe(r,"NonMaxSuppressionPadded");const d=t.data.get(r.dataId).values,p=t.data.get(i.dataId).values,{selectedIndices:m,validOutputs:g}=i9(d,p,a,o,l,c);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([g]))]}const o9={kernelName:g2,backendName:"cpu",kernelFunc:a9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l9=kb;function u9(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:c}=s;Xe(r,"NonMaxSuppressionWithScore");const d=t.data.get(r.dataId).values,p=t.data.get(i.dataId).values,m=a,g=o,x=l,b=c,{selectedIndices:w,selectedScores:v}=l9(d,p,m,g,x,b);return[t.makeTensorInfo([w.length],"int32",new Int32Array(w)),t.makeTensorInfo([v.length],"float32",new Float32Array(v))]}const c9={kernelName:zx,backendName:"cpu",kernelFunc:u9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h9(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:i,depth:a,onValue:o,offValue:l}=s;Xe(r,"oneHot");const c=ue(r.shape),d=new Float32Array(c*a);d.fill(l);const p=t.data.get(r.dataId).values;for(let m=0;m<c;++m)p[m]>=0&&p[m]<a&&(d[m*a+p[m]]=o);return t.makeTensorInfo([...r.shape,a],i,d)}const d9={kernelName:Xf,backendName:"cpu",kernelFunc:h9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qy(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=ku({inputs:{input:s},backend:t}),i=qy({inputs:{x:r},backend:t}),a=nh({inputs:{input:s},backend:t}),o=qy({inputs:{x:a},backend:t}),l=Cr({inputs:{real:i,imag:o},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return QS({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const p9={kernelName:hm,backendName:"cpu",kernelFunc:qy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dO(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=ku({inputs:{input:s},backend:t}),i=dO({inputs:{x:r},backend:t}),a=nh({inputs:{input:s},backend:t}),o=qy({inputs:{x:a},backend:t}),l=Cr({inputs:{real:i,imag:o},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return QS({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const f9={kernelName:qf,backendName:"cpu",kernelFunc:dO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pO(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return jy({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const i=e[0].shape,a=e[0].dtype;e.forEach(d=>{fr(i,d.shape,"All tensors passed to stack must have matching shapes"),B(a===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(d=>{const p=jy({inputs:{input:d},backend:t,attrs:{dim:r}});return o.push(p),p}),c=sh({inputs:l,backend:t,attrs:{axis:r}});return o.forEach(d=>t.disposeIntermediateTensorInfo(d)),c}const m9={kernelName:Kf,backendName:"cpu",kernelFunc:pO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:i,constantValue:a}=s;Xe(r,"pad");const o=i.map(($,I)=>$[0]+r.shape[I]+$[1]),l=i.map($=>$[0]),c=t.data.get(r.dataId).values,d=ue(r.shape),p=r.shape.length,m=Qe(r.shape),g=ue(o),x=o.length,b=Qe(o),w=Yn(r.dtype,g);a!==0&&w.fill(a);for(let $=0;$<d;$++){const N=ch($,p,m).map((_,z)=>_+l[z]),E=ha(N,x,b);w[E]=c[$]}return{dataId:t.write(w,o,r.dtype),shape:o,dtype:r.dtype}}const fO={kernelName:Yf,backendName:"cpu",kernelFunc:g9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y9=On((n,e)=>Math.pow(n,e)),x9=Jn(Vh,y9),b9={kernelName:Vh,backendName:"cpu",kernelFunc:x9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w9(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:i,indices:a}=e,{outputRaggedRank:o}=s,l=r.map(v=>t.data.get(v.dataId).values),c=r.map(v=>v.shape),d=t.data.get(i.dataId).values,p=t.data.get(a.dataId).values,[m,g,x]=D_(l,c,d,i.shape,i.dtype,p,a.shape),b=m.map(v=>t.makeTensorInfo([v.length],"int32",v)),w=t.makeTensorInfo(x,i.dtype,g);return b.concat([w])}const v9={kernelName:y2,backendName:"cpu",kernelFunc:w9};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S9(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:i}=e,a=t.data.get(s.dataId).values,o=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,[c,d]=__(a,s.shape,s.dtype,o,r.shape,l,i.shape),p=t.makeTensorInfo([c.length],"int32",c),m=t.makeTensorInfo([d.length],s.dtype,d);return[p,m]}const C9={kernelName:x2,backendName:"cpu",kernelFunc:S9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $9(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:i,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=s,c=t.data.get(r.dataId).values,d=t.data.get(i.dataId).values,p=t.data.get(a.dataId).values,m=o.map(w=>t.data.get(w.dataId).values),g=o.map(w=>w.shape),[x,b]=O_(c,r.shape,d,i.shape,i.dtype,p,a.shape,m,g,l);return t.makeTensorInfo(x,i.dtype,b)}const k9={kernelName:b2,backendName:"cpu",kernelFunc:$9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N9(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:i,step:a}=t,o=F_(s,r,a,i);return e.makeTensorInfo([o.length],i,o)}const I9={kernelName:Lx,backendName:"cpu",kernelFunc:N9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T9=Xt(Uh,n=>1/n),E9={kernelName:Uh,backendName:"cpu",kernelFunc:T9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R9(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s;Xe(r,"resizeBilinear");const l=Qe(r.shape),[c,d]=o,[p,m,g,x]=r.shape,b=t.data.get(r.dataId).values,w=new Float32Array(ue([p,c,d,x])),v=[i&&c>1?m-1:m,i&&d>1?g-1:g],$=[i&&c>1?c-1:c,i&&d>1?d-1:d];let I=0;const N=v[0]/$[0],E=v[1]/$[1];for(let _=0;_<p;_++)for(let z=0;z<c;z++){let P;a?P=N*(z+.5)-.5:P=N*z;const O=Math.max(0,Math.floor(P)),L=P-O,D=Math.min(m-1,Math.ceil(P)),G=_*l[0]+O*l[1],q=_*l[0]+D*l[1];for(let ee=0;ee<d;ee++){let Z;a?Z=E*(ee+.5)-.5:Z=E*ee;const H=Math.max(0,Math.floor(Z)),oe=Z-H,se=Math.min(g-1,Math.ceil(Z)),de=G+H*l[2],W=q+H*l[2],ne=G+se*l[2],ge=q+se*l[2];for(let me=0;me<x;me++){const xe=b[de+me],$e=b[W+me],Ne=b[ne+me],Me=b[ge+me],Fe=xe+(Ne-xe)*oe,Pe=$e+(Me-$e)*oe,He=Fe+(Pe-Fe)*L;w[I++]=He}}}return t.makeTensorInfo([p,c,d,x],"float32",w)}const A9={kernelName:tm,backendName:"cpu",kernelFunc:R9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D9(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:a}=s;Xe([i,r],"resizeBilinearGrad");const o=Qe(r.shape),[l,c,d,p]=r.shape,[,m,g]=i.shape,x=new Float32Array(l*c*d*p),b=[a&&m>1?c-1:c,a&&g>1?d-1:d],w=[a&&m>1?m-1:m,a&&g>1?g-1:g],v=b[0]/w[0],$=b[1]/w[1],I=t.data.get(i.dataId).values;let N=0;for(let E=0;E<l;E++){const _=E*o[0];for(let z=0;z<m;z++){const P=z*v,O=Math.floor(P),L=Math.min(Math.ceil(P),c-1),D=_+O*o[1],G=_+L*o[1],q=P-O,ee=1-q;for(let Z=0;Z<g;Z++){const H=Z*$,oe=Math.floor(H),se=Math.min(Math.ceil(H),d-1),de=H-oe,W=1-de,ne=D+oe*o[2],ge=D+se*o[2],me=G+oe*o[2],xe=G+se*o[2],$e=ee*W,Ne=ee*de,Me=q*W,Fe=q*de;for(let Pe=0;Pe<p;Pe++){const He=I[N++];x[ne+Pe]+=He*$e,x[ge+Pe]+=He*Ne,x[me+Pe]+=He*Me,x[xe+Pe]+=He*Fe}}}}return t.makeTensorInfo([l,d,c,p],"float32",x)}const _9={kernelName:Bx,backendName:"cpu",kernelFunc:D9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O9(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s;Xe(r,"resizeNearestNeighbor");const l=Qe(r.shape),[c,d]=o,[p,m,g,x]=r.shape,b=t.data.get(r.dataId).values,w=new Float32Array(p*c*d*x),v=[i&&c>1?m-1:m,i&&d>1?g-1:g],$=[i&&c>1?c-1:c,i&&d>1?d-1:d],I=v[0]/$[0],N=v[1]/$[1];let E=0;for(let _=0;_<p;_++){const z=_*l[0];for(let P=0;P<c;P++){const O=a?I*(P+.5):I*P;let L=Math.min(m-1,i?Math.round(O):Math.floor(O));a&&(L=Math.max(0,L));const D=z+L*l[1];for(let G=0;G<d;G++){const q=a?N*(G+.5):N*G;let ee=Math.min(g-1,i?Math.round(q):Math.floor(q));a&&(ee=Math.max(0,ee));const Z=D+ee*l[2];for(let H=0;H<x;H++){const oe=b[Z+H];w[E++]=oe}}}}return t.makeTensorInfo([p,c,d,x],r.dtype,w)}const F9={kernelName:em,backendName:"cpu",kernelFunc:O9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z9(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:a}=s;Xe([i,r],"resizeNearestNeighborGrad");const o=Qe(r.shape),l=Qe(i.shape),[c,d,p,m]=r.shape,[,g,x]=i.shape,b=new Float32Array(c*d*p*m),w=t.data.get(i.dataId).values,v=[a&&g>1?d-1:d,a&&x>1?p-1:p],$=[a&&g>1?g-1:g,a&&x>1?x-1:x],I=v[0]/$[0],N=v[1]/$[1],E=1/I,_=1/N,z=Math.ceil(E)*2+2,P=Math.ceil(_)*2+2;for(let O=0;O<c;O++){const L=O*o[0];for(let D=0;D<d;D++){const G=L+D*o[1],q=Math.floor(D*E),ee=Math.floor(q-z/2);for(let Z=0;Z<p;Z++){const H=G+Z*o[2],oe=Math.floor(Z*_),se=Math.floor(oe-P/2);for(let de=0;de<m;de++){let W=0;for(let ne=0;ne<z;ne++){const ge=ne+ee;if(ge<0||ge>=g)continue;const me=L+ge*l[1],xe=ge*I,$e=Math.min(d-1,a?Math.round(xe):Math.floor(xe));if(D===$e)for(let Ne=0;Ne<P;Ne++){const Me=Ne+se;if(Me<0||Me>=x)continue;const Fe=me+Me*l[2],Pe=Me*N,He=Math.min(p-1,a?Math.round(Pe):Math.floor(Pe));Z===He&&(W+=w[Fe+de])}}b[H+de]=W}}}}return t.makeTensorInfo(r.shape,r.dtype,b)}const L9={kernelName:Mx,backendName:"cpu",kernelFunc:z9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:i}=s;Xe(r,"reverse");const a=r.shape.length,o=pt(i,r.shape);if(a===0)return ya({inputs:{x:r},backend:t});const l=new qn(r.shape,r.dtype),c=t.bufferSync(r);for(let d=0;d<l.size;d++){const p=l.indexToLoc(d),m=p.slice();o.forEach(g=>m[g]=r.shape[g]-1-m[g]),l.set(c.get(...m),...p)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const M9={kernelName:nm,backendName:"cpu",kernelFunc:P9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B9={kernelName:Jx,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:i,center:a}=e,o=t,l=Yn(s.dtype,ue(s.shape)),[c,d,p,m]=s.shape,[g,x]=Db(a,d,p),b=255,w=Math.sin(r),v=Math.cos(r),$=o.data.get(s.dataId).values;for(let N=0;N<c;N++){const E=N*p*d*m;for(let _=0;_<d;_++){const z=_*(p*m);for(let P=0;P<p;P++){const O=P*m;for(let L=0;L<m;L++){const D=[c,_,P,L],G=D[2],q=D[1];let ee=(G-g)*v-(q-x)*w,Z=(G-g)*w+(q-x)*v;ee=Math.round(ee+g),Z=Math.round(Z+x);let H=i;if(typeof i!="number"&&(L===3?H=b:H=i[L]),ee>=0&&ee<p&&Z>=0&&Z<d){const se=Z*(p*m),de=ee*m,W=E+se+de+L;H=$[W]}const oe=E+z+O+L;l[oe]=H}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V9=Xt(Hh,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),U9={kernelName:Hh,backendName:"cpu",kernelFunc:V9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W9(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:i}=e,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:c,strides:d,outputSize:p}=Sa(i,r,a),m=!0,g=t.bufferSync(r),x=t.bufferSync(i),b=au(g,x,a,p,c,l,o,d,0,m);return t.makeTensorInfo(a,b.dtype,b.values)}const G9={kernelName:Vx,backendName:"cpu",kernelFunc:W9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H9(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<e?t=r+1:s=r;return s}function j9(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<=e?t=r+1:s=r;return s}function q9(n,e,t,s,r,i){const a=Sn("int32",t*r);for(let o=0;o<t;++o){const l=n.slice(o*s,(o+1)*s),c=o*r;for(let d=0;d<r;++d)a[c+d]=i==="left"?H9(l,e[d+c]):j9(l,e[d+c])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X9(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:i}=e,{side:a}=s,o=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,c=q9(o,l,r.shape[0],r.shape[1],i.shape[1],a);return t.makeTensorInfo(i.shape,"int32",c)}const K9={kernelName:Wx,backendName:"cpu",kernelFunc:X9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y9(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:i}=e;Xe([s,r,i],"select");const a=s.shape.length,o=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,c=t.data.get(i.dataId).values,d=hs(r.dtype,i.dtype),p=vs(ue(r.shape),d);let m=0;const g=a===0||a>1||r.shape.length===1?1:ue(r.shape.slice(1));for(let x=0;x<o.length;x++)for(let b=0;b<g;b++)o[x]===1?p[m++]=l[x]:p[m++]=c[x];return t.makeTensorInfo(r.shape,d,p)}const Q9={kernelName:sm,backendName:"cpu",kernelFunc:Y9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z9=wm,J9=vm,eQ=Xt(qh,n=>n>=0?J9*n:Z9*(Math.exp(n)-1)),tQ={kernelName:qh,backendName:"cpu",kernelFunc:eQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nQ=Xt(Yh,n=>n<0?-1:n>0?1:0),sQ={kernelName:Yh,backendName:"cpu",kernelFunc:nQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rQ=Xt(Xh,n=>Math.sin(n)),iQ={kernelName:Xh,backendName:"cpu",kernelFunc:rQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aQ=Xt(Kh,n=>Math.sinh(n)),oQ={kernelName:Kh,backendName:"cpu",kernelFunc:aQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lQ=11920928955078125e-23,PI=Math.log(lQ)+2,uQ=Xt(Zh,n=>{const e=n>-PI,t=n<PI,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),cQ={kernelName:Zh,backendName:"cpu",kernelFunc:uQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,paddings:a}=s;Xe([r],"spaceToBatchND");const o=ue(i),l=[[0,0]];l.push(...a);for(let _=1+i.length;_<r.shape.length;++_)l.push([0,0]);const c=fO.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),d=_u(c.shape,i,o,!1),p=Ou(d.length,i.length,!1),m=Fu(c.shape,i,o,!1),b=an({inputs:{x:c},backend:t,attrs:{shape:d}}),$=pr({inputs:{x:b},backend:t,attrs:{perm:p}}),E=an({inputs:{x:$},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo($),E}const dQ={kernelName:am,backendName:"cpu",kernelFunc:hQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pQ(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:i,defaultValue:a}=e;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const o=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,c=t.data.get(i.dataId).values,d=t.data.get(a.dataId).values[0],[p,m,g,x,b]=M_(o,s.shape,s.dtype,l,r.dtype,c,d);return[t.makeTensorInfo(m,s.dtype,p),t.makeTensorInfo([m[0]],r.dtype,g),t.makeTensorInfo([x.length],"bool",new Uint8Array(x.map(w=>Number(w)))),t.makeTensorInfo([b.length],s.dtype,new Int32Array(b))]}const fQ={kernelName:w2,backendName:"cpu",kernelFunc:pQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mQ(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:i}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(t.data.get(r.dataId).values),o=t.data.get(s.dataId).values,l=Array.from(t.data.get(i.dataId).values),[c,d,p]=B_(o,s.shape,s.dtype,a,l);return[t.makeTensorInfo(d,s.dtype,c),t.makeTensorInfo([p.length],i.dtype,new Int32Array(p))]}const gQ={kernelName:v2,backendName:"cpu",kernelFunc:mQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yQ(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(s.dataId).values,o=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,[c,d]=qS(a,s.shape,s.dtype,o,l,!0);return t.makeTensorInfo(d,s.dtype,c)}const xQ={kernelName:Gx,backendName:"cpu",kernelFunc:yQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bQ(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(s.dataId).values,o=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,[c,d]=qS(a,s.shape,s.dtype,o,l);return t.makeTensorInfo(d,s.dtype,c)}const wQ={kernelName:Hx,backendName:"cpu",kernelFunc:bQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vQ(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:i,defaultValue:a}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:c,sliceSize:d,strides:p,outputSize:m}=Sa(i,r,o),g=!1,x=t.bufferSync(r);let b;switch(i.dtype){case"bool":{const w=t.bufferSync(i),v=!!t.data.get(a.dataId).values[0];b=au(x,w,o,m,d,c,l,p,v,g);break}case"float32":{const w=t.bufferSync(i),v=t.data.get(a.dataId).values[0];b=au(x,w,o,m,d,c,l,p,v,g);break}case"int32":{const w=t.bufferSync(i),v=t.data.get(a.dataId).values[0];b=au(x,w,o,m,d,c,l,p,v,g);break}case"string":{const w=t.bufferSync(i),v=Bi(t.data.get(a.dataId).values[0]);b=au(x,w,o,m,d,c,l,p,v,g);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return t.makeTensorInfo(o,b.dtype,b.values)}const SQ={kernelName:jx,backendName:"cpu",kernelFunc:vQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:i,axis:a}=s,o=pt(a,r.shape)[0],l=jb(r,i,o),c=new Array(r.shape.length).fill(0),d=r.shape.slice();return l.map(p=>{const m=[...d];m[o]=p;const g=Nu({inputs:{x:r},backend:t,attrs:{begin:c,size:m}});return c[o]+=p,g})}const $Q={kernelName:om,backendName:"cpu",kernelFunc:CQ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kQ={kernelName:qx,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;Xe(t,"square");const r=s.data.get(t.dataId).values,i=new Float32Array(r.length);for(let o=0;o<r.length;++o){const l=r[o];i[o]=l*l}return{dataId:s.write(i,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NQ=Xt(id,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),IQ={kernelName:id,backendName:"cpu",kernelFunc:NQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:c,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:m}=s;Xe(r,"stridedSlice");const{finalShapeSparse:g,finalShape:x,isIdentity:b,sliceDim0:w,isSimpleSlice:v,begin:$,end:I,strides:N}=Eb(r.shape,i,a,o,l,c,d,p,m);let E;if(b)E=an({inputs:{x:r},backend:t,attrs:{shape:x}});else if(w||v){B(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const _=Tb($,I,N),z=Nu({inputs:{x:r},backend:t,attrs:{begin:$,size:_}});E=an({inputs:{x:z},backend:t,attrs:{shape:x}}),t.disposeIntermediateTensorInfo(z)}else{const _=t.bufferSync(r),z=W_(g,_,N,$);E=t.makeTensorInfo(x,z.dtype,z.values)}return E}const EQ={kernelName:Kx,backendName:"cpu",kernelFunc:TQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RQ(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:c}=s,{data:d,dataSplits:p}=e,m=t.data.get(d.dataId).values,g=t.data.get(p.dataId).values,[x,b]=G_(m,g,r,i,a,o,l,c);return[t.makeTensorInfo([x.length],"string",x),t.makeTensorInfo(p.shape,"int32",b)]}const AQ={kernelName:Yx,backendName:"cpu",kernelFunc:RQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DQ(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:i,delimiter:a}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=t.data.get(i.dataId).values,l=t.data.get(a.dataId).values[0],[c,d,p]=H_(o,l,r),m=d.length;return[t.makeTensorInfo([m,2],"int32",c),t.makeTensorInfo([m],"string",d),t.makeTensorInfo([2],"int32",new Int32Array(p))]}const _Q={kernelName:S2,backendName:"cpu",kernelFunc:DQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OQ(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=t.data.get(i.dataId).values,o=j_(a,r);return t.makeTensorInfo(i.shape,"int32",o)}const FQ={kernelName:C2,backendName:"cpu",kernelFunc:OQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zQ=Xt(nd,n=>Math.tan(n)),LQ={kernelName:nd,backendName:"cpu",kernelFunc:zQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PQ=Xt(sd,n=>Math.tanh(n)),MQ={kernelName:sd,backendName:"cpu",kernelFunc:PQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BQ(n){const{inputs:e,backend:t}=n,{tensor:s,indices:r,updates:i}=e,{sliceRank:a,numUpdates:o,sliceSize:l,strides:c,outputSize:d}=Sa(i,r,s.shape),p=!1,m=t.bufferSync(r),g=t.bufferSync(i),x=t.bufferSync(s),b=au(m,g,s.shape,d,l,o,a,c,x,p);return t.makeTensorInfo(s.shape,b.dtype,b.values)}const VQ={kernelName:Ux,backendName:"cpu",kernelFunc:BQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:i}=s;Xe(r,"tile");const a=X_(t.bufferSync(r),i);return t.makeTensorInfo(a.shape,a.dtype,a.values)}const WQ={kernelName:rd,backendName:"cpu",kernelFunc:UQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:i,sorted:a}=s;Xe(r,"topk");const o=t.data.get(r.dataId).values,[l,c]=Y_(o,r.shape,r.dtype,i,a);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(c.shape,c.dtype,c.values)]}const HQ={kernelName:Qx,backendName:"cpu",kernelFunc:GQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jQ(n){const{inputs:e,attrs:t,backend:s}=n,{image:r,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:c}=t,[d,p,m,g]=r.shape,[x,b]=c??[p,m],w=[d,x,b,g],v=Qe(r.shape),$=v[0],I=v[1],N=v[2],E=Qe(w),_=E[0],z=E[1],P=E[2],O=Yn(r.dtype,ue(w));O.fill(l);const L=s.data.get(r.dataId).values,D=s.data.get(i.dataId).values;for(let q=0;q<d;++q){const ee=i.shape[0]===1?D:D.subarray(q*8,q*8+8);for(let Z=0;Z<x;++Z)for(let H=0;H<b;++H)for(let oe=0;oe<g;++oe){let se;const de=ee[6]*H+ee[7]*Z+1;if(de===0)continue;const W=(ee[0]*H+ee[1]*Z+ee[2])/de,ne=(ee[3]*H+ee[4]*Z+ee[5])/de,ge=MI(W,m,o),me=MI(ne,p,o);switch(a){case"nearest":se=ZQ(L,p,m,$,I,N,q,me,ge,oe,l);break;case"bilinear":se=JQ(L,p,m,$,I,N,q,me,ge,oe,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const xe=q*_+Z*z+H*P+oe;O[xe]=se}return s.makeTensorInfo(w,r.dtype,O)}return{dataId:s.write(O,w,r.dtype),shape:r.shape,dtype:r.dtype}}const qQ={kernelName:Zx,backendName:"cpu",kernelFunc:jQ};function MI(n,e,t){switch(t){case"reflect":return XQ(n,e);case"wrap":return KQ(n,e);case"nearest":return QQ(n,e);case"constant":default:return YQ(n)}}function XQ(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return pu(0,t,e-1)}function KQ(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return pu(0,t,e-1)}function YQ(n,e){return n}function QQ(n,e){return pu(0,n,e-1)}function Pp(n,e,t,s,r,i,a,o,l,c,d){const p=a*s+o*r+l*i+c;return 0<=o&&o<e&&0<=l&&l<t?n[p]:d}function ZQ(n,e,t,s,r,i,a,o,l,c,d){const p=Math.round(o),m=Math.round(l);return Pp(n,e,t,s,r,i,a,p,m,c,d)}function JQ(n,e,t,s,r,i,a,o,l,c,d){const p=Math.floor(o),m=Math.floor(l),g=p+1,x=m+1,b=(x-l)*Pp(n,e,t,s,r,i,a,p,m,c,d)+(l-m)*Pp(n,e,t,s,r,i,a,p,x,c,d),w=(x-l)*Pp(n,e,t,s,r,i,a,g,m,c,d)+(l-m)*Pp(n,e,t,s,r,i,a,g,x,c,d);return(g-o)*b+(o-p)*w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eZ(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:i}=e;Xe(i,"unique");const a=s.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:c}=Q_(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([c.length],"int32",c)]}const tZ={kernelName:$2,backendName:"cpu",kernelFunc:eZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nZ(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r.shape.length,o=r.shape[i],l=new Array(a-1);let c=0;for(let g=0;g<a;g++)g!==i&&(l[c++]=r.shape[g]);const d=new Array(a).fill(0),p=r.shape.slice();p[i]=1;const m=new Array(o);for(let g=0;g<m.length;g++){d[i]=g;const x=Nu({inputs:{x:r},backend:t,attrs:{begin:d,size:p}});m[g]=an({inputs:{x},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(x)}return m}const sZ={kernelName:um,backendName:"cpu",kernelFunc:nZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:i}=e,{numSegments:a}=s;Xe(r,"unsortedSegmentSum");const o=r.shape.length,l=i.shape.length,c=[],d=[],p=o-l;let m=i;for(let x=0;x<p;++x){const b=jy({inputs:{input:m},backend:t,attrs:{dim:x+1}});m=b,d.push(b)}for(let x=0;x<a;++x){const b=rl(x,"int32"),w=t.makeTensorInfo([],"int32",b),v=d_({inputs:{a:w,b:m},backend:t}),$=nl({inputs:{x:v},backend:t,attrs:{dtype:"float32"}}),I=i0({inputs:{a:$,b:r},backend:t}),N=Rm({inputs:{x:I},backend:t,attrs:{axis:0,keepDims:!1}});c.push(N),d.push(w),d.push(v),d.push($),d.push(I),d.push(N)}const g=pO({inputs:c,backend:t,attrs:{axis:0}});return d.forEach(x=>t.disposeIntermediateTensorInfo(x)),g}const iZ={kernelName:cm,backendName:"cpu",kernelFunc:rZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aZ=[eK,F8,nK,rK,V8,aK,lK,cK,dK,fK,gK,xK,wK,CK,kK,TK,RK,DK,OK,ZX,zK,PK,BK,W8,UK,M8,H8,GK,z8,jK,XK,KK,QK,JK,t7,s7,i7,o7,u7,h7,p7,m7,y7,b7,w7,S7,$7,N7,I7,T7,E7,A7,O7,HX,z7,j8,G7,q8,H7,K8,Q7,Z7,eY,Q8,J8,nY,rY,aY,lY,tX,sX,L8,cY,qK,dY,fY,gY,jX,iX,oX,xY,uX,wY,CY,kY,TY,RY,DY,_Y,hX,FY,LY,MY,VY,WY,HY,qY,pX,KY,ZY,t9,mX,yX,r9,o9,c9,bX,d9,f9,m9,fO,b9,XX,SX,v9,C9,k9,I9,P8,Kv,E9,KX,YX,QX,A9,_9,F9,L9,M9,B9,U9,RX,G9,K9,Q9,tQ,DX,sQ,iQ,oQ,_X,JY,cQ,dQ,fQ,gQ,xQ,wQ,SQ,$Q,zX,kQ,PX,BX,IQ,EQ,AQ,_Q,FQ,GX,D7,LQ,MQ,VQ,WQ,HQ,qQ,wX,tZ,sZ,iZ,p9];for(const n of aZ)k2(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const su={},ty={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function oZ(n,e){su[n]=e}function qi(n,e){if(!(n in su)||e!=null){const s=uZ(n,e);if(s!==null)su[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=su[n];return t==null||t.isContextLost()?(delete su[n],qi(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),su[n])}function lZ(n){if(!pe().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function uZ(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??lZ(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete su[n]},!1),pe().getBool("SOFTWARE_WEBGL_ENABLED")&&(ty.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",ty)||t.getContext("experimental-webgl",ty):t.getContext("webgl2",ty)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var sf;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(sf||(sf={}));var Br;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Br||(Br={}));var ws;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(ws||(ws={}));function Am(n,e){return[e,n]}function cZ(n,e){return n*e}function ny(n){const e=ue(n),t=Math.ceil(e/4);return ov(t)}function dd(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function hZ(n,e){const[t,s]=dd(n,e);return t*s*4}function ZS(n,e){const t=n;let s,r,i,a,o,l,c,d,p,m;return pe().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,i=t.RGBA16F,a=t.RGBA32F,o=t.RED,c=4,d=1,p=t.HALF_FLOAT,m=t.FLOAT,l=t.RGBA8):(s=n.RGBA,r=n.RGBA,i=n.RGBA,a=t.RGBA,o=n.RGBA,c=4,d=4,p=e!=null?e.HALF_FLOAT_OES:null,m=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:m}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ge(n,e){const t=e();return pe().getBool("DEBUG")&&dZ(n),t}function dZ(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+gZ(n,e))}const pZ=596e-10,fZ=65504;function mZ(n){return!!(pe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||pZ<Math.abs(n)&&Math.abs(n)<fZ)}function gZ(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function sy(n,e){return io(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function yZ(n,e){const t=io(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ge(n,()=>n.shaderSource(t,e)),Ge(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function xZ(n,e){const t=io(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ge(n,()=>n.shaderSource(t,e)),Ge(n,()=>n.compileShader(t)),pe().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw mO(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const bZ=/ERROR: [0-9]+:([0-9]+):/g;function mO(n,e){const t=bZ.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],r=n.split(`
`),i=r.length.toString().length+2,a=r.map((p,m)=>Uc((m+1).toString(),i)+p);let o=0;for(let p=0;p<a.length;p++)o=Math.max(a[p].length,o);const l=a.slice(0,s-1),c=a.slice(s-1,s),d=a.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Uc(c[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join(`
`))}function wZ(n){return io(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function vZ(n,e){if(Ge(n,()=>n.linkProgram(e)),!pe().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Gw(n,e){if(Ge(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function SZ(n,e){const t=io(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Ge(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Ge(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function CZ(n,e){const t=io(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Ge(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),Ge(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function $Z(n){return io(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function kZ(n,e){const t=pe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function NZ(n){return io(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function BI(n,e,t,s,r,i,a){const o=n.getAttribLocation(e,t);return o===-1?!1:(Ge(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),Ge(n,()=>n.vertexAttribPointer(o,r,n.FLOAT,!1,i,a)),Ge(n,()=>n.enableVertexAttribArray(o)),!0)}function IZ(n,e,t){DZ(n,t),Ge(n,()=>n.activeTexture(n.TEXTURE0+t)),Ge(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function TZ(n,e,t){return io(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function EZ(n,e,t){return n.getUniformLocation(e,t)}function RZ(n,e,t,s){Ge(n,()=>IZ(n,e,s)),Ge(n,()=>n.uniform1i(t,s))}function Hw(n,e,t){Ge(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Ge(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function VI(n,e){Ge(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Ge(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function ry(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+AZ(n,e))}function AZ(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function io(n,e,t){const s=Ge(n,()=>e());if(s==null)throw new Error(t);return s}function DZ(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function rh(n,e=2){return ue(n.slice(0,n.length-e))}function ih(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function iy(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[rh(n),...ih(n)]),e}function _Z(n,e=!1){let t=pe().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=pe().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&pe().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((o,l)=>l>=n.length-2?c2(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=sl(n).newShape);let r=ue(n),i=null;n.length<=1&&r<=t?i=[1,r]:n.length===2&&n[0]<=t&&n[1]<=t?i=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?i=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?i=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?i=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(i=[n[0],n[1]*n[2]*n[3]]);const a=i!=null&&Math.max(...i)>s&&Math.min(...i)<=(e?2:1)&&Math.min(...i)>0;if(i==null||a)if(e){const o=rh(n);let l=2,c=2;n.length&&([l,c]=ih(n)),r=o*(l/2)*(c/2),i=ov(r).map(d=>d*2)}else i=ov(r);return i}function ay(n){return n%2===0}function Xy(n,e){if(n=n.slice(-2),e=e.slice(-2),yt(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||ay(t)&&ay(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&ay(n[0])&&ay(e[0])}let jw,qw;function OZ(n){if(jw==null){const e=qi(n);jw=e.getParameter(e.MAX_TEXTURE_SIZE)}return jw}function FZ(n){if(qw==null){const e=qi(n);qw=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,qw)}function zZ(n){if(n===0)return 0;let e;const t=qi(n);return gi(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:gi(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function gi(n,e){return n.getExtension(e)!=null}function UI(n){try{if(qi(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function LZ(n){if(n===0)return!1;const e=qi(n);if(n===1){if(!gi(e,"OES_texture_float"))return!1}else if(!gi(e,"EXT_color_buffer_float"))return!1;return Qv(e)}function PZ(n){if(n===0)return!1;const e=qi(n);if(n===1){if(!gi(e,"OES_texture_float")||!gi(e,"WEBGL_color_buffer_float"))return!1}else{if(gi(e,"EXT_color_buffer_float"))return Qv(e);const s="EXT_color_buffer_half_float";if(gi(e,s)){const r=e.getExtension(s);return MZ(e,r)}return!1}return Qv(e)}function Qv(n){const e=ZS(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(i),a}function MZ(n,e){const t=ZS(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const o=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(a),o}function BZ(n){return n!==2?!1:qi(n).fenceSync!=null}function Dm(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&B(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ye=pe();Ye.registerFlag("HAS_WEBGL",()=>Ye.getNumber("WEBGL_VERSION")>0);Ye.registerFlag("WEBGL_VERSION",()=>UI(2)?2:UI(1)?1:0);Ye.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ye.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ye.get("WEBGL_VERSION")===2);Ye.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ye.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ye.registerFlag("WEBGL_PACK",()=>Ye.getBool("HAS_WEBGL"));Ye.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ye.getBool("WEBGL_PACK"));Ye.registerFlag("WEBGL_PACK_CLIP",()=>Ye.getBool("WEBGL_PACK"));Ye.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ye.getBool("WEBGL_PACK"));Ye.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ye.getBool("WEBGL_PACK"));Ye.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ye.getBool("WEBGL_PACK"));Ye.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ye.getBool("WEBGL_PACK"));Ye.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ye.getBool("WEBGL_PACK"));Ye.registerFlag("WEBGL_PACK_REDUCE",()=>Ye.getBool("WEBGL_PACK"));Ye.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ye.getBool("WEBGL_PACK"));Ye.registerFlag("WEBGL_CONV_IM2COL",()=>Ye.getBool("WEBGL_PACK"));Ye.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Ye.getBool("WEBGL_PACK"));Ye.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>OZ(Ye.getNumber("WEBGL_VERSION")));Ye.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>FZ(Ye.getNumber("WEBGL_VERSION")));Ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Ye.getNumber("WEBGL_VERSION");return n===0?0:zZ(n)});Ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ye.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!CE());Ye.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>LZ(Ye.getNumber("WEBGL_VERSION")));Ye.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ye.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ye.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ye.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>PZ(Ye.getNumber("WEBGL_VERSION")));Ye.registerFlag("WEBGL_FENCE_API_ENABLED",()=>BZ(Ye.getNumber("WEBGL_VERSION")));Ye.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ye.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ye.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Ye.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>CE()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Ye.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ye.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ye.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ye.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ye.registerFlag("WEBGL_EXP_CONV",()=>!1);Ye.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ye.getBool("IS_TEST"));Ye.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Ye.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Ye.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Ye.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ys(){let n,e,t,s,r,i,a,o,l,c;return pe().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",i="outputColor",a="out vec4 outputColor;",o=pe().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",i="gl_FragColor",a="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pu(n,e,t="index"){const s=Qe(e);return s.map((r,i)=>{const a=`int ${n[i]} = ${t} / ${r}`,o=i===s.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${r}`:`index -= ${n[i]} * ${r}`;return`${a}; ${o};`}).join("")}function a0(n,e,t="index"){const s=Qe(e);return s.map((r,i)=>{const a=`int ${n[i]} = ${t} / outShapeStrides[${i}]`,o=i===s.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * outShapeStrides[${i}]`:`index -= ${n[i]} * outShapeStrides[${i}]`;return`${a}; ${o};`}).join("")}function VZ(n,e){const t=n.length,s=n.map(i=>`${e}[${i}]`),r=new Array(t-1);r[t-2]=s[t-1];for(let i=t-3;i>=0;--i)r[i]=`(${r[i+1]} * ${s[i+1]})`;return r}function UZ(n,e,t="index"){const s=n.map((i,a)=>a),r=VZ(s,e);return r.map((i,a)=>{const o=`int ${n[a]} = ${t} / ${r[a]}`,l=a===r.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${r[a]}`:`index -= ${n[a]} * ${r[a]}`;return`${o}; ${l};`}).join("")}function JS(n){const e=Qe(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function eC(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const gO=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:yO}=aH;function WZ(n,e,t){const s=[];if(n.forEach(g=>{const x=ue(g.shapeInfo.logicalShape);if(g.shapeInfo.isUniform?s.push(`uniform float ${g.name}${x>1?`[${x}]`:""};`):(s.push(`uniform sampler2D ${g.name};`),s.push(`uniform int offset${g.name};`)),t.enableShapeUniforms){const{uniformShape:b}=tC(t.packedInputs,g.shapeInfo.logicalShape,g.shapeInfo.texShape);switch(b.length){case 1:s.push(`uniform int ${g.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${g.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${g.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${g.name}Shape;`);break}s.push(`uniform ivec2 ${g.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(g=>{s.push(`uniform ${g.type} ${g.name}${g.arrayIndex?`[${g.arrayIndex}]`:""};`)});const r=s.join(`
`),i=n.map(g=>GZ(g,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,o=Ys(),l=qZ(o);let c,d,p=YZ(o);return e.isPacked?(c=HZ(e.logicalShape,a,t.enableShapeUniforms),d=KZ(o)):(c=jZ(e.logicalShape,a,t.enableShapeUniforms),d=XZ(o)),t.packedInputs&&(p+=eJ),[p,l,d,r,c,i,t.userCode].join(`
`)}function pd(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return dJ(n,e);case 1:return fJ(n,e);case 2:return gJ(n,e);case 3:return xJ(n,e);case 4:return wJ(n,e);case 5:return vJ(n);case 6:return SJ(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function xO(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return hJ(n);case 1:return pJ(n,e);case 2:return mJ(n,e);case 3:return yJ(n,e);default:return bJ(n,e)}}function GZ(n,e,t=!1,s){let r="";t?r+=xO(n,s):r+=pd(n,s);const i=n.shapeInfo.logicalShape,a=e.logicalShape;return i.length<=a.length&&(t?r+=CJ(n,e):r+=$J(n,e)),r}function HZ(n,e,t){switch(n.length){case 0:return bO();case 1:return tJ(n,e,t);case 2:return uJ(n,e,t);case 3:return sJ(n,e,t);default:return iJ(n,e,t)}}function jZ(n,e,t){switch(n.length){case 0:return bO();case 1:return nJ(n,e,t);case 2:return cJ(n,e,t);case 3:return rJ(n,e,t);case 4:return aJ(n,e,t);case 5:return oJ(n,e);case 6:return lJ(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function qZ(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function XZ(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function KZ(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function YZ(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${QZ}
    ${ZZ}
    ${JZ}
  `}const QZ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,ZZ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,JZ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,eJ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function bO(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function tJ(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function nJ(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function sJ(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[2]/2),i=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function rJ(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${a0(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Pu(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function iJ(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[n.length-1]/2),i=r*Math.ceil(n[n.length-2]/2);let a=i,o="",l="b, r, c";for(let c=2;c<n.length-1;c++)a*=n[n.length-c-1],o=`
      int b${c} = index / ${a};
      index -= b${c} * ${a};
    `+o,l=`b${c}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${o}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${l});
    }
  `}function aJ(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${a0(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Pu(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function oJ(n,e){const t=Pu(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function lJ(n,e){const t=Pu(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function uJ(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(yt(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function cJ(n,e,t){return yt(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Mu(n){return`offset${n}`}function hJ(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Ys();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function dJ(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[r,i]=n.shapeInfo.texShape;if(r===1&&i===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Mu(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[o,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function pJ(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,i=Ys();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${i.texture2D}(${t}, uv);
    }
  `}function fJ(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${fd(n)}
      }
    `;const r=n.shapeInfo.texShape,i=r[0],a=r[1];if(a===1&&i===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const o=Mu(t);return a===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);
        return sampleTexture(${t}, uv);
      }
    `:i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${o});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});
      return sampleTexture(${t}, uv);
    }
  `}function mJ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape,a=i[0],o=i[1],l=Ys();if(i!=null&&yt(t,i))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],d=Math.ceil(t[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function gJ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape;if(i!=null&&yt(t,i)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const m=i[0],g=i[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${g}.0, ${m}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:a,keptDims:o}=sl(t),l=a;if(l.length<t.length){const m=md(n,l),g=["row","col"];return`
      ${pd(m,e)}
      float ${r}(int row, int col) {
        return ${r}(${gd(g,o)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${fd(n)}
      }
    `;const c=i[0],d=i[1],p=Mu(s);return d===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${p};
    vec2 uv = uvFromFlat(${c}, ${d}, index);
    return sampleTexture(${s}, uv);
  }
`}function yJ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(t[0]===1){const m=t.slice(1),g=[1,2],x=md(n,m),b=["b","row","col"];return`
        ${xO(x,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${gd(b,g)});
        }
      `}const o=Ys();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `;const l=a[0],c=a[1],d=Math.ceil(t[2]/2),p=d*Math.ceil(t[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${p}, ${d}, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `}function xJ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t[1]*t[2],a=t[2],{newShape:o,keptDims:l}=sl(t),c=o;if(c.length<t.length){const b=md(n,c),w=["row","col","depth"];return`
        ${pd(b,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${gd(w,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${a}, 1)));
        ${fd(n)}
      }
    `;const d=n.shapeInfo.texShape,p=d[0],m=d[1],g=n.shapeInfo.flatOffset;if(m===i&&g==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${p}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(m===a&&g==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `;const x=Mu(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${x};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${a} + depth + ${x};
        vec2 uv = uvFromFlat(${p}, ${m}, index);
        return sampleTexture(${s}, uv);
      }
  `}function bJ(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Ys();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${t}, uv);
    }
  `;const i=n.shapeInfo.logicalShape,a=i.length,o=n.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=l[0],d=l[1],p=Math.ceil(i[a-1]/2);let m=p*Math.ceil(i[a-2]/2),g="int b, int row, int col",x=`b * ${m} + (row / 2) * ${p} + (col / 2)`;for(let b=2;b<a-1;b++)g=`int b${b}, `+g,m*=i[a-b-1],x=`b${b} * ${m} + `+x;return`
    vec4 ${s}(${g}) {
      int index = ${x};
      int texR = index / ${d};
      int texC = index - texR * ${d};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${c});
      return ${r.texture2D}(${t}, uv);
    }
  `}function wJ(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t[3],a=t[2]*i,o=t[1]*a,{newShape:l,keptDims:c}=sl(t);if(l.length<t.length){const $=md(n,l),I=["row","col","depth","depth2"];return`
      ${pd($,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${gd(I,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${a}, ${i}, 1)));
        ${fd(n)}
      }
    `;const d=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,m=p[0],g=p[1],x=`int stride2 = ${s}Shape[3];`,b=`int stride1 = ${s}Shape[2] * stride2;`,w=`int stride0 = ${s}Shape[1] * stride1;`;if(g===o&&d==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${x}
        ${b}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${g}.0, ${m}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(g===i&&d==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${g}.0, ${m}.0);
        return sampleTexture(${s}, uv);
      }
    `;const v=Mu(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${x}
      ${b}
      ${w}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${v});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${a} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${m}, ${g}, index + ${v});
      return sampleTexture(${s}, uv);
    }
  `}function vJ(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],i=e[3]*r,a=e[2]*i,o=e[1]*a,{newShape:l,keptDims:c}=sl(e);if(l.length<e.length){const b=md(n,l),w=["row","col","depth","depth2","depth3"];return`
      ${pd(b)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${gd(w,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${a}, ${i}, ${r})) +
          depth3;
        ${fd(n)}
      }
    `;const d=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,m=p[0],g=p[1];if(g===o&&d==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${g}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(g===r&&d==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${g}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;const x=Mu(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${a} + depth * ${i} +
          depth2 * ${r} + depth3 + ${x};
      vec2 uv = uvFromFlat(${m}, ${g}, index);
      return sampleTexture(${t}, uv);
    }
  `}function SJ(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:i}=sl(e);if(r.length<e.length){const w=md(n,r),v=["row","col","depth","depth2","depth3","depth4"];return`
      ${pd(w)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${gd(v,i)});
      }
    `}const a=e[5],o=e[4]*a,l=e[3]*o,c=e[2]*l,d=e[1]*c;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${d}, ${c}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${fd(n)}
      }
    `;const p=n.shapeInfo.flatOffset,m=n.shapeInfo.texShape,g=m[0],x=m[1];if(x===d&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${o}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${x}.0, ${g}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(x===a&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${x}.0, ${g}.0);
        return sampleTexture(${t}, uv);
      }
    `;const b=Mu(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${d} + col * ${c} + depth * ${l} +
          depth2 * ${o} + depth3 * ${a} + depth4 + ${b};
      vec2 uv = uvFromFlat(${g}, ${x}, index);
      return sampleTexture(${t}, uv);
    }
  `}function fd(n){const e=n.name,t=ue(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function CJ(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",i=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=yO(n.shapeInfo.logicalShape,e.logicalShape),l=Yt(a),c=a-i;let d;const p=["x","y","z","w","u","v"];i===0?d="":a<2&&o.length>=1?d="coords = 0;":d=o.map($=>`coords.${p[$+c]} = 0;`).join(`
`);let m="";a<2&&i>0?m="coords":m=n.shapeInfo.logicalShape.map(($,I)=>`coords.${p[I+c]}`).join(", ");let g="return outputValue;";const b=ue(n.shapeInfo.logicalShape)===1,v=ue(e.logicalShape)===1;if(i===1&&!b&&!v)g=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(b&&!v)a===1?g=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:g=`
        return vec4(outputValue.x);
      `;else if(o.length){const $=i-2,I=i-1;o.indexOf($)>-1&&o.indexOf(I)>-1?g="return vec4(outputValue.x);":o.indexOf($)>-1?g="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(I)>-1&&(g="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${d}
      vec4 outputValue = get${s}(${m});
      ${g}
    }
  `}function $J(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",i=e.texShape,a=n.shapeInfo.texShape,o=n.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!n.shapeInfo.isUniform&&o===l&&n.shapeInfo.flatOffset==null&&yt(a,i))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const c=Yt(l),d=yO(n.shapeInfo.logicalShape,e.logicalShape),p=l-o;let m;const g=["x","y","z","w","u","v"];o===0?m="":l<2&&d.length>=1?m="coords = 0;":m=d.map(b=>`coords.${g[b+p]} = 0;`).join(`
`);let x="";return l<2&&o>0?x="coords":x=n.shapeInfo.logicalShape.map((b,w)=>`coords.${g[w+p]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${m}
      return get${s}(${x});
    }
  `}function Yt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function tC(n,e,t){const{newShape:s,keptDims:r}=sl(e),i=e.length,a=n&&i===3&&e[0]===1,o=a?e.slice(1):s,l=!n&&i>1&&!yt(e,t)&&s.length<i||a;return{useSqueezeShape:l,uniformShape:l?o:e,keptDims:r}}function md(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function gd(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kJ(n,e,t,s){const r=t.map((d,p)=>{const m={logicalShape:d.shape,texShape:d.isUniform?null:d.texData.texShape,isUniform:d.isUniform,isPacked:d.isUniform?!1:d.texData.isPacked,flatOffset:null};return d.texData!=null&&d.texData.slice!=null&&d.texData.slice.flatOffset>0&&(m.flatOffset=d.texData.slice.flatOffset),{name:e.variableNames[p],shapeInfo:m}}),i=r.map(d=>d.shapeInfo),a={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=WZ(r,a,e),l=xZ(n.gl,o),c=n.createProgram(l);return pe().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:o,webGLProgram:c,inShapeInfos:i,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(c),Object.assign({program:e,fragmentShader:l,source:o,webGLProgram:c,inShapeInfos:i,outShapeInfo:a},wO(n,e,c)))}function wO(n,e,t){const s=[],r=[];let i,a,o,l=null,c=null;c=n.getUniformLocation(t,"NAN",!1),pe().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const d=!1;for(const p of e.variableNames){const m={name:p,uniform:n.getUniformLocation(t,p,d),offset:n.getUniformLocation(t,`offset${p}`,d)};e.enableShapeUniforms&&(m.shape=n.getUniformLocation(t,`${p}Shape`,d),m.texShape=n.getUniformLocation(t,`${p}TexShape`,d)),s.push(m)}if(e.enableShapeUniforms&&(i=n.getUniformLocation(t,"outShape",d),o=n.getUniformLocation(t,"outShapeStrides",d),a=n.getUniformLocation(t,"outTexShape",d)),e.customUniforms)for(const p of e.customUniforms)r.push(n.getUniformLocation(t,p.name,d));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:c,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:a}}function WI(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,i=e[s],a=i.shape;if(!yt(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(t.isUniform&&i.isUniform)return;const o=t.texShape,l=i.isUniform?null:i.texData.texShape;if(!yt(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function NJ(n,e,t,s,r){e.program.enableShapeUniforms||(WI(e.inShapeInfos,t),WI([e.outShapeInfo],[s]));const i=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(i.texture,a[0],a[1]):n.setOutputMatrixTexture(i.texture,a[0],a[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),pe().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){const c=t[l],{uniform:d,offset:p,shape:m,texShape:g}=e.variablesLocations[l];if(m){const{uniformShape:x}=tC(e.program.packedInputs,c.shape,c.texData.texShape);switch(x.length){case 1:n.gl.uniform1iv(m,new Int32Array(x));break;case 2:n.gl.uniform2iv(m,new Int32Array(x));break;case 3:n.gl.uniform3iv(m,new Int32Array(x));break;case 4:n.gl.uniform4iv(m,new Int32Array(x));break}}if(g&&n.gl.uniform2i(g,c.texData.texShape[0],c.texData.texShape[1]),d!=null){if(c.isUniform){if(ue(c.shape)<2)n.gl.uniform1f(d,c.uniformValues[0]);else{let x=c.uniformValues;x instanceof Float32Array||(x=new Float32Array(x)),n.gl.uniform1fv(d,x)}continue}c.texData.slice!=null&&p!=null&&n.gl.uniform1i(p,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,d,l)}}const o=e.outShapeLocation;if(o)switch(s.shape.length){case 1:n.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(o,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=Qe(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r)for(let l=0;l<e.program.customUniforms.length;++l){const c=e.program.customUniforms[l],d=e.customUniformLocations[l],p=r[l];if(c.type==="float")n.gl.uniform1fv(d,p);else if(c.type==="vec2")n.gl.uniform2fv(d,p);else if(c.type==="vec3")n.gl.uniform3fv(d,p);else if(c.type==="vec4")n.gl.uniform4fv(d,p);else if(c.type==="int")n.gl.uniform1iv(d,p);else if(c.type==="ivec2")n.gl.uniform2iv(d,p);else if(c.type==="ivec3")n.gl.uniform3iv(d,p);else if(c.type==="ivec4")n.gl.uniform4iv(d,p);else throw Error(`uniform type ${c.type} is not supported yet.`)}n.executeProgram()}function IJ(n,e,t){let s="";e.concat(t).forEach(a=>{const o=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const l=a.texData.texShape,{useSqueezeShape:c,uniformShape:d,keptDims:p}=tC(n.packedInputs,a.shape,l);let m="",g="",x="";if(d.length===1&&n.packedInputs){const E=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];m=`${E[0]>1}_${E[1]>1}`}else if(d.length===2&&!n.packedInputs)g=`${d[0]>1}_${d[1]>1}`;else if(d.length>2&&!n.packedInputs){const E=Qe(d);x=`${E[0]===l[1]}_${E[E.length-1]===l[1]}`}const b=a.shape.length,w=d.length===2&&yt(a.shape,l),v=ue(a.shape)===1,$=Yo(a.shape,t.shape),I=!n.packedInputs&&b===t.shape.length&&yt(l,t.texData.texShape),N=n.packedInputs||d.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${b}_${I}_${c?p:""}_${d.length}_${v}_${$}_${w}_${m}_${g}_${x}_${N}_${o}`}else{const l=a.isUniform?"uniform":a.texData.texShape;s+=`${a.shape}_${l}_${o}`}});const r=n.userCode;let i=n.constructor.name;return i+="_"+s+"_"+r+`${pe().getNumber("WEBGL_VERSION")}`,i}function _s(n){return pe().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TJ{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=sf.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Ys();this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?a0(["r","c","d"],e):Pu(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EJ{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=sf.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Ys();this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?a0(["r","c","d"],e):Pu(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RJ{constructor(e){this.variableNames=["A"],this.outTexUsage=Br.DOWNLOAD;const t=Ys();this.outputShape=e,this.userCode=`
      ${gO}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AJ{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Br.DOWNLOAD;const t=Ys();this.outputShape=e,this.userCode=`
      ${gO}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DJ={R:0,G:1,B:2,A:3};class GI{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Ys();this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length);let i="result";t&&(i="floor(result * 255. + 0.5)");let a="";for(let o=0;o<s.length;o++){const l=s[o];a+=`
          if(offset == ${o}) {
            result = values[${DJ[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?eC():JS(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${a}
        }
        ${r.output} = vec4(${i}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _J{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Ys();this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length);let r="",i="result";t&&(i="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){const l=a*2+o;r+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?eC():JS(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${i};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OJ(n){const e=Ys(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return yZ(n,t)}function FJ(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return SZ(n,e)}function zJ(n){const e=new Uint16Array([0,1,2,2,1,3]);return CZ(n,e)}function _m(n,e,t,s,r,i){kZ(e,t);const a=$Z(n),o=n.TEXTURE_2D;return Ge(n,()=>n.bindTexture(o,a)),Ge(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Ge(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Ge(n,()=>n.texParameteri(o,n.TEXTURE_MIN_FILTER,n.NEAREST)),Ge(n,()=>n.texParameteri(o,n.TEXTURE_MAG_FILTER,n.NEAREST)),pe().getNumber("WEBGL_VERSION")===1?Ge(n,()=>n.texImage2D(o,0,s,e,t,0,r,i,null)):Ge(n,()=>n.texStorage2D(o,1,s,e,t)),Ge(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function vO(n){return n.internalFormatFloat}function LJ(n,e,t,s){const[r,i]=Am(e,t);return _m(n,r,i,vO(s),s.textureFormatFloat,n.FLOAT)}function SO(n){return n.internalFormatHalfFloat}function PJ(n,e,t,s){const[r,i]=Am(e,t);return _m(n,r,i,SO(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function CO(n){return n.downloadTextureFormat}function MJ(n,e,t,s){const[r,i]=Am(e,t);return _m(n,r,i,CO(s),n.RGBA,n.UNSIGNED_BYTE)}function $O(n){return n.internalFormatPackedFloat}function BJ(n,e,t,s){const[r,i]=dd(e,t);return _m(n,r,i,$O(s),n.RGBA,n.FLOAT)}function kO(n){return n.internalFormatPackedHalfFloat}function VJ(n,e,t,s){const[r,i]=dd(e,t);return _m(n,r,i,kO(s),n.RGBA,s.textureTypeHalfFloat)}function UJ(n,e,t){return Ge(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),BI(n,e,"clipSpacePos",t,3,20,0)&&BI(n,e,"uv",t,2,20,12)}function WJ(n,e,t,s,r,i){Ge(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,o,l;r instanceof Uint8Array?(a=new Uint8Array(t*s*4),o=n.UNSIGNED_BYTE,l=n.RGBA):(a=new Float32Array(t*s*4),o=n.FLOAT,l=i.internalFormatPackedFloat),a.set(r),pe().getNumber("WEBGL_VERSION")===2?Ge(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,o,a)):Ge(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,t,s,0,n.RGBA,o,a)),Ge(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function GJ(n,e,t){Ge(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?pe().getNumber("WEBGL_VERSION")===2?Ge(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):Ge(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):pe().getNumber("WEBGL_VERSION")===2?Ge(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):Ge(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),Ge(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function HJ(n,e,t,s){const r=n.createBuffer();Ge(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const o=4*4*e*t;return Ge(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,o,n.STREAM_READ)),Ge(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),Ge(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function jJ(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function qJ(n,e,t,s){const[r,i]=Am(e,t),a=4,o=new Uint8Array(cZ(e*t,a));return Ge(n,()=>n.readPixels(0,0,r,i,s.downloadTextureFormat,n.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function XJ(n,e,t,s,r,i,a,o){const l=n,c=new Float32Array(hZ(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function KJ(n,e,t){const s=new Float32Array(e*t*4);return Ge(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xw{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=pe().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,oZ(t,e)):this.gl=qi(t),e=this.gl,pe().getNumber("WEBGL_VERSION")===2){const i=e;this.createVertexArray=()=>Ge(i,()=>i.createVertexArray()),this.bindVertexArray=a=>Ge(i,()=>i.bindVertexArray(a)),this.deleteVertexArray=a=>Ge(i,()=>i.deleteVertexArray(a)),this.getVertexArray=()=>Ge(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(e!=null){const i=e.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Ge(e,()=>i.createVertexArrayOES()),this.bindVertexArray=a=>Ge(e,()=>i.bindVertexArrayOES(a)),this.deleteVertexArray=a=>Ge(e,()=>i.deleteVertexArrayOES(a)),this.getVertexArray=()=>Ge(e,()=>e.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),pe().getNumber("WEBGL_VERSION")===1){const i="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=sy(this.gl,i),gi(this.gl,a))this.textureHalfFloatExtension=sy(this.gl,a);else if(pe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),gi(this.gl,r))this.colorBufferHalfFloatExtension=sy(this.gl,r);else if(pe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",gi(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(gi(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=FJ(this.gl),this.indexBuffer=zJ(this.gl),this.framebuffer=NZ(this.gl),this.textureConfig=ZS(this.gl,this.textureHalfFloatExtension)}get debug(){return pe().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Ge(e,()=>e.finish()),Ge(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ge(e,()=>e.deleteFramebuffer(this.framebuffer)),Ge(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Ge(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Ge(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),LJ(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),PJ(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),MJ(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),GJ(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),WJ(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),VJ(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),BJ(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(VI(this.gl,this.framebuffer),this.outputTexture=null),Ge(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>qJ(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,i,a){return XJ(this.gl,e,t,s,r,i,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return jJ(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=HJ(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(pe().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,i=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const a=r.clientWaitSync(i,0,0);return a===r.ALREADY_SIGNALED||a===r.CONDITION_SATISFIED},t=i}else pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>KJ(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=OJ(t));const s=wZ(t);Ge(t,()=>t.attachShader(s,this.vertexShader)),Ge(t,()=>t.attachShader(s,e)),vZ(t,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Gw(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;Ge(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),UJ(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(Ge(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Gw(this.gl,this.program),Ge(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?TZ(this.gl,e,t):EZ(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Ge(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),RZ(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,i]=dd(t,s);this.setOutputMatrixTextureDriver(e,r,i)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Gw(this.gl,this.program),ry(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Ge(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ge(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=sy(this.gl,pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,i),i}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await wN(()=>this.disposed||this.isQueryAvailable(e,pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=YJ(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in pe().platform&&(s=pe().platform.setTimeoutCustom.bind(pe().platform)),wN(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Hw(this.gl,e,this.framebuffer),this.debug&&ry(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Hw(this.gl,this.outputTexture,this.framebuffer),this.debug&&ry(this.gl)):VI(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;Hw(r,e,this.framebuffer),this.debug&&ry(r),this.outputTexture=e,Ge(r,()=>r.viewport(0,0,t,s)),Ge(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),Ge(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function YJ(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:QJ,bincountImpl:NO,bincountReduceImpl:ZJ,bitwiseAndImpl:JJ,castImpl:eee,ceilImpl:tee,concatImpl:nee,equalImpl:see,expImpl:ree,expm1Impl:iee,floorImpl:aee,gatherNdImpl:oee,gatherV2Impl:lee,greaterImpl:uee,greaterEqualImpl:cee,lessImpl:hee,lessEqualImpl:dee,linSpaceImpl:pee,logImpl:fee,maxImpl:mee,maximumImpl:gee,minimumImpl:yee,multiplyImpl:xee,negImpl:bee,notEqualImpl:wee,prodImpl:vee,raggedGatherImpl:See,raggedRangeImpl:Cee,raggedTensorToTensorImpl:$ee,rangeImpl:kee,rsqrtImpl:Nee,scatterImpl:Iee,sigmoidImpl:Tee,simpleAbsImpl:IO,sliceImpl:Eee,sparseFillEmptyRowsImpl:Ree,sparseReshapeImpl:Aee,sparseSegmentReductionImpl:TO,sqrtImpl:Dee,staticRegexReplaceImpl:_ee,stridedSliceImpl:Oee,stringNGramsImpl:Fee,stringSplitImpl:zee,stringToHashBucketFastImpl:Lee,subImpl:Pee,tileImpl:Mee,topKImpl:Bee,transposeImpl:nC,uniqueImpl:Vee}=Z_;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function Hs(n,e){return e===1?[n]:EO(n,e)}function Uee(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wee{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=_s(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=Hs("rc",this.rank),s=Yt(this.rank),r=this.getOutOfBoundsCondition(t),i=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let i=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)i=`${e[e.length-1-a]},`+i;t.push(i)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length);let s="";for(let r=0;r<4;r++){let i="thisRC = rc;";r%2===1&&(i+="thisRC.z += 1;"),r>1&&(i+="thisRC.y += 1;"),s+=`
        ${i}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${Gee(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?eC():JS(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function Gee(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?UZ(["r","c","d"],"inputShape"):Pu(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Hee=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const r=jI(t,s),i=qI(e,r,s);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const a=HI(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const l=this.freeTextures[i].pop();return this.usedTextures[i].push(l),l}let o;return r===ws.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===ws.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===ws.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===ws.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===ws.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const i=jI(s,r),a=qI(t,i,r);a in this.freeTextures||(this.freeTextures[a]=[]);const o=HI(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=pe().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const c=this.usedTextures[a],d=c&&c.indexOf(e);if(d==null||d<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[d]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function jee(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function HI(n,e,t,s,r){const i=qee(e,s);let a;if(r){const[l,c]=dd(n[0],n[1]);a=l*c}else{const[l,c]=Am(n[0],n[1]);a=l*c}const o=jee(t,i);return a*o}function qee(n,e){switch(n){case ws.PACKED_2X2_FLOAT32:return $O(e);case ws.PACKED_2X2_FLOAT16:return kO(e);case ws.UNPACKED_FLOAT32:return vO(e);case ws.UNPACKED_FLOAT16:return SO(e);case ws.PACKED_4X1_UNSIGNED_BYTE:return CO(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function Xee(n){return pe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?ws.PACKED_2X2_FLOAT32:ws.UNPACKED_FLOAT32:n?ws.PACKED_2X2_FLOAT16:ws.UNPACKED_FLOAT16}function jI(n,e){if(n===Br.UPLOAD)return ws.PACKED_2X2_FLOAT32;if(n===Br.RENDER||n==null)return Xee(e);if(n===Br.DOWNLOAD||n===Br.PIXELS)return ws.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function qI(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ca=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}};const $i="if (isnan(x)) return x;",Kee="return x;",XI="return abs(x);",Yee="return (x >= 0.0) ? x : (exp(x) - 1.0);",Qee=$i+`
  return (x < 0.0) ? 0.0 : x;
`,Zee=$i+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Po="return x;",Jee="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ete="return x;",tte=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,nte=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ste=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,rte="return 1.0 / (1.0 + exp(-1.0 * x));";class Vo{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ite{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length);const t=e.length,s=Hs("rc",t),r=Yt(t),i=Uee(t,s),a=s.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ate=aS,ote=1e-7,lte=1e-4,oy={};function ute(n){return n in oy||(oy[n]={}),oy[n]}const cte=pe().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),hte=600;function dte(){return pe().global.screen==null?1024:pe().global.screen.height*pe().global.screen.width*window.devicePixelRatio*hte/1024/1024}class o0 extends nx{nextDataId(){return o0.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!pe().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Xw)t=e;else{const s=qi(pe().getNumber("WEBGL_VERSION"),e);t=new Xw(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=qi(pe().getNumber("WEBGL_VERSION"));t=new Xw(s),this.binaryCache=ute(pe().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Hee(this.gpgpu),this.numMBBeforeWarning=dte(),this.texData=new u2(this,os())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,r,i,a){const o=this.makeTensorInfo(t,s),l=this.texData.get(o.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[r,i]},l.texShape=[r,i];const c=iy(t),d=new GI(c,!1,a),p=this.runWebGLProgram(d,[o],s,[[r,i]]);return p.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(o),p.dataId}write(e,t,s){if((pe().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||pe().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:Br.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,r,i){if(pe().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:Br.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:i,slice:a,shape:o,isPacked:l}=t;if(a!=null){let m;l?m=new Vo(o,Po):m=new ca(o,Po);const g=this.runWebGLProgram(m,[{dataId:e,shape:o,dtype:r}],r),x=this.readSync(g.dataId);return this.disposeIntermediateTensorInfo(g),x}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const c=this.activeTimers!=null;let d;c&&(d=ar());let p;if(r==="complex64"){const m=this.readSync(i.real.dataId),g=this.readSync(i.imag.dataId);p=Wi(m,g)}else p=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=ar()-d),this.convertAndCacheOnCPU(e,p)}async read(e){if(this.pendingRead.has(e)){const x=this.pendingRead.get(e);return new Promise(b=>x.push(b))}const t=this.texData.get(e),{values:s,shape:r,slice:i,dtype:a,complexTensorInfos:o,isPacked:l}=t;if(i!=null){let x;l?x=new Vo(r,Po):x=new ca(r,Po);const b=this.runWebGLProgram(x,[{dataId:e,shape:r,dtype:a}],a),w=this.read(b.dataId);return this.disposeIntermediateTensorInfo(b),w}if(s!=null)return this.convertAndCacheOnCPU(e);if(pe().getBool("DEBUG")&&!pe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&pe().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,d;if(a!=="complex64"&&pe().get("WEBGL_BUFFER_SUPPORTED")){d=this.decode(e);const x=this.texData.get(d.dataId);c=this.gpgpu.createBufferFromTexture(x.texture.texture,...ny(r))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(a==="complex64"){const x=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),b=x[0],w=x[1];p=Wi(b,w)}else if(c==null)p=this.getValuesFromTexture(e);else{const x=ue(r);p=this.gpgpu.downloadFloat32MatrixFromBuffer(c,x)}if(d!=null&&this.disposeIntermediateTensorInfo(d),c!=null){const x=this.gpgpu.gl;Ge(x,()=>x.deleteBuffer(c))}const m=this.convertAndCacheOnCPU(e,p),g=this.pendingRead.get(e);return this.pendingRead.delete(e),g.forEach(x=>x(m)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&os().removeDataId(e,this),this.pendingDeletes--),m}readToGPU(e,t={}){const s=this.texData.get(e),{values:r,shape:i,slice:a,dtype:o,isPacked:l,texture:c}=s;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let g;l?g=new Vo(i,Po):g=new ca(i,Po);const x=this.runWebGLProgram(g,[{dataId:e,shape:i,dtype:o}],o),b=this.readToGPU(x,t);return this.disposeIntermediateTensorInfo(x),b}if(c==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const d=this.decode(e,t.customTexShape),p=os().makeTensorFromTensorInfo(d),m=this.texData.get(d.dataId);return Object.assign({tensorRef:p},m.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Bi(r));return dt(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return dt(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!mZ(s))throw pe().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),i=ue(t);if(pe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const m=this.decode(e),g=this.texData.get(m.dataId),x=this.gpgpu.downloadMatrixFromPackedTexture(g.texture.texture,...ny(t)).subarray(0,i);return this.disposeIntermediateTensorInfo(m),x}const a=pe().getBool("WEBGL_PACK")&&r===!0,o=a?iy(t):t,l=a?new AJ(o):new RJ(o),c=this.runWebGLProgram(l,[{shape:o,dtype:s,dataId:e}],"float32"),d=this.texData.get(c.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(d.texture.texture,d.texShape[0],d.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(c),p}timerAvailable(){return pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const i=eo(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=eo(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(i);o.kernelMs=aE(l),o.getExtraProfileInfo=()=>l.map((c,d)=>({name:a[d],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ar(),endMs:null}}endTimer(e){return pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ar(),e)}async getQueryTime(e){if(pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:i,isPacked:a,slice:o}=this.texData.get(e),l=o&&o.origDataId||e,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,i,a)));const d=this.texData.get(e);d.texture=null,d.texShape=null,d.isPacked=!1,d.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=cte){return pe().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&ue(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Mr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return ate(e.shape,t)}packedUnaryOp(e,t,s){const r=new Vo(e.shape,t),i=this.compileAndRun(r,[e],s);return os().makeTensorFromTensorInfo(i)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=IO(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(pe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,XI,e.dtype);const t=new ca(e.shape,XI),s=this.compileAndRun(t,[e]);return os().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&uh(s[0])){const i=s.map(a=>Ya(a));r=this.write(i,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){return os().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new ite(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Wee(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[rh(e.shape),...ih(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},i=[rh(t),...ih(t)],a=new RO(i,s),o=!0,l=[s],c=this.runWebGLProgram(a,[r],e.dtype,l,o);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:r,shape:i,dtype:a}=s;if(t!=null){const m=ue(i),g=t[0]*t[1]*4;B(m<=g,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const o=iy(i);let l;r?l=new EJ(o):l=new TJ(o);const c=!0,d=[t??ny(o)],p=this.runWebGLProgram(l,[{shape:o,dtype:a,dataId:e}],a,d,c,t);return{dtype:a,shape:i,dataId:p.dataId}}runWebGLProgram(e,t,s,r,i=!1,a){const o=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(o.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===sf.DENSE){const v=a??ny(e.outputShape);l.texShape=v.map($=>$*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),ue(o.shape)===0)return l.values=Yn(o.dtype,0),o;const c=[],d=t.map(v=>{if(v.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let $=this.texData.get(v.dataId);if($.texture==null){if(!e.packedInputs&&ue(v.shape)<=pe().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:v.shape,texData:null,isUniform:!0,uniformValues:$.values};e.packedInputs&&($.isPacked=!0,$.shape=v.shape)}if(this.uploadToGPU(v.dataId),!!$.isPacked!=!!e.packedInputs)v=$.isPacked?this.unpackTensor(v):this.packTensor(v),c.push(v),$=this.texData.get(v.dataId);else if($.isPacked&&!Xy($.shape,v.shape)){const I=v,N=v.shape;v.shape=$.shape,v=this.packedReshape(v,N),c.push(v),$=this.texData.get(v.dataId),I.shape=N}return{shape:v.shape,texData:$,isUniform:!1}});this.uploadToGPU(o.dataId);const p={shape:o.shape,texData:l,isUniform:!1},m=IJ(e,d,p),g=this.getAndSaveBinary(m,()=>kJ(this.gpgpu,e,d,p)),x=this.activeTimers!=null;let b;x&&(b=this.startTimer()),pe().get("ENGINE_COMPILE_ONLY")||NJ(this.gpgpu,g,d,p,r),c.forEach(v=>this.disposeIntermediateTensorInfo(v)),x&&(b=this.endTimer(b),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(b)}));const w=pe().getNumber("WEBGL_FLUSH_THRESHOLD");if(w>0){const v=ar();v-this.lastGlFlushTime>w&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=v)}if(!pe().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&i===!1){const v=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),v}return o}compileAndRun(e,t,s,r,i=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,r,i)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(pe().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=ce(()=>{if(!pe().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=pe().getBool("DEBUG");pe().set("DEBUG",!1);const t=this.abs(Ze(1e-8)).dataSync()[0];if(pe().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?ote:lte}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:i,texture:a,usage:o,isPacked:l}=t;if(a!=null)return;const c=this.activeTimers!=null;let d;c&&(d=ar());let p=t.texShape;if(p==null&&(p=_Z(s,l),t.texShape=p),i!=null){const m=iy(s);let g,x=p[1],b=p[0];const w=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(l||!w)&&([x,b]=dd(p[0],p[1])),l?g=new _J(m,w):g=new GI(m,w);const v=w?[b,x]:p,$=this.makeTensorInfo(v,r),I=this.texData.get($.dataId);w?I.usage=Br.PIXELS:I.usage=Br.UPLOAD,I.texShape=v,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture($.dataId),x,b,i);const N=[[b,x]],_=this.runWebGLProgram(g,[$],r,N,!0),z=this.texData.get(_.dataId);t.texShape=z.texShape,t.isPacked=z.isPacked,t.usage=z.usage,pe().get("ENGINE_COMPILE_ONLY")?this.disposeData(_.dataId):(t.texture=z.texture,t.values=null,this.texData.delete(_.dataId)),this.disposeIntermediateTensorInfo($),c&&(this.uploadWaitMs+=ar()-d)}else{const m=this.acquireTexture(p,o,r,l);t.texture=m}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return t!=null&&(s.values=pte(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Sy(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(i){throw i}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await fA(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(mO(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:r,nanLoc:i,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:l}=wO(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=i,e.outShapeLocation=a,e.outShapeStridesLocation=o,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:r,height:i,width:a,channels:o}=e,l=os().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(r,t,s,i,a,o);return os().makeTensorFromDataId(c,t,s,l)}}o0.nextDataId=0;function pte(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */$E()&&N2("webgl",()=>new o0,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sC=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;let Iu=class{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=it(t,s),this.enableShapeUniforms=_s(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bu=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class yd{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=it(t,s);const i=this.outputShape.length;this.enableShapeUniforms=_s(i);let a="";if(r)if(i===0||ue(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Yt(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=Hs("coords",i);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tr(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const fte={kernelName:Ah,backendName:"webgl",kernelFunc:Tr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dl(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,i=t.makeTensorInfo(s.shape,"complex64"),a=t.texData.get(i.dataId),o=Tr({inputs:{x:s},backend:t}),l=Tr({inputs:{x:r},backend:t});return a.complexTensorInfos={real:o,imag:l},i}const mte={kernelName:cx,backendName:"webgl",kernelFunc:dl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AO="return (a < 0.) ? b * a : a;",DO=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function gte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:i}=s,a=t.makeTensorInfo([],"float32",rl(i,"float32")),o=pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yd(DO,r.shape,a.shape):new Iu(AO,r.shape,a.shape),l=t.runWebGLProgram(o,[r,a],"float32");return t.disposeIntermediateTensorInfo(a),l}const yte={kernelName:Df,backendName:"webgl",kernelFunc:gte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _O="return (a < 0.) ? b * a : a;",OO=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function xte(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,i=pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yd(OO,s.shape,r.shape):new Iu(_O,s.shape,r.shape);return t.runWebGLProgram(i,[s,r],"float32")}const bte={kernelName:Qf,backendName:"webgl",kernelFunc:xte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xd="if (isnan(x)) return x;";function Ft({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:i})=>{const{x:a}=r,o=i,l=s||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){const p=o.texData.get(a.dataId),m=t(p.values,l);return o.makeTensorInfo(a.shape,l,m)}const c=pe().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let d;return c?d=new Vo(a.shape,e):d=new ca(a.shape,n),o.runWebGLProgram(d,[a],l)}}function $s({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:c}=a,d=o;if(s&&l.dtype==="complex64"){const x=d.texData.get(l.dataId),b=d.texData.get(c.dataId),[w,v]=[[x.complexTensorInfos.real,b.complexTensorInfos.real],[x.complexTensorInfos.imag,b.complexTensorInfos.imag]].map(I=>{const[N,E]=I,_={dataId:N.dataId,dtype:N.dtype,shape:l.shape},z={dataId:E.dataId,dtype:E.dtype,shape:c.shape},P=new Iu(n,l.shape,c.shape);return d.runWebGLProgram(P,[_,z],hs(N.dtype,E.dtype))}),$=dl({inputs:{real:w,imag:v},backend:d});return d.disposeIntermediateTensorInfo(w),d.disposeIntermediateTensorInfo(v),$}const p=i||hs(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||d.shouldExecuteOnCPU([l,c]))&&r!=null){const x=d.texData.get(l.dataId).values,b=d.texData.get(c.dataId).values,w=l.dtype==="string"?Gi(x):x,v=l.dtype==="string"?Gi(b):b,[$,I]=r(l.shape,c.shape,w,v,p),N=d.makeTensorInfo(I,p),E=d.texData.get(N.dataId);return E.values=$,N}const m=pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let g;return m?g=new yd(e,l.shape,c.shape,t):g=new Iu(n,l.shape,c.shape),d.runWebGLProgram(g,[l,c],p)}}function rf(n,e=!1){if(n==="linear")return e?ete:Kee;if(n==="relu")return e?nte:Qee;if(n==="elu")return e?tte:Yee;if(n==="relu6")return e?ste:Zee;if(n==="prelu")return e?OO:_O;if(n==="leakyrelu")return e?DO:AO;if(n==="sigmoid")return e?rte:Jee;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let FO=class{constructor(e,t,s,r=!1,i=!1,a=!1,o=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=_s(this.outputShape.length);const d=r?e[1]:e[2],p=Math.ceil(d/2),m=r?"i * 2, rc.y":"rc.y, i * 2",g=i?"rc.z, i * 2":"i * 2, rc.z",x=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],b=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let w="",v="";o&&(l?w=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:c?w=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:w=`vec4 activation(vec4 x) {
          ${o}
        }`,v="result = activation(result);");const $=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let I="rc.x",N="rc.x";e[0]<t[0]?I=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(N=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${w}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${I};
        int batchB = ${N};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${g});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${x[0]} * ${b[0]});
          result += (${x[1]} * ${b[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${$}

        ${v}

        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KI={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};let YI=class{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=it(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QI="return a * b;";function rC(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,i=hs(s.dtype,r.dtype);if(s.dtype==="complex64"){const o=t.texData.get(s.dataId),l=t.texData.get(r.dataId),c=new YI(KI.REAL,s.shape,r.shape),d=new YI(KI.IMAG,s.shape,r.shape),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:s.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],m=t.runWebGLProgram(c,p,"float32"),g=t.runWebGLProgram(d,p,"float32"),x=dl({inputs:{real:m,imag:g},backend:t});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),x}if(t.shouldExecuteOnCPU([s,r])){const o=t.texData.get(s.dataId),l=t.texData.get(r.dataId),[c,d]=xee(s.shape,r.shape,o.values,l.values,i),p=t.makeTensorInfo(d,i),m=t.texData.get(p.dataId);return m.values=c,p}let a;return pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new yd(QI,s.shape,r.shape):a=new Iu(QI,s.shape,r.shape),t.runWebGLProgram(a,[s,r],i)}const wte={kernelName:Bh,backendName:"webgl",kernelFunc:rC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vte(n,e,t){const s=[rh(n.shape),...ih(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},i=[rh(e),...ih(e)],a=new RO(i,s),o=!0,l=[s],c=t.runWebGLProgram(a,[r],n.dtype,l,o);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Le(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:i}=s,a=t,o=ue(r.shape),l=h2(i,o),c=ue(l);B(o===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const d=a.texData.get(r.dataId);return d.isPacked&&!Xy(r.shape,l)&&!(d.texture!==null&&Xy(d.shape,l))?vte(r,l,a):(a.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}const Ste={kernelName:Jf,backendName:"webgl",kernelFunc:Le};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZI{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:a}=e;this.outputShape=[r,a];const o=Math.floor(s/4)*4,l=s%4;let c="sumValue += dot(values, ones);";if(t!=null){const p=1/t;c=`sumValue += dot(values * ${Xc(p)?p.toPrecision(2):p}, ones);`}let d="";i%s>0&&(d=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${o};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Cte=class{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:a}=e;this.outputShape=[r,a];let o="0.0",l="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",l="min"):t==="max"&&(o="-1.0 / 1e-20",l="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");const d=Math.floor(s/4)*4,p=s%4;let m=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,g="vec4";t==="all"?(o="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,g="bvec4"):t==="any"&&(o="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,g="bvec4");let x="";i%s>0&&(x=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${x}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          ${g} values = ${g}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${d};
        if (${p===1}) {
          ${g} values = ${g}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${g} values = ${g}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${g} values = ${g}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${c});
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $te(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=Ab(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Vu(n,e,t,s){const r=$te(n.shape);let i=n;for(let a=0;a<r.length;a++){const{inSize:o,windowSize:l,outSize:c}=r[a];let d,p;t==="mean"?d=a===0?new ZI({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:c},o):new ZI({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:c}):d=new Cte({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:c},t),p=i,i=s.runWebGLProgram(d,[i],e),p.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(p)}return i}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kte=class{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[t[a]];this.outputShape=s,this.rank=s.length;const r=Yt(this.rank),i=Nte(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}};function Nte(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ite{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let d=0;d<s.length;d++)s[d]=e[t[d]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Yt(this.rank),i=EO("rc",this.rank),a=new Array(this.rank);for(let d=0;d<t.length;d++)a[t[d]]=i[d];const o=`vec2(${a.slice(-2).join()})`,l=`++${i[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l0(n,e,t){const s=pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ite(n.shape,e):new kte(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tte(n,e,t,s){const r=e,i=n.shape.length,a=pt(r,n.shape);let o=a;const l=Qt(o,i),c=l!=null;let d=n;c&&(d=l0(n,l,s),o=ln(o.length,i)),Mn("sum",o,i);const[p,m]=Dn(d.shape,o);let g=p;t&&(g=$n(p,a));const x=ue(m),w=ue(n.shape)/x,v=Le({inputs:{x:d},attrs:{shape:[w,x]},backend:s}),$=tb(n.dtype),I=Vu(v,$,"sum",s),N=Le({inputs:{x:I},attrs:{shape:g},backend:s});return s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(I),c&&s.disposeIntermediateTensorInfo(d),N}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u0(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s;return Tte(r,i,a,t)}const Ete={kernelName:im,backendName:"webgl",kernelFunc:u0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xs(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:i}=s,a=t,o=r.shape.length,l=new Array(o);for(let d=0;d<l.length;d++)l[d]=r.shape[i[d]];let c;if(a.shouldExecuteOnCPU([r])){const p=a.texData.get(r.dataId).values,m=nC(p,r.shape,r.dtype,i,l);c=a.makeTensorInfo(l,r.dtype);const g=a.texData.get(c.dataId);g.values=m}else c=l0(r,i,a);return c}const Rte={kernelName:lu,backendName:"webgl",kernelFunc:Xs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zO=1e3;function Ky({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const c=n.shape.length,d=e.shape.length,p=t?n.shape[c-2]:n.shape[c-1],m=s?e.shape[d-1]:e.shape[d-2],g=t?n.shape[c-1]:n.shape[c-2],x=s?e.shape[d-2]:e.shape[d-1],b=n.shape.slice(0,-2),w=e.shape.slice(0,-2),v=ue(b),$=ue(w),N=it(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([g,x]);B(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const E=t?[v,p,g]:[v,g,p],_=s?[$,x,m]:[$,m,x],z=Le({inputs:{x:n},backend:r,attrs:{shape:E}}),P=Le({inputs:{x:e},backend:r,attrs:{shape:_}}),O=[z,P],L=Math.max(v,$),D=t?z.shape[1]:z.shape[2],G=i!=null,q=a!=null,ee=l==="leakyrelu",Z=l!=null?rf(l,!0):null,H=G||q||ee||Z!=null;let oe;if((g===1||x===1)&&D>zO&&H===!1){let de=z,W=P;t&&(de=Xs({inputs:{x:z},backend:r,attrs:{perm:[0,2,1]}}),O.push(de)),s&&(W=Xs({inputs:{x:P},backend:r,attrs:{perm:[0,2,1]}}),O.push(W));const ne=x!==1,ge=x===1;let me=de;ne&&(me=Le({inputs:{x:de},backend:r,attrs:{shape:[L,D,1]}}),O.push(me));const xe=x===1?2:1;let $e=W;ge&&($e=Le({inputs:{x:W},backend:r,attrs:{shape:[L,1,D]}}),O.push($e));const Ne=rC({inputs:{a:me,b:$e},backend:r});oe=u0({inputs:{x:Ne},backend:r,attrs:{axis:xe,keepDims:!0}}),O.push(Ne)}else{const de=hs(n.dtype,e.dtype),W=new FO(E,_,[L,g,x],t,s,G,Z,q,ee),ne=[z,P];if(i!=null&&ne.push(i),q&&ne.push(a),ee){const ge=r.makeTensorInfo([],"float32",rl(o,"float32"));ne.push(ge),O.push(ge)}oe=r.runWebGLProgram(W,ne,de)}const se=Le({inputs:{x:oe},backend:r,attrs:{shape:N}});O.push(oe);for(const de of O)r.disposeIntermediateTensorInfo(de);return se}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ate(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:c,activation:d,leakyreluAlpha:p}=s;return Ky({a:r,b:i,transposeA:l,transposeB:c,backend:t,bias:a,preluActivationWeights:o,leakyreluAlpha:p,activation:d})}const Dte={kernelName:Wp,backendName:"webgl",kernelFunc:Ate};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JI="return abs(x);";function _te(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const i=t.texData.get(s.dataId),a=IO(i.values);return t.makeTensorInfo(s.shape,s.dtype,a)}let r;return pe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Vo(s.shape,JI):r=new ca(s.shape,JI),t.runWebGLProgram(r,[s],s.dtype)}const Ote={kernelName:hf,backendName:"webgl",kernelFunc:_te};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fte=$i+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,zte=Ft({opSnippet:Fte}),Lte={kernelName:hh,backendName:"webgl",kernelFunc:zte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pte=$i+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Mte=Ft({opSnippet:Pte}),Bte={kernelName:dh,backendName:"webgl",kernelFunc:Mte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eT="return a + b;",Vte=$s({opSnippet:eT,packedOpSnippet:eT,supportsComplex:!0,cpuKernelImpl:QJ}),Ute={kernelName:Eu,backendName:"webgl",kernelFunc:Vte};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wte{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((i,a)=>`T${a}`);const s=[];this.variableNames.forEach(i=>{s.push(`float v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Gte=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((i,a)=>`T${a}`);const s=[];this.variableNames.forEach(i=>{s.push(`vec4 v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wy(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return Tr({inputs:{x:s[0]},backend:t});if(s.length>pe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),c=wy({inputs:s.slice(0,l),backend:t}),d=wy({inputs:s.slice(l),backend:t});return wy({inputs:[c,d],backend:t})}const r=s.map(l=>l.dtype).reduce((l,c)=>hs(l,c)),i=s.map(l=>l.shape),o=pe().getBool("WEBGL_PACK")?new Gte(s[0].shape,i):new Wte(s[0].shape,i);return t.runWebGLProgram(o,s,r)}const Hte={kernelName:df,backendName:"webgl",kernelFunc:wy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=pt(i,r.shape);let c=l;const d=Qt(c,o);let p=r;d!=null&&(p=Xs({inputs:{x:r},backend:t,attrs:{perm:d}}),c=ln(c.length,o)),Mn("all",c,o);const[m,g]=Dn(p.shape,c),x=ue(g),b=Le({inputs:{x:p},backend:t,attrs:{shape:[-1,x]}}),w=Vu(b,b.dtype,"all",t);let v;if(a){const $=$n(m,l);v=Le({inputs:{x:w},backend:t,attrs:{shape:$}})}else v=Le({inputs:{x:w},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w),d!=null&&t.disposeIntermediateTensorInfo(p),v}const qte={kernelName:sx,backendName:"webgl",kernelFunc:jte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=pt(i,r.shape);let c=l;const d=Qt(c,o);let p=r;d!=null&&(p=Xs({inputs:{x:r},backend:t,attrs:{perm:d}}),c=ln(c.length,o)),Mn("any",c,o);const[m,g]=Dn(p.shape,c),x=ue(g),b=Le({inputs:{x:p},backend:t,attrs:{shape:[-1,x]}}),w=Vu(b,b.dtype,"any",t);let v;if(a){const $=$n(m,l);v=Le({inputs:{x:w},backend:t,attrs:{shape:$}})}else v=Le({inputs:{x:w},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w),d!=null&&t.disposeIntermediateTensorInfo(p),v}const Kte={kernelName:rx,backendName:"webgl",kernelFunc:Xte};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Yte=class{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:i,outSize:a}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[i,a];const o=t==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qte{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,B(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const i=e[e.length-1],a=Math.ceil(i/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,l=o.length,c=Yt(l),d=Hs("coords",l);let p,m;if(a===1){m=l+1;const P=Yt(m);p=`
        ${P} sourceLocR = ${P}(${d.join()}, 0);
        ++${d[l-1]};
        ${P} sourceLocG = ${P}(${d.join()}, 0);
        ++${d[l-2]};
        ${P} sourceLocA = ${P}(${d.join()}, 0);
        --${d[l-1]};
        ${P} sourceLocB = ${P}(${d.join()}, 0);
        --${d[l-2]};`}else m=l,p=`
        ${c} sourceLocR = coords;
        ++${d[l-1]};
        ${c} sourceLocG = coords;
        ++${d[l-2]};
        ${c} sourceLocA = coords;
        --${d[l-1]};
        ${c} sourceLocB = coords;
        --${d[l-2]};`;const g=["x","y","z","w","u","v"].slice(0,m),x="."+g[m-1],b=g.map(P=>"int "+P),w=Hs("sourceLocR",m-1).concat("inIdx.r"),v=Hs("sourceLocG",m-1).concat("inIdx.g"),$=Hs("sourceLocB",m-1).concat("inIdx.b"),I=Hs("sourceLocA",m-1).concat("inIdx.a"),N=s==="max"?"greaterThan":"lessThan",E=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${w.join()}),
                             getBestIndicesAChannel(${v.join()}),
                             getBestIndicesAChannel(${$.join()}),
                             getBestIndicesAChannel(${I.join()})));`,_=`vec4(
            getAChannel(${w.join()}),
            hasNextCol ? getAChannel(${v.join()}) : 0.,
            hasNextRow ? getAChannel(${$.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${I.join()}) : 0.)`,z=r?"":`
      float getBestIndicesAChannel(${b.join()}) {
        return getChannel(getBestIndicesA(${g.join()}),
                                          vec2(${g.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${b.join()}) {
        return getChannel(getA(${g.join()}),
                               vec2(${g.slice(-2).join()}));
      }
      ${z}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${d[l-1]} < ${o[l-1]-1};
        bool hasNextRow = ${d[l-2]} < ${o[l-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${x}, sourceLocG${x},
          sourceLocB${x}, sourceLocA${x}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${_};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${E}
          vec4 candidate = ${_};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${N}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LO(n,e,t,s=null){let r=e.shape[0],i=e.shape[1];s!=null&&(r=s.shape[0],i=s.shape[1]);const a=Ab(i),o={windowSize:a,inSize:i,batchSize:r,outSize:Math.ceil(i/a)},l=new Yte(o,t,s==null),c=[e];s!=null&&c.push(s);const d=n.runWebGLProgram(l,c,"int32");if(d.shape[1]===1)return d;const p=LO(n,e,t,d);return n.disposeIntermediateTensorInfo(d),p}function PO(n,e,t,s=null){const r=s!=null?s.shape:e.shape,i=r[r.length-1],a=Ab(i),o=new Qte(r,a,t,s==null),l=s==null?[e]:[e,s],c=n.runWebGLProgram(o,l,"int32");if(c.shape.length===e.shape.length){const d=PO(n,e,t,c);return n.disposeIntermediateTensorInfo(c),d}return c}function MO(n,e,t,s){const r=[t];if(Mn("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!pe().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const i=[],a=n.texData.get(e.dataId),o=a!==null&&a.isPacked;let l=e;o&&(l=n.unpackTensor(e),i.push(l));const[c,d]=Dn(l.shape,r),p=ue(d),m=Le({inputs:{x:l},backend:n,attrs:{shape:[-1,p]}});i.push(m);const g=LO(n,m,s);i.push(g);const x=Le({inputs:{x:g},backend:n,attrs:{shape:c}});return i.forEach(b=>n.disposeIntermediateTensorInfo(b)),x}return PO(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;let a=pt(i,r.shape);const o=Qt(a,r.shape.length);let l=r;const c=[];o!=null&&(l=Xs({inputs:{x:r},backend:t,attrs:{perm:o}}),c.push(l),a=ln(a.length,l.shape.length)),Mn("argMax",[a[0]],l.shape.length);const d=MO(t,l,a[0],"max");return c.forEach(p=>t.disposeIntermediateTensorInfo(p)),d}const Jte={kernelName:pf,backendName:"webgl",kernelFunc:Zte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ene(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;let a=pt(i,r.shape);const o=Qt(a,r.shape.length);let l=r;const c=[];o!=null&&(l=Xs({inputs:{x:r},backend:t,attrs:{perm:o}}),c.push(l),a=ln(a.length,l.shape.length)),Mn("argMin",[a[0]],l.shape.length);const d=MO(t,l,a[0],"min");return c.forEach(p=>t.disposeIntermediateTensorInfo(p)),d}const tne={kernelName:ff,backendName:"webgl",kernelFunc:ene};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nne=$i+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,sne=Ft({opSnippet:nne}),rne={kernelName:ph,backendName:"webgl",kernelFunc:sne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ine=$i+"return log(x + sqrt(x * x + 1.0));",ane=Ft({opSnippet:ine}),one={kernelName:fh,backendName:"webgl",kernelFunc:ane};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lne=$i+`
  return atan(x);
`,une=Ft({opSnippet:lne}),cne={kernelName:mh,backendName:"webgl",kernelFunc:une};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hne=sC+`
  return atan(a, b);
`,dne=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Bu+`
  return result;
`,pne=$s({opSnippet:hne,packedOpSnippet:dne}),fne={kernelName:yh,backendName:"webgl",kernelFunc:pne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mne=$i+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,gne=Ft({opSnippet:mne}),yne={kernelName:gh,backendName:"webgl",kernelFunc:gne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let af=class{constructor(e,t,s,r=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const b=t==="avg",w=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,v=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let $="0.0";if(b||($="-1.0 / 1e-20"),s){const P=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${l});
        const ivec2 pads = ivec2(${g}, ${x});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${d}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${P} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?i?w:v:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let N=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(N="avgValue / max(count, 1.0)");const E=Math.floor(a/4)*4,_=a%4,z=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${g}, ${x});
      const float initializationValue = ${$};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${$});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${E}; wC += 4) {
            int xC = xCCorner + wC * ${d};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              getValue(batch, xR, xC + 3 * ${d}, d)
            );

            ${z}
          }

          int xC = xCCorner + ${E};
          if (${_===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${z}
          } else if (${_===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              initializationValue,
              initializationValue
            );

            ${z}
          } else if (${_===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              initializationValue
            );

            ${z}
          }
        }
        setOutput(${N});
      }
    `}},iC=class{constructor(e,t,s,r=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideDepth,l=e.strideHeight,c=e.strideWidth,d=e.dilationDepth,p=e.dilationHeight,m=e.dilationWidth,g=e.effectiveFilterDepth,x=e.effectiveFilterHeight,b=e.effectiveFilterWidth,w=e.padInfo.front,v=e.padInfo.top,$=e.padInfo.left;this.outputShape=e.outShape;const I=t==="avg";let N="0.0";if(I||(N="-1.0 / 1e-20"),s){const L=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${l}, ${c});
        const ivec3 pads = ivec3(${w}, ${v}, ${$});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${g};
              wD += ${d}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${x};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${b};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${L} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?i?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${x} * ${b} +
                      wR * ${b} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const E="max";let _=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(_="avgValue / max(count, 1.0)");const z=Math.floor(a/4)*4,P=a%4,O=`
      if (${I}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${E}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${l}, ${c});
      const ivec3 pads = ivec3(${w}, ${v}, ${$});
      const float initializationValue = ${N};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${N});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${g};
            wD += ${d}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${x};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${z}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${O}
            }

            int xC = xCCorner + ${z};
            if (${P===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${O}
            } else if (${P===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${O}
            } else if (${P===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${O}
            }
          }
        }
        setOutput(${_});
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Dm(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,c=1;B(Zn(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const d=As(r.shape,i,a,c,o,l);if(d.filterWidth===1&&d.filterHeight===1&&yt(d.inShape,d.outShape))return Tr({inputs:{x:r},backend:t});const p=new af(d,"avg",!1);return t.runWebGLProgram(p,[r],"float32")}const bne={kernelName:mf,backendName:"webgl",kernelFunc:xne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:c}=s,d=[1,1,1],p=Hr(r.shape,i,a,d,o,l,c),m=new iC(p,"avg",!1);return t.runWebGLProgram(m,[r],"float32")}const vne={kernelName:gf,backendName:"webgl",kernelFunc:wne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Sne=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,i=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=l-1-e.padInfo.top,p=c-1-e.padInfo.left,m=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${d}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Cne=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,i=e.strideDepth,a=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,m=e.effectiveFilterHeight,g=e.effectiveFilterWidth,x=p-1-e.padInfo.front,b=m-1-e.padInfo.top,w=g-1-e.padInfo.left,v=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${x}, ${b}, ${w});
      const float avgMultiplier = float(${v});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${g};
                wC += ${d}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ne(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,a=i,{filterSize:o,strides:l,pad:c,dimRoundingMode:d}=s,p=[1,1,1],m=Hr(a.shape,o,l,p,c,d),g=new Cne(m);return t.runWebGLProgram(g,[r],a.dtype)}const kne={kernelName:ax,backendName:"webgl",kernelFunc:$ne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nne(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,a=i;Dm([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:c}=s,d=As(a.shape,o,l,1,c),p=new Sne(d);return t.runWebGLProgram(p,[r],a.dtype)}const Ine={kernelName:ix,backendName:"webgl",kernelFunc:Nne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tne(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i}=e,{transposeA:a,transposeB:o}=s;return Ky({a:r,b:i,transposeA:a,transposeB:o,backend:t})}const Ene={kernelName:yf,backendName:"webgl",kernelFunc:Tne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Rne=class{constructor(e,t,s,r,i,a){this.outputShape=[],this.variableNames=["x","mean","variance"],it(e,t),it(e,s);let o="0.0";r!=null&&(it(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";i!=null&&(it(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ane{constructor(e,t,s,r,i,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],it(e,t),it(e,s);let o="vec4(0.0)";r!=null&&(it(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";i!=null&&(it(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dne=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:i,offset:a,scale:o}=n;B(r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),B(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),B(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const c=[s,r,i];let d=null;a!=null&&(d=a.shape,c.push(a));let p=null;o!=null&&(p=o.shape,c.push(o));const m=pe().getBool("WEBGL_PACK_NORMALIZATION")?new Ane(s.shape,r.shape,i.shape,d,p,l):new Rne(s.shape,r.shape,i.shape,d,p,l);return e.runWebGLProgram(m,c,c[0].dtype)},_ne={kernelName:Ef,backendName:"webgl",kernelFunc:Dne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let One=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Yt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=Fne(this.rank);let r;const i=e.map((a,o)=>`sourceLoc.${Zv[o]} = start[${o}] + coords.${Zv[o]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}};const Zv=["x","y","z","w","u","v"];function Fne(n){if(n===1)return"sourceLoc";if(n<=6)return Zv.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zne{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Yt(this.rank),s=Hs("coords",this.rank),r=Hs("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${i})`,o=`
      result.x = ${a};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${a};
        --${r[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${a};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${a};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((d,p)=>`start[${p}]`).join()});`:e.map((d,p)=>`${r[p]} = ${s[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${o}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lne(n,e,t,s){const r=s.texData.get(n.dataId),i=s.makeTensorInfo(t,n.dtype),a=s.texData.get(i.dataId);Object.assign(a,r),a.refCount=1,a.shape=t,a.dtype=n.dtype;let o=gS(e,Qe(n.shape));r.slice&&(o+=r.slice.flatOffset),a.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||n.dataId};const l=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,l+1),i}function bd(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,size:a}=s,[o,l]=bm(r,i,a);if(Ib(r,o,l),ue(l)===0)return t.makeTensorInfo(l,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const p=t.texData.get(r.dataId),m=Eee(p.values,o,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,m)}const{isPacked:c}=t.texData.get(r.dataId),d=mS(r.shape,o,l);if(c||!d){const p=pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zne(l):new One(l),m=[o];return t.runWebGLProgram(p,[r],r.dtype,m)}return t.uploadToGPU(r.dataId),Lne(r,o,l,t)}const Pne={kernelName:rm,backendName:"webgl",kernelFunc:bd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mne=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,crops:a}=s;B(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=i.reduce(($,I)=>$*I),l=_u(r.shape,i,o),c=Ou(l.length,i.length),d=Fu(r.shape,i,o),p=_b(a,i.length),m=Ob(d,a,i.length),g=[],x=Le({inputs:{x:r},backend:t,attrs:{shape:l}}),b=Xs({inputs:{x},backend:t,attrs:{perm:c}}),w=Le({inputs:{x:b},backend:t,attrs:{shape:d}}),v=bd({inputs:{x:w},backend:t,attrs:{begin:p,size:m}});return g.push(x),g.push(b),g.push(w),g.forEach($=>t.disposeIntermediateTensorInfo($)),v},Bne={kernelName:xf,backendName:"webgl",kernelFunc:Mne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:a}=s,o=t.readSync(r.dataId),l=t.readSync(i.dataId),c=NO(o,l,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,c)}const Une={kernelName:ox,backendName:"webgl",kernelFunc:Vne};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wne=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,Gne=`
  return float(int(a.r) & int(b.r));
`;function Hne(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,i=pe().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=pe().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,r])||a===1){const l=t.texData.get(s.dataId).values,c=t.texData.get(r.dataId).values,[d,p]=JJ(s.shape,r.shape,l,c,s.dtype),m=t.makeTensorInfo(p,s.dtype),g=t.texData.get(m.dataId);return g.values=d,m}let o;return i?o=new yd(Wne,s.shape,r.shape,!1):o=new Iu(Gne,s.shape,r.shape),t.runWebGLProgram(o,[s,r],s.dtype)}const jne={kernelName:lx,backendName:"webgl",kernelFunc:Hne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qne(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,i=t.readSync(s.dataId),a=t.readSync(r.dataId),o=it(Array.from(i),Array.from(a));return t.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const Xne={kernelName:ux,backendName:"webgl",kernelFunc:qne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kne="return float(a != b);",BO=$s({opSnippet:Kne,cpuKernelImpl:wee,dtype:"bool"}),Yne={kernelName:jf,backendName:"webgl",kernelFunc:BO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Om(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Tr({inputs:{x:r.complexTensorInfos.real},backend:t})}const Qne={kernelName:Px,backendName:"webgl",kernelFunc:Om};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zne="return float(int(x));";function Jne(n,e){const t=new ca(n.shape,Zne),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jv(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return Tr({inputs:{x:r},backend:t});const a=Rn(r.shape),o=Jv({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),l=dl({inputs:{real:o,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(o),l}if(r.dtype==="complex64"){const a=Om({inputs:{input:r},backend:t}),o=Jv({inputs:{x:a},backend:t,attrs:{dtype:i}});return t.disposeIntermediateTensorInfo(a),o}if(!d2(r.dtype,i)){const a=Tr({inputs:{x:r},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:i}}if(t.shouldExecuteOnCPU([r])){const a=t.texData.get(r.dataId).values,[o,l,c]=eee(a,r.shape,r.dtype,i);return t.makeTensorInfo(o,l,c)}if(i==="int32")return Jne(r,t);if(i==="bool"){const a=t.makeTensorInfo([],"bool",Yn("bool",1)),l=BO({inputs:{a:r,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const ese={kernelName:xh,backendName:"webgl",kernelFunc:Jv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tT="return ceil(x);",tse=Ft({opSnippet:tT,packedOpSnippet:tT,cpuKernelImpl:tee}),nse={kernelName:bh,backendName:"webgl",kernelFunc:tse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sse=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rse{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ise(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:i,clipValueMax:a}=s;let o;pe().getBool("WEBGL_PACK_CLIP")?o=new rse(r.shape):o=new sse(r.shape);const l=[[i],[a]];return t.runWebGLProgram(o,[r],r.dtype,l)}const ase={kernelName:wh,backendName:"webgl",kernelFunc:ise};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ose=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nT(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function lse(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),i=new ose(s.shape),a=[nT(s,r.complexTensorInfos.real),nT(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(i,a,a[0].dtype)}const use={kernelName:bf,backendName:"webgl",kernelFunc:lse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cse=class{constructor(e){this.outputShape=[],this.outputShape=ur(e,1),this.variableNames=e.map((a,o)=>`T${o}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const o=t[a-1];s.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}const r=t.length,i=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hse{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ur(e,t);const s=this.outputShape,r=s.length,i=Yt(r),a=Hs("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((b,w)=>`T${w}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let b=1;b<l.length;b++)l[b]=l[b-1]+e[b][t];const c=o[t],d=o.slice(-2),p=o.join();let m=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${p}), vec2(${d.join()}));
        }`;for(let b=1;b<l.length;b++){const w=l[b-1];m+=`
        if (${c} < ${l[b]}  && ${c} >= ${l[b-1]}) {
          return getChannel(
            getT${b}(${ly(o,c,w)}),
            vec2(${ly(d,c,w)}));
        }`}const g=l.length,x=l[l.length-1];m+=`
        return getChannel(
          getT${g}(${ly(o,c,x)}),
          vec2(${ly(d,c,x)}));`,this.userCode=`
      float getValue(${o.map(b=>"int "+b)}) {
        ${m}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[r-1]} = ${a[r-1]} + 1;
        if (${a[r-1]} < ${s[r-1]}) {
          result.g = getValue(${a});
        }

        ${a[r-2]} = ${a[r-2]} + 1;
        if (${a[r-2]} < ${s[r-2]}) {
          result.a = getValue(${a});
        }

        ${a[r-1]} = ${a[r-1]} - 1;
        if (${a[r-2]} < ${s[r-2]} &&
            ${a[r-1]} < ${s[r-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function ly(n,e,t){const s=n.indexOf(e);return n.map((i,a)=>a===s?`${i} - ${t}`:i).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c0(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Tr({inputs:{x:r.complexTensorInfos.imag},backend:t})}const dse={kernelName:Tx,backendName:"webgl",kernelFunc:c0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mp(n,e,t){const s=n[0].dtype;if(s==="complex64"){const g=n.map($=>Om({inputs:{input:$},backend:t})),x=n.map($=>c0({inputs:{input:$},backend:t})),b=Mp(g,e,t),w=Mp(x,e,t),v=dl({inputs:{real:b,imag:w},backend:t});return g.forEach($=>t.disposeIntermediateTensorInfo($)),x.forEach($=>t.disposeIntermediateTensorInfo($)),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w),v}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const g=n.map(N=>{const _=[-1,ue(N.shape.slice(e))];return Le({inputs:{x:N},backend:t,attrs:{shape:_}})}),x=g.map(N=>({vals:t.readSync(N.dataId),shape:N.shape})),b=ur(g.map(N=>N.shape),1),w=g[0].shape[0]===1,v=nee(x,b,s,w),$=ur(n.map(N=>N.shape),e),I=t.makeTensorInfo($,s,v);return g.forEach(N=>t.disposeIntermediateTensorInfo(N)),I}const i=n.filter(g=>ue(g.shape)>0),a=pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){const g=a?new ca(n[0].shape,Po):new Vo(n[0].shape,Po);return t.runWebGLProgram(g,n,s)}const o=pe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){const g=[];for(let b=0;b<i.length;b+=o){const w=i.slice(b,b+o);g.push(Mp(w,e,t))}const x=Mp(g,e,t);for(const b of g)t.disposeIntermediateTensorInfo(b);return x}if(a){const g=new hse(i.map(x=>x.shape),e);return t.runWebGLProgram(g,i,s)}const{tensors2D:l,outShape:c}=pse(i,e,t),d=new cse(l.map(g=>g.shape)),p=t.runWebGLProgram(d,l,s);l.forEach(g=>t.disposeIntermediateTensorInfo(g));const m=Le({inputs:{x:p},attrs:{shape:c},backend:t});return t.disposeIntermediateTensorInfo(p),m}function pse(n,e,t){const s=ur(n.map(i=>i.shape),e);return{tensors2D:n.map(i=>Le({inputs:{x:i},attrs:{shape:[-1,ue(i.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VO(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,i=pt(r,e[0].shape)[0],a=e.map(c=>c.shape);Rb(a,i);const o=ur(e.map(c=>c.shape),i);if(ue(o)===0)return t.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(c=>ue(c.shape)>0);return l.length===1?Tr({inputs:{x:l[0]},backend:t}):Mp(l,i,t)}const fse={kernelName:wf,backendName:"webgl",kernelFunc:VO};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UO{constructor(e,t=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,o=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,m=e.filterHeight,g=e.filterWidth,x=Math.floor(e.inChannels/4)*4,b=e.inChannels%4,w=e.dataFormat==="channelsLast",v=w?1:2,$=w?2:3,I=w?3:1;let N="",E="";s&&(r?N=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?N=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:N=`
          float activation(float x) {
            ${s}
          }
        `,E="result = activation(result);");const _=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${N}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${I}];

        ivec2 xRCCorner =
            ivec2(coords[${v}], coords[${$}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${d};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${g}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${x}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${w}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${b===1}) {

              if (${w}) {
                dotProd +=
                    getX(batch, xR, xC, ${x}) *
                    getW(wR, wC, ${x}, d2);
              } else {
                dotProd +=
                    getX(batch, ${x}, xR, xC) *
                    getW(wR, wC, ${x}, d2);
              }

            } else if (${b===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${x}, d2),
                getW(wR, wC, ${x} + 1, d2)
              );

              if (${w}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${x}),
                  getX(batch, xR, xC, ${x} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${x}, xR, xC),
                  getX(batch, ${x} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${b===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${x}, d2),
                getW(wR, wC, ${x} + 1, d2),
                getW(wR, wC, ${x} + 2, d2)
              );

              if (${w}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${x}),
                  getX(batch, xR, xC, ${x} + 1),
                  getX(batch, xR, xC, ${x} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${x}, xR, xC),
                  getX(batch, ${x} + 1, xR, xC),
                  getX(batch, ${x} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${_}
        ${E}
        setOutput(result);
      }
    `}}class mse{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,i=e.strideDepth,a=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,p=e.filterDepth,m=e.filterHeight,g=e.filterWidth,x=Math.floor(e.inChannels/4)*4,b=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${g}; wC++) {
              int xC = xCCorner + wC * ${d};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${x}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${b===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${x}) *
                  getW(wF, wR, wC, ${x}, d2);
              } else if (${b===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${x}),
                  getX(batch, xF, xR, xC, ${x} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${x}, d2),
                  getW(wF, wR, wC, ${x} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${b===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${x}),
                  getX(batch, xF, xR, xC, ${x} + 1),
                  getX(batch, xF, xR, xC, ${x} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${x}, d2),
                  getW(wF, wR, wC, ${x} + 1, d2),
                  getW(wF, wR, wC, ${x} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WO{constructor(e,t=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=_s(this.outputShape.length);const a=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,p=d;let m=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let w=0;w<d;w++)m+=`
           vec4 xTexelC${w*2};
           int xTexelC${w*2}Ready;
           vec4 xTexelC${w*2+1};
           int xTexelC${w*2+1}Ready;
           vec4 xC${w};`;m+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let w=0;w<d;w++)m+=`
           xTexelC${w*2} = vec4(0.0);
           xTexelC${w*2}Ready = 0;
           xTexelC${w*2+1} = vec4(0.0);
           xTexelC${w*2+1}Ready = 0;
           xC${w} = vec4(0.0);`;m+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let w=0;w<(p+1)/2;w++){const v=w*2;if(m+=`
           xC = xCCorner + ${v*l};
           `,o===1){if(v<d&&(a%2===1?(m+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }
               `,l===1&&v>0?m+=`
                 xC${v} = vec4(xTexelC${v-2}.zw, xTexelC${v}.xy);
                 `:m+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${v} = vec4(previous.zw, xTexelC${v}.xy);
                   } else {
                     xC${v} = vec4(0.0, 0.0, xTexelC${v}.xy);
                   }
                   `):m+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }

                 xC${v} = xTexelC${v};
                 `,v+1<d)){const $=a%2===0?c2(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(m+=`
                   xCOffset = xC + imod(pads[1], 2) + ${$};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                     xTexelC${v+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${v+1}.zw = vec2(0.0);
                     }
                     xTexelC${v+1}Ready = 1;
                   }
                   `,l>1?m+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${v+1} = vec4(previous.zw, xTexelC${v+1}.xy);
                     } else {
                      xC${v+1} = vec4(0.0, 0.0, xTexelC${v+1}.xy);
                     }
                     `:m+=`
                     xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.xy);
                     `):$===1?m+=`
                     xC${v+1} = xTexelC${v};
                     `:m+=`
                     xCOffset = xC + ${$};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                       xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${v+1}.zw = vec2(0.0);
                       }
                       xTexelC${v+1}Ready = 1;
                     }

                     xC${v+1} = xTexelC${v+1};
                     `}}else v<d&&(a%2===1?(m+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${v+1}Ready == 0) {
                   xTexelC${v+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${v+1}.zw = vec2(0.0);
                   }
                   xTexelC${v+1}Ready = 1;
                 }

                 xC${v} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
               `,v+1<d&&(m+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${v+1} = vec4(xTexelC${v+1}.xy, final.xy);
                 `)):(m+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                   xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${v+1}.zw = vec2(0.);
                   }
                   xTexelC${v+1}Ready = 1;
                 }

                 xC${v} = vec4(
                   xTexelC${v}.xy, xTexelC${v+1}.xy);
               `,v+1<d&&(m+=`
                   xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
                 `)));v<d&&(m+=`
             wTexel = getW(r, ${v}, d1, d2);
             dotProd += xC${v}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${v}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,v+1<d&&(m+=`
               wTexel = getW(r, ${v+1}, d1, d2);
               dotProd += xC${v+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${v+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}m+=`
     }
   `,m+=`
     }
   `,m+=`
     }
   `;let g="",x="";s&&(r?g=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:i?g=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:g=`vec4 activation(vec4 x) {
           ${s}
         }`,x="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${g}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${m}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${b}
         ${x}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gse{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=_s(this.outputShape.length);const{dataFormat:s}=t,r=Ys(),i=s==="channelsLast",a=i?1:2,o=i?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let d=0;d<=1;d++)for(let p=0;p<=1;p++)c+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${d};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${d*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${d*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yy(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function GO({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=n.shape,c=s.texData.get(n.dataId),d=t.inChannels,p=l[0]*l[1]*l[2],m=t.outChannels,g=t.dataFormat==="channelsLast",x=!1,b=!1;let w;const v=[];if(i!=null){const N=Yy(i.shape,g);N!=null&&(i=Le({inputs:{x:i},backend:s,attrs:{shape:N}}),v.push(i))}if(r!=null){const N=Yy(r.shape,g);N!=null&&(r=Le({inputs:{x:r},backend:s,attrs:{shape:N}}),v.push(r))}if(!((p===1||m===1)&&d>zO)&&c.isPacked&&g&&c.texture!=null&&l[2]%2!==0&&yt(c.shape.slice(-3),l.slice(-3))){const N=l[0]*l[1]*(l[2]+1),E={dataId:n.dataId,shape:[1,N,t.inChannels],dtype:n.dtype},_=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,B(Xy(c.shape,E.shape),()=>`packed reshape ${c.shape} to ${E.shape} isn't free`);const z=Le({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});v.push(z);const P=Ky({a:E,b:z,backend:s,transposeA:x,transposeB:b,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),O=s.texData.get(P.dataId);B(O.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=_,O.shape=t.outShape,w=Tr({inputs:{x:P},backend:s}),w.shape=t.outShape,v.push(P)}else{const N=t.outHeight*t.outWidth,E=Le({inputs:{x:n},backend:s,attrs:{shape:g?[t.batchSize,N,t.inChannels]:[t.batchSize,t.inChannels,N]}}),_=Le({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),z=Ky({a:g?E:_,b:g?_:E,transposeA:!g,transposeB:b,backend:s,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a});w=Le({inputs:{x:z},backend:s,attrs:{shape:t.outShape}}),v.push(E),v.push(_),v.push(z)}for(const N of v)s.disposeIntermediateTensorInfo(N);return w}function HO({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:c,inChannels:d,outWidth:p,outHeight:m,dataFormat:g}=t,x=g==="channelsLast",b=l*c*d,w=m*p,v=[t.batchSize,b,w],$=!0,I=!1,N=[];if(i!=null){const se=Yy(i.shape,x);se!=null&&(i=Le({inputs:{x:i},backend:s,attrs:{shape:se}}),N.push(i))}if(r!=null){const se=Yy(r.shape,x);se!=null&&(r=Le({inputs:{x:r},backend:s,attrs:{shape:se}}),N.push(r))}const E=Le({inputs:{x:e},backend:s,attrs:{shape:[1,b,ue(e.shape)/b]}});N.push(E);const _=new gse(v,t),z=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],P=s.runWebGLProgram(_,[n],"float32",z),O=Le({inputs:{x:P},backend:s,attrs:{shape:v}});N.push(P),N.push(O);const L=r!=null,D=i!=null,G=o==="leakyrelu",q=o?rf(o,!0):null,ee=new FO(x?O.shape:E.shape,x?E.shape:O.shape,x?[t.batchSize,w,t.outChannels]:[t.batchSize,t.outChannels,w],$,I,L,q,D,G),Z=x?[O,E]:[E,O];if(r&&Z.push(r),D&&Z.push(i),G){const se=s.makeTensorInfo([],"float32",rl(a,"float32"));Z.push(se),N.push(se)}const H=s.runWebGLProgram(ee,Z,"float32"),oe=Le({inputs:{x:H},backend:s,attrs:{shape:t.outShape}});N.push(H);for(const se of N)s.disposeIntermediateTensorInfo(se);return oe}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:c,dimRoundingMode:d}=s,p=Rr(l),m=on(r.shape,i.shape,a,c,o,d,!1,p);let g;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))g=GO({x:r,filter:i,convInfo:m,backend:t});else if(m.strideWidth<=2&&p==="channelsLast"&&pe().getBool("WEBGL_EXP_CONV")){const b=new WO(m),w=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];g=t.runWebGLProgram(b,[r,i],"float32",w)}else if(pe().getBool("WEBGL_CONV_IM2COL"))g=HO({x:r,filter:i,convInfo:m,backend:t});else{const b=new UO(m);g=t.runWebGLProgram(b,[r,i],"float32")}const x=Le({inputs:{x:g},backend:t,attrs:{shape:m.outShape}});return t.disposeIntermediateTensorInfo(g),x}const xse={kernelName:vf,backendName:"webgl",kernelFunc:yse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bse=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,i=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},wse=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,i=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,l=s-1-e.padInfo.left,c=a?1:2,d=a?2:3,p=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${d}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},vse=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,i=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${i};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Sse=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,i=e.strideDepth,a=e.strideHeight,o=e.strideWidth,l=t-1-e.padInfo.front,c=s-1-e.padInfo.top,d=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:c,filterShape:d}=s,p=Rr(l),m=on(r.shape,d,a,1,o,c,!1,p),g=new bse(m);return t.runWebGLProgram(g,[r,i],"float32")}const $se={kernelName:hx,backendName:"webgl",kernelFunc:Cse};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kse{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=_s(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,r=t-1-e.padInfo.top,i=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nse(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:c,dimRoundingMode:d}=s,p=Rr(c),m=on(a,i.shape,o,1,l,d,!1,p);if(pe().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){const g=[[m.strideHeight,m.strideWidth]],x=new kse(m);return t.runWebGLProgram(x,[r,i],"float32",g)}else{const g=new wse(m);return t.runWebGLProgram(g,[r,i],"float32")}}const Ise={kernelName:Sf,backendName:"webgl",kernelFunc:Nse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s,c=Ki(r.shape,i.shape,a,l,o),d=new mse(c);return t.runWebGLProgram(d,[r,i],"float32")}const Ese={kernelName:Cf,backendName:"webgl",kernelFunc:Tse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:a,pad:o,filterShape:l}=s,c=Ki(r.shape,l,a,1,o),d=new vse(c);return t.runWebGLProgram(d,[r,i],"float32")}const Ase={kernelName:dx,backendName:"webgl",kernelFunc:Rse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dse(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{pad:a,strides:o,inputShape:l}=s,c=Ki(l,i.shape,o,1,a),d=new Sse(c);return t.runWebGLProgram(d,[r,i],"float32")}const _se={kernelName:px,backendName:"webgl",kernelFunc:Dse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ose=xd+`
  return cos(x);
`,Fse=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Bu}
  return result;
`,zse=Ft({opSnippet:Ose,packedOpSnippet:Fse}),Lse={kernelName:vh,backendName:"webgl",kernelFunc:zse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pse=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Mse=Ft({opSnippet:Pse}),Bse={kernelName:Sh,backendName:"webgl",kernelFunc:Mse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Vse=class{constructor(e,t,s,r,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,o,l,c]=e,[d]=t,[p,m]=s;this.outputShape=[d,p,m,c];const g=r==="bilinear"?1:0,[x,b]=[`${o-1}.0`,`${l-1}.0`],[w,v,$]=p>1?[`${(o-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${x} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${x}`],[I,N,E]=m>1?[`${(l-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${b} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${b}`];this.userCode=`
      const float height_ratio = float(${w});
      const float width_ratio = float(${I});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${v};
        float width_scale = ${N};

        float in_y = ${$};
        if( in_y < 0.0 || in_y > ${x} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${E};
        if( in_x < 0.0 || in_x > ${b} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${g} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Use=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:c}=s,d=new Vse(r.shape,i.shape,o,l,c);return t.runWebGLProgram(d,[r,i,a],"float32")},Wse={kernelName:mx,backendName:"webgl",kernelFunc:Use};var of;(function(n){n.Prod="*",n.Sum="+"})(of||(of={}));let sT=class{constructor(e,t,s,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const i=this.outputShape.length,a=this.op===of.Prod?"1.0":"0.0",o=s?a:`getX(${rT(i,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",d="";s?(c=r?`end != ${l-1}`:"end != 0",d=r?"end + 1":"end - 1"):(c=r?`end + pow2 < ${l}`:"end >= pow2",d=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Yt(i)} coords = getOutputCoords();
        int end = ${iT(i,"coords",this.op)};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${d};
          ${iT(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${rT(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function rT(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function iT(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jO(n,e,t,s,r,i){const a=e.shape.length,o=Qt([s],a);let l=e;o!=null&&(l=Xs({inputs:{x:e},backend:t,attrs:{perm:o}}));const c=ln(1,a)[0];if(c!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const d=l.shape[c];let p=Tr({inputs:{x:l},backend:t});for(let m=0;m<=Math.ceil(Math.log2(d))-1;m++){const g=new sT(n,l.shape,!1,i),x=[[m]],b=p;p=t.runWebGLProgram(g,[p],p.dtype,x),t.disposeIntermediateTensorInfo(b)}if(r){const m=new sT(n,l.shape,r,i),g=p;p=t.runWebGLProgram(m,[p],p.dtype),t.disposeIntermediateTensorInfo(g)}if(o!=null){const m=wa(o),g=Xs({inputs:{x:p},backend:t,attrs:{perm:m}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(l),g}return p}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;return jO(of.Prod,r,t,i,a,o)}const Hse={kernelName:fx,backendName:"webgl",kernelFunc:Gse};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;return jO(of.Sum,r,t,i,a,o)}const qse={kernelName:$f,backendName:"webgl",kernelFunc:jse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:a,binaryOutput:o}=s;if(r.shape.length===1){const l=t.readSync(r.dataId),c=t.readSync(i.dataId),d=NO(l,c,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,d)}else if(r.shape.length===2){const l=t.bufferSync(r),c=t.bufferSync(i),d=ZJ(l,c,a,o);return t.makeTensorInfo(d.shape,i.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const Kse={kernelName:gx,backendName:"webgl",kernelFunc:Xse};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Yse=class{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:i,dataFormat:a}=s,o=r.shape[0],l=a==="NHWC"?r.shape[1]:r.shape[2],c=a==="NHWC"?r.shape[2]:r.shape[3],d=a==="NHWC"?r.shape[3]:r.shape[1],p=l*i,m=c*i,g=d/(i*i),x=a==="NHWC"?[o,p,m,g]:[o,g,p,m],b=new Yse(x,i,a);return t.runWebGLProgram(b,[r],r.dtype)}const Zse={kernelName:yx,backendName:"webgl",kernelFunc:Qse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let qO=class{constructor(e,t=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=_s(this.outputShape.length);const a=e.filterHeight,o=e.filterWidth,l=e.outChannels/e.inChannels;let c="",d="";s&&(r?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:c=`
          float activation(float x) {
            ${s}
          }
        `,d="result = activation(result);");const p=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${d}
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XO{constructor(e,t=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=_s(this.outputShape.length);const a=e.outChannels/e.inChannels,o=e.padInfo.left,l=e.strideWidth,c=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,m=p;let g=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let v=0;v<p;v++)g+=`
          vec4 xTexelC${v*2};
          int xTexelC${v*2}Ready;
          vec4 xTexelC${v*2+1};
          int xTexelC${v*2+1}Ready;
          vec4 xC${v};`;g+=`
    for (int r = 0; r < ${d}; r++) {
      `;for(let v=0;v<p;v++)g+=`
          xTexelC${v*2} = vec4(0.0);
          xTexelC${v*2}Ready = 0;
          xTexelC${v*2+1} = vec4(0.0);
          xTexelC${v*2+1}Ready = 0;
          xC${v} = vec4(0.0);`;g+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let v=0;v<(m+1)/2;v++){const $=v*2;if(g+=`
          xC = xCCorner + ${$*c};
          `,l===1){if($<p&&(o%2===1?(g+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }
              `,c===1&&$>0?g+=`
                xC${$} = vec4(xTexelC${$-2}.zw, xTexelC${$}.xy);
                `:g+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${$} = vec4(previous.zw, xTexelC${$}.xy);
                  } else {
                    xC${$} = vec4(0.0, 0.0, xTexelC${$}.xy);
                  }
                  `):g+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                xC${$} = xTexelC${$};
                `,$+1<p)){const I=o%2===0?c2(c):c;c%2===0&&o%2===1||c%2!==0&&o%2!==1?(g+=`
                  xCOffset = xC + imod(pads[1], 2) + ${I};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                    xTexelC${$+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${$+1}.zw = vec2(0.0);
                    }
                    xTexelC${$+1}Ready = 1;
                  }
                  `,c>1?g+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${$+1} = vec4(previous.zw, xTexelC${$+1}.xy);
                    } else {
                     xC${$+1} = vec4(0.0, 0.0, xTexelC${$+1}.xy);
                    }
                    `:g+=`
                    xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.xy);
                    `):I===1?g+=`
                    xC${$+1} = xTexelC${$};
                    `:g+=`
                    xCOffset = xC + ${I};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                      xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${$+1}.zw = vec2(0.0);
                      }
                      xTexelC${$+1}Ready = 1;
                    }

                    xC${$+1} = xTexelC${$+1};
                    `}}else $<p&&(o%2===1?(g+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${$+1}Ready == 0) {
                  xTexelC${$+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${$+1}.zw = vec2(0.0);
                  }
                  xTexelC${$+1}Ready = 1;
                }

                xC${$} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
              `,$+1<p&&(g+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${$+1} = vec4(xTexelC${$+1}.xy, final.xy);
                `)):(g+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                  xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$+1}.zw = vec2(0.);
                  }
                  xTexelC${$+1}Ready = 1;
                }

                xC${$} = vec4(
                  xTexelC${$}.xy, xTexelC${$+1}.xy);
              `,$+1<p&&(g+=`
                  xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
                `)));$<p&&(g+=`
            wTexel = getW(r, ${$}, d1, q);
            dotProd += xC${$} * vec4(wTexel.xz, wTexel.xz);
          `,$+1<p&&(g+=`
              wTexel = getW(r, ${$+1}, d1, q);
              dotProd += xC${$+1} * vec4(wTexel.xz, wTexel.xz);
            `))}g+=`
    }
  `,g+=`
      }
    `;let x="",b="";s&&(r?x=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?x=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:x=`vec4 activation(vec4 x) {
          ${s}
        }`,b="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${g}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${w}
        ${b}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:c}=s;let d=l;d==null&&(d=[1,1]),B(Zn(a,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const p=on(r.shape,i.shape,a,d,o,c,!0);let m;pe().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?m=new XO(p):m=new qO(p);const g=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return t.runWebGLProgram(m,[r,i],"float32",g)}const ere={kernelName:kf,backendName:"webgl",kernelFunc:Jse};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let tre=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,i=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},nre=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,i=e.strideWidth,a=t-1-e.padInfo.top,o=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:c,filterShape:d}=s,p=on(r.shape,d,a,o,l,c,!0),m=new tre(p);return t.runWebGLProgram(m,[r,i],"float32")}const rre={kernelName:xx,backendName:"webgl",kernelFunc:sre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ire(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:c,inputShape:d}=s,p=on(d,i.shape,a,o,l,c,!0),m=new nre(p);return t.runWebGLProgram(m,[r,i],"float32")}const are={kernelName:bx,backendName:"webgl",kernelFunc:ire};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ore=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lre(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],i=ue(s.shape),a=Le({inputs:{x:s},backend:t,attrs:{shape:[i]}}),o=new ore(i),l=t.runWebGLProgram(o,[a],a.dtype),c=Le({inputs:{x:l},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),c}const ure={kernelName:wx,backendName:"webgl",kernelFunc:lre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cre=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:i,strideWidth:a,filterHeight:o,filterWidth:l,dilationHeight:c,dilationWidth:d}=e,{top:p,left:m}=r;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${a});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${d};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s,c=ol(r.shape,i.shape,a,o,"NHWC",l);let d;const p=new cre(c);d=t.runWebGLProgram(p,[r,i],"float32");const m=Le({inputs:{x:d},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(d),m}const dre={kernelName:Nf,backendName:"webgl",kernelFunc:hre};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pre(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,i=e,{allDims:a,summedDims:o,idDims:l}=Vb(r,i.length);Wb(a.length,l,i);const{path:c,steps:d}=Gb(o,l),p=d.length;let m=null,g=a.length;const x=[];for(let b=0;b<p;++b){for(const w of d[b]){const{permutationIndices:v,expandDims:$}=Ub(g,l[w]);let I;Hb(v)?I=i[w]:(I=Xs({inputs:{x:i[w]},backend:t,attrs:{perm:v}}),x.push(I));const N=I.shape.slice();for(let E=0;E<$.length;++E)N.splice($[E],0,1);yt(I.shape,N)||(I=Le({inputs:{x:I},backend:t,attrs:{shape:N}}),x.push(I)),m===null?m=I:(m=rC({inputs:{a:I,b:m},backend:t}),x.push(m))}b<p-1&&(c[b]>=0&&(m=u0({inputs:{x:m},backend:t,attrs:{axis:c[b]-(a.length-g),keepDims:!1}}),x.push(m)),g--)}for(const b of x)b!==m&&t.disposeIntermediateTensorInfo(b);return m}const fre={kernelName:vx,backendName:"webgl",kernelFunc:pre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mre="return (x >= 0.0) ? x : (exp(x) - 1.0);",gre=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,yre=Ft({opSnippet:mre,packedOpSnippet:gre}),xre={kernelName:$h,backendName:"webgl",kernelFunc:yre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bre="return (b >= 0.0) ? a : a * (b + 1.0);",wre=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,vre=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,i=pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yd(wre,s.shape,r.shape):new Iu(bre,s.shape,r.shape);return t.runWebGLProgram(i,[s,r],s.dtype)},Sre={kernelName:Sx,backendName:"webgl",kernelFunc:vre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cre=`
  return vec4(equal(a, b));
`,$re="return float(a == b);",kre=$s({opSnippet:$re,packedOpSnippet:Cre,dtype:"bool",cpuKernelImpl:see}),Nre={kernelName:If,backendName:"webgl",kernelFunc:kre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ire=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Fb};
  float a1 = ${zb};
  float a2 = ${Lb};
  float a3 = ${Pb};
  float a4 = ${Mb};
  float a5 = ${Bb};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Tre=Ft({opSnippet:Ire}),Ere={kernelName:kh,backendName:"webgl",kernelFunc:Tre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rre=xd+`
  return exp(x);
`,Are=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,KO=Ft({opSnippet:Rre,packedOpSnippet:Are,cpuKernelImpl:ree,dtype:"float32"}),Dre={kernelName:Nh,backendName:"webgl",kernelFunc:KO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e2(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:i}=e,a=i.shape.length,o=i.shape.slice();let l=r;return r<0&&(B(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+r+1),o.splice(l,0,1),Le({inputs:{x:i},backend:s,attrs:{shape:o}})}const _re={kernelName:Tf,backendName:"webgl",kernelFunc:e2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aT="return exp(x) - 1.0;",Ore=Ft({opSnippet:aT,packedOpSnippet:aT,cpuKernelImpl:iee}),Fre={kernelName:Ih,backendName:"webgl",kernelFunc:Ore};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let oT=class{constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const i=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=s?`${r}.0`:"1.0";let o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YO(n,e,t){const s=t.texData.get(n.dataId),r=ue(n.shape),i=n.shape[n.shape.length-1],a=r/i,o=Le({inputs:{x:n},backend:t,attrs:{shape:[a,i]}}),l=o.shape,c=new oT("real",l,e),d=new oT("imag",l,e),p=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],m=t.runWebGLProgram(c,p,"float32"),g=t.runWebGLProgram(d,p,"float32"),x=dl({inputs:{real:m,imag:g},backend:t});t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g);const b=Le({inputs:{x},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(x),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zre(n){const{inputs:e,backend:t}=n,{input:s}=e;return YO(s,!1,t)}const Lre={kernelName:Cx,backendName:"webgl",kernelFunc:zre};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Pre=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fm(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:i}=t;if(i=i||Tu(r),i==="string"){const a=Sn(i,ue(s));return a.fill(r),e.makeTensorInfo(s,i,a)}else{const a=new Pre(s,r),o=[[r]];return e.runWebGLProgram(a,[],i,o)}}const Mre={kernelName:$x,backendName:"webgl",kernelFunc:Fm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Bre=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vre={kernelName:kx,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new Bre(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lT="return floor(x);",Ure=Ft({opSnippet:lT,packedOpSnippet:lT,cpuKernelImpl:aee}),Wre={kernelName:Th,backendName:"webgl",kernelFunc:Ure};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gre=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Hre=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,jre=$s({opSnippet:Gre,packedOpSnippet:Hre,dtype:"int32"}),qre={kernelName:Eh,backendName:"webgl",kernelFunc:jre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Xre=class{constructor(e){this.variableNames=["A"];const t=Ys(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kre{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Ys(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yre={kernelName:ky,backendName:"webgl",kernelFunc:Qre};let Oc,Kw=pe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Qre(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:i}=s,a=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,c]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[c,l],p=[c,l,i];if(o||a){const b=pe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Oc==null||b!==Kw)&&(Kw=b,Oc=document.createElement("canvas").getContext("2d",{willReadFrequently:Kw})),Oc.canvas.width=l,Oc.canvas.height=c,Oc.drawImage(r,0,0,l,c),r=Oc.canvas}const m=t.makeTensorInfo(d,"int32");t.texData.get(m.dataId).usage=Br.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(m.dataId),r);const g=pe().getBool("WEBGL_PACK")?new Kre(p):new Xre(p),x=t.runWebGLProgram(g,[m],"int32");return t.disposeData(m.dataId),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:c,dataFormat:d,dilations:p,dimRoundingMode:m,activation:g,leakyreluAlpha:x}=s,b=Rr(d),w=on(r.shape,i.shape,l,p,c,m,!1,b);let v;const $=[],I=a!=null,N=o!=null,E=g==="leakyrelu",_=()=>{const P=[r,i],O=(L,D)=>{if(D==="NCHW"&&L.shape.length===1&&L.shape[0]!==1){const G=Le({inputs:{x:L},backend:t,attrs:{shape:[L.shape[0],1,1]}});return $.push(G),G}return L};if(I&&P.push(O(a,d)),N&&P.push(O(o,d)),E){const L=t.makeTensorInfo([],"float32",rl(x,"float32"));P.push(L),$.push(L)}return P};if(w.filterHeight===1&&w.filterWidth===1&&w.dilationHeight===1&&w.dilationWidth===1&&w.strideHeight===1&&w.strideWidth===1&&(w.padInfo.type==="SAME"||w.padInfo.type==="VALID"))v=GO({x:r,filter:i,convInfo:w,backend:t,bias:a,activation:g,preluActivationWeights:o,leakyreluAlpha:x});else if(w.strideWidth<=2&&b==="channelsLast"&&pe().getBool("WEBGL_EXP_CONV")){const P=g?rf(g,!0):null,O=new WO(w,I,P,N,E),L=[[w.padInfo.top,w.padInfo.left],[w.strideHeight,w.strideWidth],[w.dilationHeight,w.dilationWidth],[w.inHeight,w.inWidth]],D=_();v=t.runWebGLProgram(O,D,"float32",L)}else if(pe().getBool("WEBGL_CONV_IM2COL"))v=HO({x:r,filter:i,convInfo:w,backend:t,bias:a,activation:g,preluActivationWeights:o,leakyreluAlpha:x});else{const P=g?rf(g,!1):null,O=new UO(w,I,P,N,E),L=_();v=t.runWebGLProgram(O,L,"float32")}const z=Le({inputs:{x:v},backend:t,attrs:{shape:w.outShape}});return $.push(v),$.forEach(P=>t.disposeIntermediateTensorInfo(P)),z}const Jre={kernelName:Gp,backendName:"webgl",kernelFunc:Zre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:c,dilations:d,dimRoundingMode:p,activation:m,leakyreluAlpha:g}=s,x=[];let b=d;b==null&&(b=[1,1]),B(Zn(l,b),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${b}'`);const w=on(r.shape,i.shape,l,b,c,p,!0),v=pe().getBool("WEBGL_PACK_DEPTHWISECONV")&&w.strideWidth<=2&&w.outChannels/w.inChannels===1,$=m?rf(m,v):null,I=[r,i],N=a!=null,E=o!=null,_=m==="leakyrelu";if(N&&I.push(a),E&&I.push(o),_){const L=t.makeTensorInfo([],"float32",rl(g,"float32"));I.push(L),x.push(L)}let z;v?z=new XO(w,N,$,E,_):z=new qO(w,N,$,E,_);const P=[[w.padInfo.top,w.padInfo.left],[w.strideHeight,w.strideWidth],[w.dilationHeight,w.dilationWidth],[w.inHeight,w.inWidth]],O=t.runWebGLProgram(z,I,"float32",P);return x.forEach(L=>t.disposeIntermediateTensorInfo(L)),O}const tie={kernelName:Hp,backendName:"webgl",kernelFunc:eie};let nie=class{constructor(e,t,s,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const i=Yt(s.length);let a=`
    int index;`;for(let o=0;o<this.sliceDim;o++)a+=`
          index = round(getIndices(coords[0], ${o}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};
          flattenIndex += index * ${this.strides[o]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sie(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,i=r.shape,a=i[i.length-1],o=ue(s.shape),[l,c,d,p]=Nb(s,r),m=Le({inputs:{x:r},backend:t,attrs:{shape:[c,a]}}),g=Le({inputs:{x:s},backend:t,attrs:{shape:[ue(s.shape)/d,d]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const v=t.readSync(r.dataId),$=t.bufferSync(s),I=oee(v,$,s.dtype,c,a,d,p,s.shape,o);return t.makeTensorInfo(l,s.dtype,I.values)}const x=new nie(a,p,[c,d],s.shape),b=t.runWebGLProgram(x,[g,m],g.dtype),w=Le({inputs:{x:b},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(b),w}const rie={kernelName:Nx,backendName:"webgl",kernelFunc:sie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let iie=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=Yt(this.rank),r=aie(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}};function aie(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${t[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QO(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:i}=e,{axis:a,batchDims:o}=s,l=pt(a,r.shape)[0];if(pe().get("DEBUG")){const $=t.readSync(i.dataId),I=r.shape[l];for(let N=0;N<$.length;++N){const E=$[N];B(E<=I-1&&E>=0,()=>`GatherV2: the index value ${E} is not in [0, ${I-1}]`)}}const c=qb(r,i,l,o),d=ue(i.shape),p=[],m=Le({inputs:{x:r},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),g=Le({inputs:{x:i},backend:t,attrs:{shape:[c.batchSize,d/c.batchSize]}});p.push(m),p.push(g);const x=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([r,i])||r.dtype==="string"){const $=t.bufferSync(g),I=t.bufferSync(m),N=lee(I,$,x);return p.forEach(E=>t.disposeIntermediateTensorInfo(E)),t.makeTensorInfo(c.outputShape,N.dtype,N.values)}const b=new iie(m.shape,x),w=t.runWebGLProgram(b,[m,g],m.dtype);p.push(w);const v=Le({inputs:{x:w},backend:t,attrs:{shape:c.outputShape}});return p.forEach($=>t.disposeIntermediateTensorInfo($)),v}const oie={kernelName:Rf,backendName:"webgl",kernelFunc:QO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lie="return float(a > b);",uie=`
  return vec4(greaterThan(a, b));
`,cie=$s({opSnippet:lie,packedOpSnippet:uie,cpuKernelImpl:uee,dtype:"bool"}),hie={kernelName:Af,backendName:"webgl",kernelFunc:cie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const die="return float(a >= b);",pie=`
  return vec4(greaterThanEqual(a, b));
`,fie=$s({opSnippet:die,packedOpSnippet:pie,dtype:"bool",cpuKernelImpl:cee}),mie={kernelName:Rh,backendName:"webgl",kernelFunc:fie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gie(n){const{inputs:e,backend:t}=n,{input:s}=e;return YO(s,!0,t)}const yie={kernelName:Ix,backendName:"webgl",kernelFunc:gie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xie="return float(!isnan(x) && !isinf(x));",bie=Ft({opSnippet:xie,dtype:"bool"}),wie={kernelName:Dh,backendName:"webgl",kernelFunc:bie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vie="return float(isinf(x));",Sie=Ft({opSnippet:vie,dtype:"bool"}),Cie={kernelName:_h,backendName:"webgl",kernelFunc:Sie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ie="return float(isnan(x));",kie=Ft({opSnippet:$ie,dtype:"bool"}),Nie={kernelName:Oh,backendName:"webgl",kernelFunc:kie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iie="return float(a < b);",Tie=`
  return vec4(lessThan(a, b));
`,Eie=$s({opSnippet:Iie,packedOpSnippet:Tie,cpuKernelImpl:hee,dtype:"bool"}),Rie={kernelName:_f,backendName:"webgl",kernelFunc:Eie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aie="return float(a <= b);",Die=`
  return vec4(lessThanEqual(a, b));
`,_ie=$s({opSnippet:Aie,packedOpSnippet:Die,cpuKernelImpl:dee,dtype:"bool"}),Oie={kernelName:Of,backendName:"webgl",kernelFunc:_ie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fie(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:i}=t,a=pee(s,r,i);return e.makeTensorInfo([a.length],"float32",a)}const zie={kernelName:Ex,backendName:"webgl",kernelFunc:Fie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lie=xd+`
  return x < 0.0 ? 0./0. : log(x);
`,Pie=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Mie=Ft({opSnippet:Lie,packedOpSnippet:Pie,cpuKernelImpl:fee}),Bie={kernelName:Fh,backendName:"webgl",kernelFunc:Mie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vie=xd+`
  return log(1.0 + x);
`,Uie=Ft({opSnippet:Vie}),Wie={kernelName:zh,backendName:"webgl",kernelFunc:Uie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gie="return float(a >= 1.0 && b >= 1.0);",Hie=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,jie=$s({opSnippet:Gie,packedOpSnippet:Hie,dtype:"bool"}),qie={kernelName:Ff,backendName:"webgl",kernelFunc:jie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xie="return float(!(x >= 1.0));",Kie=Ft({opSnippet:Xie}),Yie={kernelName:zf,backendName:"webgl",kernelFunc:Kie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qie="return float(a >= 1.0 || b >= 1.0);",Zie=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Jie=$s({opSnippet:Qie,packedOpSnippet:Zie,dtype:"bool"}),eae={kernelName:Lf,backendName:"webgl",kernelFunc:Jie};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let tae=class{constructor(e,t,s,r,i){this.variableNames=["x"],this.outputShape=[];const a=t,o=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${r}) * sum`;i===.5?l=`inversesqrt(${c})`:i===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nae{constructor(e,t,s,r,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,o=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${r}) * sum`;i===.5?l=`inversesqrt(${c})`:i===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sae=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=s,c=pe().getBool("WEBGL_PACK_NORMALIZATION")?new nae(r.shape,i,a,o,l):new tae(r.shape,i,a,o,l);return t.runWebGLProgram(c,[r],r.dtype)},rae={kernelName:Pf,backendName:"webgl",kernelFunc:sae};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let iae=class{constructor(e,t,s,r,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${i})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aae=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:c,beta:d}=s,p=new iae(r.shape,o,l,c,d);return t.runWebGLProgram(p,[r,i,a],r.dtype)},oae={kernelName:Rx,backendName:"webgl",kernelFunc:aae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lae(n,e,t,s){const r=ue(e),a=ue(n.shape)/r,o=Le({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),l=Vu(o,n.dtype,"max",s),c=Le({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZO(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:i,keepDims:a}=s,o=r.shape.length,l=pt(i,r.shape);let c=l;const d=Qt(c,o),p=d!=null,m=t.shouldExecuteOnCPU([r]);let g=r;if(p){if(m){const I=t.texData.get(g.dataId).values,N=new Array(o);for(let z=0;z<N.length;z++)N[z]=r.shape[d[z]];const E=nC(I,r.shape,r.dtype,d,N);g=t.makeTensorInfo(N,r.dtype);const _=t.texData.get(g.dataId);_.values=E}else g=l0(r,d,t);c=ln(c.length,o)}Mn("max",c,o);const[x,b]=Dn(g.shape,c);let w=x;a&&(w=$n(x,l));let v;if(m){const I=t.texData.get(g.dataId).values,N=mee(I,ue(b),w,r.dtype);v=t.makeTensorInfo(w,r.dtype);const E=t.texData.get(v.dataId);E.values=N}else v=lae(g,b,w,t);return p&&t.disposeIntermediateTensorInfo(g),v}const uae={kernelName:Mf,backendName:"webgl",kernelFunc:ZO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cae=sC+`
  return max(a, b);
`,hae=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Bu+`
  return result;
`,dae=$s({opSnippet:cae,packedOpSnippet:hae,cpuKernelImpl:gee}),pae={kernelName:Lh,backendName:"webgl",kernelFunc:dae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Dm(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,c=1;B(Zn(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const d=As(r.shape,i,a,c,o,l);if(d.filterWidth===1&&d.filterHeight===1&&yt(d.inShape,d.outShape))return Tr({inputs:{x:r},backend:t});const p=new af(d,"max",!1);return t.runWebGLProgram(p,[r],r.dtype)}const mae={kernelName:Bf,backendName:"webgl",kernelFunc:fae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:c}=s,d=[1,1,1],p=Hr(r.shape,i,a,d,o,c,l),m=new iC(p,"max",!1);return t.runWebGLProgram(m,[r],r.dtype)}const yae={kernelName:Vf,backendName:"webgl",kernelFunc:gae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let xae=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,i=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=i-1-e.padInfo.top,l=a-1-e.padInfo.left,c=i*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},bae=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=l-1-e.padInfo.front,m=c-1-e.padInfo.top,g=d-1-e.padInfo.left,x=l*c*d-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${x} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${d} +
                  wR * ${d} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wae(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,a=i,{filterSize:o,strides:l,pad:c,dimRoundingMode:d}=s,p=[1,1,1],m=Hr(a.shape,o,l,p,c,d),g=new iC(m,"max",!0),x=t.runWebGLProgram(g,[a],a.dtype),b=new bae(m),w=t.runWebGLProgram(b,[r,x],a.dtype);return t.disposeIntermediateTensorInfo(x),w}const vae={kernelName:Dx,backendName:"webgl",kernelFunc:wae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sae(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i,output:a}=e,o=i;Dm([i,a],"maxPoolGrad");const{filterSize:l,strides:c,pad:d,dimRoundingMode:p}=s,m=As(o.shape,l,c,1,d,p),g=!0,x=new af(m,"max",g),b=t.runWebGLProgram(x,[o],o.dtype),w=new xae(m),v=t.runWebGLProgram(w,[r,b],o.dtype);return t.disposeIntermediateTensorInfo(b),v}const Cae={kernelName:Ax,backendName:"webgl",kernelFunc:Sae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ae(n,e,t,s){let r=new af(t,"max",!1);const i=s.runWebGLProgram(r,[n],"float32");r=new af(t,"max",!0,!0,e);const a=s.runWebGLProgram(r,[n],"float32");return[i,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kae={kernelName:_x,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=e,l=t;B(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];B(Zn(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const d=As(s.shape,r,i,c,a),[p,m]=$ae(s,o,d,l);return[p,m]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nae(n,e,t,s){const r=ue(e),a=ue(n.shape)/r,o=Le({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),l=Vu(o,"float32","mean",s),c=Le({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iae={kernelName:Uf,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:i}=e,a=t,o=s.shape.length,l=pt(i,s.shape);let c=l;const d=Qt(c,o),p=d!=null,m=a.shouldExecuteOnCPU([s]),g=[];let x=s;if(p){if(m){const N=a.texData.get(x.dataId).values,E=new Array(o);for(let P=0;P<E.length;P++)E[P]=s.shape[d[P]];const _=nC(N,s.shape,s.dtype,d,E);x=a.makeTensorInfo(E,s.dtype);const z=a.texData.get(x.dataId);z.values=_}else x=l0(s,d,a);g.push(x),c=ln(c.length,o)}Mn("sum",c,o);const[b,w]=Dn(x.shape,c);let v=b;r&&(v=$n(b,l));const $=Nae(x,w,v,a);for(const I of g)a.disposeIntermediateTensorInfo(I);return $}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=pt(i,r.shape);let c=l;const d=Qt(c,o);let p=r;d!=null&&(p=Xs({inputs:{x:r},backend:t,attrs:{perm:d}}),c=ln(c.length,r.shape.length)),Mn("min",c,o);const[m,g]=Dn(p.shape,c),x=ue(g),b=Le({inputs:{x:p},backend:t,attrs:{shape:[-1,x]}}),w=Vu(b,b.dtype,"min",t);let v;if(a){const $=$n(m,l);v=Le({inputs:{x:w},backend:t,attrs:{shape:$}})}else v=Le({inputs:{x:w},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w),d!=null&&t.disposeIntermediateTensorInfo(p),v}const Eae={kernelName:Wf,backendName:"webgl",kernelFunc:Tae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rae=sC+`
  return min(a, b);
`,Aae=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Bu+`
  return result;
`,Dae=$s({opSnippet:Rae,packedOpSnippet:Aae,cpuKernelImpl:yee}),_ae={kernelName:Ph,backendName:"webgl",kernelFunc:Dae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Oae=class{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((d,p)=>d[0]+e[p]+d[1]);const r=e.length,i=Yt(r),a=t.map(d=>d[0]).join(","),o=t.map((d,p)=>d[0]+e[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${a});
      ${i} end = ${i}(${o});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fae{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((x,b)=>x[0]+e[b]+x[1]);const r=e.length,i=Yt(r),a=t.map(x=>x[0]).join(","),o=t.map((x,b)=>x[0]+e[b]).join(","),l=Hs("rc",r),c=Hs("source",r),d=`${l[r-1]} < ${this.outputShape[r-1]}`,p=r===1?"source":`vec2(${c.slice(-2).join()})`,m=s==="reflect"?0:1;let g="";if(r===1){const x=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;g=`
        ${i} rc = outputLoc;
        ${x}
        result[0] = getChannel(getX(${c.join()}), ${p});
        ${l[r-1]} += 1;
        if(${d}) {
          ${x}
          result[1] = getChannel(getX(${c.join()}), ${p});
        }
      `}else{const x=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;g=`
        ${i} rc = outputLoc;
        ${x}
        result[0] = getChannel(getX(${c.join()}), ${p});
        ${l[r-1]} += 1;
        if(${d}) {
          ${x}
          result[1] = getChannel(getX(${c.join()}), ${p});
        }
        rc = outputLoc;
        ${l[r-2]} += 1;
        if(${l[r-2]} < ${this.outputShape[r-2]}) {
          ${x}
          result[2] = getChannel(getX(${c.join()}), ${p});
          ${l[r-1]} += 1;
          if(${d}) {
            ${x}
            result[3] = getChannel(getX(${c.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${a});
      const ${i} end = ${i}(${o});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zae=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:i}=t,a=pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Fae(s.shape,r,i):new Oae(s.shape,r,i);return e.runWebGLProgram(a,[s],s.dtype)},Lae={kernelName:Gf,backendName:"webgl",kernelFunc:zae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pae=`if (b == 0.0) return NAN;
  return mod(a, b);`,Mae=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Bu+`
  return result;
`,Bae=$s({opSnippet:Pae,packedOpSnippet:Mae}),Vae={kernelName:Mh,backendName:"webgl",kernelFunc:Bae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Uae=class{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wae=`
if (a == b) {
  return 1.0;
};
return a / b;`,Gae=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,JO=$s({opSnippet:Wae,packedOpSnippet:Gae,checkOutOfBounds:!0}),Hae={kernelName:Ch,backendName:"webgl",kernelFunc:JO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uT="return a - b;",eF=$s({opSnippet:uT,packedOpSnippet:uT,supportsComplex:!0,cpuKernelImpl:Pee}),jae={kernelName:td,backendName:"webgl",kernelFunc:eF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tF(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:i}=s,a=pt([i],r.shape),o=ZO({inputs:{x:r},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),l=$n(o.shape,a),c=Le({inputs:{x:o},backend:t,attrs:{shape:l}}),d=eF({inputs:{a:r,b:c},backend:t}),p=KO({inputs:{x:d},backend:t}),m=u0({inputs:{x:p},backend:t,attrs:{axis:a,keepDims:!1}}),g=Le({inputs:{x:m},backend:t,attrs:{shape:l}}),x=JO({inputs:{a:p,b:g},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),x}const qae={kernelName:lm,backendName:"webgl",kernelFunc:tF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xae(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:i,seed:a,normalized:o}=s,l=o?r:tF({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),c=l.shape[0],d=l.shape[1],p=new Uae(c,d,i),m=[[a]],g=t.runWebGLProgram(p,[l],"int32",m);return o||t.disposeIntermediateTensorInfo(l),g}const Kae={kernelName:Ox,backendName:"webgl",kernelFunc:Xae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yae=$i+`
  return -x;
`,Qae=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Zae(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const i=t.texData.get(s.dataId),[a,o]=bee(i.values,s.shape,s.dtype);return t.makeTensorInfo(o,s.dtype,a)}let r;return pe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Vo(s.shape,Qae):r=new ca(s.shape,Yae),t.runWebGLProgram(r,[s],s.dtype)}const Jae={kernelName:Hf,backendName:"webgl",kernelFunc:Zae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eoe=$b;function toe(n){Mr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s,c=t.readSync(r.dataId),d=t.readSync(i.dataId),{selectedIndices:p}=eoe(c,d,a,o,l);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}const noe={kernelName:Fx,backendName:"webgl",kernelFunc:toe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const soe=uS;function roe(n){Mr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:c}=s,d=t.readSync(r.dataId),p=t.readSync(i.dataId),{selectedIndices:m,validOutputs:g}=soe(d,p,a,o,l,c);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([g]))]}const ioe={kernelName:g2,backendName:"webgl",kernelFunc:roe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aoe=kb;function ooe(n){Mr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:c}=s,d=t.readSync(r.dataId),p=t.readSync(i.dataId),m=a,g=o,x=l,b=c,{selectedIndices:w,selectedScores:v}=aoe(d,p,m,g,x,b);return[t.makeTensorInfo([w.length],"int32",new Int32Array(w)),t.makeTensorInfo([v.length],"float32",new Float32Array(v))]}const loe={kernelName:zx,backendName:"webgl",kernelFunc:ooe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let uoe=class{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const coe=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:i,depth:a,onValue:o,offValue:l}=s,c=ue(r.shape),d=new uoe(c,a,o,l),p=Le({inputs:{x:r},backend:t,attrs:{shape:[c]}}),m=t.runWebGLProgram(d,[p],i);t.disposeIntermediateTensorInfo(p);const g=[...r.shape,a],x=Le({inputs:{x:m},backend:t,attrs:{shape:g}});return t.disposeIntermediateTensorInfo(m),x},hoe={kernelName:Xf,backendName:"webgl",kernelFunc:coe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qy(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=Om({inputs:{input:s},backend:t}),i=Qy({inputs:{x:r},backend:t}),a=c0({inputs:{input:s},backend:t}),o=Qy({inputs:{x:a},backend:t}),l=dl({inputs:{real:i,imag:o},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return Fm({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const doe={kernelName:hm,backendName:"webgl",kernelFunc:Qy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nF(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=Om({inputs:{input:s},backend:t}),i=nF({inputs:{x:r},backend:t}),a=c0({inputs:{input:s},backend:t}),o=Qy({inputs:{x:a},backend:t}),l=dl({inputs:{real:i,imag:o},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return Fm({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const poe={kernelName:qf,backendName:"webgl",kernelFunc:nF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function foe(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return e2({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const i=e[0].shape,a=e[0].dtype;e.forEach(d=>{fr(i,d.shape,"All tensors passed to stack must have matching shapes"),B(a===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(d=>{const p=e2({inputs:{input:d},backend:t,attrs:{dim:r}});return o.push(p),p}),c=VO({inputs:l,backend:t,attrs:{axis:r}});return o.forEach(d=>t.disposeIntermediateTensorInfo(d)),c}const moe={kernelName:Kf,backendName:"webgl",kernelFunc:foe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let goe=class{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,d)=>c[0]+e[d]+c[1]);const r=e.length,i=Yt(r),a=t.map(c=>c[0]).join(","),o=t.map((c,d)=>c[0]+e[d]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${a});
      ${i} end = ${i}(${o});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yoe{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((b,w)=>b[0]+e[w]+b[1]);const r=e.length,i=Yt(r),a=t.map(b=>b[0]).join(","),o=t.map((b,w)=>b[0]+e[w]).join(","),l=Hs("rc",r),c=Hs("source",r),d=`${l[r-1]} < ${this.outputShape[r-1]}`,p=r===1?"source":`vec2(${c.slice(-2).join()})`,m=[`${i} rc = outputLoc;`,`${l[r-1]} += 1;
       if(${d}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${l[r-2]} += 1;
       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${l[r-1]} += 1;
         if(${d}) {`],g=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let x="";for(let b=0,w=r===1?2:4;b<w;b++)x+=`
        ${m[b]}
        if (${g}) {
          result[${b}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${b}] = getChannel(getX(${c.join()}), ${p});
        }
      `;x+=r===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${a});
      const ${i} end = ${i}(${o});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${x}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sF=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:i,constantValue:a}=s;if(ue(r.shape)===0){const c=i.map((d,p)=>d[0]+r.shape[p]+d[1]);return Fm({backend:t,attrs:{shape:c,value:a,dtype:r.dtype}})}const o=pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yoe(r.shape,i,a):new goe(r.shape,i,a),l=[[a]];return t.runWebGLProgram(o,[r],r.dtype,l)},xoe={kernelName:Yf,backendName:"webgl",kernelFunc:sF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const boe=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,woe=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Bu+`
  return result;
`,voe=$s({opSnippet:boe,packedOpSnippet:woe}),Soe={kernelName:Vh,backendName:"webgl",kernelFunc:voe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Coe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s,o=r.shape.length,l=[],c=pt(i,r.shape);let d=c;const p=Qt(d,o);let m=r;p!=null&&(m=Xs({inputs:{x:r},backend:t,attrs:{perm:p}}),d=ln(d.length,o),l.push(m)),Mn("prod",d,o);let g;if(t.shouldExecuteOnCPU([m])){const x=t.texData.get(m.dataId).values,{outVals:b,outShape:w,outDtype:v}=vee(m.shape,m.dtype,x,d);g=t.makeTensorInfo(w,v,b)}else{const[x,b]=Dn(m.shape,d),w=ue(b),v=Le({inputs:{x:m},backend:t,attrs:{shape:[-1,w]}}),$=tb(r.dtype),I=Vu(v,$,"prod",t);g=Le({inputs:{x:I},backend:t,attrs:{shape:x}}),l.push(v),l.push(I)}if(a){l.push(g);const x=$n(g.shape,c);g=Le({inputs:{x:g},backend:t,attrs:{shape:x}})}return l.forEach(x=>t.disposeIntermediateTensorInfo(x)),g}const $oe={kernelName:Zf,backendName:"webgl",kernelFunc:Coe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function koe(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:i,indices:a}=e,{outputRaggedRank:o}=s,l=r.map(v=>t.readSync(v.dataId)),c=r.map(v=>v.shape),d=t.readSync(i.dataId),p=t.readSync(a.dataId),[m,g,x]=See(l,c,d,i.shape,i.dtype,p,a.shape,o),b=m.map(v=>t.makeTensorInfo([v.length],"int32",v)),w=t.makeTensorInfo(x,i.dtype,g);return b.concat([w])}const Noe={kernelName:y2,backendName:"webgl",kernelFunc:koe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ioe(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:i}=e,a=t.readSync(s.dataId),o=t.readSync(r.dataId),l=t.readSync(i.dataId),[c,d]=Cee(a,s.shape,s.dtype,o,r.shape,l,i.shape),p=t.makeTensorInfo([c.length],"int32",c),m=t.makeTensorInfo([d.length],s.dtype,d);return[p,m]}const Toe={kernelName:x2,backendName:"webgl",kernelFunc:Ioe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eoe(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:i,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=s,c=t.readSync(r.dataId),d=t.readSync(i.dataId),p=t.readSync(a.dataId),m=o.map(w=>t.readSync(w.dataId)),g=o.map(w=>w.shape),[x,b]=$ee(c,r.shape,d,i.shape,i.dtype,p,a.shape,m,g,l);return t.makeTensorInfo(x,i.dtype,b)}const Roe={kernelName:b2,backendName:"webgl",kernelFunc:Eoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rF=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:i,dtype:a}=t,o=kee(s,r,i,a);return e.makeTensorInfo([o.length],a,o)},Aoe={kernelName:Lx,backendName:"webgl",kernelFunc:rF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Doe="return 1.0 / x;",_oe=Ft({opSnippet:Doe}),Ooe={kernelName:Uh,backendName:"webgl",kernelFunc:_oe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Foe=$i+`
  return (x < 0.0) ? 0.0 : x;
`,zoe=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Loe=Ft({opSnippet:Foe,packedOpSnippet:zoe}),Poe={kernelName:Wh,backendName:"webgl",kernelFunc:Loe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Moe=$i+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Boe=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Voe=Ft({opSnippet:Moe,packedOpSnippet:Boe}),Uoe={kernelName:Gh,backendName:"webgl",kernelFunc:Voe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Woe=class{constructor(e,t,s,r,i){this.variableNames=["A"],this.outputShape=[];const[a,o,l,c]=e;this.outputShape=[a,t,s,c];const d=[r&&t>1?o-1:o,r&&s>1?l-1:l],p=[r&&t>1?t-1:t,r&&s>1?s-1:s];let m;i?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/p[0]},
          ${d[1]/p[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Goe{constructor(e,t,s,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,l,c]=e;this.outputShape=[a,t,s,c];const d=[r&&t>1?o-1:o,r&&s>1?l-1:l],p=[r&&t>1?t-1:t,r&&s>1?s-1:s];let m;i?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/p[0]},
          ${d[1]/p[1]},
          ${d[1]/p[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hoe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,c]=o,d=pe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Goe(r.shape,l,c,i,a):new Woe(r.shape,l,c,i,a);return t.runWebGLProgram(d,[r],"float32")}const joe={kernelName:tm,backendName:"webgl",kernelFunc:Hoe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let qoe=class{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,i]=t,[,a,o]=e,l=[s&&a>1?r-1:r,s&&o>1?i-1:i],c=[s&&a>1?a-1:a,s&&o>1?o-1:o],d=l[0]/c[0],p=l[1]/c[1],m=1/d,g=1/p,x=Math.ceil(m)*2+2,b=Math.ceil(g)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${g});

        const int winHeight = int(${x});
        const int winWidth = int(${b});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xoe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:a}=s,o=new qoe(i.shape,r.shape,a);return t.runWebGLProgram(o,[i],i.dtype)}const Koe={kernelName:Bx,backendName:"webgl",kernelFunc:Xoe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Yoe=class{constructor(e,t,s,r,i){this.variableNames=["A"],this.outputShape=[];const[a,o,l,c]=e;this.outputShape=[a,t,s,c];const d=[r&&t>1?o-1:o,r&&s>1?l-1:l],p=[r&&t>1?t-1:t,r&&s>1?s-1:s],m=r?"0.5":"0.0";let g;i?g="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":g="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/p[0]},
          ${d[1]/p[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${g};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qoe{constructor(e,t,s,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,l,c]=e;this.outputShape=[a,t,s,c];const d=[r&&t>1?o-1:o,r&&s>1?l-1:l],p=[r&&t>1?t-1:t,r&&s>1?s-1:s],m=r?"0.5":"0.0";let g;i?g="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":g="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/p[0]},
          ${d[1]/p[1]},
          ${d[1]/p[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${g};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zoe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,c]=o,d=pe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Qoe(r.shape,l,c,i,a):new Yoe(r.shape,l,c,i,a);return t.runWebGLProgram(d,[r],r.dtype)}const Joe={kernelName:em,backendName:"webgl",kernelFunc:Zoe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ele=class{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,i]=t,[,a,o]=e,l=[s&&a>1?r-1:r,s&&o>1?i-1:i],c=[s&&a>1?a-1:a,s&&o>1?o-1:o],d=l[0]/c[0],p=l[1]/c[1],m=1/d,g=1/p,x=Math.ceil(m)*2+2,b=Math.ceil(g)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${g});

        const int winHeight = int(${x});
        const int winWidth = int(${b});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tle(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:a}=s,o=new ele(i.shape,r.shape,a);return t.runWebGLProgram(o,[i],i.dtype)}const nle={kernelName:Mx,backendName:"webgl",kernelFunc:tle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sle=class{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,i=e.map((o,l)=>r(l)).join(","),a=Yt(s);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rle{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=Hs("rc",s),i=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,a=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,o=Yt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(r.slice())};
          if(${i}){
            result.g = ${c(r.slice())};
          }
          if(${a}) {
            result.b = ${d(r.slice())};
            if(${i}) {
              result.a = ${p(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(x){return m(x)}function c(x){return x[s-1]="("+x[s-1]+" + 1)",m(x)}function d(x){return x[s-2]="("+x[s-2]+" + 1)",m(x)}function p(x){return x[s-1]="("+x[s-1]+" + 1)",x[s-2]="("+x[s-2]+" + 1)",m(x)}function m(x){const b=e.map(($,I)=>g(I,x)),w=b.join(","),v=b.slice(-2).join(",");return`getChannel(getX(${w}), vec2(${v}))`}function g(x,b){return t.indexOf(x)!==-1&&e[x]!==1?`${e[x]} - ${b[x]} - 1`:`${b[x]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ile(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:i}=s,a=r.shape.length,o=pt(i,r.shape);if(a===0)return Tr({inputs:{x:r},backend:t});const l=pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rle(r.shape,o):new sle(r.shape,o);return t.runWebGLProgram(l,[r],r.dtype)}const ale={kernelName:nm,backendName:"webgl",kernelFunc:ile};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ole=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let i="";typeof t=="number"?i=`float outputValue = ${t.toFixed(2)};`:i=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lle={kernelName:Jx,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:i,center:a}=e,o=t,l=new ole(s.shape,i),[c,d]=Db(a,s.shape[1],s.shape[2]),p=[[c,d,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[s],s.dtype,p)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ule=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,cle=Ft({opSnippet:ule}),hle={kernelName:Hh,backendName:"webgl",kernelFunc:cle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dle="return inversesqrt(x);",ple=Ft({opSnippet:dle,cpuKernelImpl:Nee}),fle={kernelName:jh,backendName:"webgl",kernelFunc:ple};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let aC=class{constructor(e,t,s,r,i,a,o=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const c=Yt(i.length),d=Yt(a.length);let p="";s===1?p="i":s===2&&(p="i, j");const m=`getIndices(${p})`;let g="";r===1?g="i":r===2&&(g="i, coords[1]");const x=`getUpdates(${g})`;let b="";l&&(b="coords[0], coords[1]");const w=`getDefaultValue(${b})`,v=t>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${i});

        void main() {
          ${d} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${v};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${x};
              found = true;
            }
          }
          setOutput(mix(${w}, sum, float(found)));
        }
      `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mle{constructor(e,t,s,r,i,a,o=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const c=Yt(i.length),d=Yt(a.length);let p="";s===1?p="i":s===2&&(p="i, j");const m=`getIndices(${p})`;let g="";r===1?g="i":r===2&&(g="i, coords[1]");const x=`getUpdates(${g})`;let b="";l&&(b="coords[0], coords[1]");const w=`getDefaultValue(${b})`,v=t>1?"strides[j]":"strides",$=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${i});

        void main() {
          ${d} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${m});
              flattenedIndex += index.xz * ${v};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${$};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${x};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${w}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gle(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:i}=e,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:c,strides:d,outputSize:p}=Sa(i,r,a),m=[p/c,c];if(p===0)return t.makeTensorInfo(a,r.dtype);const g=Le({inputs:{x:r},backend:t,attrs:{shape:[l,o]}}),x=Le({inputs:{x:i},backend:t,attrs:{shape:[l,c]}}),b=t.makeTensorInfo([],"float32",new Float32Array([0]));let w;pe().getBool("WEBGL_PACK")?w=new mle(l,o,g.shape.length,x.shape.length,d,m):w=new aC(l,o,g.shape.length,x.shape.length,d,m);const v=t.runWebGLProgram(w,[x,g,b],x.dtype),$=Le({inputs:{x:v},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(b),$}const yle={kernelName:Vx,backendName:"webgl",kernelFunc:gle};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let xle=class{constructor(e,t,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const i="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,o=pe().getNumber("WEBGL_VERSION")===2?i:a,l=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${o}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ble(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:i}=e,{side:a}=s,o=new xle(r.shape[0],r.shape[1],i.shape[1],a),l=[[r.shape[1]]];return t.runWebGLProgram(o,[r,i],"int32",l)}const wle={kernelName:Wx,backendName:"webgl",kernelFunc:ble};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let vle=class{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,i;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)i="resRC",r="resRC";else{const o=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let d=0;d<t.length;d++)c.push(`${o[d]}`),d<e&&l.push(`${o[d]}`);r=l.join(),i=c.join()}const a=Yt(s);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sle(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:i}=e,a=new vle(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(a,[s,r,i],hs(r.dtype,i.dtype))}const Cle={kernelName:sm,backendName:"webgl",kernelFunc:Sle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $le=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${wm};
  float scale = ${vm};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,kle=Ft({opSnippet:$le}),Nle={kernelName:qh,backendName:"webgl",kernelFunc:kle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ile=xd+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Tle=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ele=Ft({opSnippet:Ile,packedOpSnippet:Tle,cpuKernelImpl:Tee}),Rle={kernelName:Qh,backendName:"webgl",kernelFunc:Ele};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ale=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Dle=Ft({opSnippet:Ale}),_le={kernelName:Yh,backendName:"webgl",kernelFunc:Dle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ole=xd+`
  return sin(x);
`,Fle=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Bu}
  return result;
`,zle=Ft({opSnippet:Ole,packedOpSnippet:Fle}),Lle={kernelName:Xh,backendName:"webgl",kernelFunc:zle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ple=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Mle=Ft({opSnippet:Ple}),Ble={kernelName:Kh,backendName:"webgl",kernelFunc:Mle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vle=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Ule=Ft({opSnippet:Vle}),Wle={kernelName:Zh,backendName:"webgl",kernelFunc:Ule};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gle=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,paddings:a}=s;B(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=i.reduce((v,$)=>v*$),l=[[0,0]];l.push(...a);for(let v=1+i.length;v<r.shape.length;++v)l.push([0,0]);const c=[],d=sF({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),p=_u(d.shape,i,o,!1),m=Ou(p.length,i.length,!1),g=Fu(d.shape,i,o,!1),x=Le({inputs:{x:d},backend:t,attrs:{shape:p}}),b=Xs({inputs:{x},backend:t,attrs:{perm:m}}),w=Le({inputs:{x:b},backend:t,attrs:{shape:g}});return c.push(d),c.push(x),c.push(b),c.forEach(v=>t.disposeIntermediateTensorInfo(v)),w},Hle={kernelName:am,backendName:"webgl",kernelFunc:Gle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jle(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:i,defaultValue:a}=e;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const o=t.readSync(s.dataId),l=t.readSync(r.dataId),c=t.readSync(i.dataId),d=t.readSync(a.dataId)[0],[p,m,g,x,b]=Ree(o,s.shape,s.dtype,l,r.dtype,c,d);return[t.makeTensorInfo(m,s.dtype,p),t.makeTensorInfo([m[0]],r.dtype,g),t.makeTensorInfo([x.length],"bool",new Uint8Array(x.map(w=>Number(w)))),t.makeTensorInfo([b.length],s.dtype,new Int32Array(b))]}const qle={kernelName:w2,backendName:"webgl",kernelFunc:jle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xle(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:i}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(t.readSync(r.dataId)),o=t.readSync(s.dataId),l=Array.from(t.readSync(i.dataId)),[c,d,p]=Aee(o,s.shape,s.dtype,a,l);return[t.makeTensorInfo(d,s.dtype,c),t.makeTensorInfo([p.length],i.dtype,new Int32Array(p))]}const Kle={kernelName:v2,backendName:"webgl",kernelFunc:Xle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yle(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);const a=t.readSync(s.dataId),o=t.readSync(r.dataId),l=t.readSync(i.dataId),[c,d]=TO(a,s.shape,s.dtype,o,l,!0);return t.makeTensorInfo(d,s.dtype,c)}const Qle={kernelName:Gx,backendName:"webgl",kernelFunc:Yle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zle(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);const a=t.readSync(s.dataId),o=t.readSync(r.dataId),l=t.readSync(i.dataId),[c,d]=TO(a,s.shape,s.dtype,o,l);return t.makeTensorInfo(d,s.dtype,c)}const Jle={kernelName:Hx,backendName:"webgl",kernelFunc:Zle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eue(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:i,defaultValue:a}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:c,sliceSize:d,strides:p,outputSize:m}=Sa(i,r,o),g=!1;if(i.dtype==="string"){const v=t.bufferSync(r),$=t.bufferSync(i),I=Bi(t.readSync(a.dataId)[0]),N=Iee(v,$,o,m,d,c,l,p,I,g);return t.makeTensorInfo(o,N.dtype,N.values)}const x=new aC(c,l,r.shape.length,i.shape.length,p,[m,1],g),b=t.runWebGLProgram(x,[i,r,a],i.dtype),w=Le({inputs:{x:b},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(b),w}const tue={kernelName:jx,backendName:"webgl",kernelFunc:eue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nue(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:i,axis:a}=s,o=pt(a,r.shape)[0],l=jb(r,i,o),c=r.shape.length,d=new Array(c).fill(0),p=r.shape.slice();return l.map(m=>{const g=[...p];g[o]=m;const x=bd({inputs:{x:r},backend:t,attrs:{begin:d,size:g}});return d[o]+=m,x})}const sue={kernelName:om,backendName:"webgl",kernelFunc:nue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cT="return sqrt(x);",rue=Ft({opSnippet:cT,packedOpSnippet:cT,cpuKernelImpl:Dee}),iue={kernelName:Jh,backendName:"webgl",kernelFunc:rue};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aue="return x * x;",oue=Ft({opSnippet:aue}),lue={kernelName:qx,backendName:"webgl",kernelFunc:oue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hT="return (a - b) * (a - b);",uue=$s({opSnippet:hT,packedOpSnippet:hT}),cue={kernelName:ed,backendName:"webgl",kernelFunc:uue};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hue(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const i=t.readSync(r.dataId),a=Gi(i),o=_ee(a,"string",s);return t.makeTensorInfo(r.shape,"string",o)}const due={kernelName:Xx,backendName:"webgl",kernelFunc:hue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pue({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=$i+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,i=new ca(s.shape,r);return t.runWebGLProgram(i,[s],s.dtype)}const fue={kernelName:id,backendName:"webgl",kernelFunc:pue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mue=class{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,i=Yt(s.length),a=Yt(s.length);let o="";if(r===1)o="coords * strides + begin";else{let l=0;o=s.map((c,d)=>(l++,s.length===1?`coords * strides[${d}] + begin[${d}]`:`coords[${l-1}] * strides[${d}] + begin[${d}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${e});
      ${i} strides = ${i}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gue(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:c,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:m}=s,{finalShapeSparse:g,finalShape:x,isIdentity:b,sliceDim0:w,isSimpleSlice:v,begin:$,end:I,strides:N}=Eb(r.shape,i,a,o,l,c,d,p,m);let E;if(b)E=Le({inputs:{x:r},backend:t,attrs:{shape:x}});else if(w||v){B(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const z=Tb($,I,N),P=bd({inputs:{x:r},backend:t,attrs:{begin:$,size:z}});E=Le({inputs:{x:P},backend:t,attrs:{shape:x}}),t.disposeIntermediateTensorInfo(P)}else if(t.shouldExecuteOnCPU([r])){const P=t.readSync(r.dataId),O=dt(r.shape,r.dtype,P),L=Oee(g,O,N,$);E=t.makeTensorInfo(x,r.dtype,L.values)}else{const P=new mue($,N,g);E=t.runWebGLProgram(P,[r],r.dtype)}const _=Le({inputs:{x:E},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(E),_}const yue={kernelName:Kx,backendName:"webgl",kernelFunc:gue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xue(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:c}=s,{data:d,dataSplits:p}=e,m=t.readSync(d.dataId),g=t.readSync(p.dataId),[x,b]=Fee(m,g,r,i,a,o,l,c);return[t.makeTensorInfo([x.length],"string",x),t.makeTensorInfo(p.shape,"int32",b)]}const bue={kernelName:Yx,backendName:"webgl",kernelFunc:xue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wue(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:i,delimiter:a}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=t.readSync(i.dataId),l=t.readSync(a.dataId)[0],[c,d,p]=zee(o,l,r),m=d.length;return[t.makeTensorInfo([m,2],"int32",c),t.makeTensorInfo([m],"string",d),t.makeTensorInfo([2],"int32",new Int32Array(p))]}const vue={kernelName:S2,backendName:"webgl",kernelFunc:wue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sue(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(i.dataId),o=Lee(a,r);return t.makeTensorInfo(i.shape,"int32",o)}const Cue={kernelName:C2,backendName:"webgl",kernelFunc:Sue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ue="return tan(x);",kue=Ft({opSnippet:$ue}),Nue={kernelName:nd,backendName:"webgl",kernelFunc:kue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iue=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Tue=Ft({opSnippet:Iue}),Eue={kernelName:sd,backendName:"webgl",kernelFunc:Tue};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rue(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:i,updates:a}=e,{sliceRank:o,numUpdates:l,sliceSize:c,strides:d,outputSize:p}=Sa(a,i,r.shape),m=[p/c,c];if(p===0)return t.makeTensorInfo(r.shape,i.dtype);const g=Le({inputs:{x:i},backend:t,attrs:{shape:[l,o]}}),x=Le({inputs:{x:a},backend:t,attrs:{shape:[l,c]}}),b=Le({inputs:{x:r},backend:t,attrs:{shape:m}}),w=new aC(l,o,g.shape.length,x.shape.length,d,m,!1,!0),v=t.runWebGLProgram(w,[x,g,b],b.dtype),$=Le({inputs:{x:v},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(v),$}const Aue={kernelName:Ux,backendName:"webgl",kernelFunc:Rue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Due=class{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[a]*t[a];this.outputShape=s,this.rank=s.length;const r=Yt(this.rank),i=_ue(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}};function _ue(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iF(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:i}=s;if(r.dtype==="string"||r.shape.length>5){const l=t.readSync(r.dataId),c=r.dtype==="string"?l.map(m=>Bi(m)):l,d=dt(r.shape,r.dtype,c),p=Mee(d,i);return t.makeTensorInfo(p.shape,p.dtype,p.values)}const a=new Due(r.shape,i);return t.runWebGLProgram(a,[r],r.dtype)}const Oue={kernelName:rd,backendName:"webgl",kernelFunc:iF};let Fue=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},zue=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ql(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function dT(n){let e=1;for(;e<n;)e*=2;return e}function Lue(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:i,sorted:a}=s,o=pe().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=pe().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,d=c[c.length-1];if(t.shouldExecuteOnCPU([r])||d<o||i>l){const L=t.readSync(r.dataId),[D,G]=Bee(L,c,r.dtype,i,a);return[t.makeTensorInfo(D.shape,D.dtype,D.values),t.makeTensorInfo(G.shape,G.dtype,G.values)]}if(i===0)return c[c.length-1]=0,[t.makeTensorInfo(c,r.dtype,[]),t.makeTensorInfo(c,"int32",[])];if(d===1)return[r,Fm({attrs:{shape:c,dtype:"int32",value:0},backend:t})];const p=t.texData.get(r.dataId),m=p!==null&&p.isPacked,g=m?t.unpackTensor(r):r,b=ue(c)/d,w=Le({inputs:{x:g},attrs:{shape:[b,d]},backend:t});m&&Ql(t,g);const v=dT(i),$=dT(d);let I=null;const N=()=>I===null?[w,w]:[w,I],E=(L,D,G)=>{const q=N(),ee=new Fue(G),H=[[d],[I===null?1:0],[Number.NEGATIVE_INFINITY],[L],[D]],oe=I;I=t.runWebGLProgram(ee,q,"int32",H),Ql(t,oe)};for(let L=1;L<v;L*=2){const D=L*2;for(let G=L;G>=1;G/=2)E(D,G,[b,$])}for(let L=$;L>v;L/=2){const D=N(),G=new zue([b,L/2]),ee=[[d],[I===null?1:0],[v]],Z=I;I=t.runWebGLProgram(G,D,"int32",ee),Ql(t,Z);const H=v/2,oe=H*2;for(let se=H;se>=1;se/=2)E(oe,se,I.shape)}let _=I;I=bd({inputs:{x:I},backend:t,attrs:{begin:0,size:[b,i]}}),Ql(t,_);let z=QO({inputs:{x:w,indices:I},backend:t,attrs:{axis:1,batchDims:1}});Ql(t,w);const P=c.slice(0,-1);P.push(i),_=I,I=Le({inputs:{x:I},attrs:{shape:P},backend:t}),Ql(t,_);const O=z;return z=Le({inputs:{x:z},attrs:{shape:P},backend:t}),Ql(t,O),[z,I]}const Pue={kernelName:Qx,backendName:"webgl",kernelFunc:Lue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Mue=class{constructor(e,t,s,r,i,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const o=s==="nearest"?1:2;let l;switch(r){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bue(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:c}=s,[d,p,m,g]=r.shape,[x,b]=c??[p,m],w=[d,x,b,g],v=new Mue(p,m,a,o,l,w);return t.runWebGLProgram(v,[r,i],"float32")}const Vue={kernelName:Zx,backendName:"webgl",kernelFunc:Bue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uue(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:i}=e;Dm(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(i.dataId),{outputValues:o,outputShape:l,indices:c}=Vee(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([c.length],"int32",c)]}const Wue={kernelName:$2,backendName:"webgl",kernelFunc:Uue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gue(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r,o=a.shape.length,l=r.shape[i],c=new Array(o-1);let d=0;for(let b=0;b<o;b++)b!==i&&(c[d++]=a.shape[b]);const p=[],m=new Array(o).fill(0),g=a.shape.slice();g[i]=1;const x=new Array(l);for(let b=0;b<x.length;b++){m[i]=b;const w=bd({inputs:{x:a},backend:t,attrs:{begin:m,size:g}}),v=Le({inputs:{x:w},backend:t,attrs:{shape:c}});x[b]=v,p.push(w)}return p.forEach(b=>t.disposeIntermediateTensorInfo(b)),x}const Hue={kernelName:um,backendName:"webgl",kernelFunc:Gue};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jue{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,i=e.inSize,a=e.numSegments,o=a*Math.ceil(i/s);this.outputShape=[r,o];const l="0.0",c="sumValue",d=Math.floor(s/4)*4,p=s%4,m=`
        sumValue += dot(values, segFilter);
    `;let g="";i%s>0&&(g=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let x="";i%s>0&&(x=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${g}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${x}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${d};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function que(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:i}=e,{numSegments:a}=s,o=r.shape.length,l=[];let c=0;const d=Qt([c],o);let p=r;d!=null&&(p=Xs({inputs:{x:r},backend:t,attrs:{perm:d}}),l.push(p),c=ln(1,o)[0]);const m=bS(p.shape,c,a),g=ue([p.shape[c]]),x=Le({inputs:{x:p},backend:t,attrs:{shape:[-1,g]}});l.push(x);const b=tb(r.dtype),w=(N,E,_,z,P)=>{const O=N.shape[0],L=N.shape[1],D=zA(L,P),G={windowSize:D,inSize:L,batchSize:O,numSegments:P},q=new jue(G,E),ee=t.compileAndRun(q,[N,_],z);if(l.push(ee),ee.shape[1]===P)return ee;const Z=rF({backend:t,attrs:{start:0,stop:P,step:1,dtype:"float32"}}),H=iF({inputs:{x:Z},backend:t,attrs:{reps:[L/D]}});return l.push(Z),l.push(H),w(ee,E,H,z,P)},v=w(x,"unsortedSegmentSum",i,b,a),$=Le({inputs:{x:v},backend:t,attrs:{shape:m}});let I=$;if(d!=null){l.push($);const N=wa(d);I=Xs({inputs:{x:I},backend:t,attrs:{perm:N}})}return l.forEach(N=>t.disposeIntermediateTensorInfo(N)),I}const Xue={kernelName:cm,backendName:"webgl",kernelFunc:que};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kue=[Dte,Ote,Lte,Bte,Ute,Hte,qte,Kte,Jte,tne,rne,one,cne,fne,yne,bne,vne,kne,Ine,Ene,_ne,Bne,Une,jne,Xne,ese,nse,ase,mte,use,fse,xse,$se,Ise,Ese,Ase,_se,Lse,Bse,Wse,Hse,qse,Kse,Zse,ere,rre,are,ure,dre,fre,xre,Sre,Nre,Ere,Dre,_re,Fre,Lre,Mre,Vre,Wre,qre,Yre,Jre,tie,rie,oie,hie,mie,fte,yie,dse,wie,Cie,Nie,yte,Rie,Oie,zie,Bie,Wie,qie,Yie,eae,rae,oae,uae,pae,mae,yae,vae,Cae,kae,Iae,Eae,_ae,Lae,Vae,Kae,wte,Jae,noe,ioe,loe,Yne,hoe,poe,moe,xoe,Soe,bte,$oe,Noe,Toe,Roe,Aoe,Qne,Hae,Ooe,Poe,Uoe,Ste,joe,Koe,Joe,nle,ale,lle,hle,fle,yle,wle,Cle,Nle,Rle,_le,Lle,Ble,Pne,qae,Wle,Hle,qle,Kle,Qle,Jle,tue,sue,iue,lue,cue,due,fue,yue,bue,vue,Cue,jae,Ete,Nue,Eue,Aue,Oue,Pue,Vue,Rte,Wue,Hue,Xue,doe];for(const n of Kue)k2(n);var Yw={},pT;function Yue(){return pT||(pT=1,(function(){var n;function e(C){var T=0;return function(){return T<C.length?{done:!1,value:C[T++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(C,T,A){return C==Array.prototype||C==Object.prototype||(C[T]=A.value),C};function s(C){C=[typeof globalThis=="object"&&globalThis,C,typeof window=="object"&&window,typeof self=="object"&&self,typeof lN=="object"&&lN];for(var T=0;T<C.length;++T){var A=C[T];if(A&&A.Math==Math)return A}throw Error("Cannot find global object")}var r=s(this);function i(C,T){if(T)e:{var A=r;C=C.split(".");for(var M=0;M<C.length-1;M++){var j=C[M];if(!(j in A))break e;A=A[j]}C=C[C.length-1],M=A[C],T=T(M),T!=M&&T!=null&&t(A,C,{configurable:!0,writable:!0,value:T})}}i("Symbol",function(C){function T(K){if(this instanceof T)throw new TypeError("Symbol is not a constructor");return new A(M+(K||"")+"_"+j++,K)}function A(K,X){this.h=K,t(this,"description",{configurable:!0,writable:!0,value:X})}if(C)return C;A.prototype.toString=function(){return this.h};var M="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",j=0;return T}),i("Symbol.iterator",function(C){if(C)return C;C=Symbol("Symbol.iterator");for(var T="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),A=0;A<T.length;A++){var M=r[T[A]];typeof M=="function"&&typeof M.prototype[C]!="function"&&t(M.prototype,C,{configurable:!0,writable:!0,value:function(){return a(e(this))}})}return C});function a(C){return C={next:C},C[Symbol.iterator]=function(){return this},C}function o(C){var T=typeof Symbol<"u"&&Symbol.iterator&&C[Symbol.iterator];return T?T.call(C):{next:e(C)}}function l(C){if(!(C instanceof Array)){C=o(C);for(var T,A=[];!(T=C.next()).done;)A.push(T.value);C=A}return C}var c=typeof Object.assign=="function"?Object.assign:function(C,T){for(var A=1;A<arguments.length;A++){var M=arguments[A];if(M)for(var j in M)Object.prototype.hasOwnProperty.call(M,j)&&(C[j]=M[j])}return C};i("Object.assign",function(C){return C||c});var d=typeof Object.create=="function"?Object.create:function(C){function T(){}return T.prototype=C,new T},p;if(typeof Object.setPrototypeOf=="function")p=Object.setPrototypeOf;else{var m;e:{var g={a:!0},x={};try{x.__proto__=g,m=x.a;break e}catch{}m=!1}p=m?function(C,T){if(C.__proto__=T,C.__proto__!==T)throw new TypeError(C+" is not extensible");return C}:null}var b=p;function w(C,T){if(C.prototype=d(T.prototype),C.prototype.constructor=C,b)b(C,T);else for(var A in T)if(A!="prototype")if(Object.defineProperties){var M=Object.getOwnPropertyDescriptor(T,A);M&&Object.defineProperty(C,A,M)}else C[A]=T[A];C.za=T.prototype}function v(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function $(C){if(C.m)throw new TypeError("Generator is already running");C.m=!0}v.prototype.u=function(C){this.i=C};function I(C,T){C.l={ma:T,na:!0},C.h=C.s||C.v}v.prototype.return=function(C){this.l={return:C},this.h=this.v};function N(C,T,A){return C.h=A,{value:T}}function E(C){this.h=new v,this.i=C}function _(C,T){$(C.h);var A=C.h.j;return A?z(C,"return"in A?A.return:function(M){return{value:M,done:!0}},T,C.h.return):(C.h.return(T),P(C))}function z(C,T,A,M){try{var j=T.call(C.h.j,A);if(!(j instanceof Object))throw new TypeError("Iterator result "+j+" is not an object");if(!j.done)return C.h.m=!1,j;var K=j.value}catch(X){return C.h.j=null,I(C.h,X),P(C)}return C.h.j=null,M.call(C.h,K),P(C)}function P(C){for(;C.h.h;)try{var T=C.i(C.h);if(T)return C.h.m=!1,{value:T.value,done:!1}}catch(A){C.h.i=void 0,I(C.h,A)}if(C.h.m=!1,C.h.l){if(T=C.h.l,C.h.l=null,T.na)throw T.ma;return{value:T.return,done:!0}}return{value:void 0,done:!0}}function O(C){this.next=function(T){return $(C.h),C.h.j?T=z(C,C.h.j.next,T,C.h.u):(C.h.u(T),T=P(C)),T},this.throw=function(T){return $(C.h),C.h.j?T=z(C,C.h.j.throw,T,C.h.u):(I(C.h,T),T=P(C)),T},this.return=function(T){return _(C,T)},this[Symbol.iterator]=function(){return this}}function L(C){function T(M){return C.next(M)}function A(M){return C.throw(M)}return new Promise(function(M,j){function K(X){X.done?M(X.value):Promise.resolve(X.value).then(T,A).then(K,j)}K(C.next())})}function D(C){return L(new O(new E(C)))}i("Promise",function(C){function T(X){this.i=0,this.j=void 0,this.h=[],this.u=!1;var ae=this.l();try{X(ae.resolve,ae.reject)}catch(we){ae.reject(we)}}function A(){this.h=null}function M(X){return X instanceof T?X:new T(function(ae){ae(X)})}if(C)return C;A.prototype.i=function(X){if(this.h==null){this.h=[];var ae=this;this.j(function(){ae.m()})}this.h.push(X)};var j=r.setTimeout;A.prototype.j=function(X){j(X,0)},A.prototype.m=function(){for(;this.h&&this.h.length;){var X=this.h;this.h=[];for(var ae=0;ae<X.length;++ae){var we=X[ae];X[ae]=null;try{we()}catch(Ee){this.l(Ee)}}}this.h=null},A.prototype.l=function(X){this.j(function(){throw X})},T.prototype.l=function(){function X(Ee){return function(ze){we||(we=!0,Ee.call(ae,ze))}}var ae=this,we=!1;return{resolve:X(this.I),reject:X(this.m)}},T.prototype.I=function(X){if(X===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(X instanceof T)this.L(X);else{e:switch(typeof X){case"object":var ae=X!=null;break e;case"function":ae=!0;break e;default:ae=!1}ae?this.F(X):this.s(X)}},T.prototype.F=function(X){var ae=void 0;try{ae=X.then}catch(we){this.m(we);return}typeof ae=="function"?this.M(ae,X):this.s(X)},T.prototype.m=function(X){this.v(2,X)},T.prototype.s=function(X){this.v(1,X)},T.prototype.v=function(X,ae){if(this.i!=0)throw Error("Cannot settle("+X+", "+ae+"): Promise already settled in state"+this.i);this.i=X,this.j=ae,this.i===2&&this.K(),this.H()},T.prototype.K=function(){var X=this;j(function(){if(X.D()){var ae=r.console;typeof ae<"u"&&ae.error(X.j)}},1)},T.prototype.D=function(){if(this.u)return!1;var X=r.CustomEvent,ae=r.Event,we=r.dispatchEvent;return typeof we>"u"?!0:(typeof X=="function"?X=new X("unhandledrejection",{cancelable:!0}):typeof ae=="function"?X=new ae("unhandledrejection",{cancelable:!0}):(X=r.document.createEvent("CustomEvent"),X.initCustomEvent("unhandledrejection",!1,!0,X)),X.promise=this,X.reason=this.j,we(X))},T.prototype.H=function(){if(this.h!=null){for(var X=0;X<this.h.length;++X)K.i(this.h[X]);this.h=null}};var K=new A;return T.prototype.L=function(X){var ae=this.l();X.T(ae.resolve,ae.reject)},T.prototype.M=function(X,ae){var we=this.l();try{X.call(ae,we.resolve,we.reject)}catch(Ee){we.reject(Ee)}},T.prototype.then=function(X,ae){function we(Je,We){return typeof Je=="function"?function(at){try{Ee(Je(at))}catch(ft){ze(ft)}}:We}var Ee,ze,ot=new T(function(Je,We){Ee=Je,ze=We});return this.T(we(X,Ee),we(ae,ze)),ot},T.prototype.catch=function(X){return this.then(void 0,X)},T.prototype.T=function(X,ae){function we(){switch(Ee.i){case 1:X(Ee.j);break;case 2:ae(Ee.j);break;default:throw Error("Unexpected state: "+Ee.i)}}var Ee=this;this.h==null?K.i(we):this.h.push(we),this.u=!0},T.resolve=M,T.reject=function(X){return new T(function(ae,we){we(X)})},T.race=function(X){return new T(function(ae,we){for(var Ee=o(X),ze=Ee.next();!ze.done;ze=Ee.next())M(ze.value).T(ae,we)})},T.all=function(X){var ae=o(X),we=ae.next();return we.done?M([]):new T(function(Ee,ze){function ot(at){return function(ft){Je[at]=ft,We--,We==0&&Ee(Je)}}var Je=[],We=0;do Je.push(void 0),We++,M(we.value).T(ot(Je.length-1),ze),we=ae.next();while(!we.done)})},T});function G(C,T){C instanceof String&&(C+="");var A=0,M=!1,j={next:function(){if(!M&&A<C.length){var K=A++;return{value:T(K,C[K]),done:!1}}return M=!0,{done:!0,value:void 0}}};return j[Symbol.iterator]=function(){return j},j}i("Array.prototype.keys",function(C){return C||function(){return G(this,function(T){return T})}}),i("Array.prototype.fill",function(C){return C||function(T,A,M){var j=this.length||0;for(0>A&&(A=Math.max(0,j+A)),(M==null||M>j)&&(M=j),M=Number(M),0>M&&(M=Math.max(0,j+M)),A=Number(A||0);A<M;A++)this[A]=T;return this}});function q(C){return C||Array.prototype.fill}i("Int8Array.prototype.fill",q),i("Uint8Array.prototype.fill",q),i("Uint8ClampedArray.prototype.fill",q),i("Int16Array.prototype.fill",q),i("Uint16Array.prototype.fill",q),i("Int32Array.prototype.fill",q),i("Uint32Array.prototype.fill",q),i("Float32Array.prototype.fill",q),i("Float64Array.prototype.fill",q),i("Object.is",function(C){return C||function(T,A){return T===A?T!==0||1/T===1/A:T!==T&&A!==A}}),i("Array.prototype.includes",function(C){return C||function(T,A){var M=this;M instanceof String&&(M=String(M));var j=M.length;for(A=A||0,0>A&&(A=Math.max(A+j,0));A<j;A++){var K=M[A];if(K===T||Object.is(K,T))return!0}return!1}}),i("String.prototype.includes",function(C){return C||function(T,A){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(T instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(T,A||0)!==-1}});var ee=this||self;function Z(C,T){C=C.split(".");var A=ee;C[0]in A||typeof A.execScript>"u"||A.execScript("var "+C[0]);for(var M;C.length&&(M=C.shift());)C.length||T===void 0?A[M]&&A[M]!==Object.prototype[M]?A=A[M]:A=A[M]={}:A[M]=T}function H(C){var T;e:{if((T=ee.navigator)&&(T=T.userAgent))break e;T=""}return T.indexOf(C)!=-1}var oe=Array.prototype.map?function(C,T){return Array.prototype.map.call(C,T,void 0)}:function(C,T){for(var A=C.length,M=Array(A),j=typeof C=="string"?C.split(""):C,K=0;K<A;K++)K in j&&(M[K]=T.call(void 0,j[K],K,C));return M},se={},de=null;function W(C){var T=C.length,A=3*T/4;A%3?A=Math.floor(A):"=.".indexOf(C[T-1])!=-1&&(A="=.".indexOf(C[T-2])!=-1?A-2:A-1);var M=new Uint8Array(A),j=0;return ne(C,function(K){M[j++]=K}),j!==A?M.subarray(0,j):M}function ne(C,T){function A(we){for(;M<C.length;){var Ee=C.charAt(M++),ze=de[Ee];if(ze!=null)return ze;if(!/^[\s\xa0]*$/.test(Ee))throw Error("Unknown base64 encoding at char: "+Ee)}return we}ge();for(var M=0;;){var j=A(-1),K=A(0),X=A(64),ae=A(64);if(ae===64&&j===-1)break;T(j<<2|K>>4),X!=64&&(T(K<<4&240|X>>2),ae!=64&&T(X<<6&192|ae))}}function ge(){if(!de){de={};for(var C="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),T=["+/=","+/","-_=","-_.","-_"],A=0;5>A;A++){var M=C.concat(T[A].split(""));se[A]=M;for(var j=0;j<M.length;j++){var K=M[j];de[K]===void 0&&(de[K]=j)}}}}var me=typeof Uint8Array<"u",xe=!(H("Trident")||H("MSIE"))&&typeof ee.btoa=="function";function $e(C){if(!xe){var T;T===void 0&&(T=0),ge(),T=se[T];for(var A=Array(Math.floor(C.length/3)),M=T[64]||"",j=0,K=0;j<C.length-2;j+=3){var X=C[j],ae=C[j+1],we=C[j+2],Ee=T[X>>2];X=T[(X&3)<<4|ae>>4],ae=T[(ae&15)<<2|we>>6],we=T[we&63],A[K++]=Ee+X+ae+we}switch(Ee=0,we=M,C.length-j){case 2:Ee=C[j+1],we=T[(Ee&15)<<2]||M;case 1:C=C[j],A[K]=T[C>>2]+T[(C&3)<<4|Ee>>4]+we+M}return A.join("")}for(T="";10240<C.length;)T+=String.fromCharCode.apply(null,C.subarray(0,10240)),C=C.subarray(10240);return T+=String.fromCharCode.apply(null,C),btoa(T)}var Ne=RegExp("[-_.]","g");function Me(C){switch(C){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function Fe(C){if(!xe)return W(C);Ne.test(C)&&(C=C.replace(Ne,Me)),C=atob(C);for(var T=new Uint8Array(C.length),A=0;A<C.length;A++)T[A]=C.charCodeAt(A);return T}var Pe;function He(){return Pe||(Pe=new Uint8Array(0))}var tt={},$t=typeof Uint8Array.prototype.slice=="function",nt=0,mt=0;function _t(C){var T=0>C;C=Math.abs(C);var A=C>>>0;C=Math.floor((C-A)/4294967296),T&&(A=o(Wt(A,C)),T=A.next().value,C=A.next().value,A=T),nt=A>>>0,mt=C>>>0}var kt=typeof BigInt=="function";function Wt(C,T){return T=~T,C?C=~C+1:T+=1,[C,T]}function Mt(C,T){this.i=C>>>0,this.h=T>>>0}function Os(C){if(!C)return dn||(dn=new Mt(0,0));if(!/^-?\d+$/.test(C))return null;if(16>C.length)_t(Number(C));else if(kt)C=BigInt(C),nt=Number(C&BigInt(4294967295))>>>0,mt=Number(C>>BigInt(32)&BigInt(4294967295));else{var T=+(C[0]==="-");mt=nt=0;for(var A=C.length,M=T,j=(A-T)%6+T;j<=A;M=j,j+=6)M=Number(C.slice(M,j)),mt*=1e6,nt=1e6*nt+M,4294967296<=nt&&(mt+=nt/4294967296|0,nt%=4294967296);T&&(T=o(Wt(nt,mt)),C=T.next().value,T=T.next().value,nt=C,mt=T)}return new Mt(nt,mt)}var dn;function Qs(C,T){return Error("Invalid wire type: "+C+" (at position "+T+")")}function es(){return Error("Failed to read varint, encoding is invalid.")}function Xr(C,T){return Error("Tried to read past the end of the data "+T+" > "+C)}function jt(){throw Error("Invalid UTF8")}function mr(C,T){return T=String.fromCharCode.apply(null,T),C==null?T:C+T}var Fs=void 0,Zs,Js=typeof TextDecoder<"u",Qi,oo=typeof TextEncoder<"u",lo;function Hu(C){if(C!==tt)throw Error("illegal external caller")}function zs(C,T){if(Hu(T),this.V=C,C!=null&&C.length===0)throw Error("ByteString should be constructed with non-empty values")}function ts(){return lo||(lo=new zs(null,tt))}function ju(C){Hu(tt);var T=C.V;return T=T==null||me&&T!=null&&T instanceof Uint8Array?T:typeof T=="string"?Fe(T):null,T==null?T:C.V=T}function Zi(C){if(typeof C=="string")return{buffer:Fe(C),C:!1};if(Array.isArray(C))return{buffer:new Uint8Array(C),C:!1};if(C.constructor===Uint8Array)return{buffer:C,C:!1};if(C.constructor===ArrayBuffer)return{buffer:new Uint8Array(C),C:!1};if(C.constructor===zs)return{buffer:ju(C)||He(),C:!0};if(C instanceof Uint8Array)return{buffer:new Uint8Array(C.buffer,C.byteOffset,C.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function Ls(C,T){this.i=null,this.m=!1,this.h=this.j=this.l=0,Cd(this,C,T)}function Cd(C,T,A){A=A===void 0?{}:A,C.S=A.S===void 0?!1:A.S,T&&(T=Zi(T),C.i=T.buffer,C.m=T.C,C.l=0,C.j=C.i.length,C.h=C.l)}Ls.prototype.reset=function(){this.h=this.l};function $a(C,T){if(C.h=T,T>C.j)throw Xr(C.j,T)}function fl(C){var T=C.i,A=C.h,M=T[A++],j=M&127;if(M&128&&(M=T[A++],j|=(M&127)<<7,M&128&&(M=T[A++],j|=(M&127)<<14,M&128&&(M=T[A++],j|=(M&127)<<21,M&128&&(M=T[A++],j|=M<<28,M&128&&T[A++]&128&&T[A++]&128&&T[A++]&128&&T[A++]&128&&T[A++]&128)))))throw es();return $a(C,A),j}function ml(C,T){if(0>T)throw Error("Tried to read a negative byte length: "+T);var A=C.h,M=A+T;if(M>C.j)throw Xr(T,C.j-A);return C.h=M,A}var gl=[];function ki(){this.h=[]}ki.prototype.length=function(){return this.h.length},ki.prototype.end=function(){var C=this.h;return this.h=[],C};function yl(C,T,A){for(;0<A||127<T;)C.h.push(T&127|128),T=(T>>>7|A<<25)>>>0,A>>>=7;C.h.push(T)}function Dr(C,T){for(;127<T;)C.h.push(T&127|128),T>>>=7;C.h.push(T)}function $d(C,T){if(gl.length){var A=gl.pop();Cd(A,C,T),C=A}else C=new Ls(C,T);this.h=C,this.j=this.h.h,this.i=this.l=-1,this.setOptions(T)}$d.prototype.setOptions=function(C){C=C===void 0?{}:C,this.ca=C.ca===void 0?!1:C.ca},$d.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function kd(C){var T=C.h;if(T.h==T.j)return!1;C.j=C.h.h;var A=fl(C.h)>>>0;if(T=A>>>3,A&=7,!(0<=A&&5>=A))throw Qs(A,C.j);if(1>T)throw Error("Invalid field number: "+T+" (at position "+C.j+")");return C.l=T,C.i=A,!0}function xl(C){switch(C.i){case 0:if(C.i!=0)xl(C);else e:{C=C.h;for(var T=C.h,A=T+10,M=C.i;T<A;)if((M[T++]&128)===0){$a(C,T);break e}throw es()}break;case 1:C=C.h,$a(C,C.h+8);break;case 2:C.i!=2?xl(C):(T=fl(C.h)>>>0,C=C.h,$a(C,C.h+T));break;case 5:C=C.h,$a(C,C.h+4);break;case 3:T=C.l;do{if(!kd(C))throw Error("Unmatched start-group tag: stream EOF");if(C.i==4){if(C.l!=T)throw Error("Unmatched end-group tag");break}xl(C)}while(!0);break;default:throw Qs(C.i,C.j)}}var uo=[];function bl(){this.j=[],this.i=0,this.h=new ki}function co(C,T){T.length!==0&&(C.j.push(T),C.i+=T.length)}function Lm(C,T){if(T=T.R){co(C,C.h.end());for(var A=0;A<T.length;A++)co(C,ju(T[A])||He())}}var Kr=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function Ji(C,T){return Kr?C[Kr]|=T:C.A!==void 0?C.A|=T:(Object.defineProperties(C,{A:{value:T,configurable:!0,writable:!0,enumerable:!1}}),T)}function Nd(C,T){Kr?C[Kr]&&(C[Kr]&=~T):C.A!==void 0&&(C.A&=~T)}function xn(C){var T;return Kr?T=C[Kr]:T=C.A,T??0}function ns(C,T){Kr?C[Kr]=T:C.A!==void 0?C.A=T:Object.defineProperties(C,{A:{value:T,configurable:!0,writable:!0,enumerable:!1}})}function Bn(C){return Ji(C,1),C}function Ps(C,T){ns(T,(C|0)&-51)}function Ni(C,T){ns(T,(C|18)&-41)}var wl={};function qu(C){return C!==null&&typeof C=="object"&&!Array.isArray(C)&&C.constructor===Object}var vl,Id=[];ns(Id,23),vl=Object.freeze(Id);function ka(C){if(xn(C.o)&2)throw Error("Cannot mutate an immutable Message")}function Sl(C){var T=C.length;(T=T?C[T-1]:void 0)&&qu(T)?T.g=1:(T={},C.push((T.g=1,T)))}function ea(C){var T=C.i+C.G;return C.B||(C.B=C.o[T]={})}function ps(C,T){return T===-1?null:T>=C.i?C.B?C.B[T]:void 0:C.o[T+C.G]}function Ms(C,T,A,M){ka(C),Yr(C,T,A,M)}function Yr(C,T,A,M){C.j&&(C.j=void 0),T>=C.i||M?ea(C)[T]=A:(C.o[T+C.G]=A,(C=C.B)&&T in C&&delete C[T])}function kn(C,T,A,M){var j=ps(C,T);Array.isArray(j)||(j=vl);var K=xn(j);if(K&1||Bn(j),M)K&2||Ji(j,2),A&1||Object.freeze(j);else{M=!(A&2);var X=K&2;A&1||!X?M&&K&16&&!X&&Nd(j,16):(j=Bn(Array.prototype.slice.call(j)),Yr(C,T,j))}return j}function Xu(C,T){var A=ps(C,T),M=A==null?A:typeof A=="number"||A==="NaN"||A==="Infinity"||A==="-Infinity"?Number(A):void 0;return M!=null&&M!==A&&Yr(C,T,M),M}function Td(C,T,A,M,j){C.h||(C.h={});var K=C.h[A],X=kn(C,A,3,j);if(!K){var ae=X;K=[];var we=!!(xn(C.o)&16);X=!!(xn(ae)&2);var Ee=ae;!j&&X&&(ae=Array.prototype.slice.call(ae));for(var ze=X,ot=0;ot<ae.length;ot++){var Je=ae[ot],We=T,at=!1;if(at=at===void 0?!1:at,Je=Array.isArray(Je)?new We(Je):at?new We:void 0,Je!==void 0){We=Je.o;var ft=at=xn(We);X&&(ft|=2),we&&(ft|=16),ft!=at&&ns(We,ft),We=ft,ze=ze||!!(2&We),K.push(Je)}}return C.h[A]=K,we=xn(ae),T=we|33,T=ze?T&-9:T|8,we!=T&&(ze=ae,Object.isFrozen(ze)&&(ze=Array.prototype.slice.call(ze)),ns(ze,T),ae=ze),Ee!==ae&&Yr(C,A,ae),(j||M&&X)&&Ji(K,2),M&&Object.freeze(K),K}return j||(j=Object.isFrozen(K),M&&!j?Object.freeze(K):!M&&j&&(K=Array.prototype.slice.call(K),C.h[A]=K)),K}function Ii(C,T,A){var M=!!(xn(C.o)&2);if(T=Td(C,T,A,M,M),C=kn(C,A,3,M),!(M||xn(C)&8)){for(M=0;M<T.length;M++){if(A=T[M],xn(A.o)&2){var j=Rd(A,!1);j.j=A}else j=A;A!==j&&(T[M]=j,C[M]=j.o)}Ji(C,8)}return T}function ks(C,T,A){if(A!=null&&typeof A!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof A+": "+A);Ms(C,T,A)}function Qr(C,T,A,M,j){ka(C);var K=Td(C,A,T,!1,!1);return A=M??new A,C=kn(C,T,2,!1),j!=null?(K.splice(j,0,A),C.splice(j,0,A.o)):(K.push(A),C.push(A.o)),A.C()&&Nd(C,8),A}function Ku(C,T){return C??T}function _r(C,T,A){return A=A===void 0?0:A,Ku(Xu(C,T),A)}var Cl;function m0(C){switch(typeof C){case"number":return isFinite(C)?C:String(C);case"object":if(C)if(Array.isArray(C)){if((xn(C)&128)!==0)return C=Array.prototype.slice.call(C),Sl(C),C}else{if(me&&C!=null&&C instanceof Uint8Array)return $e(C);if(C instanceof zs){var T=C.V;return T==null?"":typeof T=="string"?T:C.V=$e(T)}}}return C}function $l(C,T,A,M){if(C!=null){if(Array.isArray(C))C=ho(C,T,A,M!==void 0);else if(qu(C)){var j={},K;for(K in C)j[K]=$l(C[K],T,A,M);C=j}else C=T(C,M);return C}}function ho(C,T,A,M){var j=xn(C);M=M?!!(j&16):void 0,C=Array.prototype.slice.call(C);for(var K=0;K<C.length;K++)C[K]=$l(C[K],T,A,M);return A(j,C),C}function Ti(C){return C.ja===wl?C.toJSON():m0(C)}function gr(C,T){C&128&&Sl(T)}function Ed(C,T,A){if(A=A===void 0?Ni:A,C!=null){if(me&&C instanceof Uint8Array)return C.length?new zs(new Uint8Array(C),tt):ts();if(Array.isArray(C)){var M=xn(C);return M&2?C:T&&!(M&32)&&(M&16||M===0)?(ns(C,M|2),C):(C=ho(C,Ed,M&4?Ni:A,!0),T=xn(C),T&4&&T&2&&Object.freeze(C),C)}return C.ja===wl?kl(C):C}}function Pm(C,T,A,M,j,K,X){if(C=C.h&&C.h[A]){if(M=xn(C),M&2?M=C:(K=oe(C,kl),Ni(M,K),Object.freeze(K),M=K),ka(T),X=M==null?vl:Bn([]),M!=null){for(K=!!M.length,C=0;C<M.length;C++){var ae=M[C];K=K&&!(xn(ae.o)&2),X[C]=ae.o}K=(K?8:0)|1,C=xn(X),(C&K)!==K&&(Object.isFrozen(X)&&(X=Array.prototype.slice.call(X)),ns(X,C|K)),T.h||(T.h={}),T.h[A]=M}else T.h&&(T.h[A]=void 0);Yr(T,A,X,j)}else Ms(T,A,Ed(M,K,X),j)}function kl(C){return xn(C.o)&2||(C=Rd(C,!0),Ji(C.o,2)),C}function Rd(C,T){var A=C.o,M=[];Ji(M,16);var j=C.constructor.h;if(j&&M.push(j),j=C.B,j){M.length=A.length,M.fill(void 0,M.length,A.length);var K={};M[M.length-1]=K}(xn(A)&128)!==0&&Sl(M),T=T||C.C()?Ni:Ps,K=C.constructor,Cl=M,M=new K(M),Cl=void 0,C.R&&(M.R=C.R.slice()),K=!!(xn(A)&16);for(var X=j?A.length-1:A.length,ae=0;ae<X;ae++)Pm(C,M,ae-C.G,A[ae],!1,K,T);if(j)for(var we in j)Pm(C,M,+we,j[we],!0,K,T);return M}function ss(C,T,A){C==null&&(C=Cl),Cl=void 0;var M=this.constructor.i||0,j=0<M,K=this.constructor.h,X=!1;if(C==null){C=K?[K]:[];var ae=48,we=!0;j&&(M=0,ae|=128),ns(C,ae)}else{if(!Array.isArray(C)||K&&K!==C[0])throw Error();var Ee=ae=Ji(C,0);if((we=(16&Ee)!==0)&&((X=(32&Ee)!==0)||(Ee|=32)),j){if(128&Ee)M=0;else if(0<C.length){var ze=C[C.length-1];if(qu(ze)&&"g"in ze){M=0,Ee|=128,delete ze.g;var ot=!0,Je;for(Je in ze){ot=!1;break}ot&&C.pop()}}}else if(128&Ee)throw Error();ae!==Ee&&ns(C,Ee)}this.G=(K?0:-1)-M,this.h=void 0,this.o=C;e:{if(K=this.o.length,M=K-1,K&&(K=this.o[M],qu(K))){this.B=K,this.i=M-this.G;break e}T!==void 0&&-1<T?(this.i=Math.max(T,M+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!j&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(A){T=we&&!X&&!0,j=this.i;var We;for(we=0;we<A.length;we++)X=A[we],X<j?(X+=this.G,(M=C[X])?Mm(M,T):C[X]=vl):(We||(We=ea(this)),(M=We[X])?Mm(M,T):We[X]=vl)}}ss.prototype.toJSON=function(){return ho(this.o,Ti,gr)},ss.prototype.C=function(){return!!(xn(this.o)&2)};function Mm(C,T){if(Array.isArray(C)){var A=xn(C),M=1;!T||A&2||(M|=16),(A&M)!==M&&ns(C,A|M)}}ss.prototype.ja=wl,ss.prototype.toString=function(){return this.o.toString()};function er(C,T,A){if(A){var M={},j;for(j in A){var K=A[j],X=K.ra;X||(M.J=K.xa||K.oa.W,K.ia?(M.aa=_d(K.ia),X=function(ae){return function(we,Ee,ze){return ae.J(we,Ee,ze,ae.aa)}}(M)):K.ka?(M.Z=Od(K.da.P,K.ka),X=function(ae){return function(we,Ee,ze){return ae.J(we,Ee,ze,ae.Z)}}(M)):X=M.J,K.ra=X),X(T,C,K.da),M={J:M.J,aa:M.aa,Z:M.Z}}}Lm(T,C)}var po=Symbol();function Ad(C,T,A){return C[po]||(C[po]=function(M,j){return T(M,j,A)})}function Yu(C){var T=C[po];if(!T){var A=Ta(C);T=function(M,j){return Ju(M,j,A)},C[po]=T}return T}function fo(C){var T=C.ia;if(T)return Yu(T);if(T=C.wa)return Ad(C.da.P,T,C.ka)}function Bm(C){var T=fo(C),A=C.da,M=C.oa.U;return T?function(j,K){return M(j,K,A,T)}:function(j,K){return M(j,K,A)}}function Dd(C,T){var A=C[T];return typeof A=="function"&&A.length===0&&(A=A(),C[T]=A),Array.isArray(A)&&(Zr in A||Ia in A||0<A.length&&typeof A[0]=="function")?A:void 0}function Na(C,T,A,M,j,K){T.P=C[0];var X=1;if(C.length>X&&typeof C[X]!="number"){var ae=C[X++];A(T,ae)}for(;X<C.length;){A=C[X++];for(var we=X+1;we<C.length&&typeof C[we]!="number";)we++;switch(ae=C[X++],we-=X,we){case 0:M(T,A,ae);break;case 1:(we=Dd(C,X))?(X++,j(T,A,ae,we)):M(T,A,ae,C[X++]);break;case 2:we=X++,we=Dd(C,we),j(T,A,ae,we,C[X++]);break;case 3:K(T,A,ae,C[X++],C[X++],C[X++]);break;case 4:K(T,A,ae,C[X++],C[X++],C[X++],C[X++]);break;default:throw Error("unexpected number of binary field arguments: "+we)}}return T}var Qu=Symbol();function _d(C){var T=C[Qu];if(!T){var A=Nl(C);T=function(M,j){return go(M,j,A)},C[Qu]=T}return T}function Od(C,T){var A=C[Qu];return A||(A=function(M,j){return er(M,j,T)},C[Qu]=A),A}var Ia=Symbol();function g0(C,T){C.push(T)}function y0(C,T,A){C.push(T,A.W)}function Zu(C,T,A,M){var j=_d(M),K=Nl(M).P,X=A.W;C.push(T,function(ae,we,Ee){return X(ae,we,Ee,K,j)})}function Fd(C,T,A,M,j,K){var X=Od(M,K),ae=A.W;C.push(T,function(we,Ee,ze){return ae(we,Ee,ze,M,X)})}function Nl(C){var T=C[Ia];return T||(T=Na(C,C[Ia]=[],g0,y0,Zu,Fd),Zr in C&&Ia in C&&(C.length=0),T)}var Zr=Symbol();function mo(C,T){C[0]=T}function Vm(C,T,A,M){var j=A.U;C[T]=M?function(K,X,ae){return j(K,X,ae,M)}:j}function zd(C,T,A,M,j){var K=A.U,X=Yu(M),ae=Ta(M).P;C[T]=function(we,Ee,ze){return K(we,Ee,ze,ae,X,j)}}function Um(C,T,A,M,j,K,X){var ae=A.U,we=Ad(M,j,K);C[T]=function(Ee,ze,ot){return ae(Ee,ze,ot,M,we,X)}}function Ta(C){var T=C[Zr];return T||(T=Na(C,C[Zr]={},mo,Vm,zd,Um),Zr in C&&Ia in C&&(C.length=0),T)}function Ju(C,T,A){for(;kd(T)&&T.i!=4;){var M=T.l,j=A[M];if(!j){var K=A[0];K&&(K=K[M])&&(j=A[M]=Bm(K))}if(!j||!j(T,C,M)){j=T,M=C,K=j.j,xl(j);var X=j;if(!X.ca){if(j=X.h.h-K,X.h.h=K,X=X.h,j==0)j=ts();else{if(K=ml(X,j),X.S&&X.m)j=X.i.subarray(K,K+j);else{X=X.i;var ae=K;j=K+j,j=ae===j?He():$t?X.slice(ae,j):new Uint8Array(X.subarray(ae,j))}j=j.length==0?ts():new zs(j,tt)}(K=M.R)?K.push(j):M.R=[j]}}}return C}function go(C,T,A){for(var M=A.length,j=M%2==1,K=j?1:0;K<M;K+=2)(0,A[K+1])(T,C,A[K]);er(C,T,j?A[0]:void 0)}function yr(C,T){return{U:C,W:T}}var tr=yr(function(C,T,A){if(C.i!==5)return!1;C=C.h;var M=C.i,j=C.h,K=M[j],X=M[j+1],ae=M[j+2];return M=M[j+3],$a(C,C.h+4),X=(K<<0|X<<8|ae<<16|M<<24)>>>0,C=2*(X>>31)+1,K=X>>>23&255,X&=8388607,Ms(T,A,K==255?X?NaN:1/0*C:K==0?C*Math.pow(2,-149)*X:C*Math.pow(2,K-150)*(X+Math.pow(2,23))),!0},function(C,T,A){if(T=Xu(T,A),T!=null){Dr(C.h,8*A+5),C=C.h;var M=+T;M===0?0<1/M?nt=mt=0:(mt=0,nt=2147483648):isNaN(M)?(mt=0,nt=2147483647):(M=(A=0>M?-2147483648:0)?-M:M,34028234663852886e22<M?(mt=0,nt=(A|2139095040)>>>0):11754943508222875e-54>M?(M=Math.round(M/Math.pow(2,-149)),mt=0,nt=(A|M)>>>0):(T=Math.floor(Math.log(M)/Math.LN2),M*=Math.pow(2,-T),M=Math.round(8388608*M),16777216<=M&&++T,mt=0,nt=(A|T+127<<23|M&8388607)>>>0)),A=nt,C.h.push(A>>>0&255),C.h.push(A>>>8&255),C.h.push(A>>>16&255),C.h.push(A>>>24&255)}}),ec=yr(function(C,T,A){if(C.i!==0)return!1;var M=C.h,j=0,K=C=0,X=M.i,ae=M.h;do{var we=X[ae++];j|=(we&127)<<K,K+=7}while(32>K&&we&128);for(32<K&&(C|=(we&127)>>4),K=3;32>K&&we&128;K+=7)we=X[ae++],C|=(we&127)<<K;if($a(M,ae),128>we)M=j>>>0,we=C>>>0,(C=we&2147483648)&&(M=~M+1>>>0,we=~we>>>0,M==0&&(we=we+1>>>0)),M=4294967296*we+(M>>>0);else throw es();return Ms(T,A,C?-M:M),!0},function(C,T,A){T=ps(T,A),T!=null&&(typeof T=="string"&&Os(T),T!=null&&(Dr(C.h,8*A),typeof T=="number"?(C=C.h,_t(T),yl(C,nt,mt)):(A=Os(T),yl(C.h,A.i,A.h))))}),Wm=yr(function(C,T,A){return C.i!==0?!1:(Ms(T,A,fl(C.h)),!0)},function(C,T,A){if(T=ps(T,A),T!=null&&T!=null)if(Dr(C.h,8*A),C=C.h,A=T,0<=A)Dr(C,A);else{for(T=0;9>T;T++)C.h.push(A&127|128),A>>=7;C.h.push(1)}}),Il=yr(function(C,T,A){if(C.i!==2)return!1;var M=fl(C.h)>>>0;C=C.h;var j=ml(C,M);if(C=C.i,Js){var K=C,X;(X=Zs)||(X=Zs=new TextDecoder("utf-8",{fatal:!0})),C=j+M,K=j===0&&C===K.length?K:K.subarray(j,C);try{var ae=X.decode(K)}catch(ot){if(Fs===void 0){try{X.decode(new Uint8Array([128]))}catch{}try{X.decode(new Uint8Array([97])),Fs=!0}catch{Fs=!1}}throw!Fs&&(Zs=void 0),ot}}else{ae=j,M=ae+M,j=[];for(var we=null,Ee,ze;ae<M;)Ee=C[ae++],128>Ee?j.push(Ee):224>Ee?ae>=M?jt():(ze=C[ae++],194>Ee||(ze&192)!==128?(ae--,jt()):j.push((Ee&31)<<6|ze&63)):240>Ee?ae>=M-1?jt():(ze=C[ae++],(ze&192)!==128||Ee===224&&160>ze||Ee===237&&160<=ze||((K=C[ae++])&192)!==128?(ae--,jt()):j.push((Ee&15)<<12|(ze&63)<<6|K&63)):244>=Ee?ae>=M-2?jt():(ze=C[ae++],(ze&192)!==128||(Ee<<28)+(ze-144)>>30!==0||((K=C[ae++])&192)!==128||((X=C[ae++])&192)!==128?(ae--,jt()):(Ee=(Ee&7)<<18|(ze&63)<<12|(K&63)<<6|X&63,Ee-=65536,j.push((Ee>>10&1023)+55296,(Ee&1023)+56320))):jt(),8192<=j.length&&(we=mr(we,j),j.length=0);ae=mr(we,j)}return Ms(T,A,ae),!0},function(C,T,A){if(T=ps(T,A),T!=null){var M=!1;if(M=M===void 0?!1:M,oo){if(M&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(T))throw Error("Found an unpaired surrogate");T=(Qi||(Qi=new TextEncoder)).encode(T)}else{for(var j=0,K=new Uint8Array(3*T.length),X=0;X<T.length;X++){var ae=T.charCodeAt(X);if(128>ae)K[j++]=ae;else{if(2048>ae)K[j++]=ae>>6|192;else{if(55296<=ae&&57343>=ae){if(56319>=ae&&X<T.length){var we=T.charCodeAt(++X);if(56320<=we&&57343>=we){ae=1024*(ae-55296)+we-56320+65536,K[j++]=ae>>18|240,K[j++]=ae>>12&63|128,K[j++]=ae>>6&63|128,K[j++]=ae&63|128;continue}else X--}if(M)throw Error("Found an unpaired surrogate");ae=65533}K[j++]=ae>>12|224,K[j++]=ae>>6&63|128}K[j++]=ae&63|128}}T=j===K.length?K:K.subarray(0,j)}Dr(C.h,8*A+2),Dr(C.h,T.length),co(C,C.h.end()),co(C,T)}}),Tl=yr(function(C,T,A,M,j){if(C.i!==2)return!1;T=Qr(T,A,M),A=C.h.j,M=fl(C.h)>>>0;var K=C.h.h+M,X=K-A;if(0>=X&&(C.h.j=K,j(T,C,void 0,void 0,void 0),X=K-C.h.h),X)throw Error("Message parsing ended unexpectedly. Expected to read "+(M+" bytes, instead read "+(M-X)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return C.h.h=K,C.h.j=A,!0},function(C,T,A,M,j){if(T=Ii(T,M,A),T!=null)for(M=0;M<T.length;M++){var K=C;Dr(K.h,8*A+2);var X=K.h.end();co(K,X),X.push(K.i),K=X,j(T[M],C),X=C;var ae=K.pop();for(ae=X.i+X.h.length()-ae;127<ae;)K.push(ae&127|128),ae>>>=7,X.i++;K.push(ae),X.i++}});function tc(C){return function(T,A){e:{if(uo.length){var M=uo.pop();M.setOptions(A),Cd(M.h,T,A),T=M}else T=new $d(T,A);try{var j=Ta(C),K=Ju(new j.P,T,j);break e}finally{j=T.h,j.i=null,j.m=!1,j.l=0,j.j=0,j.h=0,j.S=!1,T.l=-1,T.i=-1,100>uo.length&&uo.push(T)}K=void 0}return K}}function fs(C){return function(){var T=new bl;go(this,T,Nl(C)),co(T,T.h.end());for(var A=new Uint8Array(T.i),M=T.j,j=M.length,K=0,X=0;X<j;X++){var ae=M[X];A.set(ae,K),K+=ae.length}return T.j=[A],A}}function xr(C){ss.call(this,C)}w(xr,ss);var El=[xr,1,Wm,2,tr,3,Il,4,Il];xr.prototype.l=fs(El);function Ea(C){ss.call(this,C,-1,x0)}w(Ea,ss),Ea.prototype.addClassification=function(C,T){return Qr(this,1,xr,C,T),this};var x0=[1],Ld=tc([Ea,1,Tl,El]);function Ra(C){ss.call(this,C)}w(Ra,ss);var yo=[Ra,1,tr,2,tr,3,tr,4,tr,5,tr];Ra.prototype.l=fs(yo);function Rl(C){ss.call(this,C,-1,Gm)}w(Rl,ss);var Gm=[1],b0=tc([Rl,1,Tl,yo]);function nc(C){ss.call(this,C)}w(nc,ss);var Hm=[nc,1,tr,2,tr,3,tr,4,tr,5,tr,6,ec],Pd=tc(Hm);nc.prototype.l=fs(Hm);function jm(C,T,A){if(A=C.createShader(A===0?C.VERTEX_SHADER:C.FRAGMENT_SHADER),C.shaderSource(A,T),C.compileShader(A),!C.getShaderParameter(A,C.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+C.getShaderInfoLog(A));return A}function w0(C){return Ii(C,xr,1).map(function(T){var A=ps(T,1);return{index:A??0,qa:_r(T,2),label:ps(T,3)!=null?Ku(ps(T,3),""):void 0,displayName:ps(T,4)!=null?Ku(ps(T,4),""):void 0}})}function v0(C){return{x:_r(C,1),y:_r(C,2),z:_r(C,3),visibility:Xu(C,4)!=null?_r(C,4):void 0}}function Md(C){return Ii(b0(C),Ra,1).map(v0)}function Bd(C,T){this.i=C,this.h=T,this.m=0}function Vd(C,T,A){return S0(C,T),typeof C.h.canvas.transferToImageBitmap=="function"?Promise.resolve(C.h.canvas.transferToImageBitmap()):A?Promise.resolve(C.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(C.h.canvas):(C.j===void 0&&(C.j=document.createElement("canvas")),new Promise(function(M){C.j.height=C.h.canvas.height,C.j.width=C.h.canvas.width,C.j.getContext("2d",{}).drawImage(C.h.canvas,0,0,C.h.canvas.width,C.h.canvas.height),M(C.j)}))}function S0(C,T){var A=C.h;if(C.s===void 0){var M=jm(A,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),j=jm(A,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),K=A.createProgram();if(A.attachShader(K,M),A.attachShader(K,j),A.linkProgram(K),!A.getProgramParameter(K,A.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+A.getProgramInfoLog(K));M=C.s=K,A.useProgram(M),j=A.getUniformLocation(M,"sampler0"),C.l={O:A.getAttribLocation(M,"aVertex"),N:A.getAttribLocation(M,"aTex"),ya:j},C.v=A.createBuffer(),A.bindBuffer(A.ARRAY_BUFFER,C.v),A.enableVertexAttribArray(C.l.O),A.vertexAttribPointer(C.l.O,2,A.FLOAT,!1,0,0),A.bufferData(A.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),A.STATIC_DRAW),A.bindBuffer(A.ARRAY_BUFFER,null),C.u=A.createBuffer(),A.bindBuffer(A.ARRAY_BUFFER,C.u),A.enableVertexAttribArray(C.l.N),A.vertexAttribPointer(C.l.N,2,A.FLOAT,!1,0,0),A.bufferData(A.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),A.STATIC_DRAW),A.bindBuffer(A.ARRAY_BUFFER,null),A.uniform1i(j,0)}M=C.l,A.useProgram(C.s),A.canvas.width=T.width,A.canvas.height=T.height,A.viewport(0,0,T.width,T.height),A.activeTexture(A.TEXTURE0),C.i.bindTexture2d(T.glName),A.enableVertexAttribArray(M.O),A.bindBuffer(A.ARRAY_BUFFER,C.v),A.vertexAttribPointer(M.O,2,A.FLOAT,!1,0,0),A.enableVertexAttribArray(M.N),A.bindBuffer(A.ARRAY_BUFFER,C.u),A.vertexAttribPointer(M.N,2,A.FLOAT,!1,0,0),A.bindFramebuffer(A.DRAW_FRAMEBUFFER?A.DRAW_FRAMEBUFFER:A.FRAMEBUFFER,null),A.clearColor(0,0,0,0),A.clear(A.COLOR_BUFFER_BIT),A.colorMask(!0,!0,!0,!0),A.drawArrays(A.TRIANGLE_FAN,0,4),A.disableVertexAttribArray(M.O),A.disableVertexAttribArray(M.N),A.bindBuffer(A.ARRAY_BUFFER,null),C.i.bindTexture2d(0)}function C0(C){this.h=C}var $0=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function k0(C,T){return T+C}function sc(C,T){window[C]=T}function N0(C){var T=document.createElement("script");return T.setAttribute("src",C),T.setAttribute("crossorigin","anonymous"),new Promise(function(A){T.addEventListener("load",function(){A()},!1),T.addEventListener("error",function(){A()},!1),document.body.appendChild(T)})}function I0(){return D(function(C){switch(C.h){case 1:return C.s=2,N(C,WebAssembly.instantiate($0),4);case 4:C.h=3,C.s=0;break;case 2:return C.s=0,C.l=null,C.return(!1);case 3:return C.return(!0)}})}function Ud(C){if(this.h=C,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=C&&C.locateFile||k0,typeof window=="object")var T=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")T=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=T,C.options){T=o(Object.keys(C.options));for(var A=T.next();!A.done;A=T.next()){A=A.value;var M=C.options[A].default;M!==void 0&&(this.l[A]=typeof M=="function"?M():M)}}}n=Ud.prototype,n.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function qm(C){var T,A,M,j,K,X,ae,we,Ee,ze,ot;return D(function(Je){switch(Je.h){case 1:return C.ga?(T=C.h.files===void 0?[]:typeof C.h.files=="function"?C.h.files(C.l):C.h.files,N(Je,I0(),2)):Je.return();case 2:if(A=Je.i,typeof window=="object")return sc("createMediapipeSolutionsWasm",{locateFile:C.locateFile}),sc("createMediapipeSolutionsPackedAssets",{locateFile:C.locateFile}),X=T.filter(function(We){return We.data!==void 0}),ae=T.filter(function(We){return We.data===void 0}),we=Promise.all(X.map(function(We){var at=rc(C,We.url);if(We.path!==void 0){var ft=We.path;at=at.then(function(Gt){return C.overrideFile(ft,Gt),Promise.resolve(Gt)})}return at})),Ee=Promise.all(ae.map(function(We){return We.simd===void 0||We.simd&&A||!We.simd&&!A?N0(C.locateFile(We.url,C.ha)):Promise.resolve()})).then(function(){var We,at,ft;return D(function(Gt){if(Gt.h==1)return We=window.createMediapipeSolutionsWasm,at=window.createMediapipeSolutionsPackedAssets,ft=C,N(Gt,We(at),2);ft.i=Gt.i,Gt.h=0})}),ze=function(){return D(function(We){return C.h.graph&&C.h.graph.url?We=N(We,rc(C,C.h.graph.url),0):(We.h=0,We=void 0),We})}(),N(Je,Promise.all([Ee,we,ze]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return M=T.filter(function(We){return We.simd===void 0||We.simd&&A||!We.simd&&!A}).map(function(We){return C.locateFile(We.url,C.ha)}),importScripts.apply(null,l(M)),j=C,N(Je,createMediapipeSolutionsWasm(Module),6);case 6:j.i=Je.i,C.m=new OffscreenCanvas(1,1),C.i.canvas=C.m,K=C.i.GL.createContext(C.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),C.i.GL.makeContextCurrent(K),Je.h=4;break;case 7:if(C.m=document.createElement("canvas"),ot=C.m.getContext("webgl2",{}),!ot&&(ot=C.m.getContext("webgl",{}),!ot))return alert("Failed to create WebGL canvas context when passing video frame."),Je.return();C.K=ot,C.i.canvas=C.m,C.i.createContext(C.m,!0,!0,{});case 4:C.j=new C.i.SolutionWasm,C.ga=!1,Je.h=0}})}function T0(C){var T,A,M,j,K,X,ae,we;return D(function(Ee){if(Ee.h==1){if(C.h.graph&&C.h.graph.url&&C.fa===C.h.graph.url)return Ee.return();if(C.u=!0,!C.h.graph||!C.h.graph.url){Ee.h=2;return}return C.fa=C.h.graph.url,N(Ee,rc(C,C.h.graph.url),3)}for(Ee.h!=2&&(T=Ee.i,C.j.loadGraph(T)),A=o(Object.keys(C.D)),M=A.next();!M.done;M=A.next())j=M.value,C.j.overrideFile(j,C.D[j]);if(C.D={},C.h.listeners)for(K=o(C.h.listeners),X=K.next();!X.done;X=K.next())ae=X.value,D0(C,ae);we=C.l,C.l={},C.setOptions(we),Ee.h=0})}n.reset=function(){var C=this;return D(function(T){C.j&&(C.j.reset(),C.s={},C.v={}),T.h=0})},n.setOptions=function(C,T){var A=this;if(T=T||this.h.options){for(var M=[],j=[],K={},X=o(Object.keys(C)),ae=X.next();!ae.done;K={X:K.X,Y:K.Y},ae=X.next())if(ae=ae.value,!(ae in this.l&&this.l[ae]===C[ae])){this.l[ae]=C[ae];var we=T[ae];we!==void 0&&(we.onChange&&(K.X=we.onChange,K.Y=C[ae],M.push(function(Ee){return function(){var ze;return D(function(ot){if(ot.h==1)return N(ot,Ee.X(Ee.Y),2);ze=ot.i,ze===!0&&(A.u=!0),ot.h=0})}}(K))),we.graphOptionXref&&(ae=Object.assign({},{calculatorName:"",calculatorIndex:0},we.graphOptionXref,{valueNumber:we.type===1?C[ae]:0,valueBoolean:we.type===0?C[ae]:!1,valueString:we.type===2?C[ae]:""}),j.push(ae)))}(M.length!==0||j.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(j),this.F=(this.F===void 0?[]:this.F).concat(M))}};function E0(C){var T,A,M,j,K,X,ae;return D(function(we){switch(we.h){case 1:if(!C.u)return we.return();if(!C.F){we.h=2;break}T=o(C.F),A=T.next();case 3:if(A.done){we.h=5;break}return M=A.value,N(we,M(),4);case 4:A=T.next(),we.h=3;break;case 5:C.F=void 0;case 2:if(C.H){for(j=new C.i.GraphOptionChangeRequestList,K=o(C.H),X=K.next();!X.done;X=K.next())ae=X.value,j.push_back(ae);C.j.changeOptions(j),j.delete(),C.H=void 0}C.u=!1,we.h=0}})}n.initialize=function(){var C=this;return D(function(T){return T.h==1?N(T,qm(C),2):T.h!=3?N(T,T0(C),3):N(T,E0(C),0)})};function rc(C,T){var A,M;return D(function(j){return T in C.L?j.return(C.L[T]):(A=C.locateFile(T,""),M=fetch(A).then(function(K){return K.arrayBuffer()}),C.L[T]=M,j.return(M))})}n.overrideFile=function(C,T){this.j?this.j.overrideFile(C,T):this.D[C]=T},n.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},n.send=function(C,T){var A=this,M,j,K,X,ae,we,Ee,ze,ot;return D(function(Je){switch(Je.h){case 1:return A.h.inputs?(M=1e3*(T??performance.now()),N(Je,A.I,2)):Je.return();case 2:return N(Je,A.initialize(),3);case 3:for(j=new A.i.PacketDataList,K=o(Object.keys(C)),X=K.next();!X.done;X=K.next())if(ae=X.value,we=A.h.inputs[ae]){e:{var We=C[ae];switch(we.type){case"video":var at=A.s[we.stream];if(at||(at=new Bd(A.i,A.K),A.s[we.stream]=at),at.m===0&&(at.m=at.i.createTexture()),typeof HTMLVideoElement<"u"&&We instanceof HTMLVideoElement)var ft=We.videoWidth,Gt=We.videoHeight;else typeof HTMLImageElement<"u"&&We instanceof HTMLImageElement?(ft=We.naturalWidth,Gt=We.naturalHeight):(ft=We.width,Gt=We.height);Gt={glName:at.m,width:ft,height:Gt},ft=at.h,ft.canvas.width=Gt.width,ft.canvas.height=Gt.height,ft.activeTexture(ft.TEXTURE0),at.i.bindTexture2d(at.m),ft.texImage2D(ft.TEXTURE_2D,0,ft.RGBA,ft.RGBA,ft.UNSIGNED_BYTE,We),at.i.bindTexture2d(0),at=Gt;break e;case"detections":for(at=A.s[we.stream],at||(at=new C0(A.i),A.s[we.stream]=at),at.data||(at.data=new at.h.DetectionListData),at.data.reset(We.length),Gt=0;Gt<We.length;++Gt){ft=We[Gt];var Zt=at.data,Nn=Zt.setBoundingBox,nr=Gt,Ns=ft.la,Tt=new nc;if(ks(Tt,1,Ns.sa),ks(Tt,2,Ns.ta),ks(Tt,3,Ns.height),ks(Tt,4,Ns.width),ks(Tt,5,Ns.rotation),Ms(Tt,6,Ns.pa),Ns=Tt.l(),Nn.call(Zt,nr,Ns),ft.ea)for(Zt=0;Zt<ft.ea.length;++Zt){Tt=ft.ea[Zt],Nn=at.data,nr=Nn.addNormalizedLandmark,Ns=Gt,Tt=Object.assign({},Tt,{visibility:Tt.visibility?Tt.visibility:0});var Fn=new Ra;ks(Fn,1,Tt.x),ks(Fn,2,Tt.y),ks(Fn,3,Tt.z),Tt.visibility&&ks(Fn,4,Tt.visibility),Tt=Fn.l(),nr.call(Nn,Ns,Tt)}if(ft.ba)for(Zt=0;Zt<ft.ba.length;++Zt)Nn=at.data,nr=Nn.addClassification,Ns=Gt,Tt=ft.ba[Zt],Fn=new xr,ks(Fn,2,Tt.qa),Tt.index&&Ms(Fn,1,Tt.index),Tt.label&&Ms(Fn,3,Tt.label),Tt.displayName&&Ms(Fn,4,Tt.displayName),Tt=Fn.l(),nr.call(Nn,Ns,Tt)}at=at.data;break e;default:at={}}}switch(Ee=at,ze=we.stream,we.type){case"video":j.pushTexture2d(Object.assign({},Ee,{stream:ze,timestamp:M}));break;case"detections":ot=Ee,ot.stream=ze,ot.timestamp=M,j.pushDetectionList(ot);break;default:throw Error("Unknown input config type: '"+we.type+"'")}}return A.j.send(j),N(Je,A.I,4);case 4:j.delete(),Je.h=0}})};function R0(C,T,A){var M,j,K,X,ae,we,Ee,ze,ot,Je,We,at,ft,Gt;return D(function(Zt){switch(Zt.h){case 1:if(!A)return Zt.return(T);for(M={},j=0,K=o(Object.keys(A)),X=K.next();!X.done;X=K.next())ae=X.value,we=A[ae],typeof we!="string"&&we.type==="texture"&&T[we.stream]!==void 0&&++j;1<j&&(C.M=!1),Ee=o(Object.keys(A)),X=Ee.next();case 2:if(X.done){Zt.h=4;break}if(ze=X.value,ot=A[ze],typeof ot=="string")return ft=M,Gt=ze,N(Zt,A0(C,ze,T[ot]),14);if(Je=T[ot.stream],ot.type==="detection_list"){if(Je){for(var Nn=Je.getRectList(),nr=Je.getLandmarksList(),Ns=Je.getClassificationsList(),Tt=[],Fn=0;Fn<Nn.size();++Fn){var Ei=Pd(Nn.get(Fn)),Ym=_r(Ei,1),Qm=_r(Ei,2),_0=_r(Ei,3),O0=_r(Ei,4),F0=_r(Ei,5,0),ic=void 0;ic=ic===void 0?0:ic,Ei={la:{sa:Ym,ta:Qm,height:_0,width:O0,rotation:F0,pa:Ku(ps(Ei,6),ic)},ea:Md(nr.get(Fn)),ba:w0(Ld(Ns.get(Fn)))},Tt.push(Ei)}Nn=Tt}else Nn=[];M[ze]=Nn,Zt.h=7;break}if(ot.type==="proto_list"){if(Je){for(Nn=Array(Je.size()),nr=0;nr<Je.size();nr++)Nn[nr]=Je.get(nr);Je.delete()}else Nn=[];M[ze]=Nn,Zt.h=7;break}if(Je===void 0){Zt.h=3;break}if(ot.type==="float_list"){M[ze]=Je,Zt.h=7;break}if(ot.type==="proto"){M[ze]=Je,Zt.h=7;break}if(ot.type!=="texture")throw Error("Unknown output config type: '"+ot.type+"'");return We=C.v[ze],We||(We=new Bd(C.i,C.K),C.v[ze]=We),N(Zt,Vd(We,Je,C.M),13);case 13:at=Zt.i,M[ze]=at;case 7:ot.transform&&M[ze]&&(M[ze]=ot.transform(M[ze])),Zt.h=3;break;case 14:ft[Gt]=Zt.i;case 3:X=Ee.next(),Zt.h=2;break;case 4:return Zt.return(M)}})}function A0(C,T,A){var M;return D(function(j){return typeof A=="number"||A instanceof Uint8Array||A instanceof C.i.Uint8BlobList?j.return(A):A instanceof C.i.Texture2dDataOut?(M=C.v[T],M||(M=new Bd(C.i,C.K),C.v[T]=M),j.return(Vd(M,A,C.M))):j.return(void 0)})}function D0(C,T){for(var A=T.name||"$",M=[].concat(l(T.wants)),j=new C.i.StringList,K=o(T.wants),X=K.next();!X.done;X=K.next())j.push_back(X.value);K=C.i.PacketListener.implement({onResults:function(ae){for(var we={},Ee=0;Ee<T.wants.length;++Ee)we[M[Ee]]=ae.get(Ee);var ze=C.listeners[A];ze&&(C.I=R0(C,we,T.outs).then(function(ot){ot=ze(ot);for(var Je=0;Je<T.wants.length;++Je){var We=we[M[Je]];typeof We=="object"&&We.hasOwnProperty&&We.hasOwnProperty("delete")&&We.delete()}ot&&(C.I=ot)}))}}),C.j.attachMultiListener(j,K),j.delete()}n.onResults=function(C,T){this.listeners[T||"$"]=C},Z("Solution",Ud),Z("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function Xm(C){switch(C===void 0&&(C=0),C){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function Km(C){var T=this;C=C||{},this.h=new Ud({locateFile:C.locateFile,files:function(A){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:Xm(A.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:Md},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:Md},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(A){var M,j,K;return D(function(X){return X.h==1?(M=Xm(A),j="third_party/mediapipe/modules/pose_landmark/"+M,N(X,rc(T.h,M),2)):(K=X.i,T.h.overrideFile(j,K),X.return(!0))})}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}n=Km.prototype,n.reset=function(){this.h.reset()},n.close=function(){return this.h.close(),Promise.resolve()},n.onResults=function(C){this.h.onResults(C)},n.initialize=function(){var C=this;return D(function(T){return N(T,C.h.initialize(),0)})},n.send=function(C,T){var A=this;return D(function(M){return N(M,A.h.send(C,T),0)})},n.setOptions=function(C){this.h.setOptions(C)},Z("Pose",Km),Z("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),Z("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),Z("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),Z("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),Z("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),Z("VERSION","0.5.1675469404")}).call(Yw)),Yw}var Que=Yue();/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qr=pe();qr.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);qr.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);qr.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);qr.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);qr.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);qr.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);qr.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);qr.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);qr.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);qr.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);qr.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);qr.registerFlag("WEBGPU_PRINT_SHADER",()=>"");qr.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zue{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jue{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t,s=!1,r=!0){let i;const a=fT(e,t);return r?(this.freeBuffers.has(a)||this.freeBuffers.set(a,[]),this.freeBuffers.get(a).length>0?(i=this.freeBuffers.get(a).pop(),this.numFreeBuffers--):(i=this.device.createBuffer({size:e,usage:t,mappedAtCreation:s}),this.numBytesAllocated+=e)):(i=this.device.createBuffer({size:e,usage:t,mappedAtCreation:s}),this.numBytesAllocated+=e),this.usedBuffers.has(a)||this.usedBuffers.set(a,[]),this.usedBuffers.get(a).push(i),this.numUsedBuffers++,this.numBytesUsed+=e,i}releaseBuffer(e,t=!0){if(this.freeBuffers.size===0)return;const s=e.size,r=e.usage,i=fT(s,r),a=this.usedBuffers.get(i),o=a.indexOf(e);if(o<0)throw new Error("Cannot find the buffer in buffer manager");a[o]=a[a.length-1],a.pop(),this.numUsedBuffers--,this.numBytesUsed-=s,t?(this.freeBuffers.get(i).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=s)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function fT(n,e){return`${n}_${e}`}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ece{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,s,r){const i=gT(s),a=e*t*i,o=mT(e,t,s,r);if(this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.usedTextures.has(o)||this.usedTextures.set(o,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(o).length>0){this.numFreeTextures--;const c=this.freeTextures.get(o).shift();return this.usedTextures.get(o).push(c),c}this.numBytesAllocated+=a;const l=this.device.createTexture({size:[e,t],format:s,usage:r});return this.usedTextures.get(o).push(l),l}releaseTexture(e){if(this.freeTextures.size===0)return;const t=e.width,s=e.height,r=e.format,i=e.usage,a=mT(t,s,r,i);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;const o=this.usedTextures.get(a),l=o.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");o.splice(l,1);const c=gT(r),d=t*s*c;this.numBytesUsed-=d}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function mT(n,e,t,s){return`${n}_${e}_${t}_${s}`}function gT(n){if(n==="rgba8unorm")return 16;throw new Error(`${n} is not supported!`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tce(n,e){if(Math.max(...n)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const t=n.length,s="xyzwuv",r=n.map(a=>`${e}.${s[a]}`),i=new Array(t-1);i[t-2]=r[t-1];for(let a=t-3;a>=0;--a)i[a]=`(${i[a+1]} * ${r[a+1]})`;return i}const pl=(n,e,t)=>t==="int32"?`atomicAdd(${n}, bitcast<i32>(${e}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${e});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${n}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ah;(function(n){n[n.FROM_PIXELS=0]="FROM_PIXELS",n[n.DRAW=1]="DRAW"})(ah||(ah={}));const nce=(n,e,t,s,r)=>{const i={dtype:s.dtype,shape:s.shape},a=rce(t,i,e),o=n.createShaderModule({code:a,label:e.constructor.name});let l=pe().get("WEBGPU_PRINT_SHADER");if(l!==""){l=l.toLowerCase();const c=l.split(",");(l==="all"||c.some(d=>e.shaderKey.toLowerCase().includes(d)))&&(console.group(e.shaderKey),console.debug(a),console.groupEnd())}return r?n.createComputePipelineAsync({compute:{module:o,entryPoint:"_start"},label:e.constructor.name,layout:"auto"}):n.createComputePipeline({compute:{module:o,entryPoint:"_start"},label:e.constructor.name,layout:"auto"})},xt=(n,e="f32")=>{switch(n){case 1:return`${e}`;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${n}-component ${e} is not supported.`)}};function An(n){if(n<=1)return"i32";if(n===2)return"vec2<i32>";if(n===3)return"vec3<i32>";if(n===4)return"vec4<i32>";if(n===5)return"vec5";if(n===6)return"vec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Ja(n){if(n===0)return"x";if(n===1)return"y";if(n===2)return"z";if(n===3)return"w";if(n===4)return"u";if(n===5)return"v";throw Error(`Index ${n} is not yet supported`)}function _e(...n){let e;switch(n.length){case 0:e=`
        fn main()
      `;break;case 1:e=`
        fn main(${n[0]} : i32)
      `;break;default:throw Error("Unreachable")}return e}function yT(n,e){let t;return t=`
     ${sce(e)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${n?"main(getGlobalIndex());":"main();"};
      }
    `,t}function sce(n){return`
  @compute @workgroup_size(${n.workgroupSize[0]}, ${n.workgroupSize[1]}, ${n.workgroupSize[2]})
`}function rce(n,e,t){const s=[],r=t.workgroupSize[0]*t.workgroupSize[1]*t.workgroupSize[2];if(t.outputComponent=t.outputComponent?t.outputComponent:1,s.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${aF(t)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${r}u +
                localIndex);
        `}
      }
    `),t.pixelsOpType!=null){const x=t.pixelsOpType===ah.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${ru(e.dtype,t.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${ru(n[0].dtype,t.outputComponent)}>;`,b=e.shape.length===3?"vec2<i32>":"i32";s.push(`
        struct Uniform {
          outShapeStrides : ${b},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${x}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);const w=bT(t);return[xT,s.join(`
`),vy(e.shape),t.getUserCode(),yT(w,t)].join(`
`)}let i,a,o="struct Uniforms { NAN : f32, INFINITY : f32, ";t.variableNames.forEach((x,b)=>{const w=An(n[b].shape.length);o+=`${x.charAt(0).toLowerCase()+x.slice(1)}Shape : ${w}, `,i=n[b].shape.length-1,a=An(i),o+=`${x.charAt(0).toLowerCase()+x.slice(1)}ShapeStrides: ${a}, `});const l=An(e.shape.length);o+=`outShape : ${l}, `,i=e.shape.length-1,a=An(i),o+=`
         outShapeStrides: ${a}, `,t.size&&(o+="size : i32, "),t.uniforms&&(o+=t.uniforms),o+="};",o=pce(o),s.push(o),t.atomic?s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${ru(e.dtype,t.outputComponent)}>;
    `),t.variableNames.forEach((x,b)=>{s.push(`
      @group(0) @binding(${1+b}) var<storage, read> ${x}: array<${t.variableComponents?ru(n[b].dtype,t.variableComponents[b]):ru(n[b].dtype,t.outputComponent)}>;
        `)}),o!==""&&s.push(`
      @group(0) @binding(${1+t.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);const c=cce(e.shape,t.dispatchLayout),d=[xT,s.join(`
`)+ace,vy(e.shape),c,hce(e.shape.length)];t.atomic||d.push(dce(e.shape,e.dtype,t.outputComponent)),t.variableNames.forEach((x,b)=>{d.push(`${vy(n[b].shape,x)}`)});const p=n.map((x,b)=>uce(x,e.shape,t.variableComponents?t.variableComponents[b]:t.outputComponent,t.dispatchLayout.x.length===e.shape.length)).join(`
`);d.push(p),d.push(t.getUserCode());const m=bT(t);return d.push(yT(m,t)),d.join(`
`)}function ice(n,e,t){let s=n.shaderKey;if(n.pixelsOpType!=null)return s;const r=[],i=[];e.forEach(d=>{r.push(d.shape),i.push(d.dtype)}),r.push(t.shape),i.push(t.dtype);const a=e.map(d=>Yo(d.shape,t.shape)),o=e.map(d=>yt(d.shape,t.shape)).join("_"),l=a.map(d=>d.join("_")).join(";"),c=aF(n)?"flatDispatch":"";return s+="_"+(n.workgroupSize?n.workgroupSize.join(","):"")+r.map(d=>d.length).join(",")+i.join(",")+n.variableNames.join(",")+l+o+c,s}const xT=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,ace=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function vy(n,e=""){const t=n.length,s=e!==""?`get${e.charAt(0).toUpperCase()+e.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",r=e!==""?`${e.charAt(0).toLowerCase()+e.slice(1)}ShapeStrides`:"outShapeStrides";if(t<=1)return`fn ${s}(index : i32) -> i32 { return index; }`;const i=Qe(n),a=An(t),o=[];for(let c=0;c<t;c++)o.push(`d${c}`);if(i.length===1)return`    fn ${s}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${r}; let d1 = index - d0 * uniforms.${r};
      return vec2<i32>(d0, d1);
    }`;let l;return l="var index2 = index;"+i.map((c,d)=>{const p=`let ${o[d]} = index2 / uniforms.${r}.${Ja(d)}`,m=d===i.length-1?`let ${o[d+1]} = index2 - ${o[d]} * uniforms.${r}.${Ja(d)}`:`index2 = index2 - ${o[d]} * uniforms.${r}.${Ja(d)}`;return`${p}; ${m};`}).join(""),`
    fn ${s}(index : i32) -> ${a} {
      ${l}
      return ${a}(${o.join(",")});
    }
  `}function oce(n,e){const t=n.name,s=n.shape.length,r=An(s),i="get"+t.charAt(0).toUpperCase()+t.slice(1),a=["d0","d1","d2","d3","d4","d5"].slice(0,s),o=a.map(d=>`${d} : i32`).join(", ");if(s<1)return`
      fn ${i}() -> ${xt(e)} {
        return ${xt(e)}(${t}[0]);
      }
    `;const l=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`;let c=`${s}D`;return s===0&&(c="1D"),`
    fn ${i}(${o}) -> ${xt(e)} {
      return ${xt(e)}(${t}[getIndexFromCoords${c}(${r}(${a.join(",")}),
        ${l})${e===1?"":` / ${e}`}]);
    }
   `}function lce(n,e,t,s){const r=n.name,i=r.charAt(0).toUpperCase()+r.slice(1),a="get"+i+"ByOutput",o=n.shape.length,l=e.length,c=An(l);if(yt(n.shape,e)&&s)return`
    fn ${a}Index(globalIndex : i32) -> ${xt(t)} {
      return ${xt(t)}(${r}[globalIndex]);
    }

    fn ${a}Coords(coords : ${c}) -> ${xt(t)} {
      return ${xt(t)}(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${t===1?"":` / ${t}`}]);
    }
    `;const d=Yo(n.shape,e),p=l-o;let m="";if(o===0)return`
    fn ${a}Index(globalIndex : i32) -> ${xt(t)}{
      return get${i}();
    }

    fn ${a}Coords(coords : ${c}) -> ${xt(t)}{
      return get${i}();
    }
  `;l<2&&d.length>=1?m="coords = 0;":m=d.map(w=>`coords.${Ja(w+p)} = 0;`).join(`
`);let g="";if(l<2&&o>0)g="coords";else if(l>1){const w=An(o),v=n.shape.map(($,I)=>`coords.${Ja(I+p)}`).join(", ");g=`${w}(${v})`}else g="coords";const x=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,b=`${o}D`;return`
  fn ${a}Index(globalIndex : i32) -> ${xt(t)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${m}
    return ${xt(t)}(${r}[getIndexFromCoords${b}(${g}, ${x})${t===1?"":` / ${t}`}]);
  }

  fn ${a}Coords(coordsIn : ${c}) -> ${xt(t)} {
    var coords = coordsIn;
    ${m}
    return ${xt(t)}(${r}[getIndexFromCoords${b}(${g}, ${x})${t===1?"":` / ${t}`}]);
  }
`}function uce(n,e,t,s){let r=oce(n,t);return n.shape.length<=e.length&&(r+=lce(n,e,t,s)),r}function cce(n,e){const{x:t,y:s=[],z:r=[]}=e,i=n.length,a=t.length+s.length+r.length;if(a!==i)return"";if(t.length===i)return`fn getOutputCoords() -> ${An(i)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let o="";const l=[t,s,r];for(let m=0;m<l.length;m++){const g=l[m];if(g.length!==0)if(g.length===1)o+=`let d${g[0]} = i32(globalId[${m}]);`;else{const x=tce(g,"uniforms.outShape");o+=`var index${m} = i32(globalId[${m}]);`;for(let b=0;b<x.length;b++)o+=`let d${g[b]} = index${m} / ${x[b]};`,b===x.length-1?o+=`let d${g[b+1]} = index${m} - d${g[b]} * ${x[b]};`:o+=`index${m} = index${m} - d${g[b]} * ${x[b]};`}}const c=[];for(let m=0;m<a;m++)c.push(`d${m}`);const d=An(a);let p=`fn getOutputCoords() -> ${d} {
  ${o}
`;return c.length===0?p+=`return ${d}(0); }`:p+=`return ${d}(${c.join(",")}); }`,p}function hce(n){let e="";switch(n){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:B(!1,()=>`Unsupported ${n}D shape`);break}return e}function aF(n){return n.dispatch[1]===1&&n.dispatch[2]===1}function ru(n,e=1){if(n==="float32")return xt(e,"f32");if(n==="int32"||n==="bool")return xt(e,"i32");throw new Error(`type ${n} is not supported.`)}function dce(n,e,t){const s=n.length,r=ru(e,t);let i=`fn setOutputAtIndex(flatIndex : i32, value : ${xt(t)}) {
      result[flatIndex] = ${r}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${xt(t,"i32")}) {
      result[flatIndex] = ${r}(value);
    }
    `;if(s>=2){const a=["d0","d1","d2","d3","d4","d5"].slice(0,s),o=An(s);i+=`
      fn setOutputAtCoords(${a.map(l=>`${l} : i32`).join(", ")}, value : ${xt(t)}) {
        let flatIndex = getOutputIndexFromCoords(${o}(${a.join(", ")}));
        setOutputAtIndex(flatIndex${t===1?"":` / ${t}`}, value);
      }
      fn setOutputAtCoordsI32(${a.map(l=>`${l} : i32`).join(", ")}, value : ${xt(t,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${o}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex${t===1?"":` / ${t}`}, value);
      }
    `}return i}function pce(n){const e=/(\w+)\s*:\s*vec(5|6)/g;n=n.replace(e,s=>"@align(16) "+s);const t=/vec(5|6)\s*,\s*(\w+)/g;return n=n.replace(t,(s,r,i)=>`vec${r}, @align(16) ${i}`),n}function bT(n){return!(n.dispatchLayout.hasOwnProperty("y")&&n.dispatchLayout.y.length!==0||n.dispatchLayout.hasOwnProperty("z")&&n.dispatchLayout.z.length!==0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hu=n=>{let e=1;for(let t=0;t<n.length;t++)e*=n[t];return e};function Oe(n,e,t=[1,1,1],s=[1,1,1]){const[r,i,a]=[Math.ceil(hu(n.x.map(o=>e[o]))/(t[0]*s[0])),n.y?Math.ceil(hu(n.y.map(o=>e[o]))/(t[1]*s[1])):1,n.z?Math.ceil(hu(n.z.map(o=>e[o]))/(t[2]*s[2])):1];return[r,i,a]}function fce(n,e,t,s=!1){const r=[8,8,1],i=[4,4,1];return s||(n<=8&&(i[1]=1),e<=16&&t<=16&&(r[0]=4)),{workgroupSize:r,elementsPerThread:i}}function oF(n,e,t=!1){if(t)return[8,8,1];const s=hu(n.x.map(i=>e[i])),r=hu(n.y.map(i=>e[i]));return s<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function lF(n,e,t=!1){if(t)return[4,4,1];const s=hu(n.x.map(i=>e[i])),r=hu(n.y.map(i=>e[i]));return s<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function Ue(n){return{x:n.map((e,t)=>t)}}function wT(n){if(n==="float32"||n==="int32"||n==="bool"||n==="string")return 4;if(n==="complex64")return 8;throw new Error(`Unknown dtype ${n}`)}function uF(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function cF(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&B(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGPU backend.`)})}var aa;(function(n){n[n.MatMulReduceProgram=0]="MatMulReduceProgram",n[n.MatMulSplitKProgram=1]="MatMulSplitKProgram",n[n.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",n[n.MatMulPackedProgram=3]="MatMulPackedProgram",n[n.MatMulMax=4]="MatMulMax"})(aa||(aa={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mce=pe().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),gce=(n,e)=>{const t=n.limits.maxComputeWorkgroupsPerDimension,s=e.dispatchLayout,r=e.dispatch;if(r.every(a=>a<=t))return r;B(r[0]>t&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(r[0]));return i>t?(i=Math.ceil(Math.cbrt(r[0])),B(i<=t,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]};class wd extends nx{nextDataId(){return wd.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!uF())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new Zue(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new Jue(this.device),this.textureManager=new ece(this.device),this.tensorMap=new u2(this,os()),pe().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,t=!1){if(!this.tensorMap.has(e))return!0;const s=this.tensorMap.get(e);return t?s.refCount=0:s.refCount--,s.refCount>0?!1:(s.complexTensorInfos!=null&&(this.disposeData(s.complexTensorInfos.real.dataId),this.disposeData(s.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);if(!(!t||!t.resource)){if(t.external){t.resource=null;return}t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource),t.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){const t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){const t=this.tensorMap.get(e);t.refCount--}}write(e,t,s){if(s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.tensorMap.set(r,{dtype:s,shape:t,values:e,refCount:1}),r}move(e,t,s,r,i){if(r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:r,shape:s,values:t,refCount:i})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(t){throw new Error(t.message)}Object.keys(this.pipelineCache).map((t,s)=>{this.pipelineCache[t]=e[s]})}async getBufferData(e){if(pe().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;const t=e.size,s=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,s,0,t),this.submitQueue(),await s.mapAsync(GPUMapMode.READ);const r=s.getMappedRange().slice(0);return s.unmap(),s!=null&&this.bufferManager.releaseBuffer(s),pe().getBool("WEBGPU_USE_PROFILE_TOOL")&&(B(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),r}convertAndCacheOnCPU(e,t){const s=this.tensorMap.get(e);return s.values=t,s.values}readSync(e){const t=this.tensorMap.get(e),{values:s,complexTensorInfos:r}=t;if(s!=null||t.dtype==="string")return s;if(t.dtype==="complex64"){const b=this.readSync(r.real.dataId),w=this.readSync(r.imag.dataId),v=uy(Wi(b,w).buffer,"float32");return this.convertAndCacheOnCPU(e,v),v}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));const i=["opaque","premultiplied"],a=t.resource,o=a.size;B(o%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");const l=o/4,c=new ArrayBuffer(o),d=256,p=256,m=i.map(b=>new OffscreenCanvas(d,p)),g=new OffscreenCanvas(d,p);this.endComputePassEncoder(),m.map((b,w)=>{const v=b.getContext("webgpu");return v.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:i[w]}),v.getCurrentTexture()}).map((b,w)=>{const v=d*4,$=(P,O,L)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:a,bytesPerRow:v,offset:L},{texture:b},{width:P,height:O}),this.submitQueue();const D=g.getContext("2d",{willReadFrequently:!0});D.clearRect(0,0,P,O),D.drawImage(m[w],0,0);const G=D.getImageData(0,0,P,O).data,q=i[w],ee=new Uint8ClampedArray(c,L,P*O*4);for(let Z=0;Z<ee.length;Z+=4)if(q==="premultiplied")ee[Z+3]=G[Z+3];else{const H=G[Z];ee[Z]=G[Z+2],ee[Z+1]=G[Z+1],ee[Z+2]=H}},I=Math.floor(l/(d*p));let N=d,E=p,_=0;for(let P=0;P<I;P++)$(N,E,_),_+=d*p*4;const z=l%(d*p);E=Math.floor(z/d),E>0&&($(N,E,_),_+=E*(d*4)),N=z%d,N>0&&$(N,1,_)});const x=uy(c,t.dtype);return this.convertAndCacheOnCPU(e,x),x}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const t=this.tensorMap.get(e),{values:s}=t;if(s!=null)return s;let r;if(t.dtype==="complex64"){const i=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=i[0],o=i[1];r=Wi(a,o)}else{const i=await this.getBufferData(t.resource);r=uy(i,t.dtype)}return this.convertAndCacheOnCPU(e,r),r}copyBuffer(e){const t=e.size,s=e.usage,r=this.bufferManager.acquireBuffer(t,s);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,r,0,t),this.submitQueue(),r}createTensorFromGPUData(e,t,s){let r=e.buffer;if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. ");const i={id:this.nextDataId()};this.tensorMap.set(i,{dtype:s,shape:t,values:null,refCount:1,external:e.zeroCopy});const a=this.tensorMap.get(i),o=wT(a.dtype)*ue(a.shape);if(e.buffer.size<o)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${o})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(r=this.copyBuffer(r)),a.resource=r,os().makeTensorFromDataId(i,t,s,this)}readToGPU(e){const t=this.tensorMap.get(e),{values:s,dtype:r,shape:i,resource:a}=t;if(r==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const o=a,l=o.size,c=o.usage,d=this.bufferManager.acquireBuffer(l,c);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,d,0,l),this.submitQueue();const p=this.makeTensorInfo(i,r),m=os().makeTensorFromTensorInfo(p),g=this.tensorMap.get(p.dataId);return g.resource=d,{tensorRef:m,buffer:d}}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Bi(r));return dt(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return dt(e.shape,e.dtype,t)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const i=eo(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),a=eo(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},l=await Promise.all(i);return o.kernelMs=aE(l),o.getExtraProfileInfo=()=>l.map((c,d)=>({name:a[d],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}makeTensorInfo(e,t,s){return t==="string"&&s!=null&&s.length>0&&uh(s[0])&&(s=s.map(i=>Ya(i))),{dataId:this.write(s,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const s=this.tensorMap.get(e.dataId).resource;return s instanceof GPUBuffer?{buffer:s}:s instanceof GPUTexture?s.createView():s}uploadToGPU(e){const t=this.tensorMap.get(e);if(t.resource!=null)return;const s=wT(t.dtype)*ue(t.shape);let r;const i=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(r=this.bufferManager.acquireBuffer(s,i,!0),r.mapState==="unmapped"){const a=this.bufferManager.acquireBuffer(s,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),o=a.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(o).set(t.values):new Float32Array(o).set(t.values),a.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,r,0,s),this.stagingPendingDisposal.push(a)}else{const a=r.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(a).set(t.values):new Float32Array(a).set(t.values),r.unmap()}t.values=null}else r=this.bufferManager.acquireBuffer(s,i);t.resource=r}makeUniforms(e){let t=0,s=0;const r=[];let i=1;e.forEach(l=>{l.data.length===0&&(l.data=[1]);let c;switch(l.data.length){case 1:c=4;break;case 2:c=8;break;case 3:c=16;break;case 4:c=16;break;case 5:c=16;break;case 6:c=16;break;default:B(!1,()=>`Unsupported ${l.data.length}D shape`)}(s===5||s===6)&&(c=16),c>i&&(i=c),t=Math.ceil(t/c)*c,s=l.data.length,r.push(t),t+=l.data.length*4}),t=Math.ceil(t/i)*i;const a=new ArrayBuffer(t);e.forEach((l,c)=>{const d=r[c];l.type==="int32"?new Int32Array(a,d,l.data.length).set(l.data):l.type==="uint32"?new Uint32Array(a,d,l.data.length).set(l.data):new Float32Array(a,d,l.data.length).set(l.data)});const o=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(o,0,a,0,t),this.uniformPendingDisposal.push(o),{offset:0,size:t,buffer:o}}runWebGPUProgram(e,t,s,r,i){if(i||(i=this.makeTensorInfo(e.outputShape,s)),ue(i.shape)===0)return this.tensorMap.get(i.dataId).values=Yn(i.dtype,0),i;this.uploadToGPU(i.dataId),e.dispatch=gce(this.device,e);const a=t.map((l,c)=>{if(l.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(l.dataId),{dtype:this.tensorMap.get(l.dataId).dtype,shape:l.shape,name:e.variableNames[c]}});e.shaderKey=ice(e,a,i);const o=pe().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=nce(this.device,e,a,i,o)),e.pipeline=this.pipelineCache[e.shaderKey],o||this.recordAndSubmit(e,i,t,r),i}recordAndSubmit(e,t,s,r){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let i=[],a=[];const o="int32";if(e.pixelsOpType==null){i.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),a=s.concat(t).map(g=>g.shape);const m="int32";a.map(g=>{i.push({type:m,data:g});const x=Qe(g);i.push({type:m,data:x})})}else{const m=Qe(t.shape);i.push({type:o,data:m})}if(e.size){const m=ue(e.outputShape);i.push({type:o,data:[e.outputComponent?m/e.outputComponent:m]})}r&&(i=[...i,...r]);const l=[this.tensorToBinding(t),...s.map(m=>this.tensorToBinding(m)),this.makeUniforms(i)];s.forEach(m=>{this.commandQueueOwnedIds.add(m.dataId)}),this.commandQueueOwnedIds.add(t.dataId);const c=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:l.map((m,g)=>({binding:g,resource:m}))}),d=this.activeTimers!=null;this.ensureCommandEncoderReady();const p={};d&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),p.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(p)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(p)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,c),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(d||pe().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===ah.DRAW)&&(this.endComputePassEncoder(),d?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const t=new BigUint64Array(e.getMappedRange()),s=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),s}shouldExecuteOnCPU(e,t=mce){return pe().getBool("WEBGPU_CPU_FORWARD")&&e.every(s=>this.tensorMap.get(s.dataId).resource==null&&ue(s.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}wd.nextDataId=0;/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */uF()&&N2("webgpu",async()=>{const n={powerPreference:pe().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(n),t={},s=[];e.features.has("timestamp-query")&&s.push("timestamp-query"),e.features.has("bgra8unorm-storage")&&s.push(["bgra8unorm-storage"]),t.requiredFeatures=s;const r=e.limits;t.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize,maxBufferSize:r.maxBufferSize,maxComputeWorkgroupSizeX:r.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:r.maxComputeInvocationsPerWorkgroup};const i=await e.requestDevice(t),a="info"in e?e.info:"requestAdapterInfo"in e?await e.requestAdapterInfo():void 0;return new wd(i,a)},3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ut;(function(n){n[n.ADD=0]="ADD",n[n.ATAN2=1]="ATAN2",n[n.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",n[n.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",n[n.DIV=4]="DIV",n[n.ELU_DER=5]="ELU_DER",n[n.EQUAL=6]="EQUAL",n[n.FLOOR_DIV=7]="FLOOR_DIV",n[n.GREATER=8]="GREATER",n[n.GREATER_EQUAL=9]="GREATER_EQUAL",n[n.LESS=10]="LESS",n[n.LESS_EQUAL=11]="LESS_EQUAL",n[n.LOGICAL_AND=12]="LOGICAL_AND",n[n.LOGICAL_OR=13]="LOGICAL_OR",n[n.MAX=14]="MAX",n[n.MIN=15]="MIN",n[n.MOD=16]="MOD",n[n.MUL=17]="MUL",n[n.NOT_EQUAL=18]="NOT_EQUAL",n[n.POW=19]="POW",n[n.PRELU=20]="PRELU",n[n.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",n[n.SUB=22]="SUB"})(ut||(ut={}));const yce="let resultTemp = a + b;",xce="let resultTemp = atan2(a, b);",bce="let resultTemp = areal * breal - aimag * bimag;",wce="let resultTemp = areal * bimag + aimag * breal;",vce="let resultTemp = a / b;",Sce="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",Cce=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,$ce=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,kce=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,Nce=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,Ice=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,Tce=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,Ece="return f32(a >= 1.0 && b >= 1.0);",Rce=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Ace="return f32(a >= 1.0 || b >= 1.0);",Dce=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,_ce="let resultTemp = max(a, b);",Oce="let resultTemp = min(a, b);",Fce=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,zce=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,Lce="let resultTemp = a * b;",Pce=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,Mce=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,Bce=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,Vce=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,Uce="if (a < 0.0) { return b * a; }  return a;",Wce=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Gce="let resultTemp = (a - b) * (a - b);",Hce="let resultTemp = a - b;";function oC(n,e){let t;do{switch(n){case ut.ATAN2:t=xce;break;case ut.MAX:t=_ce;break;case ut.MIN:t=Oce;break;case ut.MOD:t=e?zce:Fce;break;case ut.NOT_EQUAL:t=e?Mce:Pce;break;case ut.POW:t=e?Vce:Bce;break;default:continue}let s,r,i;return e?(s="isnanVec4",r="vec4<f32>",i="vec4<bool>"):(s="isnan",r="f32",i="bool"),`
      let aIsNaN = ${s}(a);
      let aPostLegalization = select(a, ${r}(42), aIsNaN);
      let bIsNaN = ${s}(b);
      let bPostLegalization = select(b, ${r}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${t}
        return select(
            resultTemp, ${r}(valueForNaN),
            ${i}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(n){case ut.ADD:t=yce;break;case ut.COMPLEX_MULTIPLY_IMAG:t=wce;break;case ut.COMPLEX_MULTIPLY_REAL:t=bce;break;case ut.DIV:t=vce;break;case ut.ELU_DER:t=Sce;break;case ut.EQUAL:t=Cce;break;case ut.FLOOR_DIV:t=$ce;break;case ut.GREATER:t=kce;break;case ut.GREATER_EQUAL:t=Nce;break;case ut.LESS:t=Ice;break;case ut.LESS_EQUAL:t=Tce;break;case ut.LOGICAL_AND:return e?Rce:Ece;case ut.LOGICAL_OR:return e?Dce:Ace;case ut.MUL:t=Lce;break;case ut.PRELU:return e?Wce:Uce;case ut.SQUARED_DIFFERENCE:t=Gce;break;case ut.SUB:t=Hce;break}return`
    ${t}
    return resultTemp;
  `}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ae;(function(n){n[n.ABS=0]="ABS",n[n.ACOS=1]="ACOS",n[n.ACOSH=2]="ACOSH",n[n.ASIN=3]="ASIN",n[n.ASINH=4]="ASINH",n[n.ATAN=5]="ATAN",n[n.ATANH=6]="ATANH",n[n.CEIL=7]="CEIL",n[n.COS=8]="COS",n[n.COSH=9]="COSH",n[n.ELU=10]="ELU",n[n.ERF=11]="ERF",n[n.EXP=12]="EXP",n[n.EXPM1=13]="EXPM1",n[n.FLOOR=14]="FLOOR",n[n.IS_FINITE=15]="IS_FINITE",n[n.IS_INF=16]="IS_INF",n[n.IS_NAN=17]="IS_NAN",n[n.LINEAR=18]="LINEAR",n[n.LOG=19]="LOG",n[n.LOG1P=20]="LOG1P",n[n.LOGICAL_NOT=21]="LOGICAL_NOT",n[n.NEG=22]="NEG",n[n.RELU=23]="RELU",n[n.RELU6=24]="RELU6",n[n.LEAKYRELU=25]="LEAKYRELU",n[n.RECIPROCAL=26]="RECIPROCAL",n[n.ROUND=27]="ROUND",n[n.RSQRT=28]="RSQRT",n[n.SELU=29]="SELU",n[n.SIGMOID=30]="SIGMOID",n[n.SIGN=31]="SIGN",n[n.SIN=32]="SIN",n[n.SINH=33]="SINH",n[n.SOFTPLUS=34]="SOFTPLUS",n[n.SQRT=35]="SQRT",n[n.SQUARE=36]="SQUARE",n[n.STEP=37]="STEP",n[n.TAN=38]="TAN",n[n.TANH=39]="TANH",n[n.TO_INT=40]="TO_INT"})(Ae||(Ae={}));const jce="return abs(a);",qce=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,Xce=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,Kce=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,Yce="return asinh(a);",Qce=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,Zce=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,Jce="return ceil(a);",ehe="return cos(a);",the=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,nhe="return exp(a) - 1.0;",she="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",rhe=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,ihe=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${Fb};
  let a1 = ${zb};
  let a2 = ${Lb};
  let a3 = ${Pb};
  let a4 = ${Mb};
  let a5 = ${Bb};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,ahe="return exp(a);",ohe="return floor(a);",lhe="return f32(!isnan(a) && !isinf(a));",uhe="return f32(isinf(a));",che="return f32(isnan(a));",hhe="return a;",dhe=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,phe=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,fhe="return f32(!(a >= 1.0));",mhe="return -a;",ghe="if (a < 0.0) { return uniforms.alpha * a; } return a;",yhe=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,xhe="return 1.0 / a;",bhe="return select(a, 0.0, a < 0.0);",whe="return clamp(a, 0.0, 6.0);",vhe="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",She=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,Che="return round(a);",$he="return inverseSqrt(a);",khe=`
  if (a >= 0.0) {
    return ${vm} * a;
  } else {
    return ${wm} * (exp(a) - 1.0);
  }
`,Nhe="return 1.0 / (1.0 + exp(-1.0 * a));",Ihe="return sign(a);",The="return sin(a);",Ehe=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Rhe=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,Ahe="return sqrt(a);",Dhe="return a * a;",_he=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,Ohe="return tan(a);",Fhe=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,zhe="return f32(i32((a)));";function Jl(n,e){switch(n){case Ae.ABS:return jce;case Ae.ACOS:return qce;case Ae.ACOSH:return Xce;case Ae.ASIN:return Kce;case Ae.ASINH:return Yce;case Ae.ATAN:return Qce;case Ae.ATANH:return Zce;case Ae.COS:return ehe;case Ae.COSH:return the;case Ae.CEIL:return Jce;case Ae.ELU:return e?rhe:she;case Ae.ERF:return ihe;case Ae.EXP:return ahe;case Ae.EXPM1:return nhe;case Ae.FLOOR:return ohe;case Ae.IS_FINITE:return lhe;case Ae.IS_INF:return uhe;case Ae.IS_NAN:return che;case Ae.LINEAR:return hhe;case Ae.LOG:return dhe;case Ae.LOG1P:return phe;case Ae.LOGICAL_NOT:return fhe;case Ae.NEG:return mhe;case Ae.LEAKYRELU:return e?yhe:ghe;case Ae.RECIPROCAL:return xhe;case Ae.RELU:return e?She:bhe;case Ae.RELU6:return e?vhe:whe;case Ae.ROUND:return Che;case Ae.RSQRT:return $he;case Ae.SELU:return khe;case Ae.SIGMOID:return Nhe;case Ae.SIGN:return Ihe;case Ae.SIN:return The;case Ae.SINH:return Ehe;case Ae.SOFTPLUS:return Rhe;case Ae.SQRT:return Ahe;case Ae.SQUARE:return Dhe;case Ae.STEP:return _he;case Ae.TAN:return Ohe;case Ae.TANH:return Fhe;case Ae.TO_INT:return zhe;default:throw new Error(`BinaryType ${n} is not implemented!`)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ao(n,e=!1,t=!1,s=3){if(n===null)return"";let r="";if(n==="linear")r=Jl(Ae.LINEAR);else if(n==="relu")r=Jl(Ae.RELU,t);else if(n==="elu")r=Jl(Ae.ELU,t);else if(n==="relu6")r=Jl(Ae.RELU6,t);else if(n==="prelu")r=oC(ut.PRELU,t);else if(n==="sigmoid")r=Jl(Ae.SIGMOID,t);else if(n==="leakyrelu")r=Jl(Ae.LEAKYRELU,t);else throw new Error(`Activation ${n} has not been implemented for the WebGPU backend.`);const a=xt(t?4:1);let o="";return e?o=`
      fn activation(a : ${a}, coords : vec${s}<i32>) -> ${a} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${r}
      }`:o=`
      fn activation(a : ${a}, coords : vec${s}<i32>) -> ${a} {
        ${r}
      }`,o}function Uu(n,e){return`
      ${n?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hF(n,e,t=!1,s=!1,r=!1,i=1){B(n&&i===1||!n,()=>`transposeA ${n} is not compatible with component size ${i}`);const a=`
      ${n?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,o=e?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${xt(i)} {
    var value = ${xt(i)}(0.0);
    ${t&&r?a:`
    ${n?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${a}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${xt(i)} {
    var value = ${xt(i)}(0.0);
    ${o}
    return value;
  }
  `}function lC(n,e,t,s,r=!1,i=!1,a=!1,o=1){return`
  ${hF(t,s,r,i,a,o)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${xt(o)}) {
    ${r&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${Uu(n,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}const Lhe=(n,e)=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${e});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${e});
        `,Phe=(n,e,t,s)=>{if(n)return`
      for (var k = 0; k < ${s}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${t}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let r="",i="";for(let a=0;a<e;a++)r+=`let BCached${a} = mm_Bsub[k * ${e} + ${a}][tileCol];`,i+=`acc[i] = fma(BCached${a}, vec4<f32>(ACached[${a}]), acc[i]);`;return`
      for (var k = 0; k < ${s/e}; k++) {
        ${r}
        for (var i = 0; i < ${t}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${i}
        }
      }`}};function h0(n,e,t=!1,s=32,r=!1,i=32,a=!1){const o=e[1]*n[1],l=e[0]*n[0],c=t?o:s,d=t?s:o,p=c/e[0],m=s/e[1],g=n[1],x=n[0];return B((t&&p===4&&n[1]===4||!t&&(p===3||p===4))&&c%e[0]===0&&s%e[1]===0&&n[0]===4,()=>`If transposeA ${t} is true, innerElementSize ${p} and workPerThread[1] ${n[1]} must be 4.
          Otherwise, innerElementSize ${p} must be 3 or 4.
      tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${n[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${p}<f32>, ${c/p}>, ${d}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/n[0]}>, ${s}>;

  ${_e()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${g};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${g};
    let globalCol = i32(globalId.x) * ${x};
    let batch = ${r?"0":"i32(globalId.z)"};
    let batchA = ${r||!a?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${r||!a?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${o};

    let numTiles = ${r?`${Math.ceil(i/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
    var kStart = ${r?`i32(globalId.z) * ${i}`:"0"};

    var acc: array<vec4<f32>, ${g}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${m};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${g}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${Lhe(t,p)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${m}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${Phe(t,p,g,s)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${g}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}const vT=n=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,Mhe=n=>n?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function d0(n,e,t=!1,s=32,r=!1,i=32,a=!1,o=!1){const l=n[1]*e[1],c=n[0]*e[0],d=t?l:s,p=t?s:l;B(p%e[1]===0&&d%e[0]===0&&s%e[1]===0,()=>`tileAHight ${p} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${e[0]}, tileInner ${s} must be divisible by workgroupSize[1]${e[1]}`);const m=p/e[1],g=d/e[0],x=s/e[1],b=n[1],w=n[0],v=a?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${l};
      let globalColStart = i32(workgroupId.x) * ${c};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${e[1]}) {
          for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${e[0]}) {
            ${vT(t)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${e[1]}) {
              for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${w}>;
        for (var k = 0; k < ${s}; k++) {
          for (var inner = 0; inner < ${w}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
          }
          for (var innerRow = 0; innerRow < ${b}; innerRow++) {
            let ACached = ${t?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
            for (var innerCol = 0; innerCol < ${w}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${b}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${e[1]};
        for (var innerCol = 0; innerCol < ${w}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${e[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${b};
  let tileCol = i32(localId.x) * ${w};

  let globalRow = i32(globalId.y) * ${b};
  let globalCol = i32(globalId.x) * ${w};
  let globalRowStart = i32(workgroupId.y) * ${l};

  let tileRowA = i32(localId.y) * ${m};
  let tileColA = i32(localId.x) * ${g};
  let tileRowB = i32(localId.y) * ${x};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${m}; innerRow++) {
      for (var innerCol = 0; innerCol < ${g}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${vT(t)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${x}; innerRow++) {
      for (var innerCol = 0; innerCol < ${w}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${s};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${w}>;
    for (var k = 0; k < ${s}; k++) {
      for (var inner = 0; inner < ${w}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${b}; innerRow++) {
        ${Mhe(t)}
        for (var innerCol = 0; innerCol < ${w}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${b}; innerRow++) {
    for (var innerCol = 0; innerCol < ${w}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${d}>, ${p}>;
    var<workgroup> mm_Bsub : array<array<f32, ${c}>, ${s}>;

    ${_e()} {
      let batch = ${r?"0":"i32(globalId.z)"};
      let batchA = ${r||!o?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${r||!o?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${r?`${Math.ceil(i/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
      var kStart = ${r?`i32(globalId.z) * ${i}`:"0"};

      var acc : array<array<f32, ${w}>, ${b}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${b}; innerRow++) {
        for (var innerCol = 0; innerCol < ${w}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${v}
    }
  `}const Bhe=n=>n?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function Vhe(n,e=!1){B(n[1]===1&&n[2]===1,()=>`A linear work group size is required. But got ${n}.`);const t=n[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${n[0]}>;

    ${_e()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${t} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${t} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${Bhe(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${t/4}; k++) {
          let rowB = t * ${t} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}class Uhe{constructor(e,t,s=!1,r=!1,i=null,a=null,o=null,l=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const c=s?e[1]:e[2];if(this.isVec4=(c%4===0&&!s||t[1]%4===0&&s)&&t[2]%4===0&&!r,this.outputComponent=this.isVec4?4:1,this.isVectorA=t[1]===1&&!s,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const m=fce(t[1],c,t[2],s);this.workgroupSize=m.workgroupSize,this.elementsPerThread=m.elementsPerThread}this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const d=i!=null,p=o!=null;d&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=l,this.transposeA=s,this.transposeB=r,this.addBias=d,this.activation=a,this.hasPreluActivationWeights=p,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],c),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${s}_${r}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,s){const r=this.workgroupSize[1]*this.elementsPerThread[1],i=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=i;const a=e%r===0,o=t%i===0,l=s%this.tileInner===0;return[a,o,l]}getUserCode(){return`
      ${ao(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${lC(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?h0(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?Vhe(this.workgroupSize,this.transposeA):d0(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Whe(n){return`
    var<workgroup> sumValues : array<f32, ${n}>;
    ${_e()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${n}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${n/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}class Ghe{constructor(e,t=!1,s=!1,r=null,i=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize);const o=r!=null,l=a!=null;o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=s,this.addBias=o,this.activation=i,this.hasPreluActivationWeights=l,this.shaderKey=`matMulReduce_${this.activation}_${t}_${s}`}getUserCode(){return`
      ${ao(this.activation,this.hasPreluActivationWeights)}
      ${lC(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${Whe(this.workgroupSize[0])}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hhe(n){const e=n[1],t=n[0],s=e>t?e:t;return`
  var<workgroup> mm_Asub : array<array<f32, ${s}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${_e()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${s};
    globalRowB = globalRowB + ${s};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${s};
      globalRowB = globalRowB + ${s};

      for (var k = 0; k < ${s}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}class jhe{constructor(e,t,s,r=!1,i=!1,a=null,o=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=s,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(s[2]/this.workgroupSize[0]),Math.ceil(s[1]/this.workgroupSize[1]),s[0]];const c=a!=null;c&&this.variableNames.push("bias");const d=l!=null;d&&this.variableNames.push("preluActivationWeights"),this.transposeA=r,this.transposeB=i,this.addBias=c,this.activation=o,this.hasPreluActivationWeights=d,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${r}_${i}`}getUserCode(){return`
      ${ao(this.activation,this.hasPreluActivationWeights)}
      ${lC(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${Hhe(this.workgroupSize)}
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qhe{constructor(e,t,s=!1,r=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,B(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const i=(s&&this.outputShape[1]%4===0||!s&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=i?4:1,i||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=Oe(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=r,this.shaderKey=`matMulSplitK_${s}_${r}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){const e=this.outputComponent;return`
      ${hF(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${xt(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${pl("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?h0(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):d0(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}}class Xhe{constructor(e,t=null,s=null,r=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=r!=null,this.activation=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${s}`}getUserCode(){return`
    ${ao(this.activation,this.hasPreluActivationWeights)}
    ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${Uu(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Khe{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cr(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:i}=t;if(i=i||Tu(r),i==="string"){const a=Sn(i,ue(s));return a.fill(r),e.makeTensorInfo(s,i,a)}else{const a=new Khe(s),o=[{type:"float32",data:[r]}];return e.runWebGPUProgram(a,[],i,o)}}const Yhe={kernelName:$x,backendName:"webgpu",kernelFunc:cr};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function je(n){const{inputs:e,attrs:t}=n,{x:s}=e,{shape:r}=t,i=ue(s.shape),a=h2(r,i),o=ue(a);return B(i===o,()=>`The new shape (${a}) has ${o} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.backend.incRef(s.dataId),{dataId:s.dataId,shape:a,dtype:s.dtype}}const Qhe={kernelName:Jf,backendName:"webgpu",kernelFunc:je};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p0({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const c=n.shape.length,d=e.shape.length,p=t?n.shape[c-2]:n.shape[c-1],m=s?e.shape[d-1]:e.shape[d-2],g=t?n.shape[c-1]:n.shape[c-2],x=s?e.shape[d-2]:e.shape[d-1],b=n.shape.slice(0,-2),w=e.shape.slice(0,-2),v=ue(b),$=ue(w),N=it(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([g,x]);B(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const E=t?[v,p,g]:[v,g,p],_=s?[$,x,m]:[$,m,x],z=je({inputs:{x:n},backend:r,attrs:{shape:E}}),P=je({inputs:{x:e},backend:r,attrs:{shape:_}}),O=[z,P],L=Math.max(v,$),D=[z,P],G=[{type:"int32",data:[g]},{type:"int32",data:[x]},{type:"int32",data:[p]}];let q,ee;const Z=[L,g,x];let H=pe().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(H<0){const se=pe().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),de=se>0?se:r.thresholdToIncreaseWorkgroups,W=L*Math.ceil(g/32)*Math.ceil(x/32);W<=de||g<=8&&W<=de*2?L*g*x<=128?H=aa.MatMulReduceProgram:L===1&&m>=2e3?H=aa.MatMulSplitKProgram:H=aa.MatMulSmallOutputSizeProgram:H=aa.MatMulPackedProgram}switch(H){case aa.MatMulReduceProgram:q=new Ghe(Z,t,s,i,l,a);break;case aa.MatMulSplitKProgram:{if(ee=cr({backend:r,attrs:{shape:Z,value:0,dtype:n.dtype}}),q=new qhe(Z,m,t,s),i||l){ee=r.runWebGPUProgram(q,D,n.dtype,G,ee);const de=new Xhe(ee.shape,i,l,a);let W=null;const ne=[ee];i&&ne.push(i),a&&ne.push(a),l==="leakyrelu"&&(W=[{type:"float32",data:[o]}],de.uniforms+=" alpha : f32,");const ge=r.runWebGPUProgram(de,ne,ee.dtype,W);O.push(ee);const me=je({inputs:{x:ge},backend:r,attrs:{shape:N}});O.push(ge);for(const xe of O)r.disposeData(xe.dataId);return me}break}case aa.MatMulSmallOutputSizeProgram:q=new jhe(E,_,Z,t,s,i,l,a);break;case aa.MatMulPackedProgram:const se=r.adapterInfo.isIntel();q=new Uhe(E,Z,t,s,i,l,a,se);break;default:throw new Error(`Unsupported MatMulProgramType ${H}.`)}i&&D.push(i),a&&D.push(a),l==="leakyrelu"&&(G.push({type:"float32",data:[o]}),q.uniforms+=" alpha : f32,"),ee=r.runWebGPUProgram(q,D,n.dtype,G,ee);const oe=je({inputs:{x:ee},backend:r,attrs:{shape:N}});O.push(ee);for(const se of O)r.disposeData(se.dataId);return oe}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zhe(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:c,activation:d,leakyreluAlpha:p}=s;return p0({a:r,b:i,transposeA:l,transposeB:c,backend:t,bias:a,preluActivationWeights:o,leakyreluAlpha:p,activation:d})}const Jhe={kernelName:Wp,backendName:"webgpu",kernelFunc:Zhe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ST{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=it(t,s),this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${oC(this.op,!1)}
      }

      ${_e("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zy{constructor(e,t,s){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=it(t,s),this.dispatchLayout=Ue(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&s.length>1&&t[0]<128,this.useSharedMemoryWithB=s.length<=1&&t.length>1&&s[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?s[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{const r=t.length>0&&t[t.length-1]%4===0,i=s.length>0&&s[s.length-1]%4===0;r&&i?(this.outputComponent=4,this.variableComponents=[4,4]):r&&(bN(s)||s[s.length-1]===1)||i&&(bN(t)||t[t.length-1]===1)?(this.outputComponent=4,this.variableComponents=r?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const t=this.outputComponent===4?"vec4<f32>":"f32",s=`
    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
      ${oC(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){const r=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",i=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${r}];`:`let a = sharedBuf[${r}];
          let b = getBByOutputIndex(index);`;e=`
        ${s}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${_e("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${i}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${s}
       ${_e("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${t}(getAByOutputCoords(coords));
           let b = ${t}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Er(n){const{inputs:e}=n,{x:t}=e;return n.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}const ede={kernelName:Ah,backendName:"webgpu",kernelFunc:Er};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wu(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,i=t.makeTensorInfo(s.shape,"complex64"),a=t.tensorMap.get(i.dataId),o=Er({inputs:{x:s},backend:t}),l=Er({inputs:{x:r},backend:t});return a.complexTensorInfos={real:o,imag:l},i}const tde={kernelName:cx,backendName:"webgpu",kernelFunc:Wu};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vd{constructor(e,t,s=""){this.variableNames=["A"],this.size=!0;const r=128;this.workgroupSize=[r,1,1],this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,s!==""&&(this.uniforms=s),this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Jl(this.op,!1)}
      }
      ${_e("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zt({opType:n,cpuKernelImpl:e,dtype:t}){return({inputs:s,backend:r})=>{const{x:i}=s,a=r,o=t||i.dtype;if(a.shouldExecuteOnCPU([i])&&e!=null){const c=a.tensorMap.get(i.dataId),d=e(c.values,o);return a.makeTensorInfo(i.shape,o,d)}const l=new vd(i.shape,n);return a.runWebGPUProgram(l,[i],o)}}function ds({opType:n,cpuKernelImpl:e,supportsComplex:t=!1,dtype:s}){return({inputs:r,backend:i})=>{const{a,b:o}=r,l=i;if(t&&a.dtype==="complex64"){const p=l.tensorMap.get(a.dataId),m=l.tensorMap.get(o.dataId);let g,x;if(n!==ut.MUL)[g,x]=[[p.complexTensorInfos.real,m.complexTensorInfos.real],[p.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(w=>{const[v,$]=w,I={dataId:v.dataId,dtype:v.dtype,shape:a.shape},N={dataId:$.dataId,dtype:$.dtype,shape:o.shape},E=new Zy(n,a.shape,o.shape);return l.runWebGPUProgram(E,[I,N],hs(v.dtype,$.dtype))});else{const w=new ST(ut.COMPLEX_MULTIPLY_REAL,a.shape,o.shape),v=new ST(ut.COMPLEX_MULTIPLY_IMAG,a.shape,o.shape),$=[{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:a.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:m.complexTensorInfos.real.dataId,dtype:m.complexTensorInfos.real.dtype,shape:o.shape},{dataId:m.complexTensorInfos.imag.dataId,dtype:m.complexTensorInfos.imag.dtype,shape:o.shape}];g=l.runWebGPUProgram(w,$,"float32"),x=l.runWebGPUProgram(v,$,"float32")}const b=Wu({inputs:{real:g,imag:x},backend:l});return l.disposeData(g.dataId),l.disposeData(x.dataId),b}const c=s||hs(a.dtype,o.dtype);if((a.dtype==="string"||o.dtype==="string"||l.shouldExecuteOnCPU([a,o]))&&e!=null){const p=l.tensorMap.get(a.dataId).values,m=l.tensorMap.get(o.dataId).values,g=a.dtype==="string"?Gi(p):p,x=a.dtype==="string"?Gi(m):m,[b,w]=e(a.shape,o.shape,g,x,c);return l.makeTensorInfo(w,c,b)}const d=new Zy(n,a.shape,o.shape);return l.runWebGPUProgram(d,[a,o],c)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:nde,castImpl:sde,ceilImpl:rde,concatImpl:ide,equalImpl:ade,expImpl:ode,expm1Impl:lde,floorImpl:ude,floorDivImpl:cde,gatherNdImpl:hde,gatherV2Impl:dde,greaterEqualImpl:pde,greaterImpl:fde,lessEqualImpl:mde,lessImpl:gde,logImpl:yde,maxImpl:xde,maximumImpl:bde,minimumImpl:wde,multiplyImpl:vde,negImpl:Sde,notEqualImpl:Cde,prodImpl:$de,rangeImpl:kde,rsqrtImpl:Nde,scatterImpl:Ide,simpleAbsImpl:Tde,sliceImpl:Ede,stridedSliceImpl:Rde,stringNGramsImpl:Ade,subImpl:Dde,tileImpl:_de,topKImpl:Ode,transposeImpl:Fde}=Z_;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zde=zt({opType:Ae.ABS,cpuKernelImpl:Tde}),Lde={kernelName:hf,backendName:"webgpu",kernelFunc:zde};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pde=zt({opType:Ae.ACOS}),Mde={kernelName:hh,backendName:"webgpu",kernelFunc:Pde};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bde=zt({opType:Ae.ACOSH}),Vde={kernelName:dh,backendName:"webgpu",kernelFunc:Bde};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ude=ds({opType:ut.ADD,cpuKernelImpl:nde,supportsComplex:!0}),Wde={kernelName:Eu,backendName:"webgpu",kernelFunc:Ude};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gde{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,s)=>`T${s}`),this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach(r=>{e.push(`let v${r} = get${r}ByOutputCoords(coords);`)});const t=this.variableNames.map(r=>`v${r}`).join(" + ");return`
      ${_e("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hde(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return Er({inputs:{x:s[0]},backend:t});const r=s.map(o=>o.dtype).reduce((o,l)=>hs(o,l)),i=s.map(o=>o.shape),a=new Gde(i);return t.runWebGPUProgram(a,s,r)}const jde={kernelName:df,backendName:"webgpu",kernelFunc:Hde};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qde{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[t[r]];this.outputShape=s,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){B(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);const e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${_e()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xde{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[t[r]];this.outputShape=s,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){const e=An(this.outputShape.length),t=dF(this.newDim);return`
      ${_e("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}}function dF(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=new Array(e);for(let s=0;s<n.length;s++)t[n[s]]=`coords.${Ja(s)}`;return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xa(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:i}=s,a=t,o=r.shape.length,l=new Array(o);for(let d=0;d<l.length;d++)l[d]=r.shape[i[d]];if(t.shouldExecuteOnCPU([r])){const p=a.tensorMap.get(r.dataId).values,m=Fde(p,r.shape,r.dtype,i,l);return t.makeTensorInfo(l,r.dtype,m)}if(r.shape.length===2&&yt(i,[1,0])){const d=new qde(r.shape,i);return a.runWebGPUProgram(d,[r],r.dtype)}const c=new Xde(r.shape,i);return a.runWebGPUProgram(c,[r],r.dtype)}const Kde={kernelName:lu,backendName:"webgpu",kernelFunc:xa};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yde{constructor(e,t,s){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[r]=Dn(this.inputShape,[1]);this.outputShape=r.length===0?[1]:r,e.inSize>=32768&&s>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";const s=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",t="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");const r=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${s}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${_e("index")} {
         let outputIndex = index / ${s};
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${s}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${s}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${s}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${r}
        }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qde={mean:"float32",all:"bool",any:"bool"};function Gu(n,e,t,s,r){const i=n.shape.length,a=[],o=pt(e,n.shape);let l=o;const c=Qt(l,i);let d=n;c!=null&&(d=xa({inputs:{x:n},attrs:{perm:c},backend:r}),l=ln(l.length,i),a.push(d)),Mn(s,l,i);const[p,m]=Dn(d.shape,l);let g=p;t&&(g=$n(p,o));let x;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([d])){const b=r.tensorMap.get(d.dataId).values;switch(s){case"max":const w=xde(b,ue(m),g,n.dtype);x=r.makeTensorInfo(g,n.dtype,w);break;case"prod":const{outVals:v,outShape:$,outDtype:I}=$de(d.shape,d.dtype,b,l);x=r.makeTensorInfo($,I,v);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{const b=ue(m),v=ue(d.shape)/b,$={windowSize:b,inSize:b,batchSize:v,outSize:1},I=Qde[s]||tb(n.dtype),N=[{type:"int32",data:[b]}],E=new Yde($,s,r.device.limits.maxComputeWorkgroupSizeX),_=r.runWebGPUProgram(E,[d],I,N);a.push(_),x=je({inputs:{x:_},attrs:{shape:g},backend:r})}return a.forEach(b=>r.disposeData(b.dataId)),x}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:i,axis:a}=s;return Gu(r,a,i,"all",t)}const Jde={kernelName:sx,backendName:"webgpu",kernelFunc:Zde};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function epe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:i,axis:a}=s;return Gu(r,a,i,"any",t)}const tpe={kernelName:rx,backendName:"webgpu",kernelFunc:epe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pF{constructor(e,t,s){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const r=[t];this.op=s==="min"?"<":">";const[i,a]=Dn(e,r);this.outputShape=i.length===0?[1]:i,this.dispatchLayout=Ue(this.outputShape),ue(a)<32?(this.type="plain",this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=Oe(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${Ja(this.inputShape.length-1)}`,s=()=>{let r="";if(this.outputShape.length===1)this.inputShape.length!==1&&(r+="outputCoords,");else for(let i=0;i<this.outputShape.length;i++)r+=`outputCoords.${Ja(i)},`;return r};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${_e("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${s()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${_e("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${s()} 0);
          let reduceLength = ${t()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${s()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function npe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;let a=pt(i,r.shape);const o=Qt(a,r.shape.length);let l=r;const c=[];o!=null&&(l=xa({inputs:{x:r},backend:t,attrs:{perm:o}}),c.push(l),a=ln(a.length,l.shape.length)),Mn("argMax",[a[0]],l.shape.length);const d=new pF(l.shape,a[0],"max"),p=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],m=t.runWebGPUProgram(d,[l],"int32",p);return c.forEach(g=>t.disposeData(g.dataId)),m}const spe={kernelName:pf,backendName:"webgpu",kernelFunc:npe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rpe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;let a=pt(i,r.shape);const o=Qt(a,r.shape.length);let l=r;const c=[];o!=null&&(l=xa({inputs:{x:r},backend:t,attrs:{perm:o}}),c.push(l),a=ln(a.length,l.shape.length)),Mn("argMin",[a[0]],l.shape.length);const d=new pF(l.shape,a[0],"min"),p=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],m=t.runWebGPUProgram(d,[l],"int32",p);return c.forEach(g=>t.disposeData(g.dataId)),m}const ipe={kernelName:ff,backendName:"webgpu",kernelFunc:rpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ape=zt({opType:Ae.ASIN}),ope={kernelName:ph,backendName:"webgpu",kernelFunc:ape};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lpe=zt({opType:Ae.ASINH}),upe={kernelName:fh,backendName:"webgpu",kernelFunc:lpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cpe=zt({opType:Ae.ATAN}),hpe={kernelName:mh,backendName:"webgpu",kernelFunc:cpe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dpe=ds({opType:ut.ATAN2}),ppe={kernelName:yh,backendName:"webgpu",kernelFunc:dpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fpe=zt({opType:Ae.ATANH}),mpe={kernelName:gh,backendName:"webgpu",kernelFunc:fpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gpe{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lf{constructor(e,t,s=!1,r=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=i,this.shaderKey=`pool2D_${t}_${s}_${r}_${i}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}}class uC{constructor(e,t,s=!1,r=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=i,this.shaderKey=`pool3D_${t}_${s}_${r}_${i}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fF(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:i,keepDims:a}=s;return Gu(r,i,a,"max",t)}const ype={kernelName:Mf,backendName:"webgpu",kernelFunc:fF};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mF(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:i,axis:a}=s;return Gu(r,a,i,"mean",t)}const xpe={kernelName:Uf,backendName:"webgpu",kernelFunc:mF};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gF(n,e,t,s){if(e.filterWidth===1&&e.filterHeight===1&&yt(e.inShape,e.outShape))return Er({inputs:{x:n},backend:s});if(e.filterWidth===e.inWidth&&e.filterHeight===e.inHeight&&e.batchSize===1&&e.padInfo.type==="VALID"){const a=n.shape.length,o=je({inputs:{x:n},backend:s,attrs:{shape:[n.shape[a-3]*n.shape[a-2],n.shape[a-1]]}});let l;t==="avg"?l=mF({inputs:{x:o},backend:s,attrs:{axis:0,keepDims:!1}}):(B(t==="max",()=>`Invalid pool type ${t}`),l=fF({inputs:{x:o},backend:s,attrs:{reductionIndices:0,keepDims:!1}}));const c=je({inputs:{x:l},backend:s,attrs:{shape:e.outShape}});return s.disposeData(o.dataId),s.disposeData(l.dataId),c}let r;const i=[{type:"int32",data:[e.strideHeight,e.strideWidth]}];return e.filterHeight===1&&e.filterWidth===1?r=new gpe(e):(t==="avg"?r=new lf(e,"avg"):(B(t==="max",()=>`Invalid pool type ${t}`),r=new lf(e,"max")),i.push({type:"int32",data:[e.padInfo.top,e.padInfo.left]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[e.inHeight,e.inWidth]},{type:"int32",data:[e.effectiveFilterHeight,e.effectiveFilterWidth]})),s.runWebGPUProgram(r,[n],n.dtype,i)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bpe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,d=As(r.shape,i,a,1,o,l);return gF(r,d,"avg",t)}const wpe={kernelName:mf,backendName:"webgpu",kernelFunc:bpe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vpe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:c}=s,d=[1,1,1],p=Hr(r.shape,i,a,d,o,c,l),m=new uC(p,"avg"),g=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];return t.runWebGPUProgram(m,[r],r.dtype,g)}const Spe={kernelName:gf,backendName:"webgpu",kernelFunc:vpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cpe{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class $pe{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kpe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,a=i,{filterSize:o,strides:l,pad:c,dimRoundingMode:d}=s,p=Hr(a.shape,o,l,1,c,d),m=new $pe(p),g=1/(p.filterDepth*p.filterHeight*p.filterWidth),x=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterDepth-1-p.padInfo.front,p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outDepth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"float32",data:[g]}];return t.runWebGPUProgram(m,[r],a.dtype,x)}const Npe={kernelName:ax,backendName:"webgpu",kernelFunc:kpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ipe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,a=i;cF([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:c}=s,d=As(a.shape,o,l,1,c),p=new Cpe(d),m=1/(d.filterHeight*d.filterWidth),g=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"float32",data:[m]}];return t.runWebGPUProgram(p,[r],a.dtype,g)}const Tpe={kernelName:ix,backendName:"webgpu",kernelFunc:Ipe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Epe(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i}=e,{transposeA:a,transposeB:o}=s;return p0({a:r,b:i,transposeA:a,transposeB:o,backend:t})}const Rpe={kernelName:yf,backendName:"webgpu",kernelFunc:Epe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ape{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${An(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=An(this.rank),t=Dpe(this.rank);let s;return this.start.length===1?s=this.outputShape.map((i,a)=>"sourceLoc = uniforms.start + coords;"):s=this.outputShape.map((i,a)=>`sourceLoc.${t2[a]} = uniforms.start.${Ja(a)} + coords.${t2[a]};`),`
      ${_e("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${s.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}}const t2=["x","y","z","w","u","v"];function Dpe(n){if(n===1)return"sourceLoc";if(n<=6)return t2.slice(0,n).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sd(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,size:a}=s,[o,l]=bm(r,i,a);if(Ib(r,o,l),t.shouldExecuteOnCPU([r])||r.dtype==="string"){const p=t.tensorMap.get(r.dataId),m=Ede(p.values,o,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,m)}if(ue(l)===0)return t.makeTensorInfo(l,r.dtype,[]);const c=new Ape(o,l),d=[{type:"int32",data:o}];return t.runWebGPUProgram(c,[r],r.dtype,d)}const _pe={kernelName:rm,backendName:"webgpu",kernelFunc:Sd};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ope=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,crops:a}=s;B(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");const o=i.reduce(($,I)=>$*I),l=_u(r.shape,i,o),c=Ou(l.length,i.length),d=Fu(r.shape,i,o),p=_b(a,i.length),m=Ob(d,a,i.length),g=[],x=je({inputs:{x:r},backend:t,attrs:{shape:l}}),b=xa({inputs:{x},backend:t,attrs:{perm:c}}),w=je({inputs:{x:b},backend:t,attrs:{shape:d}}),v=Sd({inputs:{x:w},backend:t,attrs:{begin:p,size:m}});return g.push(x),g.push(b),g.push(w),g.forEach($=>t.disposeData($.dataId)),v},Fpe={kernelName:xf,backendName:"webgpu",kernelFunc:Ope};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zpe=`
  fn bincount_write(index: i32, value: f32) {
    ${pl("&result[index]","value","float32")}
  }
`,Lpe=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`;class yF{constructor(e,t,s=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=s,s&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?Lpe:zpe}
  ${_e("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ppe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:a}=s,o=ue(r.shape),c=ue(i.shape)>0,d=[a],p=i.dtype,m=cr({backend:t,attrs:{shape:d,value:0,dtype:p}}),g=new yF([o],c),x=[{type:"int32",data:[a]}],b=c?[r,i]:[r];return t.runWebGPUProgram(g,b,p,x,m)}const Mpe={kernelName:ox,backendName:"webgpu",kernelFunc:Ppe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bpe{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${_e("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vpe(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e;if(t.shouldExecuteOnCPU([s,r])){const d=t.tensorMap.get(s.dataId),p=t.tensorMap.get(r.dataId),m=d.values,g=p.values,x=it(Array.from(m),Array.from(g));return t.makeTensorInfo([x.length],"int32",Int32Array.from(x))}const i=ue(s.shape),a=ue(r.shape),o=Math.max(i,a),l=new Bpe(o),c=[{type:"int32",data:[i]},{type:"int32",data:[a]}];return t.runWebGPUProgram(l,[s,r],"int32",c)}const Upe={kernelName:ux,backendName:"webgpu",kernelFunc:Vpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xF=ds({opType:ut.NOT_EQUAL,dtype:"bool",cpuKernelImpl:Cde}),Wpe={kernelName:jf,backendName:"webgpu",kernelFunc:xF};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zm(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.tensorMap.get(s.dataId);return Er({inputs:{x:r.complexTensorInfos.real},backend:t})}const Gpe={kernelName:Px,backendName:"webgpu",kernelFunc:zm};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hpe(n,e){const t=new vd(n.shape,Ae.TO_INT),s=e.runWebGPUProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n2(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return Er({inputs:{x:r},backend:t});const a=Rn(r.shape),o=n2({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),l=Wu({inputs:{real:o,imag:a},backend:t});return a.dispose(),t.disposeData(o.dataId),l}if(r.dtype==="complex64"){const a=zm({inputs:{input:r},backend:t}),o=n2({inputs:{x:a},backend:t,attrs:{dtype:i}});return t.disposeData(a.dataId),o}if(!d2(r.dtype,i)){const a=Er({inputs:{x:r},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:i}}if(t.shouldExecuteOnCPU([r])){const a=t.tensorMap.get(r.dataId).values,[o,l,c]=sde(a,r.shape,r.dtype,i);return t.makeTensorInfo(o,l,c)}if(i==="int32")return Hpe(r,t);if(i==="bool"){const a=t.makeTensorInfo([],"bool",Yn("bool",1)),l=xF({inputs:{a:r,b:a},backend:t});return t.disposeData(a.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const jpe={kernelName:xh,backendName:"webgpu",kernelFunc:n2};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qpe=zt({opType:Ae.CEIL,cpuKernelImpl:rde}),Xpe={kernelName:bh,backendName:"webgpu",kernelFunc:qpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kpe{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${_e("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ype{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${_e("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qpe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:i,clipValueMax:a}=s;let o;const l=[{type:"float32",data:[i]},{type:"float32",data:[a]}];return ue(r.shape)%4===0?o=new Kpe(r.shape):o=new Ype(r.shape),t.runWebGPUProgram(o,[r],r.dtype,l)}const Zpe={kernelName:wh,backendName:"webgpu",kernelFunc:Qpe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jpe{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CT(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function efe(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.tensorMap.get(s.dataId),i=new Jpe(s.shape),a=[CT(s,r.complexTensorInfos.real),CT(s,r.complexTensorInfos.imag)];return t.runWebGPUProgram(i,a,a[0].dtype)}const tfe={kernelName:bf,backendName:"webgpu",kernelFunc:efe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nfe{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=ur(e,1),this.variableNames=e.map((t,s)=>`T${s}`),this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let i=1;i<this.offsetLength;i++)e.push(`else if (yC < uniforms.offset${[i]}){ setOutputAtCoords(coords.x, coords.y, getT${i}(yR, yC - uniforms.offset${i-1})); }`);const s=this.offsetLength,r=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${r})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${_e("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f0(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.tensorMap.get(s.dataId);return Er({inputs:{x:r.complexTensorInfos.imag},backend:t})}const sfe={kernelName:Tx,backendName:"webgpu",kernelFunc:f0};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bp(n,e,t){const s=n[0].dtype;if(s==="complex64"){const x=n.map(I=>zm({inputs:{input:I},backend:t})),b=n.map(I=>f0({inputs:{input:I},backend:t})),w=Bp(x,e,t),v=Bp(b,e,t),$=Wu({inputs:{real:w,imag:v},backend:t});return x.forEach(I=>t.disposeData(I.dataId)),b.forEach(I=>t.disposeData(I.dataId)),t.disposeData(w.dataId),t.disposeData(v.dataId),$}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const x=n.map(E=>{const z=[-1,ue(E.shape.slice(e))];return je({inputs:{x:E},backend:t,attrs:{shape:z}})}),b=x.map(E=>({vals:t.readSync(E.dataId),shape:E.shape})),w=ur(x.map(E=>E.shape),1),v=x[0].shape[0]===1,$=ide(b,w,s,v),I=ur(n.map(E=>E.shape),e),N=t.makeTensorInfo(I,s,$);return x.forEach(E=>t.disposeData(E.dataId)),N}const i=t.device.limits.maxStorageBuffersPerShaderStage-1;if(n.length>i){const x=[];for(let w=0;w<n.length;w+=i){const v=n.slice(w,w+i);x.push(Bp(v,e,t))}const b=Bp(x,e,t);for(const w of x)t.disposeData(w.dataId);return b}const{tensors2D:a,outShape:o}=rfe(n,e,t),l=a.map(x=>x.shape),c=new nfe(l),d=[],p=new Array(l.length-1);if(p.length>0){p[0]=l[0][1],d.push({type:"int32",data:[p[0]]});for(let x=1;x<p.length;x++)p[x]=p[x-1]+l[x][1],d.push({type:"int32",data:[p[x]]})}const m=t.runWebGPUProgram(c,a,a[0].dtype,d);a.forEach(x=>t.disposeData(x.dataId));const g=je({inputs:{x:m},backend:t,attrs:{shape:o}});return t.disposeData(m.dataId),g}function rfe(n,e,t){const s=ur(n.map(i=>i.shape),e);return{tensors2D:n.map(i=>je({inputs:{x:i},backend:t,attrs:{shape:[ue(i.shape.slice(0,e)),ue(i.shape.slice(e))]}})),outShape:s}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,i=pt(r,e[0].shape)[0],a=e.map(c=>c.shape);Rb(a,i);const o=ur(e.map(c=>c.shape),i);if(ue(o)===0)return t.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(c=>ue(c.shape)>0);return l.length===1?Er({inputs:{x:l[0]},backend:t}):Bp(l,i,t)}const ife={kernelName:wf,backendName:"webgpu",kernelFunc:bF};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function afe(n,e,t,s,r=!1,i=null,a=!1,o=4,l=4,c=4){const d=O=>{switch(O){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${O} is not supported.`)}},p=O=>{switch(O){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${O} is not supported.`)}},m=n?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,g=n?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,x=n?"uniforms.xShape[1]":"uniforms.xShape[2]",b=n?"uniforms.xShape[2]":"uniforms.xShape[3]",w=n?"row":"col",v=n?"col":"row",$=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${w} / outWidth;
      let outCol = ${w} % outWidth;

      let WRow = ${v} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${v} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${v} % inChannels;
      var resData = ${xt(o)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${x} && xCol >= 0 && xCol < ${b}) {
        ${m}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${d(o)}
      }
      return resData;`,I=n?e&&s?`
      ${$}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${$}
      }
      return ${xt(o)}(0.0);`:s&&t?`
      ${$}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${$}
      }
      return ${xt(o)}(0.0);`,N=`${p(l)}`,E=xt(c),_=xt(n?o:l),z=xt(n?l:o);return`
      ${ao(i,a,c===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${_} {
        ${n?I:N}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${z} {
        ${n?N:I}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${E}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${g}
        ${Uu(r,i)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}class ofe{constructor(e,t,s,r,i=!1,a=null,o=!1,l=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=oF(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=lF(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),i&&(this.variableNames.push("bias"),this.variableComponents.push(4)),o&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=l,this.addBias=i,this.activation=a,this.hasPreluActivationWeights=o,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=s%this.tileBOuter===0,this.fitInner=r%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?h0(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):d0(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${afe(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lfe{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=s,this.hasPreluActivationWeights=r,t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${ao(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${Uu(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${_e("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ufe{constructor(e,t){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,s=this.isChannelsLast?"coords[1]":"coords[2]",r=this.isChannelsLast?"coords[2]":"coords[1]",i=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${_e("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${s};
        let col = ${r};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {
            value = ${i};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jy(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function cfe({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=t.dataFormat==="channelsLast",c=!l,d=!1,p=l&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",m=[];let g,x;if(p){const v=t.inHeight*t.inWidth*t.inChannels;g=je({inputs:{x:n},backend:s,attrs:{shape:[1,t.batchSize,v]}}),x=je({inputs:{x:e},backend:s,attrs:{shape:[1,v,t.outChannels]}})}else g=je({inputs:{x:n},backend:s,attrs:{shape:l?[t.batchSize,t.inHeight*t.inWidth,t.inChannels]:[t.batchSize,t.inChannels,t.inHeight*t.inWidth]}}),x=je({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});if(m.push(g),m.push(x),i!=null){const v=Jy(i.shape,l);v!=null&&(i=je({inputs:{x:i},backend:s,attrs:{shape:v}}),m.push(i))}if(r!=null){const v=Jy(r.shape,l);v!=null&&(r=je({inputs:{x:r},backend:s,attrs:{shape:v}}),m.push(r))}const b=p0({a:l?g:x,b:l?x:g,transposeA:c,transposeB:d,backend:s,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),w=je({inputs:{x:b},backend:s,attrs:{shape:t.outShape}});m.push(b);for(const v of m)s.disposeData(v.dataId);return w}function hfe({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:c,inChannels:d,strideWidth:p,strideHeight:m,padInfo:g,outWidth:x,outHeight:b,dilationWidth:w,dilationHeight:v,dataFormat:$}=t,I=$==="channelsLast",N=l*c*d,E=b*x,_=I?[t.batchSize,E,N]:[t.batchSize,N,E],z=new ufe(_,I),P=[{type:"int32",data:[g.top,g.left]},{type:"int32",data:[m,p]},{type:"int32",data:[v,w]},{type:"int32",data:[x]},{type:"int32",data:[d*l]},{type:"int32",data:[d]}],O=s.runWebGPUProgram(z,[n],n.dtype,P),L=[];L.push(O);const D=je({inputs:{x:e},backend:s,attrs:{shape:[1,N,-1]}});if(L.push(D),i!=null){const H=Jy(i.shape,I);H!=null&&(i=je({inputs:{x:i},backend:s,attrs:{shape:H}}),L.push(i))}if(r!=null){const H=Jy(r.shape,I);H!=null&&(r=je({inputs:{x:r},backend:s,attrs:{shape:H}}),L.push(r))}const ee=p0({a:I?O:D,b:I?D:O,transposeA:!I,transposeB:!1,backend:s,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),Z=je({inputs:{x:ee},backend:s,attrs:{shape:t.outShape}});L.push(ee);for(const H of L)s.disposeData(H.dataId);return Z}function wF({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=r!=null,c=i!=null,d=t.dataFormat==="channelsLast",p=d&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",m=pe().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!m&&(p||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID")))return cfe({x:n,filter:e,convInfo:t,backend:s,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a});const g=pe().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),x=g>-1?g:s.thresholdToIncreaseWorkgroups,b=t.batchSize*Math.ceil(t.outHeight*t.outWidth/32)*Math.ceil(t.outChannels/32);if(pe().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||b<=x)return hfe({x:n,filter:e,convInfo:t,backend:s,bias:r,preluActivationWeights:i,leakyreluAlpha:a,activation:o});let w;const v=[t.padInfo.top,t.padInfo.left],$=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...v]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]}];if(m)w=new lfe(t,l,o,c);else{const _=d?t.outHeight*t.outWidth:t.outChannels,z=d?t.outChannels:t.outHeight*t.outWidth,P=t.filterHeight*t.filterWidth*t.inChannels;$.push({type:"int32",data:[_]},{type:"int32",data:[z]},{type:"int32",data:[P]});const O=s.adapterInfo.isIntel();w=new ofe(t,_,z,P,l,o,c,O)}const I=[],N=[n,e];l&&(!d&&r.shape.length===1&&(r=je({inputs:{x:r},backend:s,attrs:{shape:[r.shape[0],1,1]}}),I.push(r)),N.push(r)),c&&(!d&&i.shape.length===1&&(i=je({inputs:{x:i},backend:s,attrs:{shape:[i.shape[0],1,1]}}),I.push(i)),N.push(i)),o==="leakyrelu"&&($.push({type:"float32",data:[a]}),w.uniforms+=" alpha : f32,");const E=s.runWebGPUProgram(w,N,n.dtype,$);for(const _ of I)s.disposeData(_.dataId);return E}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dfe(n){const{inputs:e,attrs:t,backend:s}=n,{x:r,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:c,dimRoundingMode:d}=t,p=Rr(l),m=on(r.shape,i.shape,a,c,o,d,!1,p);return wF({x:r,filter:i,convInfo:m,backend:s})}const pfe={kernelName:vf,backendName:"webgpu",kernelFunc:dfe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ffe{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,s=this.isChannelsLast?3:1,r=`
    ${_e()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${r}
    `:`
    ${_e("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${s}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class mfe{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${_e("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class gfe{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${_e("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class yfe{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${_e("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xfe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:c,filterShape:d}=s,p=Rr(l),m=on(r.shape,d,a,1,o,c,!1,p),g=new mfe(m),x=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.batchSize]},{type:"int32",data:[m.outHeight]},{type:"int32",data:[m.outWidth]},{type:"int32",data:[m.inHeight]},{type:"int32",data:[m.inWidth]}];return t.runWebGPUProgram(g,[r,i],r.dtype,x)}const bfe={kernelName:hx,backendName:"webgpu",kernelFunc:xfe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wfe(n=4){const e=i=>{switch(i){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${i} is not supported.`)}},s=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${xt(n)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${xt(n)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${n}];`}
      }
      return ${xt(n)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${xt(n)} {
    ${s}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${xt(n)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(n)}
    }
    return ${xt(n)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${xt(n)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${n}] = value;
    }
  }`}class vfe{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,B(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=oF(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=lF(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?h0(this.elementsPerThread,this.workgroupSize):d0(this.elementsPerThread,this.workgroupSize);return`
    ${wfe(this.isVec4?4:1)}
    ${e}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sfe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:c,dimRoundingMode:d}=s,p=Rr(c),m=on(a,i.shape,o,1,l,d,!1,p),g=[{type:"int32",data:[m.filterHeight,m.filterWidth]},{type:"int32",data:[m.filterHeight-1-m.padInfo.top,m.filterWidth-1-m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.batchSize,m.outHeight,m.outWidth,m.outChannels]}];let x;if(pe().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||m.dataFormat!=="channelsLast")x=new ffe(m);else{x=new vfe(m);const b=m.inHeight*m.inWidth,w=m.inChannels,v=m.filterHeight*m.filterWidth*m.outChannels;g.push({type:"uint32",data:[b]},{type:"uint32",data:[w]},{type:"uint32",data:[v]})}return t.runWebGPUProgram(x,[r,i],"float32",g)}const Cfe={kernelName:Sf,backendName:"webgpu",kernelFunc:Sfe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $fe{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kfe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s,c=Ki(r.shape,i.shape,a,l,o),d=[c.padInfo.front,c.padInfo.top,c.padInfo.left],p=[{type:"int32",data:[c.filterDepth,c.filterHeight,c.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[c.strideDepth,c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationDepth,c.dilationHeight,c.dilationWidth]}],m=new $fe(c),g=hs(r.dtype,i.dtype);return t.runWebGPUProgram(m,[r,i],g,p)}const Nfe={kernelName:Cf,backendName:"webgpu",kernelFunc:kfe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ife(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:a,pad:o,filterShape:l}=s,c=Ki(r.shape,l,a,1,o),d=new gfe(c),p=[{type:"int32",data:[c.padInfo.front,c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideDepth,c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize]},{type:"int32",data:[c.outDepth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"int32",data:[c.inDepth]},{type:"int32",data:[c.inHeight]},{type:"int32",data:[c.inWidth]}];return t.runWebGPUProgram(d,[r,i],i.dtype,p)}const Tfe={kernelName:dx,backendName:"webgpu",kernelFunc:Ife};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Efe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{strides:a,pad:o,inputShape:l}=s,c=Ki(l,i.shape,a,1,o),d=new yfe(c),p=[{type:"int32",data:[c.filterDepth,c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterDepth-1-c.padInfo.front,c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideDepth,c.strideHeight,c.strideWidth]},{type:"int32",data:[c.outDepth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"int32",data:[c.outChannels]}];return t.runWebGPUProgram(d,[r,i],r.dtype,p)}const Rfe={kernelName:px,backendName:"webgpu",kernelFunc:Efe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Afe=zt({opType:Ae.COS}),Dfe={kernelName:vh,backendName:"webgpu",kernelFunc:Afe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _fe=zt({opType:Ae.COSH}),Ofe={kernelName:Sh,backendName:"webgpu",kernelFunc:_fe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ffe{constructor(e,t,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[i]=t;this.outputShape=[i,s[0],s[1],e],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=r==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[s,r,i]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,o,l]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
    ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${s});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${r};
        let width_scale = ${o};
        let in_y = ${i};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${l};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zfe=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:c}=s,d=new Ffe(r.shape[3],i.shape,o,l),p=[{type:"float32",data:[c]}];return t.runWebGPUProgram(d,[r,i,a],"float32",p)},Lfe={kernelName:mx,backendName:"webgpu",kernelFunc:zfe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var uf;(function(n){n.Prod="*",n.Sum="+"})(uf||(uf={}));class $T{constructor(e,t,s,r){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=s,this.reverse=r,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,t=this.op===uf.Prod?"1.0":"0.0",s=this.exclusive?t:`getX(${kT(e,"coords",this.op)})`,r=this.outputShape[this.outputShape.length-1];let i="",a="";return this.exclusive?(i=this.reverse?`end != ${r-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(i=this.reverse?`end + pow2 < ${r}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${_e("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${NT(e,"coords",this.op)};
         var val = ${s};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${i}) {
           let idx = ${a};
           ${NT(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${kT(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}}function kT(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function NT(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vF(n,e,t,s,r,i){const a=e.shape.length,o=Qt([s],a);let l=e;o!=null&&(l=xa({inputs:{x:e},backend:t,attrs:{perm:o}}));const c=ln(1,a)[0];if(c!==a-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const d=l.shape[c];let p=Er({inputs:{x:l},backend:t});for(let m=0;m<=Math.ceil(Math.log2(d))-1;m++){const g=new $T(n,l.shape,!1,i),x=p,b=[{type:"float32",data:[m]}];p=t.runWebGPUProgram(g,[p],p.dtype,b),t.disposeData(x.dataId)}if(r){const m=new $T(n,l.shape,r,i),g=p,x=[{type:"float32",data:[0]}];p=t.runWebGPUProgram(m,[p],p.dtype,x),t.disposeData(g.dataId)}if(o!=null){const m=wa(o),g=xa({inputs:{x:p},backend:t,attrs:{perm:m}});return t.disposeData(p.dataId),t.disposeData(l.dataId),g}return p}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pfe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;return vF(uf.Prod,r,t,i,a,o)}const Mfe={kernelName:fx,backendName:"webgpu",kernelFunc:Pfe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bfe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:a,reverse:o}=s;return vF(uf.Sum,r,t,i,a,o)}const Vfe={kernelName:$f,backendName:"webgpu",kernelFunc:Bfe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ufe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:a,binaryOutput:o}=s,l=r.shape.length===1,d=ue(i.shape)>0,p=i.dtype,m=l?[r.shape[0]]:[r.shape[0],r.shape[1]],g=l?[a]:[r.shape[0],a],x=cr({backend:t,attrs:{shape:g,value:0,dtype:p}}),b=new yF(m,d,o),w=[{type:"int32",data:[a]}],v=d?[r,i]:[r];return t.runWebGPUProgram(b,v,p,w,x)}const Wfe={kernelName:gx,backendName:"webgpu",kernelFunc:Ufe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gfe{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hfe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:i,dataFormat:a}=s,o=r.shape[0],l=a==="NHWC"?r.shape[1]:r.shape[2],c=a==="NHWC"?r.shape[2]:r.shape[3],d=a==="NHWC"?r.shape[3]:r.shape[1],p=l*i,m=c*i,g=d/(i*i),x=a==="NHWC"?[o,p,m,g]:[o,g,p,m],b=[{type:"int32",data:[i]}],w=new Gfe(x,a);return t.runWebGPUProgram(w,[r],r.dtype,b)}const jfe={kernelName:yx,backendName:"webgpu",kernelFunc:Hfe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qfe{constructor(e,t,s,r=!1,i=null,a=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),r&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=r,this.activation=i,this.hasPreluActivation=a,this.filterHeight=t,this.filterWidth=s,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],s=this.workgroupSize[1]+this.filterHeight-1,r=this.workgroupSize[0]+this.filterWidth-1;return`
      ${ao(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${r}>, ${s}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${_e()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${r}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${Uu(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SF{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const i=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=Ue(i),this.dispatch=Oe(this.dispatchLayout,i,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),B(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwiseVec4_${s}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,s=this.convInfo.strideWidth;return`
      ${ao(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${_e("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${s}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${s} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${Uu(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CF{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${ao(this.activation,this.hasPreluActivation,!1,4)}

      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${Uu(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xfe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:c,dimRoundingMode:d}=s,p=Rr(l);let m=c;m==null&&(m=[1,1]);const g=on(r.shape,i.shape,a,m,o,d,!0,p),x=[{type:"int32",data:[g.padInfo.top,g.padInfo.left]},{type:"int32",data:[g.inHeight,g.inWidth]}],b=g.dataFormat==="channelsLast";let w;return!b&&g.inHeight>16&&g.inWidth>16&&g.strideHeight===1&&g.strideWidth===1&&g.dilationWidth===1&&g.dilationHeight===1&&g.inChannels===g.outChannels?w=new qfe(g.outShape,g.filterHeight,g.filterWidth):b&&g.outHeight>4&&g.outWidth>4&&g.strideWidth<=2&&g.inChannels===g.outChannels&&g.dilationHeight===1&&g.dilationWidth===1&&g.inChannels%4===0?(w=new SF(g),x.push({type:"int32",data:[w.virtualWidth]})):(w=new CF(g),x.push({type:"int32",data:[g.filterHeight]},{type:"int32",data:[g.filterWidth]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]})),t.runWebGPUProgram(w,[r,i],r.dtype,x)}const Kfe={kernelName:kf,backendName:"webgpu",kernelFunc:Xfe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yfe{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class Qfe{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zfe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:c,filterShape:d}=s,p=on(r.shape,d,a,o,l,c,!0),m=new Yfe(p),g=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outChannels/p.inChannels]}];return t.runWebGPUProgram(m,[r,i],"float32",g)}const Jfe={kernelName:xx,backendName:"webgpu",kernelFunc:Zfe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eme(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:c,inputShape:d}=s,p=on(d,i.shape,a,o,l,c,!0),m=new Qfe(p),g=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.outChannels/p.inChannels]}];return t.runWebGPUProgram(m,[r,i],r.dtype,g)}const tme={kernelName:bx,backendName:"webgpu",kernelFunc:eme};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nme{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sme(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],i=ue(s.shape),a=je({inputs:{x:s},backend:t,attrs:{shape:[i]}}),o=new nme(i),l=t.runWebGPUProgram(o,[a],a.dtype),c=je({inputs:{x:l},backend:t,attrs:{shape:r}});return t.disposeData(a.dataId),t.disposeData(l.dataId),c}const rme={kernelName:wx,backendName:"webgpu",kernelFunc:sme};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ime{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${_e("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ame(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:a,pad:o,dilations:l}=s,c=ol(r.shape,i.shape,a,o,"NHWC",l),d=[c.padInfo.top,c.padInfo.left],p=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]}],m=new ime(c);return t.runWebGPUProgram(m,[r,i],r.dtype,p)}const ome={kernelName:Nf,backendName:"webgpu",kernelFunc:ame};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lme{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=Ue(e.outShape),this.dispatch=Oe(this.dispatchLayout,e.outShape,this.workgroupSize),t!=="float32"&&t!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${_e("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${pl("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}class ume{constructor(e,t,s){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=Ue(e.outShape),this.dispatch=Oe(this.dispatchLayout,e.outShape,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${s} type.`);this.type=s,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${_e("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${pl("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cme(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,dy:a}=e,{strides:o,pad:l,dilations:c}=s,d=ol(r.shape,i.shape,o,l,"NHWC",c),p=i.dtype,m=new ume(d,i.shape,p),g=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[ue(d.outShape)]}],x=cr({backend:t,attrs:{shape:i.shape,value:0,dtype:p}});return t.runWebGPUProgram(m,[r,i,a],p,g,x)}const hme={kernelName:$y,backendName:"webgpu",kernelFunc:cme};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dme(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,dy:a}=e,{strides:o,pad:l,dilations:c}=s,d=ol(r.shape,i.shape,o,l,"NHWC",c),p=r.dtype,m=new lme(d,p),g=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[ue(d.outShape)]}],x=cr({backend:t,attrs:{shape:d.inShape,value:0,dtype:p}});return t.runWebGPUProgram(m,[r,i,a],p,g,x)}const pme={kernelName:Cy,backendName:"webgpu",kernelFunc:dme};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fme{constructor(e,t,s){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=ah.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=s,this.shaderKey=`draw_${t}_${s}`}getUserCode(){let e;const t=this.type==="float32"?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${t};
        rgba[1] = ${t};
        rgba[2] = ${t};
      } else {
        rgba[d] = ${t};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${_e("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mme(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:i,options:a}=s,[o,l]=r.shape.slice(0,2),{imageOptions:c}=a||{},d=(c==null?void 0:c.alpha)||1,p=t.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",m=[o,l],g=new fme(m,r.dtype,p);i.width=l,i.height=o;const x="webgpu";let b=i.getContext(x),w;b||(w=new OffscreenCanvas(l,o),b=w.getContext(x));const v=r.shape.length===3?r.shape[2]:1;b.configure({device:t.device,format:p,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const $="int32",I=t.makeTensorInfo(m,$),N=t.tensorMap.get(I.dataId);N.resource=b.getCurrentTexture(),N.external=!0;const E=[{type:"uint32",data:[v]},{type:"float32",data:[d]}];if(t.runWebGPUProgram(g,[r],$,E,I),w){const _=i.getContext("2d");if(!_)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");_.drawImage(w,0,0)}return t.disposeData(I.dataId),r}const gme={kernelName:m2,backendName:"webgpu",kernelFunc:mme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $F=ds({opType:ut.MUL,cpuKernelImpl:vde,supportsComplex:!0}),yme={kernelName:Bh,backendName:"webgpu",kernelFunc:$F};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kF(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s;return Gu(r,i,a,"sum",t)}const xme={kernelName:im,backendName:"webgpu",kernelFunc:kF};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bme(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,i=e,{allDims:a,summedDims:o,idDims:l}=Vb(r,i.length);Wb(a.length,l,i);const{path:c,steps:d}=Gb(o,l),p=d.length;let m=null,g=a.length;const x=[];for(let b=0;b<p;++b){for(const w of d[b]){const{permutationIndices:v,expandDims:$}=Ub(g,l[w]);let I;Hb(v)?I=i[w]:(I=xa({inputs:{x:i[w]},backend:t,attrs:{perm:v}}),x.push(I));const N=I.shape.slice();for(let E=0;E<$.length;++E)N.splice($[E],0,1);yt(I.shape,N)||(I=je({inputs:{x:I},backend:t,attrs:{shape:N}}),x.push(I)),m===null?m=I:(m=$F({inputs:{a:I,b:m},backend:t}),x.push(m))}b<p-1&&(c[b]>=0&&(m=kF({inputs:{x:m},backend:t,attrs:{axis:c[b]-(a.length-g),keepDims:!1}}),x.push(m)),g--)}for(const b of x)b!==m&&t.disposeData(b.dataId);return m}const wme={kernelName:vx,backendName:"webgpu",kernelFunc:bme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vme=zt({opType:Ae.ELU}),Sme={kernelName:$h,backendName:"webgpu",kernelFunc:vme};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cme=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,i=new Zy(ut.ELU_DER,s.shape,r.shape);return t.runWebGPUProgram(i,[s,r],s.dtype)},$me={kernelName:Sx,backendName:"webgpu",kernelFunc:Cme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kme=ds({opType:ut.EQUAL,dtype:"bool",cpuKernelImpl:ade}),Nme={kernelName:If,backendName:"webgpu",kernelFunc:kme};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ime=zt({opType:Ae.ERF}),Tme={kernelName:kh,backendName:"webgpu",kernelFunc:Ime};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eme=zt({opType:Ae.EXP,cpuKernelImpl:ode,dtype:"float32"}),Rme={kernelName:Nh,backendName:"webgpu",kernelFunc:Eme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s2(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:i}=e,a=i.shape.length,o=i.shape.slice();let l=r;return r<0&&(B(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+r+1),o.splice(l,0,1),je({inputs:{x:i},backend:s,attrs:{shape:o}})}const Ame={kernelName:Tf,backendName:"webgpu",kernelFunc:s2};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dme=zt({opType:Ae.EXPM1,cpuKernelImpl:lde}),_me={kernelName:Ih,backendName:"webgpu",kernelFunc:Dme};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IT{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NF(n,e,t){const s=t.tensorMap.get(n.dataId),r=ue(n.shape),i=n.shape[n.shape.length-1],a=r/i,o=[],l=je({inputs:{x:n},backend:t,attrs:{shape:[a,i]}});o.push(l);const c=l.shape,d=new IT("real",c),p=new IT("imag",c),m=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:c},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:c}],g=e?2*Math.PI:-2*Math.PI,x=e?c[1]:1,b=[{type:"float32",data:[g]},{type:"float32",data:[x]}],w=t.runWebGPUProgram(d,m,"float32",b);o.push(w);const v=t.runWebGPUProgram(p,m,"float32",b);o.push(v);const $=Wu({inputs:{real:w,imag:v},backend:t});o.push($);const I=je({inputs:{x:$},backend:t,attrs:{shape:n.shape}});return o.forEach(N=>t.disposeData(N.dataId)),I}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ome(n){const{inputs:e,backend:t}=n,{input:s}=e;return NF(s,!1,t)}const Fme={kernelName:Cx,backendName:"webgpu",kernelFunc:Ome};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zme{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lme={kernelName:kx,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new zme(t.shape);return s.runWebGPUProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pme=zt({opType:Ae.FLOOR,cpuKernelImpl:ude}),Mme={kernelName:Th,backendName:"webgpu",kernelFunc:Pme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bme=ds({opType:ut.FLOOR_DIV,cpuKernelImpl:cde,dtype:"int32"}),Vme={kernelName:Eh,backendName:"webgpu",kernelFunc:Bme};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ume{constructor(e,t,s=!1){this.pixelsOpType=ah.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=s,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${_e("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wme={kernelName:ky,backendName:"webgpu",kernelFunc:Gme};let Fc,Qw=pe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Gme(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:i}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const a=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas,c=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,[d,p]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],m=[p,d,i],g=pe().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&a,x=a||o;if(c||l||x){let $;if(g)$=t.device.importExternalTexture({source:r});else{if(x){const q=pe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Fc==null||q!==Qw)&&(Qw=q,Fc=document.createElement("canvas").getContext("2d",{willReadFrequently:Qw})),Fc.canvas.width=d,Fc.canvas.height=p,Fc.drawImage(r,0,0,d,p),r=Fc.canvas}const L=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,G=t.textureManager.acquireTexture(m[1],m[0],"rgba8unorm",L);t.queue.copyExternalImageToTexture({source:r},{texture:G},[m[1],m[0]]),$=G}const I=ue(m),N=Qe(m),E=new Ume(m,i,g),_=[{type:"uint32",data:[I]},{type:"uint32",data:[i]},{type:"uint32",data:[...N]}],z=t.makeTensorInfo([p,d],"int32"),P=t.tensorMap.get(z.dataId);P.resource=$;const O=t.runWebGPUProgram(E,[z],"int32",_);return t.disposeData(z.dataId),O}const b=r.data;let w=b;if(i!=null&&i!==4){w=new Uint8Array(r.width*r.height*i);const $=b.length;let I=0;for(let N=0;N<$;N++)N%4<i&&(w[I++]=b[N])}const v=t.makeTensorInfo(m,"int32",new Int32Array(w));return t.uploadToGPU(v.dataId),v}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hme{constructor(e,t,s,r,i){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],it(e,t),it(e,s),this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),r!=null&&(it(e,r),this.variableNames.push("offset")),i!=null&&(it(e,i),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=i,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${_e("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jme={kernelName:Ef,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s,scale:r,offset:i,mean:a,variance:o}=n,{varianceEpsilon:l}=e,c=t,d=[s,a,o];let p=null;i!=null&&(p=i.shape,d.push(i));let m=null;r!=null&&(m=r.shape,d.push(r));const g=new Hme(s.shape,a.shape,o.shape,p,m),x=[{type:"float32",data:[l]}];return c.runWebGPUProgram(g,d,s.dtype,x)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qme(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:c,dataFormat:d,dilations:p,dimRoundingMode:m,activation:g,leakyreluAlpha:x}=s,b=Rr(d),w=on(r.shape,i.shape,l,p,c,m,!1,b);return wF({x:r,filter:i,convInfo:w,backend:t,bias:a,preluActivationWeights:o,leakyreluAlpha:x,activation:g})}const Xme={kernelName:Gp,backendName:"webgpu",kernelFunc:qme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kme(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:c,dilations:d,dimRoundingMode:p,activation:m,leakyreluAlpha:g}=s;let x=d;x==null&&(x=[1,1]),B(Zn(l,x),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${x}'`);const b=on(r.shape,i.shape,l,x,c,p,!0),w=[r,i],v=a!=null,$=o!=null;v&&w.push(a),$&&w.push(o);const I=[{type:"int32",data:[b.padInfo.top,b.padInfo.left]},{type:"int32",data:[b.inHeight,b.inWidth]}];let N;return b.outHeight>4&&b.outWidth>4&&b.strideWidth<=2&&b.inChannels===b.outChannels&&b.dilationHeight===1&&b.dilationWidth===1&&b.inChannels%4===0?(N=new SF(b,v,m,$),I.push({type:"int32",data:[N.virtualWidth]})):(N=new CF(b,v,m,$),I.push({type:"int32",data:[b.filterHeight]},{type:"int32",data:[b.filterWidth]},{type:"int32",data:[b.strideHeight,b.strideWidth]},{type:"int32",data:[b.dilationHeight,b.dilationWidth]})),m==="leakyrelu"&&(I.push({type:"float32",data:[g]}),N.uniforms+=" alpha : f32,"),t.runWebGPUProgram(N,w,"float32",I)}const Yme={kernelName:Hp,backendName:"webgpu",kernelFunc:Kme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qme{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${An(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zme(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,i=r.shape,a=i[i.length-1],o=ue(s.shape),[l,c,d,p]=Nb(s,r),m=je({inputs:{x:r},backend:t,attrs:{shape:[c,a]}}),g=je({inputs:{x:s},backend:t,attrs:{shape:[ue(s.shape)/d,d]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const $=t.readSync(r.dataId),I=t.bufferSync(s),N=hde($,I,s.dtype,c,a,d,p,s.shape,o);return t.makeTensorInfo(l,s.dtype,N.values)}const x=new Qme(a,[c,d]),b=[{type:"int32",data:[a]},{type:"int32",data:p}],w=t.runWebGPUProgram(x,[g,m],g.dtype,b),v=je({inputs:{x:w},backend:t,attrs:{shape:l}});return t.disposeData(m.dataId),t.disposeData(g.dataId),t.disposeData(w.dataId),v}const Jme={kernelName:Nx,backendName:"webgpu",kernelFunc:Zme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ege{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=tge(this.aShape);return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}}function tge(n){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],t=[];for(let s=0;s<n.length;s++)s===2?t.push("indexZ"):t.push(`${e[s]}`);return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IF(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:i}=e,{axis:a,batchDims:o}=s,l=pt(a,r.shape)[0],c=qb(r,i,l,o),d=ue(i.shape),p=[],m=je({inputs:{x:r},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),g=je({inputs:{x:i},backend:t,attrs:{shape:[c.batchSize,d/c.batchSize]}});p.push(m),p.push(g);const x=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([r,i])){const I=t.tensorMap.get(g.dataId).values,N=dt(g.shape,g.dtype,I),_=t.tensorMap.get(m.dataId).values,z=dt(m.shape,m.dtype,_),P=dde(z,N,x);return p.forEach(O=>t.disposeData(O.dataId)),t.makeTensorInfo(c.outputShape,P.dtype,P.values)}const b=new ege(m.shape,x),w=t.runWebGPUProgram(b,[m,g],m.dtype);p.push(w);const v=je({inputs:{x:w},backend:t,attrs:{shape:c.outputShape}});return p.forEach($=>t.disposeData($.dataId)),v}const nge={kernelName:Rf,backendName:"webgpu",kernelFunc:IF};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sge=ds({opType:ut.GREATER,cpuKernelImpl:fde,dtype:"bool"}),rge={kernelName:Af,backendName:"webgpu",kernelFunc:sge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ige=ds({opType:ut.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:pde}),age={kernelName:Rh,backendName:"webgpu",kernelFunc:ige};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oge(n){const{inputs:e,backend:t}=n,{input:s}=e;return NF(s,!0,t)}const lge={kernelName:Ix,backendName:"webgpu",kernelFunc:oge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uge=zt({opType:Ae.IS_FINITE,dtype:"bool"}),cge={kernelName:Dh,backendName:"webgpu",kernelFunc:uge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hge=zt({opType:Ae.IS_INF,dtype:"bool"}),dge={kernelName:_h,backendName:"webgpu",kernelFunc:hge};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pge=zt({opType:Ae.IS_NAN,dtype:"bool"}),fge={kernelName:Oh,backendName:"webgpu",kernelFunc:pge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mge(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:i}=s,a=[{type:"float32",data:[i]}],o=new vd(r.shape,Ae.LEAKYRELU,"alpha : f32,");return t.runWebGPUProgram(o,[r],"float32",a)}const gge={kernelName:Df,backendName:"webgpu",kernelFunc:mge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yge=ds({opType:ut.LESS,dtype:"bool",cpuKernelImpl:gde}),xge={kernelName:_f,backendName:"webgpu",kernelFunc:yge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bge=ds({opType:ut.LESS_EQUAL,dtype:"bool",cpuKernelImpl:mde}),wge={kernelName:Of,backendName:"webgpu",kernelFunc:bge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vge{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sge(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:i}=t,a=(r-s)/(i-1),o=new vge(i),l=[{type:"float32",data:[s]},{type:"float32",data:[a]}];return e.runWebGPUProgram(o,[],"float32",l)}const Cge={kernelName:Ex,backendName:"webgpu",kernelFunc:Sge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ge=zt({opType:Ae.LOG,cpuKernelImpl:yde}),kge={kernelName:Fh,backendName:"webgpu",kernelFunc:$ge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nge=zt({opType:Ae.LOG1P}),Ige={kernelName:zh,backendName:"webgpu",kernelFunc:Nge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tge=ds({opType:ut.LOGICAL_AND,dtype:"bool"}),Ege={kernelName:Ff,backendName:"webgpu",kernelFunc:Tge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rge=zt({opType:Ae.LOGICAL_NOT}),Age={kernelName:zf,backendName:"webgpu",kernelFunc:Rge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dge=ds({opType:ut.LOGICAL_OR}),_ge={kernelName:Lf,backendName:"webgpu",kernelFunc:Dge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TF=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`;class Oge{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${TF}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}}class Fge{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,B(t<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${_e()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${TF}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zge(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=s;let c;i>16?c=new Oge(r.shape):c=new Fge(r.shape,i);const d=[{type:"int32",data:[i]},{type:"float32",data:[a]},{type:"float32",data:[o]},{type:"float32",data:[l]}];return t.runWebGPUProgram(c,[r],r.dtype,d)}const Lge={kernelName:Pf,backendName:"webgpu",kernelFunc:zge};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pge{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mge(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:c,beta:d}=s,p=new Pge(r.shape),m=[{type:"int32",data:[o]},{type:"float32",data:[l]},{type:"float32",data:[c]},{type:"float32",data:[d]}];return t.runWebGPUProgram(p,[r,i,a],r.dtype,m)}const Bge={kernelName:Rx,backendName:"webgpu",kernelFunc:Mge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vge=ds({opType:ut.MAX,cpuKernelImpl:bde}),Uge={kernelName:Lh,backendName:"webgpu",kernelFunc:Vge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wge(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,d=As(r.shape,i,a,1,o,l);return gF(r,d,"max",t)}const Gge={kernelName:Bf,backendName:"webgpu",kernelFunc:Wge};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hge(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:c}=s,d=[1,1,1],p=Hr(r.shape,i,a,d,o,c,l),m=new uC(p,"max"),g=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];return t.runWebGPUProgram(m,[r],r.dtype,g)}const jge={kernelName:Vf,backendName:"webgpu",kernelFunc:Hge};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qge{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class Xge{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kge(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,a=i,{filterSize:o,strides:l,pad:c,dimRoundingMode:d}=s,p=[1,1,1],m=Hr(a.shape,o,l,p,c,d),g=new uC(m,"max",!0);let x=[{type:"int32",data:[m.strideDepth,m.strideHeight,m.strideWidth]},{type:"int32",data:[m.padInfo.front,m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inDepth,m.inHeight,m.inWidth]},{type:"int32",data:[m.effectiveFilterDepth,m.effectiveFilterHeight,m.effectiveFilterWidth]}];const b=t.runWebGPUProgram(g,[a],"int32",x),w=new Xge(m);x=[{type:"int32",data:[m.strideDepth,m.strideHeight,m.strideWidth]},{type:"int32",data:[m.effectiveFilterDepth-1-m.padInfo.front,m.effectiveFilterHeight-1-m.padInfo.top,m.effectiveFilterWidth-1-m.padInfo.left]},{type:"int32",data:[m.effectiveFilterDepth,m.effectiveFilterHeight,m.effectiveFilterWidth]},{type:"int32",data:[m.outDepth]},{type:"int32",data:[m.outHeight]},{type:"int32",data:[m.outWidth]}];const v=t.runWebGPUProgram(w,[r,b],a.dtype,x);return t.disposeData(b.dataId),v}const Yge={kernelName:Dx,backendName:"webgpu",kernelFunc:Kge};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qge(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i,output:a}=e,o=i;cF([i,a],"maxPoolGrad");const{filterSize:l,strides:c,pad:d,dimRoundingMode:p}=s,m=As(o.shape,l,c,1,d,p),g=new lf(m,"max",!0);let x=[{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]},{type:"int32",data:[m.inHeight,m.inWidth]},{type:"int32",data:[m.effectiveFilterHeight,m.effectiveFilterWidth]}];const b=t.runWebGPUProgram(g,[o],"int32",x),w=new qge(m);x=[{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.effectiveFilterHeight-1-m.padInfo.top,m.effectiveFilterWidth-1-m.padInfo.left]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]},{type:"int32",data:[m.effectiveFilterHeight,m.effectiveFilterWidth]},{type:"int32",data:[m.outHeight]},{type:"int32",data:[m.outWidth]}];const v=t.runWebGPUProgram(w,[r,b],o.dtype,x);return t.disposeData(b.dataId),v}const Zge={kernelName:Ax,backendName:"webgpu",kernelFunc:Qge};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jge(n){const{inputs:e,backend:t,attrs:s}=n,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=s,{x:l}=e;B(l.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`);const c=[1,1];B(Zn(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const d=As(l.shape,r,i,c,a),p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}];let m=new lf(d,"max",!1);const g=t.runWebGPUProgram(m,[l],l.dtype,p);m=new lf(d,"max",!0,!0,o);const x=t.runWebGPUProgram(m,[l],"int32",p);return[g,x]}const eye={kernelName:_x,backendName:"webgpu",kernelFunc:Jge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s;return Gu(r,i,a,"min",t)}const nye={kernelName:Wf,backendName:"webgpu",kernelFunc:tye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sye=ds({opType:ut.MIN,cpuKernelImpl:wde}),rye={kernelName:Ph,backendName:"webgpu",kernelFunc:sye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iye{constructor(e,t,s){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((r,i)=>r[0]+e[i]+r[1]),this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map((r,i)=>{this.uniforms+=` pad${i} : vec2<i32>,`}),this.offset=s==="reflect"?0:1,this.shaderKey=`mirrorPad_${s}`}getUserCode(){const e=this.xShape.length,t=this.xShape.map((c,d)=>`uniforms.pad${d}[0]`).join(","),s=this.xShape.map((c,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),r=e===1?"start":"start[i]",i=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",o=An(e),l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let start = ${o}(${t});
          let end = ${o}(${s});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${r}) {
              ${a} = ${r} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${i}) {
              ${a} = (${i} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aye={kernelName:Gf,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{paddings:r,mode:i}=e,a=t,o=r.map(d=>({type:"int32",data:[d[0],d[1]]})),l=new iye(s.shape,r,i);return a.runWebGPUProgram(l,[s],s.dtype,o)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oye=ds({opType:ut.MOD}),lye={kernelName:Mh,backendName:"webgpu",kernelFunc:oye};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uye{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${_e("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cye{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${_e("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EF(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:i}=s,a=je({inputs:{x:r},backend:t,attrs:{shape:[ue(r.shape)/r.shape[i],r.shape[i]]}}),o=new cye(a.shape),l=t.runWebGPUProgram(o,[a],r.dtype),c=je({inputs:{x:l},backend:t,attrs:{shape:r.shape}});return t.disposeData(a.dataId),t.disposeData(l.dataId),c}const hye={kernelName:lm,backendName:"webgpu",kernelFunc:EF};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dye(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:i,seed:a,normalized:o}=s,l=o?r:EF({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),c=l.shape[0],d=l.shape[1],p=new uye(c,i),m=[{type:"float32",data:[a]},{type:"int32",data:[d]}],g=t.runWebGPUProgram(p,[l],"int32",m);return o||t.disposeData(l.dataId),g}const pye={kernelName:Ox,backendName:"webgpu",kernelFunc:dye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fye(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const i=t.tensorMap.get(s.dataId),[a,o]=Sde(i.values,s.shape,s.dtype);return t.makeTensorInfo(o,s.dtype,a)}const r=new vd(s.shape,Ae.NEG);return t.runWebGPUProgram(r,[s],s.dtype)}const mye={kernelName:Hf,backendName:"webgpu",kernelFunc:fye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gye(n){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s,c=t.readSync(r.dataId),d=t.readSync(i.dataId),{selectedIndices:p}=$b(c,d,a,o,l);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}const yye={kernelName:Fx,backendName:"webgpu",kernelFunc:gye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xye(n){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:c}=s,d=t.readSync(r.dataId),p=t.readSync(i.dataId),m=a,g=o,x=l,b=c,{selectedIndices:w,selectedScores:v}=kb(d,p,m,g,x,b);return[t.makeTensorInfo([w.length],"int32",new Int32Array(w)),t.makeTensorInfo([v.length],"float32",new Float32Array(v))]}const bye={kernelName:zx,backendName:"webgpu",kernelFunc:xye};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wye{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${_e("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vye(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:i,depth:a,onValue:o,offValue:l}=s,c=ue(r.shape),d=new wye(c,a),p=je({inputs:{x:r},backend:t,attrs:{shape:[c]}}),m=[{type:"float32",data:[o]},{type:"float32",data:[l]}],g=t.runWebGPUProgram(d,[p],i,m);t.disposeData(p.dataId);const x=[...r.shape,a],b=je({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeData(g.dataId),b}const Sye={kernelName:Xf,backendName:"webgpu",kernelFunc:vye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ex(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=zm({inputs:{input:s},backend:t}),i=ex({inputs:{x:r},backend:t}),a=f0({inputs:{input:s},backend:t}),o=ex({inputs:{x:a},backend:t}),l=Wu({inputs:{real:i,imag:o},backend:t});return t.disposeData(r.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),t.disposeData(o.dataId),l}else return cr({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const Cye={kernelName:hm,backendName:"webgpu",kernelFunc:ex};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RF(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=zm({inputs:{input:s},backend:t}),i=RF({inputs:{x:r},backend:t}),a=f0({inputs:{input:s},backend:t}),o=ex({inputs:{x:a},backend:t}),l=Wu({inputs:{real:i,imag:o},backend:t});return t.disposeData(r.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),t.disposeData(o.dataId),l}else return cr({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const $ye={kernelName:qf,backendName:"webgpu",kernelFunc:RF};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kye(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return s2({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const i=e[0].shape,a=e[0].dtype;e.forEach(d=>{fr(i,d.shape,"All tensors passed to stack must have matching shapes"),B(a===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(d=>{const p=s2({inputs:{input:d},backend:t,attrs:{dim:r}});return o.push(p),p}),c=bF({inputs:l,backend:t,attrs:{axis:r}});return o.forEach(d=>t.disposeData(d.dataId)),c}const Nye={kernelName:Kf,backendName:"webgpu",kernelFunc:kye};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AF(n,e=!1){const t=n.length,s=An(t),r=n.map((p,m)=>`uniforms.pad${m}[0]`).join(","),i=n.map((p,m)=>`uniforms.pad${m}[0] + uniforms.xShape${t>1?`[${m}]`:""}`).join(","),a=t>1?`${s}(${r})`:`${r}`,o=t>1?`${s}(${i})`:`${i}`,l=t>1?"any(paddedCoords < start)":"paddedCoords < start",c=t>1?"any(paddedCoords >= end)":"paddedCoords >= end",d=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
        let start = ${a};
        let end = ${o};
        if (${l} || ${c}) {
          setOutputAtIndex(index, ${e?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${d}));
        }
  `}class Iye{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${AF(this.xShape)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tye=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:i,constantValue:a}=s;if(i.every(c=>yt(c,[0,0])))return Er({inputs:{x:r},backend:t});if(ue(r.shape)===0){const c=i.map((d,p)=>d[0]+r.shape[p]+d[1]);return cr({backend:t,attrs:{shape:c,value:a,dtype:r.dtype}})}const o=[{type:"float32",data:[a]}];i.map(c=>o.push({type:"int32",data:[c[0],c[1]]}));const l=new Iye(r.shape,i);return t.runWebGPUProgram(l,[r],r.dtype,o)},Eye={kernelName:Yf,backendName:"webgpu",kernelFunc:Tye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rye=ds({opType:ut.POW}),Aye={kernelName:Vh,backendName:"webgpu",kernelFunc:Rye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dye(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,i=new Zy(ut.PRELU,s.shape,r.shape);return t.runWebGPUProgram(i,[s,r],"float32")}const _ye={kernelName:Qf,backendName:"webgpu",kernelFunc:Dye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:a}=s;return Gu(r,i,a,"prod",t)}const Fye={kernelName:Zf,backendName:"webgpu",kernelFunc:Oye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zye=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:i,dtype:a}=t,o=kde(s,r,i,a);return e.makeTensorInfo([o.length],a,o)},Lye={kernelName:Lx,backendName:"webgpu",kernelFunc:zye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pye=ds({opType:ut.DIV}),Mye={kernelName:Ch,backendName:"webgpu",kernelFunc:Pye};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bye=zt({opType:Ae.RECIPROCAL}),Vye={kernelName:Uh,backendName:"webgpu",kernelFunc:Bye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uye=zt({opType:Ae.RELU}),Wye={kernelName:Wh,backendName:"webgpu",kernelFunc:Uye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gye=zt({opType:Ae.RELU6}),Hye={kernelName:Gh,backendName:"webgpu",kernelFunc:Gye};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jye{constructor(e,t,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,s,e[3]],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qye(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,size:a,halfPixelCenters:o}=s,[l,c]=a,d=i&&l>1?1:0,p=i&&c>1?1:0,g=[{type:"float32",data:[d,p]},{type:"float32",data:[o?.5:0]}],x=new jye(r.shape,l,c);return t.runWebGPUProgram(x,[r],"float32",g)}const Xye={kernelName:tm,backendName:"webgpu",kernelFunc:qye};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kye{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yye(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:a}=s,[,o,l]=r.shape,[,c,d]=i.shape,p=[a&&c>1?o-1:o,a&&d>1?l-1:l],m=[a&&c>1?c-1:c,a&&d>1?d-1:d],g=p[0]/m[0],x=p[1]/m[1],b=1/g,w=1/x,v=Math.ceil(b)*2+2,$=Math.ceil(w)*2+2,I=new Kye(r.shape,a),N=[{type:"int32",data:p},{type:"int32",data:m},{type:"float32",data:[g]},{type:"float32",data:[x]},{type:"float32",data:[b]},{type:"float32",data:[w]},{type:"int32",data:[v]},{type:"int32",data:[$]}];return t.runWebGPUProgram(I,[i],i.dtype,N)}const Qye={kernelName:Bx,backendName:"webgpu",kernelFunc:Yye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zye{constructor(e,t,s,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,s,e[3]],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jye(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,c]=o,d=i&&l>1?1:0,p=i&&c>1?1:0,g=[{type:"float32",data:[d,p]},{type:"float32",data:[i?.5:0]}],x=new Zye(r.shape,l,c,a);return t.runWebGPUProgram(x,[r],r.dtype,g)}const exe={kernelName:em,backendName:"webgpu",kernelFunc:Jye};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class txe{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nxe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:a}=s,[,o,l]=r.shape,[,c,d]=i.shape,p=[a&&c>1?o-1:o,a&&d>1?l-1:l],m=[a&&c>1?c-1:c,a&&d>1?d-1:d],g=p[0]/m[0],x=p[1]/m[1],b=1/g,w=1/x,v=Math.ceil(b)*2+2,$=Math.ceil(w)*2+2,I=new txe(r.shape,a),N=[{type:"int32",data:p},{type:"int32",data:m},{type:"float32",data:[b]},{type:"float32",data:[w]},{type:"int32",data:[v]},{type:"int32",data:[$]}];return t.runWebGPUProgram(I,[i],i.dtype,N)}const sxe={kernelName:Mx,backendName:"webgpu",kernelFunc:nxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rxe{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ixe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:i}=s,a=r.shape.length;if(a===0)return Er({inputs:{x:r},backend:t});const o=r.shape,l=[1,1,1,1];o.forEach((w,v)=>{const $=v+4-a;l[$]=w});const c=pt(i,r.shape),d=[0,0,0,0];c.forEach(w=>{const v=w+4-a;d[v]=1});const p=[{type:"int32",data:d}],m=je({inputs:{x:r},backend:t,attrs:{shape:l}}),g=new rxe(l),x=t.runWebGPUProgram(g,[m],m.dtype,p);t.disposeData(m.dataId);const b=je({inputs:{x},backend:t,attrs:{shape:o}});return t.disposeData(x.dataId),b}const axe={kernelName:nm,backendName:"webgpu",kernelFunc:ixe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oxe{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${_e("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lxe={kernelName:Jx,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:i,center:a}=e,o=t,l=new oxe(s.shape,i),[c,d]=Db(a,s.shape[1],s.shape[2]),p=[{type:"float32",data:[c]},{type:"float32",data:[d]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof i=="number"?p.push({type:"float32",data:[Number.parseFloat(i.toFixed(2))]}):p.push({type:"float32",data:i}),o.runWebGPUProgram(l,[s],s.dtype,p)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uxe=zt({opType:Ae.ROUND}),cxe={kernelName:Hh,backendName:"webgpu",kernelFunc:uxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hxe=zt({opType:Ae.RSQRT,cpuKernelImpl:Nde}),dxe={kernelName:jh,backendName:"webgpu",kernelFunc:hxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Up{constructor(e,t,s,r,i,a,o,l=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=o,this.sumDupeIndices=l,this.dispatchLayout=Ue(e),this.dispatch=Oe(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${s}_${r}_${this.sliceDimGreaterThanOne}_${o}_${l}_${i.length}`;const c=An(i.length);this.uniforms=`sliceDim : i32, strides: ${c}, updatesSize: i32,`,this.updatesRank=r,this.indicesRank=s}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");const t=`getIndices(${e})`,s=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let r="",i="";this.dispatchLayout.x.length===1?(r="flattenedIndex",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(r="vec2<i32>(flattenedIndex, coords[1])",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);const o=`getUpdates(${Array.from({length:this.updatesRank},(c,d)=>`coords[${d}]`).join(", ")})`;return`
    ${i}
      ${_e("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${s};
          }
          let updateValue =
              ${ru(this.type)}(${o});
          let flatIndex = getOutputIndexFromCoords(${r});

          ${this.sumDupeIndices?pl("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pxe(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:i}=e,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:c,strides:d,outputSize:p}=Sa(i,r,a),m=[p/c,c];if(p===0)return t.makeTensorInfo(a,r.dtype);const g=je({inputs:{x:r},backend:t,attrs:{shape:[l,o]}}),x=je({inputs:{x:i},backend:t,attrs:{shape:[l,c]}}),b=x.dtype,w=cr({backend:t,attrs:{shape:m,value:0,dtype:b}}),v=ue(x.shape),$=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[v]}],I=new Up(x.shape,o,g.shape.length,x.shape.length,d,m,b),N=t.runWebGPUProgram(I,[x,g],b,$,w),E=je({inputs:{x:N},backend:t,attrs:{shape:a}});return t.disposeData(g.dataId),t.disposeData(x.dataId),t.disposeData(N.dataId),E}const fxe={kernelName:Vx,backendName:"webgpu",kernelFunc:pxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mxe{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${_e("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gxe(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:i}=e,{side:a}=s,o=new mxe([i.shape[0],i.shape[1]],a),l=[{type:"int32",data:[r.shape[1]]}];return t.runWebGPUProgram(o,[r,i],"int32",l)}const yxe={kernelName:Wx,backendName:"webgpu",kernelFunc:gxe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xxe{constructor(e,t,s){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=s,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{const r=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let o=0;o<this.outputShape.length;o++)a.push(`${r[o]}`),o<this.cRank&&i.push(`${r[o]}`);e=i.join(),t=a.join()}return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bxe(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:i}=e,a=new xxe(s.shape.length,r.shape,r.shape.length);return t.runWebGPUProgram(a,[s,r,i],hs(r.dtype,i.dtype))}const wxe={kernelName:sm,backendName:"webgpu",kernelFunc:bxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vxe=zt({opType:Ae.SELU}),Sxe={kernelName:qh,backendName:"webgpu",kernelFunc:vxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cxe=zt({opType:Ae.SIGMOID}),$xe={kernelName:Qh,backendName:"webgpu",kernelFunc:Cxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kxe=zt({opType:Ae.SIGN}),Nxe={kernelName:Yh,backendName:"webgpu",kernelFunc:kxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ixe=zt({opType:Ae.SIN}),Txe={kernelName:Xh,backendName:"webgpu",kernelFunc:Ixe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Exe=zt({opType:Ae.SINH}),Rxe={kernelName:Kh,backendName:"webgpu",kernelFunc:Exe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Axe=zt({opType:Ae.SOFTPLUS}),Dxe={kernelName:Zh,backendName:"webgpu",kernelFunc:Axe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _xe{constructor(e,t,s,r,i,a){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const o=new Array(r.length);for(let l=0;l<o.length;l++)o[l]=r[i[l]];this.outputShape=o,this.newDim=i,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${An(r.length)}, paddedXShapeStrides : ${An(a)}, `,s.map((l,c)=>{this.uniforms+=` pad${c} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${i}`}getUserCode(){const e=An(this.outputShape.length),t=dF(this.newDim);return`
      ${vy(this.paddedXShape,"PaddedX")}
      ${_e("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${AF(this.xShape,!0)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oxe=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,paddings:a}=s;B(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");const o=i.reduce(($,I)=>$*I),l=[[0,0]];l.push(...a);for(let $=1+i.length;$<r.shape.length;++$)l.push([0,0]);const c=l.map(($,I)=>$[0]+r.shape[I]+$[1]),d=_u(c,i,o,!1),p=Ou(d.length,i.length,!1),m=Fu(c,i,o,!1),g=Qe(c),x=new _xe(r.shape,c,l,d,p,g.length),b=[{type:"int32",data:d},{type:"int32",data:g}];l.map($=>b.push({type:"int32",data:[$[0],$[1]]}));const w=t.runWebGPUProgram(x,[r],r.dtype,b),v=je({inputs:{x:w},backend:t,attrs:{shape:m}});return t.disposeData(w.dataId),v},Fxe={kernelName:am,backendName:"webgpu",kernelFunc:Oxe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zxe{constructor(e,t,s){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=s,this.dispatchLayout=Ue([t]),this.dispatch=Oe(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${pl("&result[outIndex]","value",this.type)}
      }
    }
  `}}class Lxe{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=Ue(t),this.dispatch=Oe(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${pl("&result[segmentId]","1","int32")}
      }
    }
  `}}class Pxe{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=Ue(e),this.dispatch=Oe(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DF(n,e,t,s=!1,r){const a=ue(n.shape)/n.shape[0],o=n.dtype,l=ue(e.shape),c=r.readSync(t.dataId),p=l>0?c[l-1]+1:0;let m;const g=n.shape.slice();g[0]=p;const x=l*a,b=cr({backend:r,attrs:{shape:g,value:0,dtype:o}});m=new zxe(g,x,o);let w=[{type:"int32",data:[a]},{type:"int32",data:[x]}];const v=r.runWebGPUProgram(m,[n,e,t],o,w,b);if(s)return v;const $=cr({backend:r,attrs:{shape:[p],value:0,dtype:"int32"}});m=new Lxe(p,t.shape);const I=r.runWebGPUProgram(m,[t],"int32",null,$),N=cr({backend:r,attrs:{shape:g,value:0,dtype:o}});m=new Pxe(g,o),w=[{type:"int32",data:[a]}];const E=r.runWebGPUProgram(m,[v,I],o,w,N);return r.disposeData(v.dataId),r.disposeData(I.dataId),E}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mxe(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;return DF(s,r,i,!1,t)}const Bxe={kernelName:Gx,backendName:"webgpu",kernelFunc:Mxe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vxe(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;return DF(s,r,i,!0,t)}const Uxe={kernelName:Hx,backendName:"webgpu",kernelFunc:Vxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wxe{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[r]*t[r];this.outputShape=s,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=Gxe(this.rank,"uniforms.");return`
      ${_e("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}}function Gxe(n,e=""){if(n>=5)throw Error(`Tile for rank ${n} is not yet supported`);if(n===1)return`(resRC % ${e}aShape)`;const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n;r++)s.push(`(${t[r]} % ${e}aShape[${r}])`);return s.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cC(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:i}=s;if(t.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){const l=t.readSync(r.dataId),c=r.dtype==="string"?l.map(m=>Bi(m)):l,d=dt(r.shape,r.dtype,c),p=_de(d,i);return t.makeTensorInfo(p.shape,p.dtype,p.values)}const a=new Wxe(r.shape,i);return t.runWebGPUProgram(a,[r],r.dtype)}const Hxe={kernelName:rd,backendName:"webgpu",kernelFunc:cC};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jxe(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:i,defaultValue:a}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:c,sliceSize:d,strides:p,outputSize:m}=Sa(i,r,o),g=!1;if(i.dtype==="string"){const P=t.bufferSync(r),O=t.bufferSync(i),L=Bi(t.readSync(a.dataId)[0]),D=Ide(P,O,o,m,d,c,l,p,L,g);return t.makeTensorInfo(o,D.dtype,D.values)}const x=[m/d,d],b=je({inputs:{x:r},backend:t,attrs:{shape:[c,l]}}),w=i.shape.length?je({inputs:{x:i},backend:t,attrs:{shape:[c,d]}}):Er({inputs:{x:i},backend:t}),v=w.dtype,$=t.makeTensorInfo([],v,vs(1,v)),I=je({inputs:{x:a},backend:t,attrs:{shape:Array(x.length).fill(1)}}),N=cC({inputs:{x:I},backend:t,attrs:{reps:x}}),E=ue([c,d]),_=[{type:"int32",data:[l]},{type:"int32",data:p},{type:"int32",data:[E]}];switch(c){case 0:break;case 1:{const P=new Up([c,d],l,b.shape.length,w.shape.length,p,x,v,g);t.runWebGPUProgram(P,[w,b],v,_,N)}break;default:{const P=new Up([c,d],l,b.shape.length,$.shape.length,p,x,v,g);t.runWebGPUProgram(P,[$,b],v,_,N)}{const P=new Up([c,d],l,b.shape.length,w.shape.length,p,x,v);t.runWebGPUProgram(P,[w,b],v,_,N)}}const z=je({inputs:{x:N},backend:t,attrs:{shape:o}});return t.disposeData(b.dataId),t.disposeData(w.dataId),t.disposeData(I.dataId),t.disposeData($.dataId),t.disposeData(N.dataId),z}const qxe={kernelName:jx,backendName:"webgpu",kernelFunc:jxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xxe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:i,axis:a}=s,o=pt(a,r.shape)[0],l=jb(r,i,o),c=r.shape.length,d=new Array(c).fill(0),p=r.shape.slice();return l.map(m=>{const g=[...p];g[o]=m;const x=Sd({inputs:{x:r},backend:t,attrs:{begin:d,size:g}});return d[o]+=m,x})}const Kxe={kernelName:om,backendName:"webgpu",kernelFunc:Xxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yxe=zt({opType:Ae.SQRT}),Qxe={kernelName:Jh,backendName:"webgpu",kernelFunc:Yxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zxe={kernelName:qx,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e,r=new vd(t.shape,Ae.SQUARE);return s.runWebGPUProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jxe=ds({opType:ut.SQUARED_DIFFERENCE}),ebe={kernelName:ed,backendName:"webgpu",kernelFunc:Jxe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tbe({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=new vd(s.shape,Ae.STEP,"stepAlpha : f32,"),i=[{type:"float32",data:[e.alpha]}];return t.runWebGPUProgram(r,[s],s.dtype,i)}const nbe={kernelName:id,backendName:"webgpu",kernelFunc:tbe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sbe{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const t=An(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){const e=this.outputShape.length;let t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let r=0;t=this.outputShape.map((i,a)=>(r++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${r-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${_e("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rbe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:c,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:m}=s,{finalShapeSparse:g,finalShape:x,isIdentity:b,sliceDim0:w,isSimpleSlice:v,begin:$,end:I,strides:N}=Eb(r.shape,i,a,o,l,c,d,p,m);let E;if(b)E=je({inputs:{x:r},backend:t,attrs:{shape:x}});else if(w||v){B(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const _=Tb($,I,N),z=Sd({inputs:{x:r},backend:t,attrs:{begin:$,size:_}});E=je({inputs:{x:z},backend:t,attrs:{shape:x}}),t.disposeData(z.dataId)}else if(t.shouldExecuteOnCPU([r])){const z=t.readSync(r.dataId),P=dt(r.shape,r.dtype,z),O=Rde(g,P,N,$);E=t.makeTensorInfo(x,r.dtype,O.values)}else{const z=new sbe(g),P=[{type:"int32",data:$},{type:"int32",data:N}],O=t.runWebGPUProgram(z,[r],r.dtype,P);E=je({inputs:{x:O},backend:t,attrs:{shape:x}}),t.disposeData(O.dataId)}return E}const ibe={kernelName:Kx,backendName:"webgpu",kernelFunc:rbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function abe(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:c}=s,{data:d,dataSplits:p}=e,m=t.readSync(d.dataId),g=t.readSync(p.dataId),[x,b]=Ade(m,g,r,i,a,o,l,c);return[t.makeTensorInfo([x.length],"string",x),t.makeTensorInfo(p.shape,"int32",b)]}const obe={kernelName:Yx,backendName:"webgpu",kernelFunc:abe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lbe=ds({opType:ut.SUB,cpuKernelImpl:Dde,supportsComplex:!0}),ube={kernelName:td,backendName:"webgpu",kernelFunc:lbe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cbe=zt({opType:Ae.TAN}),hbe={kernelName:nd,backendName:"webgpu",kernelFunc:cbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dbe=zt({opType:Ae.TANH}),pbe={kernelName:sd,backendName:"webgpu",kernelFunc:dbe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fbe(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:i,updates:a}=e,{sliceRank:o,numUpdates:l,sliceSize:c,strides:d,outputSize:p}=Sa(a,i,r.shape),m=[p/c,c];if(p===0)return t.makeTensorInfo(r.shape,i.dtype);const g=[],x=je({inputs:{x:i},backend:t,attrs:{shape:[l,o]}});g.push(x);const b=je({inputs:{x:a},backend:t,attrs:{shape:[l,c]}});g.push(b);const w=je({inputs:{x:r},backend:t,attrs:{shape:m}});g.push(w);const v=cC({inputs:{x:w},backend:t,attrs:{reps:Array(m.length).fill(1)}}),$=new Up([l,c],o,x.shape.length,b.shape.length,d,m,r.dtype,!1),I=ue([l,c]),N=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[I]}],E=t.runWebGPUProgram($,[b,x],w.dtype,N,v);g.push(E);const _=je({inputs:{x:E},backend:t,attrs:{shape:r.shape}});return g.forEach(z=>t.disposeData(z.dataId)),_}const mbe={kernelName:Ux,backendName:"webgpu",kernelFunc:fbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gbe{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${_e("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}class ybe{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${_e("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zc(n,e){e!==null&&n.disposeData(e.dataId)}function TT(n){let e=1;for(;e<n;)e*=2;return e}function xbe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:i,sorted:a}=s,o=r.shape,l=o[o.length-1];if(t.shouldExecuteOnCPU([r])){const E=t.readSync(r.dataId),[_,z]=Ode(E,o,r.dtype,i,a);return[t.makeTensorInfo(_.shape,_.dtype,_.values),t.makeTensorInfo(z.shape,z.dtype,z.values)]}if(i===0)return o[o.length-1]=0,[t.makeTensorInfo(o,r.dtype,[]),t.makeTensorInfo(o,"int32",[])];if(l===1)return[r,cr({attrs:{shape:o,dtype:"int32",value:0},backend:t})];const d=ue(o)/l,p=je({inputs:{x:r},attrs:{shape:[d,l]},backend:t}),m=TT(i),g=TT(l);let x=null;const b=()=>x===null?[p,p]:[p,x],w=(E,_,z)=>{const P=b(),O=new gbe(z),D=[{type:"int32",data:[l]},{type:"int32",data:[x===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[E]},{type:"int32",data:[_]}],G=x;x=t.runWebGPUProgram(O,P,"int32",D),zc(t,G)};for(let E=1;E<m;E*=2){const _=E*2;for(let z=E;z>=1;z/=2)w(_,z,[d,g])}for(let E=g;E>m;E/=2){const _=b(),z=new ybe([d,E/2]),O=[{type:"int32",data:[l]},{type:"int32",data:[x===null?1:0]},{type:"int32",data:[m]}],L=x;x=t.runWebGPUProgram(z,_,"int32",O),zc(t,L);const D=m/2,G=D*2;for(let q=D;q>=1;q/=2)w(G,q,x.shape)}let v=x;x=Sd({inputs:{x},backend:t,attrs:{begin:0,size:[d,i]}}),zc(t,v);let $=IF({inputs:{x:p,indices:x},backend:t,attrs:{axis:1,batchDims:1}});zc(t,p);const I=o.slice(0,-1);I.push(i),v=x,x=je({inputs:{x},attrs:{shape:I},backend:t}),zc(t,v);const N=$;return $=je({inputs:{x:$},attrs:{shape:I},backend:t}),zc(t,N),[$,x]}const bbe={kernelName:Qx,backendName:"webgpu",kernelFunc:xbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wbe{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${_e("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vbe(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:c}=s,[d,p,m,g]=r.shape,[x,b]=c??[p,m],w=[d,x,b,g],v=new wbe(w),$=a==="nearest"?1:2;let I;switch(o){case"constant":I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4;break;default:I=1;break}const N=[{type:"int32",data:[$]},{type:"int32",data:[I]},{type:"float32",data:[l]}];return t.runWebGPUProgram(v,[r,i],"float32",N)}const Sbe={kernelName:Zx,backendName:"webgpu",kernelFunc:vbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cbe(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r,o=a.shape.length,l=r.shape[i],c=new Array(o-1);let d=0;for(let b=0;b<o;b++)b!==i&&(c[d++]=a.shape[b]);const p=[],m=new Array(o).fill(0),g=a.shape.slice();g[i]=1;const x=new Array(l);for(let b=0;b<x.length;b++){m[i]=b;const w=Sd({inputs:{x:a},backend:t,attrs:{begin:m,size:g}}),v=je({inputs:{x:w},backend:t,attrs:{shape:c}});x[b]=v,p.push(w)}return p.forEach(b=>t.disposeData(b.dataId)),x}const $be={kernelName:um,backendName:"webgpu",kernelFunc:Cbe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kbe{constructor(e,t,s){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=Ue(e),this.dispatch=Oe(this.dispatchLayout,e,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${s} type.`);this.type=s,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${_e("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${pl("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nbe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:i}=e,{numSegments:a}=s,o=r.shape.length,l=[];let c=0;const d=Qt([c],o);let p=r;d!=null&&(p=xa({inputs:{x:r},backend:t,attrs:{perm:d}}),l.push(p),c=ln(1,o)[0]);const m=bS(p.shape,c,a),g=ue([p.shape[c]]),x=je({inputs:{x:p},backend:t,attrs:{shape:[-1,g]}});l.push(x);const b=r.dtype,w=[x.shape[0],a],v=cr({backend:t,attrs:{shape:w,value:0,dtype:b}}),$=new kbe(x.shape,w,b),I=[{type:"int32",data:[a]},{type:"int32",data:[ue(x.shape)]}],N=t.runWebGPUProgram($,[x,i],b,I,v),E=je({inputs:{x:N},backend:t,attrs:{shape:m}});l.push(N);let _=E;if(d!=null){l.push(E);const z=wa(d);_=xa({inputs:{x:_},backend:t,attrs:{perm:z}})}return l.forEach(z=>t.disposeData(z.dataId)),_}const Ibe={kernelName:cm,backendName:"webgpu",kernelFunc:Nbe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tbe=[Jhe,Lde,Mde,Vde,Wde,jde,Jde,tpe,spe,ipe,ope,upe,hpe,ppe,mpe,wpe,Spe,Npe,Tpe,Rpe,Fpe,Mpe,Upe,jpe,Xpe,Zpe,tde,tfe,ife,pfe,bfe,Cfe,Nfe,Tfe,Rfe,Dfe,Ofe,Lfe,Mfe,Vfe,Wfe,jfe,Jfe,tme,Kfe,rme,ome,hme,pme,gme,wme,Sme,$me,Nme,Tme,Rme,Ame,_me,Fme,Yhe,Lme,Wme,Mme,Vme,jme,Xme,Yme,Jme,nge,rge,age,ede,lge,sfe,cge,dge,fge,gge,xge,wge,Cge,Ige,kge,Ege,Age,_ge,Lge,Bge,ype,Uge,Gge,Zge,jge,Yge,eye,xpe,nye,rye,aye,lye,pye,yme,mye,yye,bye,Wpe,Sye,$ye,Nye,Eye,Aye,_ye,Fye,Lye,Gpe,Mye,Vye,Wye,Hye,Qhe,Xye,Qye,exe,sxe,axe,lxe,cxe,dxe,fxe,yxe,wxe,Sxe,$xe,Nxe,Txe,Rxe,_pe,nbe,ibe,obe,hye,Dxe,Fxe,Bxe,Uxe,qxe,Kxe,Qxe,Zxe,ebe,ube,xme,hbe,pbe,mbe,Hxe,bbe,Sbe,Kde,$be,Ibe,Cye];for(const n of Tbe)k2(n);/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var _F=function(n,e){return(_F=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,s){t.__proto__=s}||function(t,s){for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(t[r]=s[r])})(n,e)};function OF(n,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function t(){this.constructor=n}_F(n,e),n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}var nn=function(){return(nn=Object.assign||function(n){for(var e,t=1,s=arguments.length;t<s;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}).apply(this,arguments)};function Et(n,e,t,s){return new(t||(t=Promise))(function(r,i){function a(c){try{l(s.next(c))}catch(d){i(d)}}function o(c){try{l(s.throw(c))}catch(d){i(d)}}function l(c){var d;c.done?r(c.value):(d=c.value,d instanceof t?d:new t(function(p){p(d)})).then(a,o)}l((s=s.apply(n,[])).next())})}function Rt(n,e){var t,s,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function o(l){return function(c){return function(d){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,s&&(r=2&d[0]?s.return:d[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,d[1])).done)return r;switch(s=0,r&&(d=[2&d[0],r.value]),d[0]){case 0:case 1:r=d;break;case 4:return a.label++,{value:d[1],done:!1};case 5:a.label++,s=d[1],d=[0];continue;case 7:d=a.ops.pop(),a.trys.pop();continue;default:if(r=a.trys,!((r=r.length>0&&r[r.length-1])||d[0]!==6&&d[0]!==2)){a=0;continue}if(d[0]===3&&(!r||d[1]>r[0]&&d[1]<r[3])){a.label=d[1];break}if(d[0]===6&&a.label<r[1]){a.label=r[1],r=d;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(d);break}r[2]&&a.ops.pop(),a.trys.pop();continue}d=e.call(n,a)}catch(p){d=[6,p],s=0}finally{t=r=0}if(5&d[0])throw d[1];return{value:d[0]?d[1]:void 0,done:!0}}([l,c])}}}function ou(n,e,t){if(t||arguments.length===2)for(var s,r=0,i=e.length;r<i;r++)!s&&r in e||(s||(s=Array.prototype.slice.call(e,0,r)),s[r]=e[r]);return n.concat(s||Array.prototype.slice.call(e))}var ba=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],cf=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"];function tx(n){return n instanceof SVGAnimatedLength?n.baseVal.value:n}function FF(n){return Et(this,void 0,void 0,function(){var e,t;return Rt(this,function(s){switch(s.label){case 0:return e=document.createElement("canvas"),n instanceof Ht?[4,fS(n,e)]:[3,2];case 1:return s.sent(),[3,3];case 2:e.width=tx(n.width),e.height=tx(n.height),t=e.getContext("2d"),n instanceof ImageData?t.putImageData(n,0,0):t.drawImage(n,0,0),s.label=3;case 3:return[2,e]}})})}function zF(n){return Et(this,void 0,void 0,function(){var e,t,s,r,i,a;return Rt(this,function(o){switch(o.label){case 0:return n instanceof Ht?(e=n.shape.slice(0,2),t=e[0],s=e[1],r=ImageData.bind,[4,fS(n)]):[3,2];case 1:return[2,new(r.apply(ImageData,[void 0,o.sent(),s,t]))];case 2:return i=document.createElement("canvas"),a=i.getContext("2d"),i.width=tx(n.width),i.height=tx(n.height),a.drawImage(n,0,0),[2,a.getImageData(0,0,i.width,i.height)]}})})}function Ebe(n){return Et(this,void 0,void 0,function(){var e,t;return Rt(this,function(s){switch(s.label){case 0:return n instanceof SVGImageElement||n instanceof OffscreenCanvas?[4,FF(n)]:[3,2];case 1:return t=s.sent(),[3,3];case 2:t=n,s.label=3;case 3:return e=t,[2,iA(e,4)]}})})}function LF(n){if(n<0||n>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(n));if(!Number.isInteger(n))throw new Error("Mask value must be an integer but got ".concat(n))}var _p={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},Rbe=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Et(this,void 0,void 0,function(){return Rt(this,function(e){return[2,this.mask]})})},n.prototype.toImageData=function(){return Et(this,void 0,void 0,function(){return Rt(this,function(e){return[2,zF(this.mask)]})})},n.prototype.toTensor=function(){return Et(this,void 0,void 0,function(){return Rt(this,function(e){return[2,Ebe(this.mask)]})})},n.prototype.getUnderlyingType=function(){return"canvasimagesource"},n}();function Abe(n){return LF(n),"person"}var Dbe=function(){function n(e){var t,s=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new Que.Pose({locateFile:function(r,i){if(e.solutionPath){var a=e.solutionPath.replace(/\/+$/,"");return"".concat(a,"/").concat(r)}return"".concat(i,"/").concat(r)}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;case"full":default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults(function(r){if(s.height=r.image.height,s.width=r.image.width,r.poseLandmarks==null)s.poses=[];else{var i=s.translateOutput(r.poseLandmarks,r.poseWorldLandmarks);r.segmentationMask&&(i.segmentation={maskValueToLabel:Abe,mask:new Rbe(r.segmentationMask)}),s.poses=[i]}})}return n.prototype.translateOutput=function(e,t){var s=this,r={keypoints:e.map(function(i,a){return{x:i.x*s.width,y:i.y*s.height,z:i.z,score:i.visibility,name:cf[a]}})};return t!=null&&(r.keypoints3D=t.map(function(i,a){return{x:i.x,y:i.y,z:i.z,score:i.visibility,name:cf[a]}})),r},n.prototype.estimatePoses=function(e,t,s){return Et(this,void 0,void 0,function(){var r,i;return Rt(this,function(a){switch(a.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Ht?(i=ImageData.bind,[4,fS(e)]):[3,2];case 1:return r=new(i.apply(ImageData,[void 0,a.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,a.label=3;case 3:return e=r,[4,this.poseSolution.send({image:e},s)];case 4:return a.sent(),[2,this.poses]}})})},n.prototype.dispose=function(){this.poseSolution.close()},n.prototype.reset=function(){this.poseSolution.reset()},n.prototype.initialize=function(){return this.poseSolution.initialize()},n}();function _be(n){return Et(this,void 0,void 0,function(){var e,t;return Rt(this,function(s){switch(s.label){case 0:return e=function(r){if(r==null)return nn({},_p);var i=nn({},r);return i.runtime="mediapipe",i.enableSegmentation==null&&(i.enableSegmentation=_p.enableSegmentation),i.enableSmoothing==null&&(i.enableSmoothing=_p.enableSmoothing),i.smoothSegmentation==null&&(i.smoothSegmentation=_p.smoothSegmentation),i.modelType==null&&(i.modelType=_p.modelType),i}(n),[4,(t=new Dbe(e)).initialize()];case 1:return s.sent(),[2,t]}})})}function oh(n){return n instanceof Ht?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function PF(n){return n-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}function hC(n){return n instanceof Ht?n:iA(n)}function MF(n,e,t){return r2(t,"inputResolution"),[1/t.width*n[0][0]*e.width,1/t.height*n[0][1]*e.width,n[0][3]*e.width,1/t.width*n[1][0]*e.height,1/t.height*n[1][1]*e.height,n[1][3]*e.height,0,0]}function r2(n,e){B(n.width!==0,function(){return"".concat(e," width cannot be 0.")}),B(n.height!==0,function(){return"".concat(e," height cannot be 0.")})}function Zw(n,e,t){var s=t.rotationVectorStartKeypointIndex,r=t.rotationVectorEndKeypointIndex,i=n.locationData,a=i.relativeKeypoints[s].x*e.width,o=i.relativeKeypoints[s].y*e.height,l=i.relativeKeypoints[r].x*e.width,c=i.relativeKeypoints[r].y*e.height,d=2*Math.sqrt((l-a)*(l-a)+(c-o)*(c-o)),p=function(m,g,x){var b,w=m.locationData,v=x.rotationVectorStartKeypointIndex,$=x.rotationVectorEndKeypointIndex;b=x.rotationVectorTargetAngle?x.rotationVectorTargetAngle:Math.PI*x.rotationVectorTargetAngleDegree/180;var I=w.relativeKeypoints[v].x*g.width,N=w.relativeKeypoints[v].y*g.height,E=w.relativeKeypoints[$].x*g.width,_=w.relativeKeypoints[$].y*g.height;return PF(b-Math.atan2(-(_-N),E-I))}(n,e,t);return{xCenter:a/e.width,yCenter:o/e.height,width:d/e.width,height:d/e.height,rotation:p}}function BF(n){if(n.length!==16)throw new Error("Array length must be 16 but got ".concat(n.length));return[[n[0],n[1],n[2],n[3]],[n[4],n[5],n[6],n[7]],[n[8],n[9],n[10],n[11]],[n[12],n[13],n[14],n[15]]]}function Jw(n,e,t,s,r,i,a){return n[e][r]*(n[t][i]*n[s][a]-n[t][a]*n[s][i])}function Us(n,e,t){var s=(e+1)%4,r=(e+2)%4,i=(e+3)%4,a=(t+1)%4,o=(t+2)%4,l=(t+3)%4;return Jw(n,s,r,i,a,o,l)+Jw(n,r,i,s,a,o,l)+Jw(n,i,s,r,a,o,l)}function ET(n,e,t){t===void 0&&(t={ignoreRotation:!1});for(var s=[],r=0,i=n;r<i.length;r++){var a=i[r],o=a.x-.5,l=a.y-.5,c=t.ignoreRotation?0:e.rotation,d=Math.cos(c)*o-Math.sin(c)*l,p=Math.sin(c)*o+Math.cos(c)*l;d=d*e.width+e.xCenter,p=p*e.height+e.yCenter;var m=a.z*e.width,g=nn({},a);g.x=d,g.y=p,g.z=m,s.push(g)}return s}function VF(n,e){var t=function(s,r,i,a){var o=r-s,l=a-i,c=l/o;return{scale:c,offset:i-s*c}}(0,255,e[0],e[1]);return ce(function(){return Ce(Q(n,t.scale),t.offset)})}function i2(n,e,t){var s,r,i,a,o,l,c,d,p,m,g,x,b,w,v=e.outputTensorSize,$=e.keepAspectRatio,I=e.borderMode,N=e.outputTensorFloatRange,E=oh(n),_=function(O,L){return L?{xCenter:L.xCenter*O.width,yCenter:L.yCenter*O.height,width:L.width*O.width,height:L.height*O.height,rotation:L.rotation}:{xCenter:.5*O.width,yCenter:.5*O.height,width:O.width,height:O.height,rotation:0}}(E,t),z=function(O,L,D){if(D===void 0&&(D=!1),!D)return{top:0,left:0,right:0,bottom:0};var G=L.height,q=L.width;r2(L,"targetSize"),r2(O,"roi");var ee,Z,H=G/q,oe=O.height/O.width,se=0,de=0;return H>oe?(ee=O.width,Z=O.width*H,de=(1-oe/H)/2):(ee=O.height/H,Z=O.height,se=(1-H/oe)/2),O.width=ee,O.height=Z,{top:de,left:se,right:se,bottom:de}}(_,v,$),P=(s=_,r=E.width,i=E.height,a=!1,o=s.width,l=s.height,c=a?-1:1,d=Math.cos(s.rotation),p=Math.sin(s.rotation),m=s.xCenter,g=s.yCenter,x=1/r,b=1/i,(w=new Array(16))[0]=o*d*c*x,w[1]=-l*p*x,w[2]=0,w[3]=(-.5*o*d*c+.5*l*p+m)*x,w[4]=o*p*c*b,w[5]=l*d*b,w[6]=0,w[7]=(-.5*l*d-.5*o*p*c+g)*b,w[8]=0,w[9]=0,w[10]=o*x,w[11]=0,w[12]=0,w[13]=0,w[14]=0,w[15]=1,BF(w));return{imageTensor:ce(function(){var O=hC(n),L=bi(MF(P,E,v),[1,8]),D=I==="zero"?"constant":"nearest",G=js.transform(Ln(De(O,"float32")),L,"bilinear",D,0,[v.height,v.width]);return N!=null?VF(G,N):G}),padding:z,transformationMatrix:P}}function RT(n,e,t,s){return s===1?.5*(n+e):n+(e-n)*t/(s-1)}function Obe(n){return ce(function(){var e=function(r){return ce(function(){return[ct(r,[0,0,0],[1,-1,1]),ct(r,[0,0,1],[1,-1,-1])]})}(n),t=e[0],s=e[1];return{boxes:Bt(s),logits:Bt(t)}})}function UF(n){return n!=null&&n.currentTime!=null}function AT(n){for(var e={locationData:{relativeKeypoints:[]}},t=Number.MAX_SAFE_INTEGER,s=Number.MIN_SAFE_INTEGER,r=Number.MAX_SAFE_INTEGER,i=Number.MIN_SAFE_INTEGER,a=0;a<n.length;++a){var o=n[a];t=Math.min(t,o.x),s=Math.max(s,o.x),r=Math.min(r,o.y),i=Math.max(i,o.y),e.locationData.relativeKeypoints.push({x:o.x,y:o.y})}return e.locationData.relativeBoundingBox={xMin:t,yMin:r,xMax:s,yMax:i,width:s-t,height:i-r},e}function Fbe(n,e,t,s){return Et(this,void 0,void 0,function(){var r,i,a,o,l;return Rt(this,function(c){switch(c.label){case 0:return n.sort(function(d,p){return Math.max.apply(Math,p.score)-Math.max.apply(Math,d.score)}),r=bi(n.map(function(d){return[d.locationData.relativeBoundingBox.yMin,d.locationData.relativeBoundingBox.xMin,d.locationData.relativeBoundingBox.yMax,d.locationData.relativeBoundingBox.xMax]})),i=Pn(n.map(function(d){return d.score[0]})),[4,js.nonMaxSuppressionAsync(r,i,e,t)];case 1:return[4,(a=c.sent()).array()];case 2:return o=c.sent(),l=n.filter(function(d,p){return o.indexOf(p)>-1}),rt([r,i,a]),[2,l]}})})}function WF(n,e){return n.map(function(t){var s=nn(nn({},t),{x:t.x*e.width,y:t.y*e.height});return t.z!=null&&(s.z=t.z*e.width),s})}function zbe(n,e,t){return Et(this,void 0,void 0,function(){var s,r,i,a,o,l,c,d,p,m,g,x,b,w,v,$,I,N,E,_,z,P,O,L;return Rt(this,function(D){switch(D.label){case 0:if(s=Bt(e,[0]),r=s.shape,i=r[0],a=r[1],o=r[2],n.length!==o)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(n.length,", heatmap length: ").concat(o));return l=[],[4,s.buffer()];case 1:for(c=D.sent(),d=0;d<n.length;d++)if(p=n[d],m=nn({},p),l.push(m),g=Math.trunc(m.x*a),x=Math.trunc(m.y*i),!(g<0||g>=a||x<0||g>=i)){for(b=Math.trunc((t.kernelSize-1)/2),w=Math.max(0,g-b),v=Math.min(a,g+b+1),$=Math.max(0,x-b),I=Math.min(i,x+b+1),N=0,E=0,_=0,z=0,P=$;P<I;++P)for(O=w;O<v;++O)L=c.get(P,O,d),N+=L,z=Math.max(z,L),E+=O*L,_+=P*L;z>=t.minConfidenceToRefine&&N>0&&(m.x=E/a/N,m.y=_/i/N)}return s.dispose(),[2,l]}})})}function DT(n,e){var t=e.left,s=e.top,r=e.left+e.right,i=e.top+e.bottom;return n.map(function(a){return nn(nn({},a),{x:(a.x-t)/(1-r),y:(a.y-s)/(1-i),z:a.z/(1-r)})})}function Lbe(n,e,t){return Yc()==="webgl"?function(s,r,i){var a=i.combineWithPreviousRatio.toFixed(2),o={variableNames:["prevMask","newMask"],outputShape:s.shape,userCode:`
  void main() {
      ivec2 coords = getOutputCoords();
      int height = coords[0];
      int width = coords[1];

      float prevMaskValue = getPrevMask(height, width);
      float newMaskValue = getNewMask(height, width);

      /*
      * Assume p := newMaskValue
      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)
      * uncertainty alpha(p) =
      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the
      * uncertainty]
      *
      * The following polynomial approximates uncertainty alpha as a
      * function of (p + 0.5):
      */
      const float c1 = 5.68842;
      const float c2 = -0.748699;
      const float c3 = -57.8051;
      const float c4 = 291.309;
      const float c5 = -624.717;
      float t = newMaskValue - 0.5;
      float x = t * t;

      float uncertainty =
        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));

      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *
                             (uncertainty * `.concat(a,`);

      setOutput(outputValue);
    }
`)},l=gu();return ce(function(){var c=l.compileAndRun(o,[s,r]);return os().makeTensorFromDataId(c.dataId,c.shape,c.dtype)})}(n,e,t):ce(function(){var s=Ve(e,.5),r=Kt(s),i=Ve(1,Qo(1,Q(r,Ce(5.68842,Q(r,Ce(-.748699,Q(r,Ce(-57.8051,Q(r,Ce(291.309,Q(r,-624.717)))))))))));return Ce(e,Q(Ve(n,e),Q(i,t.combineWithPreviousRatio)))})}function Pbe(n,e,t){return Et(this,void 0,void 0,function(){var s,r,i,a,o;return Rt(this,function(l){switch(l.label){case 0:return s=n[0],r=n[1],i=function(c,d,p){return ce(function(){var m,g,x,b;p.reverseOutputOrder?(g=Bt(ct(c,[0,p.boxCoordOffset+0],[-1,1])),m=Bt(ct(c,[0,p.boxCoordOffset+1],[-1,1])),b=Bt(ct(c,[0,p.boxCoordOffset+2],[-1,1])),x=Bt(ct(c,[0,p.boxCoordOffset+3],[-1,1]))):(m=Bt(ct(c,[0,p.boxCoordOffset+0],[-1,1])),g=Bt(ct(c,[0,p.boxCoordOffset+1],[-1,1])),x=Bt(ct(c,[0,p.boxCoordOffset+2],[-1,1])),b=Bt(ct(c,[0,p.boxCoordOffset+3],[-1,1]))),g=Ce(Q(Be(g,p.xScale),d.w),d.x),m=Ce(Q(Be(m,p.yScale),d.h),d.y),p.applyExponentialOnBoxSize?(x=Q(qs(Be(x,p.hScale)),d.h),b=Q(qs(Be(b,p.wScale)),d.w)):(x=Q(Be(x,p.hScale),d.h),b=Q(Be(b,p.wScale),d.h));var w=Ve(m,Be(x,2)),v=Ve(g,Be(b,2)),$=Ce(m,Be(x,2)),I=Ce(g,Be(b,2)),N=yn([re(w,[p.numBoxes,1]),re(v,[p.numBoxes,1]),re($,[p.numBoxes,1]),re(I,[p.numBoxes,1])],1);if(p.numKeypoints)for(var E=0;E<p.numKeypoints;++E){var _=p.keypointCoordOffset+E*p.numValuesPerKeypoint,z=void 0,P=void 0;p.reverseOutputOrder?(z=Bt(ct(c,[0,_],[-1,1])),P=Bt(ct(c,[0,_+1],[-1,1]))):(P=Bt(ct(c,[0,_],[-1,1])),z=Bt(ct(c,[0,_+1],[-1,1])));var O=Ce(Q(Be(z,p.xScale),d.w),d.x),L=Ce(Q(Be(P,p.yScale),d.h),d.y);N=yn([N,re(O,[p.numBoxes,1]),re(L,[p.numBoxes,1])],1)}return N})}(r,e,t),a=ce(function(){var c=s;return t.sigmoidScore?(t.scoreClippingThresh!=null&&(c=dr(s,-t.scoreClippingThresh,t.scoreClippingThresh)),c=Vr(c)):c}),[4,Mbe(i,a,t)];case 1:return o=l.sent(),rt([i,a]),[2,o]}})})}function Mbe(n,e,t){return Et(this,void 0,void 0,function(){var s,r,i,a,o,l,c,d,p,m,g,x;return Rt(this,function(b){switch(b.label){case 0:return s=[],[4,n.data()];case 1:return r=b.sent(),[4,e.data()];case 2:for(i=b.sent(),a=0;a<t.numBoxes;++a)if(!(t.minScoreThresh!=null&&i[a]<t.minScoreThresh||(o=a*t.numCoords,l=Bbe(r[o+0],r[o+1],r[o+2],r[o+3],i[a],t.flipVertically,a),(c=l.locationData.relativeBoundingBox).width<0||c.height<0))){if(t.numKeypoints>0)for((d=l.locationData).relativeKeypoints=[],p=t.numKeypoints*t.numValuesPerKeypoint,m=0;m<p;m+=t.numValuesPerKeypoint)g=o+t.keypointCoordOffset+m,x={x:r[g+0],y:t.flipVertically?1-r[g+1]:r[g+1]},d.relativeKeypoints.push(x);s.push(l)}return[2,s]}})})}function Bbe(n,e,t,s,r,i,a){return{score:[r],ind:a,locationData:{relativeBoundingBox:{xMin:e,yMin:i?1-t:n,xMax:s,yMax:i?1-n:t,width:s-e,height:t-n}}}}function Vbe(n,e){return n==="none"?e:function(t){return 1/(1+Math.exp(-t))}(e)}function _T(n,e,t,s){return Et(this,void 0,void 0,function(){var r,i,a,o,l,c,d,p;return Rt(this,function(m){switch(m.label){case 0:return t=t||e.flipHorizontally||!1,s=s||e.flipVertically||!1,r=n.size,i=r/e.numLandmarks,[4,n.data()];case 1:for(a=m.sent(),o=[],l=0;l<e.numLandmarks;++l)c=l*i,(p={x:0,y:0}).x=t?e.inputImageWidth-a[c]:a[c],i>1&&(p.y=s?e.inputImageHeight-a[c+1]:a[c+1]),i>2&&(p.z=a[c+2]),i>3&&(p.score=Vbe(e.visibilityActivation,a[c+3])),o.push(p);for(d=0;d<o.length;++d)(p=o[d]).x=p.x/e.inputImageWidth,p.y=p.y/e.inputImageHeight,p.z=p.z/e.inputImageWidth/(e.normalizeZ||1);return[2,o]}})})}function OT(n,e,t){var s=n.width,r=n.height,i=n.rotation;if(t.rotation==null&&t.rotationDegree==null||(i=function(c,d){return d.rotation!=null?c+=d.rotation:d.rotationDegree!=null&&(c+=Math.PI*d.rotationDegree/180),PF(c)}(i,t)),i===0)n.xCenter=n.xCenter+s*t.shiftX,n.yCenter=n.yCenter+r*t.shiftY;else{var a=(e.width*s*t.shiftX*Math.cos(i)-e.height*r*t.shiftY*Math.sin(i))/e.width,o=(e.width*s*t.shiftX*Math.sin(i)+e.height*r*t.shiftY*Math.cos(i))/e.height;n.xCenter=n.xCenter+a,n.yCenter=n.yCenter+o}{var l=Math.max(s*e.width,r*e.height);s=l/e.width,r=l/e.height}return n.width=s*t.scaleX,n.height=r*t.scaleY,n}function Ube(n,e){return n.map(function(t){var s=nn(nn({},t),{x:t.x/e.width,y:t.y/e.height});return t.z!=null&&(t.z=t.z/e.width),s})}var Uo=function(){function n(e){this.alpha=e,this.initialized=!1}return n.prototype.apply=function(e,t){var s;return this.initialized?s=t==null?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(s=e,this.initialized=!0),this.rawValue=e,this.storedValue=s,s},n.prototype.applyWithAlpha=function(e,t,s){return this.alpha=t,this.apply(e,s)},n.prototype.hasLastRawValue=function(){return this.initialized},n.prototype.lastRawValue=function(){return this.rawValue},n.prototype.reset=function(){this.initialized=!1},n}(),ev=function(){function n(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new Uo(this.getAlpha(this.minCutOff)),this.dx=new Uo(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return n.prototype.apply=function(e,t,s){if(e==null)return e;var r=Math.trunc(t);if(this.lastTimestamp>=r)return e;this.lastTimestamp!==0&&r!==0&&(this.frequency=1/(1e-6*(r-this.lastTimestamp))),this.lastTimestamp=r;var i=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*s*this.frequency:0,a=this.dx.applyWithAlpha(i,this.getAlpha(this.derivateCutOff)),o=this.minCutOff+this.beta*Math.abs(a),l=this.thresholdCutOff!=null?this.thresholdCutOff+this.thresholdBeta*Math.abs(a):null;return this.x.applyWithAlpha(e,this.getAlpha(o),l)},n.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},n}(),a2=function(){function n(e){this.config=e}return n.prototype.apply=function(e,t,s){var r=this;if(e==null)return this.reset(),null;this.initializeFiltersIfEmpty(e);var i=1;if(!this.config.disableValueScaling){if(s<this.config.minAllowedObjectScale)return ou([],e,!0);i=1/s}return e.map(function(a,o){var l=nn(nn({},a),{x:r.xFilters[o].apply(a.x,t,i),y:r.yFilters[o].apply(a.y,t,i)});return a.z!=null&&(l.z=r.zFilters[o].apply(a.z,t,i)),l})},n.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},n.prototype.initializeFiltersIfEmpty=function(e){var t=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(s){return new ev(t.config)}),this.yFilters=e.map(function(s){return new ev(t.config)}),this.zFilters=e.map(function(s){return new ev(t.config)}))},n}(),tv=function(){function n(e){this.config=e,this.window=[],this.lowPassFilter=new Uo(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return n.prototype.apply=function(e,t,s){if(e==null)return e;var r,i=Math.trunc(t);if(this.lastTimestamp>=i)return e;if(this.lastTimestamp===-1)r=1;else{for(var a=e*s-this.lastValue*this.lastValueScale,o=i-this.lastTimestamp,l=a,c=o,d=(1+this.window.length)*(1e6/30),p=0,m=this.window;p<m.length;p++){var g=m[p];if(c+g.duration>d)break;l+=g.distance,c+=g.duration}var x=l/(1e-6*c);r=1-1/(1+this.config.velocityScale*Math.abs(x)),this.window.unshift({distance:a,duration:o}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=s,this.lastTimestamp=i,this.lowPassFilter.applyWithAlpha(e,r)},n}(),Wbe=function(){function n(e){this.config=e}return n.prototype.apply=function(e,t,s){var r=this;if(e==null)return this.reset(),null;var i=1;if(!this.config.disableValueScaling){if(s<this.config.minAllowedObjectScale)return ou([],e,!0);i=1/s}return this.initializeFiltersIfEmpty(e),e.map(function(a,o){var l=nn(nn({},a),{x:r.xFilters[o].apply(a.x,t,i),y:r.yFilters[o].apply(a.y,t,i)});return a.z!=null&&(l.z=r.zFilters[o].apply(a.z,t,i)),l})},n.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},n.prototype.initializeFiltersIfEmpty=function(e){var t=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(s){return new tv(t.config)}),this.yFilters=e.map(function(s){return new tv(t.config)}),this.zFilters=e.map(function(s){return new tv(t.config)}))},n}(),nv=function(){function n(e){if(e.velocityFilter!=null)this.keypointsFilter=new Wbe(e.velocityFilter);else{if(e.oneEuroFilter==null)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new a2(e.oneEuroFilter)}}return n.prototype.apply=function(e,t,s,r,i){if(r===void 0&&(r=!1),e==null)return this.keypointsFilter.reset(),null;var a=i!=null?function(c,d){return(c.width*d.width+c.height*d.height)/2}(i,s):1,o=r?WF(e,s):e,l=this.keypointsFilter.apply(o,t,a);return r?Ube(l,s):l},n}(),FT=function(){function n(e){this.alpha=e.alpha}return n.prototype.apply=function(e){var t=this;if(e==null)return this.visibilityFilters=null,null;this.visibilityFilters!=null&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map(function(o){return new Uo(t.alpha)}));for(var s=[],r=0;r<e.length;++r){var i=e[r],a=nn({},i);a.score=this.visibilityFilters[r].apply(i.score),s.push(a)}return s},n}(),Gbe={interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},Lc={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},Hbe={maxPoses:1,flipHorizontal:!1},jbe={applyExponentialOnBoxSize:!1,flipVertically:!1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},qbe=.3,zT={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25},Xbe={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},Kbe={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},Ybe={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},Qbe={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},Zbe={kernelSize:7,minConfidenceToRefine:.5},LT={alpha:.1},Jbe={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},e0e={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},t0e={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},n0e={activation:"none"},s0e={combineWithPreviousRatio:.7},r0e=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Et(this,void 0,void 0,function(){return Rt(this,function(e){return[2,FF(this.mask)]})})},n.prototype.toImageData=function(){return Et(this,void 0,void 0,function(){return Rt(this,function(e){return[2,zF(this.mask)]})})},n.prototype.toTensor=function(){return Et(this,void 0,void 0,function(){return Rt(this,function(e){return[2,this.mask]})})},n.prototype.getUnderlyingType=function(){return"tensor"},n}();function i0e(n){return LF(n),"person"}var a0e=function(){function n(e,t,s,r,i,a){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=s,this.enableSegmentation=r,this.smoothSegmentation=i,this.modelType=a,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(p){p.reduceBoxesInLowestLayer==null&&(p.reduceBoxesInLowestLayer=!1),p.interpolatedScaleAspectRatio==null&&(p.interpolatedScaleAspectRatio=1),p.fixedAnchorSize==null&&(p.fixedAnchorSize=!1);for(var m=[],g=0;g<p.numLayers;){for(var x=[],b=[],w=[],v=[],$=g;$<p.strides.length&&p.strides[$]===p.strides[g];){var I=RT(p.minScale,p.maxScale,$,p.strides.length);if($===0&&p.reduceBoxesInLowestLayer)w.push(1),w.push(2),w.push(.5),v.push(.1),v.push(I),v.push(I);else{for(var N=0;N<p.aspectRatios.length;++N)w.push(p.aspectRatios[N]),v.push(I);if(p.interpolatedScaleAspectRatio>0){var E=$===p.strides.length-1?1:RT(p.minScale,p.maxScale,$+1,p.strides.length);v.push(Math.sqrt(I*E)),w.push(p.interpolatedScaleAspectRatio)}}$++}for(var _=0;_<w.length;++_){var z=Math.sqrt(w[_]);x.push(v[_]/z),b.push(v[_]*z)}var P=0,O=0;if(p.featureMapHeight.length>0)P=p.featureMapHeight[g],O=p.featureMapWidth[g];else{var L=p.strides[g];P=Math.ceil(p.inputSizeHeight/L),O=Math.ceil(p.inputSizeWidth/L)}for(var D=0;D<P;++D)for(var G=0;G<O;++G)for(var q=0;q<x.length;++q){var ee={xCenter:(G+p.anchorOffsetX)/O,yCenter:(D+p.anchorOffsetY)/P,width:0,height:0};p.fixedAnchorSize?(ee.width=1,ee.height=1):(ee.width=b[q],ee.height=x[q]),m.push(ee)}g=$}return m}(Gbe);var o=Pn(this.anchors.map(function(p){return p.width})),l=Pn(this.anchors.map(function(p){return p.height})),c=Pn(this.anchors.map(function(p){return p.xCenter})),d=Pn(this.anchors.map(function(p){return p.yCenter}));this.anchorTensor={x:c,y:d,w:o,h:l},this.prevFilteredSegmentationMask=this.enableSegmentation?bi([],[0,0]):null}return n.prototype.estimatePoses=function(e,t,s){return Et(this,void 0,void 0,function(){var r,i,a,o,l,c,d,p,m,g,x,b,w,v,$,I,N,E,_,z,P,O,L;return Rt(this,function(D){switch(D.label){case 0:return r=function(G){var q;if((q=G==null?Hbe:nn({},G)).maxPoses==null&&(q.maxPoses=1),q.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(q.maxPoses,". Should be > 0."));if(q.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return q}(t),e==null?(this.reset(),[2,[]]):(this.maxPoses=r.maxPoses,this.timestamp=s!=null?1e3*s:UF(e)?1e6*e.currentTime:null,i=oh(e),a=ce(function(){return De(hC(e),"float32")}),(o=this.regionOfInterest)!=null?[3,2]:[4,this.detectPose(a)]);case 1:if((l=D.sent()).length===0)return this.reset(),a.dispose(),[2,[]];c=l[0],o=this.poseDetectionToRoi(c,i),D.label=2;case 2:return[4,this.poseLandmarksByRoi(o,a)];case 3:return d=D.sent(),a.dispose(),d==null?(this.reset(),[2,[]]):(p=d.landmarks,m=d.auxiliaryLandmarks,g=d.poseScore,x=d.worldLandmarks,b=d.segmentationMask,w=this.poseLandmarkFiltering(p,m,x,i),v=w.actualLandmarksFiltered,$=w.auxiliaryLandmarksFiltered,I=w.actualWorldLandmarksFiltered,N=this.poseLandmarksToRoi($,i),this.regionOfInterest=N,E=this.smoothSegmentation&&b!=null?this.poseSegmentationFiltering(b):b,(_=v!=null?WF(v,i):null)!=null&&_.forEach(function(G,q){G.name=cf[q]}),(z=I)!=null&&z.forEach(function(G,q){G.name=cf[q]}),P={score:g,keypoints:_,keypoints3D:z},E!==null&&(O=ce(function(){var G=Ln(E,2),q=Ui(G,[[0,0],[0,0],[0,1]]);return W2(q,[[0,0],[0,0],[0,2]],"symmetric")}),this.smoothSegmentation||rt(E),L={maskValueToLabel:i0e,mask:new r0e(O)},P.segmentation=L),[2,[P]])}})})},n.prototype.poseSegmentationFiltering=function(e){var t=this.prevFilteredSegmentationMask;return t.size===0?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=Lbe(t,e,s0e),rt(e)),rt(t),this.prevFilteredSegmentationMask},n.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),rt([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},n.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(rt(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=bi([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},n.prototype.detectPose=function(e){return Et(this,void 0,void 0,function(){var t,s,r,i,a,o,l,c,d,p;return Rt(this,function(m){switch(m.label){case 0:return t=i2(e,Xbe),s=t.imageTensor,r=t.padding,i=this.detectorModel.predict(s),a=Obe(i),o=a.boxes,[4,Pbe([l=a.logits,o],this.anchorTensor,jbe)];case 1:return(c=m.sent()).length===0?(rt([s,i,l,o]),[2,c]):[4,Fbe(c,this.maxPoses,qbe)];case 2:return d=m.sent(),p=function(g,x){g===void 0&&(g=[]);for(var b=x.left,w=x.top,v=x.left+x.right,$=x.top+x.bottom,I=0;I<g.length;I++){var N=g[I],E=N.locationData.relativeBoundingBox,_=(E.xMin-b)/(1-v),z=(E.yMin-w)/(1-$),P=E.width/(1-v),O=E.height/(1-$);E.xMin=_,E.yMin=z,E.width=P,E.height=O,E.xMax=_+P,E.yMax=z+O;var L=N.locationData.relativeKeypoints;L&&L.forEach(function(D){var G=(D.x-b)/(1-v),q=(D.y-w)/(1-$);D.x=G,D.y=q})}return g}(d,r),rt([s,i,l,o]),[2,p]}})})},n.prototype.poseDetectionToRoi=function(e,t){return OT(Zw(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,zT)},n.prototype.poseLandmarksByRoi=function(e,t){return Et(this,void 0,void 0,function(){var s,r,i,a,o,l,c,d,p,m,g,x,b,w;return Rt(this,function(v){switch(v.label){case 0:if(s=oh(t),r=i2(t,Kbe,e),i=r.imageTensor,a=r.padding,o=r.transformationMatrix,this.modelType!=="lite"&&this.modelType!=="full"&&this.modelType!=="heavy")throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return l=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&l.push("activation_segmentation"),c=this.landmarkModel.execute(i,l),[4,this.tensorsToPoseLandmarksAndSegmentation(c)];case 1:return(d=v.sent())==null?(rt(c),rt(i),[2,null]):(p=d.landmarks,m=d.auxiliaryLandmarks,g=d.poseScore,x=d.worldLandmarks,b=d.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(s,e,a,o,p,m,x,b)]);case 2:return w=v.sent(),rt(c),rt(i),[2,nn({poseScore:g},w)]}})})},n.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,t,s,r,i,a,o,l){return Et(this,void 0,void 0,function(){var c,d,p,m,g,x;return Rt(this,function(b){return c=DT(i,s),d=DT(a,s),p=ET(c,t),m=ET(d,t),g=function(w,v){for(var $=[],I=0,N=w;I<N.length;I++){var E=N[I],_=E.x,z=E.y,P=v.rotation,O=Math.cos(P)*_-Math.sin(P)*z,L=Math.sin(P)*_+Math.cos(P)*z,D=nn({},E);D.x=O,D.y=L,$.push(D)}return $}(o,t),x=null,this.enableSegmentation&&(x=ce(function(){var w=l.shape,v=w[0],$=w[1],I=function(_){var z=BF(new Array(16).fill(0));z[0][0]=Us(_,0,0),z[1][0]=-Us(_,0,1),z[2][0]=Us(_,0,2),z[3][0]=-Us(_,0,3),z[0][2]=Us(_,2,0),z[1][2]=-Us(_,2,1),z[2][2]=Us(_,2,2),z[3][2]=-Us(_,2,3),z[0][1]=-Us(_,1,0),z[1][1]=Us(_,1,1),z[2][1]=-Us(_,1,2),z[3][1]=Us(_,1,3),z[0][3]=-Us(_,3,0),z[1][3]=Us(_,3,1),z[2][3]=-Us(_,3,2),z[3][3]=Us(_,3,3);for(var P=_[0][0]*z[0][0]+_[1][0]*z[0][1]+_[2][0]*z[0][2]+_[3][0]*z[0][3],O=0;O<z.length;O++)for(var L=0;L<z.length;L++)z[O][L]/=P;return z}(r),N=bi(MF(I,{width:$,height:v},e),[1,8]),E=[1,v,$,1];return Bt(js.transform(re(l,E),N,"bilinear","constant",0,[e.height,e.width]),[0,3])}),rt(l)),[2,{landmarks:p,auxiliaryLandmarks:m,worldLandmarks:g,segmentationMask:x}]})})},n.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return Et(this,void 0,void 0,function(){var t,s,r,i,a,o,l,c,d,p,m,g,x;return Rt(this,function(b){switch(b.label){case 0:return t=e[0],s=e[1],r=e[2],i=e[3],a=this.enableSegmentation?e[4]:null,[4,s.data()];case 1:return(o=b.sent()[0])<.5?[2,null]:[4,_T(t,Ybe)];case 2:return[4,zbe(b.sent(),r,Zbe)];case 3:return l=b.sent(),c=l.slice(0,33),d=l.slice(33,35),[4,_T(i,Qbe)];case 4:return p=b.sent(),m=p.slice(0,33),g=function(w,v,$){for(var I=[],N=0;N<w.length;N++){var E=nn({},v[N]);E.score=w[N].score,I.push(E)}return I}(c,m),x=this.enableSegmentation?function(w,v,$){return ce(function(){var I=Bt(w,[0]),N=I.shape[2];if(N===1){var E=I;switch(v.activation){case"none":break;case"sigmoid":E=Vr(E);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(v.activation,")"))}var _=E;return Bt(_,[2])}throw new Error("Unsupported number of tensor channels ".concat(N))})}(a,n0e):null,[2,{landmarks:c,auxiliaryLandmarks:d,poseScore:o,worldLandmarks:g,segmentationMask:x}]}})})},n.prototype.poseLandmarksToRoi=function(e,t){return OT(Zw(AT(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,zT)},n.prototype.poseLandmarkFiltering=function(e,t,s,r){var i,a,o;if(this.timestamp!=null&&this.enableSmoothing){var l=Zw(AT(t),r,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});this.visibilitySmoothingFilterActual==null&&(this.visibilitySmoothingFilterActual=new FT(LT)),i=this.visibilitySmoothingFilterActual.apply(e),this.visibilitySmoothingFilterAuxiliary==null&&(this.visibilitySmoothingFilterAuxiliary=new FT(LT)),a=this.visibilitySmoothingFilterAuxiliary.apply(t),o=this.visibilitySmoothingFilterActual.apply(s),this.landmarksSmoothingFilterActual==null&&(this.landmarksSmoothingFilterActual=new nv(Jbe)),i=this.landmarksSmoothingFilterActual.apply(i,this.timestamp,r,!0,l),this.landmarksSmoothingFilterAuxiliary==null&&(this.landmarksSmoothingFilterAuxiliary=new nv(e0e)),a=this.landmarksSmoothingFilterAuxiliary.apply(a,this.timestamp,r,!0,l),this.worldLandmarksSmoothingFilterActual==null&&(this.worldLandmarksSmoothingFilterActual=new nv(t0e)),o=this.worldLandmarksSmoothingFilterActual.apply(s,this.timestamp)}else i=e,a=t,o=s;return{actualLandmarksFiltered:i,auxiliaryLandmarksFiltered:a,actualWorldLandmarksFiltered:o}},n}();function o0e(n){return Et(this,void 0,void 0,function(){var e,t,s,r,i,a;return Rt(this,function(o){switch(o.label){case 0:return e=function(l){var c=nn({},l??Lc);if(c.enableSmoothing==null&&(c.enableSmoothing=Lc.enableSmoothing),c.enableSegmentation==null&&(c.enableSegmentation=Lc.enableSegmentation),c.smoothSegmentation==null&&(c.smoothSegmentation=Lc.smoothSegmentation),c.modelType==null&&(c.modelType=Lc.modelType),c.detectorModelUrl==null&&(c.detectorModelUrl=Lc.detectorModelUrl),c.landmarkModelUrl==null)switch(c.modelType){case"lite":c.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":c.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;case"full":default:c.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return c}(n),t=typeof e.detectorModelUrl=="string"&&e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,s=typeof e.landmarkModelUrl=="string"&&e.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([eh(e.detectorModelUrl,{fromTFHub:t}),eh(e.landmarkModelUrl,{fromTFHub:s})])];case 1:return r=o.sent(),i=r[0],a=r[1],[2,new a0e(i,a,e.enableSmoothing,e.enableSegmentation,e.smoothSegmentation,e.modelType)]}})})}var du,fa,GF=function(){function n(e){(function(t){if(t.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(t.maxTracks));if(t.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(t.maxAge));if(t.keypointTrackerParams!==void 0){if(t.keypointTrackerParams.keypointConfidenceThreshold<0||t.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(t.keypointTrackerParams.keypointConfidenceThreshold));if(t.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(t.keypointTrackerParams.minNumberOfKeypoints));for(var s=0,r=t.keypointTrackerParams.keypointFalloff;s<r.length;s++){var i=r[s];if(i<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(i))}}})(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return n.prototype.apply=function(e,t){this.filterOldTracks(t);var s=this.computeSimilarity(e);return this.assignTracks(e,s,t),this.updateTracks(t),e},n.prototype.getTracks=function(){return this.tracks.slice()},n.prototype.getTrackIDs=function(){return new Set(this.tracks.map(function(e){return e.id}))},n.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter(function(s){return e-s.lastTimestamp<=t.maxAge})},n.prototype.assignTracks=function(e,t,s){for(var r=Array.from(Array(t[0].length).keys()),i=[],a=0,o=Array.from(Array(e.length).keys());a<o.length;a++){var l=o[a];if(r.length!==0){for(var c=-1,d=-1,p=0,m=r;p<m.length;p++){var g=m[p],x=t[l][g];x>=this.minSimilarity&&x>d&&(c=g,d=x)}if(c>=0){var b=this.tracks[c];b=Object.assign(b,this.createTrack(e[l],s,b.id)),e[l].id=b.id;var w=r.indexOf(c);r.splice(w,1)}else i.push(l)}else i.push(l)}for(var v=0,$=i;v<$.length;v++){l=$[v];var I=this.createTrack(e[l],s);this.tracks.push(I),e[l].id=I.id}},n.prototype.updateTracks=function(e){this.tracks.sort(function(t,s){return s.lastTimestamp-t.lastTimestamp}),this.tracks=this.tracks.slice(0,this.maxTracks)},n.prototype.createTrack=function(e,t,s){var r={id:s||this.nextTrackID(),lastTimestamp:t,keypoints:ou([],e.keypoints,!0).map(function(i){return nn({},i)})};return e.box!==void 0&&(r.box=nn({},e.box)),r},n.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},n.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter(function(s){return!e.includes(s.id)})},n.prototype.reset=function(){this.tracks=[]},n}(),l0e=function(n){function e(t){return n.call(this,t)||this}return OF(e,n),e.prototype.computeSimilarity=function(t){var s=this;return t.length===0||this.tracks.length===0?[[]]:t.map(function(r){return s.tracks.map(function(i){return s.iou(r,i)})})},e.prototype.iou=function(t,s){var r=Math.max(t.box.xMin,s.box.xMin),i=Math.max(t.box.yMin,s.box.yMin),a=Math.min(t.box.xMax,s.box.xMax),o=Math.min(t.box.yMax,s.box.yMax);if(r>=a||i>=o)return 0;var l=(a-r)*(o-i);return l/(t.box.width*t.box.height+s.box.width*s.box.height-l)},e}(GF),u0e=function(n){function e(t){var s=n.call(this,t)||this;return s.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,s.keypointFalloff=t.keypointTrackerParams.keypointFalloff,s.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,s}return OF(e,n),e.prototype.computeSimilarity=function(t){if(t.length===0||this.tracks.length===0)return[[]];for(var s=[],r=0,i=t;r<i.length;r++){for(var a=i[r],o=[],l=0,c=this.tracks;l<c.length;l++){var d=c[l];o.push(this.oks(a,d))}s.push(o)}return s},e.prototype.oks=function(t,s){for(var r=this.area(s.keypoints)+1e-6,i=0,a=0,o=0;o<t.keypoints.length;++o){var l=t.keypoints[o],c=s.keypoints[o];if(!(l.score<this.keypointThreshold||c.score<this.keypointThreshold)){a+=1;var d=Math.pow(l.x-c.x,2)+Math.pow(l.y-c.y,2),p=2*this.keypointFalloff[o];i+=Math.exp(-1*d/(2*r*Math.pow(p,2)))}}return a<this.minNumKeyoints?0:i/a},e.prototype.area=function(t){var s=this,r=t.filter(function(l){return l.score>s.keypointThreshold}),i=Math.min.apply(Math,ou([1],r.map(function(l){return l.x}),!1)),a=Math.max.apply(Math,ou([0],r.map(function(l){return l.x}),!1)),o=Math.min.apply(Math,ou([1],r.map(function(l){return l.y}),!1));return(a-i)*(Math.max.apply(Math,ou([0],r.map(function(l){return l.y}),!1))-o)},e}(GF);function c0e(n){switch(n){case fa.BlazePose:return cf.reduce(function(e,t,s){return e[t]=s,e},{});case fa.PoseNet:case fa.MoveNet:return ba.reduce(function(e,t,s){return e[t]=s,e},{});default:throw new Error("Model ".concat(n," is not supported."))}}(function(n){n.Keypoint="keypoint",n.BoundingBox="boundingBox"})(du||(du={})),function(n){n.MoveNet="MoveNet",n.BlazePose="BlazePose",n.PoseNet="PoseNet"}(fa||(fa={}));var PT=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],HF={modelType:"SinglePose.Lightning",enableSmoothing:!0},MT={},BT={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},sv={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},VT={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function h0e(n,e,t,s){for(var r={},i=0,a=ba;i<a.length;i++){var o=a[i];r[o]=[e[t[o]].y*s.height,e[t[o]].x*s.width]}if(function($,I){return($[I.left_hip].score>.2||$[I.right_hip].score>.2)&&($[I.left_shoulder].score>.2||$[I.right_shoulder].score>.2)}(e,t)){var l=(r.left_hip[0]+r.right_hip[0])/2,c=(r.left_hip[1]+r.right_hip[1])/2,d=function($,I,N,E,_){for(var z=["left_shoulder","right_shoulder","left_hip","right_hip"],P=0,O=0,L=0;L<z.length;L++)(Z=Math.abs(E-N[z[L]][0]))>P&&(P=Z),(H=Math.abs(_-N[z[L]][1]))>O&&(O=H);for(var D=0,G=0,q=0,ee=Object.keys(N);q<ee.length;q++){var Z,H,oe=ee[q];$[I[oe]].score<.2||((Z=Math.abs(E-N[oe][0]))>D&&(D=Z),(H=Math.abs(_-N[oe][1]))>G&&(G=H))}return[P,O,D,G]}(e,t,r,l,c),p=d[0],m=d[1],g=d[2],x=d[3],b=Math.max(1.9*m,1.9*p,1.2*g,1.2*x),w=[l-(b=Math.min(b,Math.max(c,s.width-c,l,s.height-l))),c-b];if(b>Math.max(s.width,s.height)/2)return o2(n==null,s);var v=2*b;return{yMin:w[0]/s.height,xMin:w[1]/s.width,yMax:(w[0]+v)/s.height,xMax:(w[1]+v)/s.width,height:(w[0]+v)/s.height-w[0]/s.height,width:(w[1]+v)/s.width-w[1]/s.width}}return o2(n==null,s)}function o2(n,e){var t,s,r,i;return n?e.width>e.height?(t=1,s=e.height/e.width,r=0,i=(e.width/2-e.height/2)/e.width):(t=e.width/e.height,s=1,r=(e.height/2-e.width/2)/e.height,i=0):e.width>e.height?(t=e.width/e.height,s=1,r=(e.height/2-e.width/2)/e.height,i=0):(t=1,s=e.height/e.width,r=0,i=(e.width/2-e.height/2)/e.width),{yMin:r,xMin:i,yMax:r+t,xMax:i+s,height:t,width:s}}function d0e(n){var e,t=n==null?HF:nn({},n);if(t.modelType==null)t.modelType="SinglePose.Lightning";else if(PT.indexOf(t.modelType)<0)throw new Error("Invalid architecture ".concat(t.modelType,". ")+"Should be one of ".concat(PT));if(t.enableSmoothing==null&&(t.enableSmoothing=!0),t.minPoseScore!=null&&(t.minPoseScore<0||t.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(t.multiPoseMaxDimension!=null&&(t.multiPoseMaxDimension%32!=0||t.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if(t.modelType==="MultiPose.Lightning"&&t.enableTracking==null&&(t.enableTracking=!0),t.modelType==="MultiPose.Lightning"&&t.enableTracking===!0)if(t.trackerType==null&&(t.trackerType=du.BoundingBox),t.trackerType===du.Keypoint)t.trackerConfig!=null?t.trackerConfig=function(s){var r=UT(sv,s);return r.keypointTrackerParams=nn({},sv.keypointTrackerParams),s.keypointTrackerParams!=null&&(s.keypointTrackerParams.keypointConfidenceThreshold!=null&&(r.keypointTrackerParams.keypointConfidenceThreshold=s.keypointTrackerParams.keypointConfidenceThreshold),s.keypointTrackerParams.keypointFalloff!=null&&(r.keypointTrackerParams.keypointFalloff=s.keypointTrackerParams.keypointFalloff),s.keypointTrackerParams.minNumberOfKeypoints!=null&&(r.keypointTrackerParams.minNumberOfKeypoints=s.keypointTrackerParams.minNumberOfKeypoints)),r}(t.trackerConfig):t.trackerConfig=sv;else{if(t.trackerType!==du.BoundingBox)throw new Error("Tracker type not supported by MoveNet");t.trackerConfig!=null?t.trackerConfig=(e=t.trackerConfig,UT(VT,e)):t.trackerConfig=VT}return t}function UT(n,e){var t={maxTracks:n.maxTracks,maxAge:n.maxAge,minSimilarity:n.minSimilarity};return e.maxTracks!=null&&(t.maxTracks=e.maxTracks),e.maxAge!=null&&(t.maxAge=e.maxAge),e.minSimilarity!=null&&(t.minSimilarity=e.minSimilarity),t}var p0e=function(){function n(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=c0e(fa.MoveNet),t.modelType==="SinglePose.Lightning"?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):t.modelType==="SinglePose.Thunder"&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel=t.modelType==="MultiPose.Lightning",this.multiPoseModel||(this.keypointFilter=new a2(BT),this.cropRegionFilterYMin=new Uo(.9),this.cropRegionFilterXMin=new Uo(.9),this.cropRegionFilterYMax=new Uo(.9),this.cropRegionFilterXMax=new Uo(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===du.Keypoint?this.tracker=new u0e(t.trackerConfig):t.trackerType===du.BoundingBox&&(this.tracker=new l0e(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return n.prototype.runSinglePersonPoseModel=function(e){return Et(this,void 0,void 0,function(){var t,s,r,i,a;return Rt(this,function(o){switch(o.label){case 0:if((t=this.moveNetModel.execute(e)).shape.length!==4||t.shape[0]!==1||t.shape[1]!==1||t.shape[2]!==17||t.shape[3]!==3)throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return Yc()==="webgpu"?[3,1]:(s=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:s=o.sent(),o.label=3;case 3:for(t.dispose(),r={keypoints:[],score:0},i=0,a=0;a<17;++a)r.keypoints[a]={y:s[3*a],x:s[3*a+1],score:s[3*a+2]},r.keypoints[a].score>.2&&(++i,r.score+=r.keypoints[a].score);return i>0&&(r.score/=i),[2,r]}})})},n.prototype.runMultiPersonPoseModel=function(e){return Et(this,void 0,void 0,function(){var t,s,r,i,a,o,l,c;return Rt(this,function(d){switch(d.label){case 0:if((t=this.moveNetModel.execute(e)).shape.length!==3||t.shape[0]!==1||t.shape[2]!==56)throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return Yc()==="webgpu"?[3,1]:(s=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:s=d.sent(),d.label=3;case 3:for(t.dispose(),r=[],i=s.length/56,a=0;a<i;++a)for(r[a]={keypoints:[]},o=56*a+51,r[a].box={yMin:s[o],xMin:s[o+1],yMax:s[o+2],xMax:s[o+3],width:s[o+3]-s[o+1],height:s[o+2]-s[o]},l=56*a+55,r[a].score=s[l],r[a].keypoints=[],c=0;c<17;++c)r[a].keypoints[c]={y:s[56*a+3*c],x:s[56*a+3*c+1],score:s[56*a+3*c+2]};return[2,r]}})})},n.prototype.estimatePoses=function(e,t,s){return t===void 0&&(t=MT),Et(this,void 0,void 0,function(){var r,i,a,o,l,c;return Rt(this,function(d){switch(d.label){case 0:return t=function(p){return p==null?MT:nn({},p)}(t),e==null?(this.reset(),[2,[]]):(s==null?UF(e)&&(s=1e6*e.currentTime):s*=1e3,r=hC(e),i=oh(r),a=Ln(r,0),e instanceof Ht||r.dispose(),o=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(a,i,s)]);case 1:return o=d.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(a,i,s)];case 3:o=d.sent(),d.label=4;case 4:for(l=0;l<o.length;++l)for(c=0;c<o[l].keypoints.length;++c)o[l].keypoints[c].name=ba[c],o[l].keypoints[c].y*=i.height,o[l].keypoints[c].x*=i.width;return[2,o]}})})},n.prototype.estimateSinglePose=function(e,t,s){return Et(this,void 0,void 0,function(){var r,i,a,o,l=this;return Rt(this,function(c){switch(c.label){case 0:return this.cropRegion||(this.cropRegion=o2(this.cropRegion==null,t)),r=ce(function(){var d=bi([[l.cropRegion.yMin,l.cropRegion.xMin,l.cropRegion.yMax,l.cropRegion.xMax]]),p=Rn([1],"int32"),m=[l.modelInputResolution.height,l.modelInputResolution.width];return De(js.cropAndResize(e,d,p,m,"bilinear",0),"int32")}),e.dispose(),[4,this.runSinglePersonPoseModel(r)];case 1:if(i=c.sent(),r.dispose(),i.score<this.minPoseScore)return this.reset(),[2,[]];for(a=0;a<i.keypoints.length;++a)i.keypoints[a].y=this.cropRegion.yMin+i.keypoints[a].y*this.cropRegion.height,i.keypoints[a].x=this.cropRegion.xMin+i.keypoints[a].x*this.cropRegion.width;return s!=null&&this.enableSmoothing&&(i.keypoints=this.keypointFilter.apply(i.keypoints,s,1)),o=h0e(this.cropRegion,i.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(o),[2,[i]]}})})},n.prototype.estimateMultiplePoses=function(e,t,s){return Et(this,void 0,void 0,function(){var r,i,a,o,l,c,d,p,m,g,x,b=this;return Rt(this,function(w){switch(w.label){case 0:return t.width>t.height?(i=this.multiPoseMaxDimension,a=Math.round(this.multiPoseMaxDimension*t.height/t.width),r=js.resizeBilinear(e,[a,i]),l=i,c=32*Math.ceil(a/32),o=Ui(r,[[0,0],[0,c-a],[0,0],[0,0]])):(i=Math.round(this.multiPoseMaxDimension*t.width/t.height),a=this.multiPoseMaxDimension,r=js.resizeBilinear(e,[a,i]),l=32*Math.ceil(i/32),c=a,o=Ui(r,[[0,0],[0,0],[0,l-i],[0,0]])),r.dispose(),e.dispose(),d=De(o,"int32"),o.dispose(),[4,this.runMultiPersonPoseModel(d)];case 1:for(p=w.sent(),d.dispose(),p=p.filter(function(v){return v.score>=b.minPoseScore}),g=0;g<p.length;++g)for(m=0;m<p[g].keypoints.length;++m)p[g].keypoints[m].y*=c/a,p[g].keypoints[m].x*=l/i;if(this.enableTracking&&(this.tracker.apply(p,s),this.enableSmoothing)){for(g=0;g<p.length;++g)this.keypointFilterMap.has(p[g].id)||this.keypointFilterMap.set(p[g].id,new a2(BT)),p[g].keypoints=this.keypointFilterMap.get(p[g].id).apply(p[g].keypoints,s,1);x=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach(function(v,$){x.has($)||b.keypointFilterMap.delete($)})}return[2,p]}})})},n.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),s=this.cropRegionFilterXMin.apply(e.xMin),r=this.cropRegionFilterYMax.apply(e.yMax),i=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:s,yMax:r,xMax:i,height:r-t,width:i-s}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},n.prototype.dispose=function(){this.moveNetModel.dispose()},n.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},n.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},n}();function f0e(n){return n===void 0&&(n=HF),Et(this,void 0,void 0,function(){var e,t,s,r;return Rt(this,function(i){switch(i.label){case 0:return e=d0e(n),s=!0,e.modelUrl?(s=typeof e.modelUrl=="string"&&e.modelUrl.indexOf("https://tfhub.dev")>-1,[4,eh(e.modelUrl,{fromTFHub:s})]):[3,2];case 1:return t=i.sent(),[3,4];case 2:return r=void 0,e.modelType==="SinglePose.Lightning"?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":e.modelType==="SinglePose.Thunder"?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":e.modelType==="MultiPose.Lightning"&&(r="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,eh(r,{fromTFHub:s})];case 3:t=i.sent(),i.label=4;case 4:return Yc()==="webgl"&&pe().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new p0e(t,e)]}})})}var WT={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},GT=["MobileNetV1","ResNet50"],HT={MobileNetV1:[8,16],ResNet50:[16]},m0e=[8,16,32],jT={MobileNetV1:[.5,.75,1],ResNet50:[1]},qT=[1,2,4],XT={maxPoses:1,flipHorizontal:!1},g0e={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},y0e=[-123.15,-115.9,-103.06];function rv(n){return Math.floor(n/2)}var x0e=function(){function n(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return n.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},n.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},n.prototype.empty=function(){return this.numberOfElements===-1},n.prototype.size=function(){return this.numberOfElements+1},n.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},n.prototype.max=function(){return this.priorityQueue[0]},n.prototype.swim=function(e){for(;e>0&&this.less(rv(e),e);)this.exchange(e,rv(e)),e=rv(e)},n.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},n.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},n.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},n.prototype.exchange=function(e,t){var s=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=s},n}();function b0e(n,e,t,s,r,i){for(var a=i.shape,o=a[0],l=a[1],c=!0,d=Math.max(t-r,0),p=Math.min(t+r+1,o),m=d;m<p;++m){for(var g=Math.max(s-r,0),x=Math.min(s+r+1,l),b=g;b<x;++b)if(i.get(m,b,n)>e){c=!1;break}if(!c)break}return c}function w0e(n){return Et(this,void 0,void 0,function(){return Rt(this,function(e){return[2,Promise.all(n.map(function(t){return t.buffer()}))]})})}function jF(n,e,t,s){return{y:s.get(n,e,t),x:s.get(n,e,t+17)}}function qF(n,e,t){var s=jF(n.heatmapY,n.heatmapX,n.id,t),r=s.y,i=s.x;return{x:n.heatmapX*e+i,y:n.heatmapY*e+r}}function XF(n,e,t,s){var r=t.x,i=t.y;return n.some(function(a){var o,l,c,d,p,m,g=a.keypoints;return o=i,l=r,c=g[s].y,d=g[s].x,(p=c-o)*p+(m=d-l)*m<=e})}var KT=ba.reduce(function(n,e,t){return n[e]=t,n},{}),KF=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map(function(n){var e=n[0],t=n[1];return[KT[e],KT[t]]}),iv=KF.map(function(n){return n[1]}),YT=KF.map(function(n){return n[0]});function QT(n,e,t){return n<e?e:n>t?t:n}function av(n,e,t,s){return{y:QT(Math.round(n.y/e),0,t-1),x:QT(Math.round(n.x/e),0,s-1)}}function ZT(n,e){return{x:n.x+e.x,y:n.y+e.y}}function JT(n,e,t,s,r,i,a,o){o===void 0&&(o=2);for(var l=s.shape,c=l[0],d=l[1],p={y:e.y,x:e.x},m=ZT(p,function($,I,N){var E=N.shape[2]/2;return{y:N.get(I.y,I.x,$),x:N.get(I.y,I.x,E+$)}}(n,av(p,i,c,d),a)),g=0;g<o;g++){var x=av(m,i,c,d),b=jF(x.y,x.x,t,r);m=ZT({x:x.x*i,y:x.y*i},{x:b.x,y:b.y})}var w=av(m,i,c,d),v=s.get(w.y,w.x,t);return{y:m.y,x:m.x,name:ba[t],score:v}}function v0e(n,e,t,s,r,i){var a=e.shape[2],o=iv.length,l=new Array(a),c=n.part,d=n.score,p=qF(c,s,t);l[c.id]={score:d,name:ba[c.id],y:p.y,x:p.x};for(var m=o-1;m>=0;--m){var g=iv[m],x=YT[m];l[g]&&!l[x]&&(l[x]=JT(m,l[g],x,e,t,s,i))}for(m=0;m<o;++m)g=YT[m],x=iv[m],l[g]&&!l[x]&&(l[x]=JT(m,l[g],x,e,t,s,r));return l}function S0e(n,e,t){return t.reduce(function(s,r,i){var a=r.y,o=r.x,l=r.score;return XF(n,e,{y:a,x:o},i)||(s+=l),s},0)/t.length}function C0e(n,e,t,s,r,i,a,o){return a===void 0&&(a=.5),o===void 0&&(o=20),Et(this,void 0,void 0,function(){var l,c,d,p,m,g,x,b,w,v,$,I;return Rt(this,function(N){switch(N.label){case 0:return[4,w0e([n,e,t,s])];case 1:for(l=N.sent(),c=l[0],d=l[1],p=l[2],m=l[3],g=[],x=function(E,_,z){for(var P=z.shape,O=P[0],L=P[1],D=P[2],G=new x0e(O*L*D,function(oe){return oe.score}),q=0;q<O;++q)for(var ee=0;ee<L;++ee)for(var Z=0;Z<D;++Z){var H=z.get(q,ee,Z);H<E||b0e(Z,H,q,ee,_,z)&&G.enqueue({score:H,part:{heatmapY:q,heatmapX:ee,id:Z}})}return G}(a,1,c),b=o*o;g.length<i&&!x.empty();)w=x.dequeue(),v=qF(w.part,r,d),XF(g,b,v,w.part.id)||($=v0e(w,c,d,r,p,m),I=S0e(g,b,$),g.push({keypoints:$,score:I}));return[2,g]}})})}function YF(){for(var n,e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];switch(e.length){case 0:n="fn main() ";break;case 1:n="fn main(".concat(e[0]," : i32)");break;default:throw Error("Unreachable")}return n}var $0e=function(){function n(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return n.prototype.getUserCode=function(){return`
        `.concat(YF("index"),` {
          if (index < uniforms.size) {
            let y = B[index * 2];
            let x = B[index * 2 + 1];
            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;
            result[index] = A[outIndex];
          }
        }
        `)},n}();function k0e(n,e){if(gu()instanceof wd)return function(t,s){var r=gu(),i=new $0e(s.shape),a=r.runWebGPUProgram(i,[t,s],"float32");return os().makeTensorFromTensorInfo(a)}(n,e);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}var N0e=function(){function n(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,e.length!==2||e[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var t=[e[0],1];this.dispatchLayout=Ue(t),this.dispatch=Oe(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return n.prototype.getUserCode=function(){return`
    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {
      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;
      let outIndexX = outIndexY + uniforms.bShape.z;
      let outY = i32(B[outIndexY]);
      let outX = i32(B[outIndexX]);
      return vec2<i32>(outY, outX);
    }

    `.concat(YF("index"),` {
      if (index < uniforms.size) {
        let indexY = index * `).concat(this.supportedLastDimension,`;
        let indexX = indexY + 1;
        let heatmapY = A[indexY];
        let heatmapX = A[indexX];
        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);
        result[indexY] = f32(out[0]);
        result[indexX] = f32(out[1]);
      }
    }
    `)},n}();function I0e(n,e){if(gu()instanceof wd)return function(t,s){var r=gu(),i=new N0e(t.shape),a=r.runWebGPUProgram(i,[t,s],"float32");return os().makeTensorFromTensorInfo(a)}(n,e);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}function QF(n){var e=n.shape,t=e[0],s=e[1],r=e[2];return ce(function(){var i,a,o=re(n,[t*s,r]),l=bu(o,0),c=Ln(Be(l,Ze(s,"int32")),1),d=Ln((i=l,a=s,ce(function(){var p=Be(i,Ze(a,"int32"));return Ve(i,Q(p,Ze(a,"int32")))})),1);return yn([c,d],1)})}function T0e(n,e,t){return ce(function(){var s=function(r,i){for(var a=[],o=0;o<ba.length;o++){var l=r.get(o,0).valueOf(),c=r.get(o,1).valueOf(),d=E0e(l,c,o,i),p=d.x,m=d.y;a.push(m),a.push(p)}return bi(a,[ba.length,2])}(n,t);return Ce(De(Q(n.toTensor(),Ze(e,"int32")),"float32"),s)})}function E0e(n,e,t,s){return{y:s.get(n,e,t),x:s.get(n,e,t+ba.length)}}function R0e(n,e,t){return Et(this,void 0,void 0,function(){var s,r,i,a,o,l,c,d,p,m;return Rt(this,function(g){switch(g.label){case 0:return s=0,r=QF(n),[4,Promise.all([n.buffer(),e.buffer(),r.buffer()])];case 1:return i=g.sent(),a=i[0],o=i[1],l=i[2],[4,(c=T0e(l,t,o)).buffer()];case 2:return d=g.sent(),p=Array.from(function(x,b){for(var w=b.shape[0],v=new Float32Array(w),$=0;$<w;$++){var I=b.get($,0),N=b.get($,1);v[$]=x.get(I,N,$)}return v}(a,l)),m=p.map(function(x,b){return s+=x,{y:d.get(b,0),x:d.get(b,1),score:x,name:ba[b]}}),r.dispose(),c.dispose(),[2,{keypoints:m,score:s/m.length}]}})})}function A0e(n,e,t){return Et(this,void 0,void 0,function(){var s,r,i;return Rt(this,function(a){return s=QF(n),r=function(o,l,c){return ce(function(){var d=I0e(o,c);return Ce(De(Q(o,Ze(l,"int32")),"float32"),d)})}(s,t,e),i=k0e(n,s),[2,[r,i]]})})}function eE(n,e){return(n-1)%e==0}var tE="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",nE="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function sE(n,e){return function(t,s){return(t-1)%s==0}(n,e)?n:Math.floor(n/e)*e+1}var rE=function(){function n(e,t){this.posenetModel=e;var s=this.posenetModel.inputs[0].shape;B(s[1]===-1&&s[2]===-1,function(){return"Input shape [".concat(s[1],", ").concat(s[2],"] ")+"must both be equal to or -1"});var r,i,a=(r=t.inputResolution,i=t.outputStride,{height:sE(r.height,i),width:sE(r.width,i)});(function(o){B(m0e.indexOf(o)>=0,function(){return"outputStride of ".concat(o," is invalid. ")+"It must be either 8 or 16."})})(t.outputStride),function(o,l){B(eE(o.height,l),function(){return"height of ".concat(o.height," is invalid for output stride ")+"".concat(l,".")}),B(eE(o.width,l),function(){return"width of ".concat(o.width," is invalid for output stride ")+"".concat(l,".")})}(a,t.outputStride),this.inputResolution=a,this.outputStride=t.outputStride,this.architecture=t.architecture}return n.prototype.estimatePoses=function(e,t){return t===void 0&&(t=XT),Et(this,void 0,void 0,function(){return Rt(this,function(s){return[2,this.estimatePosesGPU(e,t,!1)]})})},n.prototype.estimatePosesGPU=function(e,t,s){return t===void 0&&(t=XT),s===void 0&&(s=!1),Et(this,void 0,void 0,function(){var r,i,a,o,l,c,d,p,m,g,x,b,w,v,$,I,N,E;return Rt(this,function(_){switch(_.label){case 0:return r=function(z){var P=z;if(P.maxPoses==null&&(P.maxPoses=1),P.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(P.maxPoses,". Should be > 0."));if(P.maxPoses>1){if((P=nn(nn({},g0e),P)).scoreThreshold<0||P.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(P.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(P.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(P.nmsRadius,"."))}return P}(t),e==null?[2,s?[[],[]]:[]]:(this.maxPoses=r.maxPoses,i=i2(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),a=i.imageTensor,o=i.padding,l=this.architecture==="ResNet50"?Ce(a,y0e):VF(a,[-1,1]),c=this.posenetModel.predict(l),this.architecture==="ResNet50"?(d=Bt(c[2],[0]),p=Bt(c[3],[0]),m=Bt(c[0],[0]),g=Bt(c[1],[0])):(d=Bt(c[0],[0]),p=Bt(c[1],[0]),m=Bt(c[2],[0]),g=Bt(c[3],[0])),x=Vr(p),this.maxPoses!==1?[3,5]:s?[4,A0e(x,d,this.outputStride)]:[3,2]);case 1:return w=_.sent(),$=w[0],v=w[1],b=[$,v],[3,4];case 2:return[4,R0e(x,d,this.outputStride)];case 3:$=_.sent(),b=[$],_.label=4;case 4:return[3,7];case 5:if(s)throw new Error("GPU renderer only supports single pose!");return[4,C0e(x,d,m,g,this.outputStride,this.maxPoses,r.scoreThreshold,r.nmsRadius)];case 6:b=_.sent(),_.label=7;case 7:if(s){if(r.flipHorizontal===!0)throw new Error("flipHorizontal is not supported!");I=this.getCanvasInfo(oh(e),this.inputResolution,o)}else E=oh(e),N=function(z,P,O,L){var D=P.height,G=P.width,q=D/(O.height*(1-L.top-L.bottom)),ee=G/(O.width*(1-L.left-L.right)),Z=-L.top*O.height,H=-L.left*O.width;if(ee===1&&q===1&&Z===0&&H===0)return z;for(var oe=0,se=z;oe<se.length;oe++)for(var de=0,W=se[oe].keypoints;de<W.length;de++){var ne=W[de];ne.x=(ne.x+H)*ee,ne.y=(ne.y+Z)*q}return z}(b,E,this.inputResolution,o),r.flipHorizontal&&(N=function(z,P){for(var O=0,L=z;O<L.length;O++)for(var D=0,G=L[O].keypoints;D<G.length;D++){var q=G[D];q.x=P.width-1-q.x}return z}(N,E));return a.dispose(),l.dispose(),rt(c),d.dispose(),p.dispose(),m.dispose(),g.dispose(),x.dispose(),[2,s?[b,I]:N]}})})},n.prototype.getCanvasInfo=function(e,t,s){var r=e.height,i=e.width,a=r/(t.height*(1-s.top-s.bottom)),o=i/(t.width*(1-s.left-s.right)),l=-s.top*t.height;return[-s.left*t.width,l,o,a,e.width,e.height]},n.prototype.dispose=function(){this.posenetModel.dispose()},n.prototype.reset=function(){},n}();function D0e(n){return n===void 0&&(n=WT),Et(this,void 0,void 0,function(){var e,t,s,r,i;return Rt(this,function(a){switch(a.label){case 0:return(e=function(d){var p=d||WT;if(p.architecture==null&&(p.architecture="MobileNetV1"),GT.indexOf(p.architecture)<0)throw new Error("Invalid architecture ".concat(p.architecture,". ")+"Should be one of ".concat(GT));if(p.inputResolution==null&&(p.inputResolution={height:257,width:257}),p.outputStride==null&&(p.outputStride=16),HT[p.architecture].indexOf(p.outputStride)<0)throw new Error("Invalid outputStride ".concat(p.outputStride,". ")+"Should be one of ".concat(HT[p.architecture]," ")+"for architecture ".concat(p.architecture,"."));if(p.multiplier==null&&(p.multiplier=1),jT[p.architecture].indexOf(p.multiplier)<0)throw new Error("Invalid multiplier ".concat(p.multiplier,". ")+"Should be one of ".concat(jT[p.architecture]," ")+"for architecture ".concat(p.architecture,"."));if(p.quantBytes==null&&(p.quantBytes=4),qT.indexOf(p.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(p.quantBytes,". ")+"Should be one of ".concat(qT," ")+"for architecture ".concat(p.architecture,"."));if(p.architecture==="MobileNetV1"&&p.outputStride===32&&p.multiplier!==1)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return p}(n)).architecture!=="ResNet50"?[3,2]:(o=e.outputStride,l=e.quantBytes,c="model-stride".concat(o,".json"),t=l===4?nE+"float/"+c:nE+"quant".concat(l,"/")+c,[4,eh(e.modelUrl||t)]);case 1:return s=a.sent(),[2,new rE(s,e)];case 2:return r=function(d,p,m){var g={1:"100",.75:"075",.5:"050"},x="model-stride".concat(d,".json");return m===4?tE+"float/".concat(g[p],"/")+x:tE+"quant".concat(m,"/").concat(g[p],"/")+x}(e.outputStride,e.multiplier,e.quantBytes),[4,eh(e.modelUrl||r)];case 3:return i=a.sent(),[2,new rE(i,e)]}var o,l,c})})}function _0e(n,e){return Et(this,void 0,void 0,function(){var t,s;return Rt(this,function(r){switch(n){case fa.PoseNet:return[2,D0e(e)];case fa.BlazePose:if(s=void 0,(t=e)!=null){if(t.runtime==="tfjs")return[2,o0e(e)];if(t.runtime==="mediapipe")return[2,_be(e)];s=t.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(s));case fa.MoveNet:return[2,f0e(e)];default:throw new Error("".concat(n," is not a supported model name."))}})})}var O0e={modelType:{MULTIPOSE_LIGHTNING:"MultiPose.Lightning"}};const ir={info:(n,...e)=>{console.log(`%c[INFO] ${n}`,"color: #3b82f6",...e)},warn:(n,...e)=>{console.warn(`%c[WARN] ${n}`,"color: #f59e0b",...e)},error:(n,...e)=>{console.error(`%c[ERROR] ${n}`,"color: #ef4444",...e)},success:(n,...e)=>{console.log(`%c[SUCCESS] ${n}`,"color: #10b981",...e)}},iE={eyes:(n,e)=>{const t=e.find(r=>r.name==="left_eye"),s=e.find(r=>r.name==="right_eye");t&&s&&(n.beginPath(),n.arc(t.x,t.y,10,0,2*Math.PI),n.arc(s.x,s.y,10,0,2*Math.PI),n.fillStyle="white",n.fill(),n.beginPath(),n.arc(t.x,t.y,5,0,2*Math.PI),n.arc(s.x,s.y,5,0,2*Math.PI),n.fillStyle="black",n.fill())},limbs:(n,e)=>{[["left_shoulder","left_elbow","left_wrist"],["right_shoulder","right_elbow","right_wrist"],["left_hip","left_knee","left_ankle"],["right_hip","right_knee","right_ankle"]].forEach(s=>{const r=s.map(i=>e.find(a=>a.name===i)).filter(Boolean);r.length===3&&(n.beginPath(),n.moveTo(r[0].x,r[0].y),n.quadraticCurveTo(r[1].x,r[1].y,r[2].x,r[2].y),n.lineWidth=10,n.stroke())})}},F0e=()=>{const n=as.useRef(null),e=as.useRef(null),t=as.useRef(null),[s,r]=as.useState(null),[i,a]=as.useState(!1),[o,l]=as.useState(!1),[c,d]=as.useState({width:640,height:480}),[p,m]=as.useState(!0),g=as.useCallback(()=>{if(t.current){const w=t.current.clientWidth,v=window.innerHeight-100;d({width:w,height:v})}},[]),x=as.useCallback(async()=>{ir.info("Starting detector creation..."),m(!0);try{s&&(ir.info("Disposing previous detector"),await s.dispose(),r(null));const w="/dancing-creatures",v=`${w}/models/movenet/multipose/lightning/1/model.json`;ir.info("Creating detector with local model",{modelPath:v,baseUrl:w,isDev:!1});const $=await _0e(fa.MoveNet,{modelType:O0e.modelType.MULTIPOSE_LIGHTNING,modelUrl:v});ir.success("Successfully created detector with local model"),r($)}catch(w){ir.error("Error creating detector:",w)}finally{m(!1),ir.info("Detector creation process completed")}},[s]);as.useEffect(()=>(ir.info("Initializing canvas size"),g(),window.addEventListener("resize",g),()=>window.removeEventListener("resize",g)),[g]),as.useEffect(()=>((async()=>{ir.info("Initializing TensorFlow.js");try{await vP(),ir.info("TensorFlow.js ready"),ir.info("Setting TensorFlow.js backend to WebGL"),await wP("webgl"),ir.info("TensorFlow.js backend set to:",Yc()),await x()}catch(v){ir.error("Error initializing TensorFlow:",v),m(!1)}})(),()=>{s&&s.dispose()}),[x]),as.useEffect(()=>((async()=>{try{const v=await navigator.mediaDevices.getUserMedia({video:!0}),$=n.current;$&&($.srcObject=v,$.onloadedmetadata=()=>{$.play(),a(!0)})}catch(v){console.error("Error setting up camera:",v),m(!1)}})(),()=>{const v=n.current;v&&v.srcObject&&v.srcObject.getTracks().forEach(I=>I.stop())}),[]),as.useEffect(()=>{let w,v=!1;const $=async()=>{if(!s||!n.current||!e.current||!i||v||p){w=requestAnimationFrame($);return}v=!0;const I=n.current,N=e.current,E=N.getContext("2d");if(!E){ir.warn("Could not get canvas context"),v=!1,w=requestAnimationFrame($);return}E.clearRect(0,0,N.width,N.height),o&&(E.save(),E.scale(-1,1),E.drawImage(I,-N.width,0,N.width,N.height),E.restore());try{os().startScope();const _=await s.estimatePoses(I);_.length>0&&ir.info(`Detected ${_.length} poses`),_.forEach((z,P)=>{const O=z.keypoints.map(D=>({name:D.name||"unknown",x:N.width-D.x/I.videoWidth*N.width,y:D.y/I.videoHeight*N.height,score:D.score})),L=P*137%360;E.strokeStyle=`hsla(${L}, 100%, 50%, 0.7)`,iE.limbs(E,O),iE.eyes(E,O),o&&O.forEach(D=>{E.beginPath(),E.arc(D.x,D.y,5,0,2*Math.PI),E.fillStyle=`hsl(${L}, 100%, 50%)`,E.fill(),E.fillStyle="white",E.fillText(D.name,D.x+5,D.y-5)})}),os().endScope()}catch(_){ir.error("Error in pose estimation:",_)}v=!1,w=requestAnimationFrame($)};return $(),()=>{w&&cancelAnimationFrame(w),os().disposeVariables()}},[s,i,o,c,p]);const b=as.useCallback(()=>l(w=>!w),[]);return xs.jsxs("div",{ref:t,style:{width:"100%",height:"100vh",display:"flex",flexDirection:"column"},children:[xs.jsx("h1",{style:{textAlign:"center",margin:"10px 0",fontSize:"1.5rem",fontWeight:"bold"},children:"Dancing Creatures"}),xs.jsxs("div",{style:{flex:1,position:"relative"},children:[xs.jsx("video",{ref:n,style:{display:"none"},width:c.width,height:c.height}),xs.jsx("canvas",{ref:e,width:c.width,height:c.height,style:{border:"1px solid black",position:"absolute",top:0,left:0,width:"100%",height:"100%"}}),p&&xs.jsxs("div",{style:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",backgroundColor:"rgba(0,0,0,0.7)",color:"white",padding:"20px",borderRadius:"10px",textAlign:"center"},children:[xs.jsx("p",{children:"Loading model..."}),xs.jsx("p",{children:"This may take a moment"})]})]}),xs.jsx("div",{style:{padding:"10px",textAlign:"center"},children:xs.jsx("button",{onClick:b,style:{padding:"8px 16px",backgroundColor:"#3b82f6",color:"white",border:"none",borderRadius:"4px",cursor:"pointer"},children:o?"Disable Debug Mode":"Enable Debug Mode"})})]})};function z0e(){const[n,e]=as.useState([]),[t,s]=as.useState(!1);return as.useEffect(()=>{const r=console.log,i=console.warn,a=console.error;return console.log=(...o)=>{r(...o),e(l=>[...l,o.map(c=>typeof c=="object"?JSON.stringify(c):String(c)).join(" ")].slice(-100))},console.warn=(...o)=>{i(...o),e(l=>[...l,`⚠️ ${o.map(c=>typeof c=="object"?JSON.stringify(c):String(c)).join(" ")}`].slice(-100))},console.error=(...o)=>{a(...o),e(l=>[...l,`🔴 ${o.map(c=>typeof c=="object"?JSON.stringify(c):String(c)).join(" ")}`].slice(-100))},()=>{console.log=r,console.warn=i,console.error=a}},[]),xs.jsxs("div",{className:"App",children:[xs.jsx(F0e,{}),xs.jsx("div",{style:{position:"fixed",bottom:"10px",right:"10px",zIndex:1e3},children:xs.jsx("button",{onClick:()=>s(!t),style:{padding:"8px 16px",backgroundColor:"#3b82f6",color:"white",border:"none",borderRadius:"4px",cursor:"pointer"},children:t?"Hide Logs":"Show Logs"})}),t&&xs.jsx("div",{style:{position:"fixed",bottom:"50px",right:"10px",width:"80%",maxWidth:"600px",height:"300px",backgroundColor:"rgba(0, 0, 0, 0.8)",color:"white",padding:"10px",overflowY:"auto",fontFamily:"monospace",fontSize:"12px",zIndex:1e3,borderRadius:"4px"},children:n.map((r,i)=>xs.jsx("div",{style:{marginBottom:"4px",wordBreak:"break-word"},children:r},i))})]})}RL.createRoot(document.getElementById("root")).render(xs.jsx(as.StrictMode,{children:xs.jsx(z0e,{})}));
